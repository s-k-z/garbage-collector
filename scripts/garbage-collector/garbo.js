"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = function(fn, res) {
  return function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
};
var __commonJS = function(cb, mod) {
  return function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
};
var __export = function(target, all2) {
  for (var name in all2)
    __defProp(target, name, { get: all2[name], enumerable: true });
};
var __copyProps = function(to, from, except, desc) {
  if (from && typeof from === "object" || typeof from === "function")
    for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
      key = keys[i];
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: function(k) {
          return from[k];
        }.bind(null, key), enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
  return to;
};
var __toESM = function(mod, isNodeMode, target) {
  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  );
};
var __toCommonJS = function(mod) {
  return __copyProps(__defProp({}, "__esModule", { value: true }), mod);
};

// ../../node_modules/libram/dist/logger.js
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty2(obj, key, value) {
  key = _toPropertyKey2(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey2(arg) {
  var key = _toPrimitive2(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive2(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var import_kolmafia2, _defaultHandlers, LogLevels, defaultHandlers, Logger, logger_default;
var init_logger = __esm({
  "../../node_modules/libram/dist/logger.js": function() {
    import_kolmafia2 = require("kolmafia");
    (function(LogLevels2) {
      LogLevels2[LogLevels2["NONE"] = 0] = "NONE";
      LogLevels2[LogLevels2["ERROR"] = 1] = "ERROR";
      LogLevels2[LogLevels2["WARNING"] = 2] = "WARNING";
      LogLevels2[LogLevels2["INFO"] = 3] = "INFO";
      LogLevels2[LogLevels2["DEBUG"] = 4] = "DEBUG";
    })(LogLevels || (LogLevels = {}));
    defaultHandlers = (_defaultHandlers = {}, _defineProperty2(_defaultHandlers, LogLevels.INFO, function(message) {
      (0, import_kolmafia2.printHtml)("<b>[Libram Info]</b> ".concat(message));
      (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
      return;
    }), _defineProperty2(_defaultHandlers, LogLevels.WARNING, function(message) {
      (0, import_kolmafia2.printHtml)('<span style="background: orange; color: white;"><b>[Libram Warning]</b> '.concat(message, "</span>"));
      (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
      return;
    }), _defineProperty2(_defaultHandlers, LogLevels.ERROR, function(error2) {
      (0, import_kolmafia2.printHtml)('<span style="background: red; color: white;"><b>[Libram Error]</b> '.concat(error2.toString(), "</span>"));
      (0, import_kolmafia2.logprint)("[Libram] ".concat(error2));
      return;
    }), _defineProperty2(_defaultHandlers, LogLevels.DEBUG, function(message) {
      (0, import_kolmafia2.printHtml)('<span style="background: red; color: white;"><b>[Libram Debug]</b> '.concat(message, "</span>"));
      (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
      return;
    }), _defaultHandlers);
    Logger = /* @__PURE__ */ function() {
      function Logger2() {
        _classCallCheck2(this, Logger2);
        _defineProperty2(this, "handlers", defaultHandlers);
      }
      _createClass2(Logger2, [{
        key: "level",
        get: function get4() {
          return Logger2.currentLevel;
        }
      }, {
        key: "setLevel",
        value: function setLevel(level) {
          Logger2.currentLevel = level;
        }
      }, {
        key: "setHandler",
        value: function setHandler(level, callback) {
          this.handlers[level] = callback;
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
      }, {
        key: "log",
        value: function log3(level, message) {
          if (this.level >= level)
            this.handlers[level](message);
        }
      }, {
        key: "info",
        value: function info2(message) {
          this.log(LogLevels.INFO, message);
        }
      }, {
        key: "warning",
        value: function warning(message) {
          this.log(LogLevels.WARNING, message);
        }
      }, {
        key: "error",
        value: function error2(message) {
          this.log(LogLevels.ERROR, message);
        }
      }, {
        key: "debug",
        value: function debug(message) {
          this.log(LogLevels.DEBUG, message);
        }
      }]);
      return Logger2;
    }();
    _defineProperty2(Logger, "currentLevel", LogLevels.ERROR);
    logger_default = new Logger();
  }
});

// ../../node_modules/libram/dist/propertyTypes.js
var propertyTypes_exports = {};
__export(propertyTypes_exports, {
  booleanProperties: function() {
    return booleanProperties;
  },
  familiarProperties: function() {
    return familiarProperties;
  },
  locationProperties: function() {
    return locationProperties;
  },
  monsterProperties: function() {
    return monsterProperties;
  },
  numericOrStringProperties: function() {
    return numericOrStringProperties;
  },
  numericProperties: function() {
    return numericProperties;
  },
  phylumProperties: function() {
    return phylumProperties;
  },
  statProperties: function() {
    return statProperties;
  },
  stringProperties: function() {
    return stringProperties;
  }
});
var booleanProperties, numericProperties, monsterProperties, locationProperties, stringProperties, numericOrStringProperties, familiarProperties, statProperties, phylumProperties;
var init_propertyTypes = __esm({
  "../../node_modules/libram/dist/propertyTypes.js": function() {
    booleanProperties = ["abortOnChoiceWhenNotInChoice", "addChatCommandLine", "addCreationQueue", "addStatusBarToFrames", "allowCloseableDesktopTabs", "allowNegativeTally", "allowNonMoodBurning", "allowSummonBurning", "autoHighlightOnFocus", "broadcastEvents", "cacheMallSearches", "chatBeep", "chatLinksUseRelay", "compactChessboard", "copyAsHTML", "customizedTabs", "debugBuy", "debugConsequences", "debugFoxtrotRemoval", "debugPathnames", "debugTopMenuStyle", "gapProtection", "gitInstallDependencies", "gitShowCommitMessages", "gitUpdateOnLogin", "greenScreenProtection", "guiUsesOneWindow", "hideServerDebugText", "logAcquiredItems", "logBattleAction", "logBrowserInteractions", "logChatMessages", "logChatRequests", "logCleanedHTML", "logDecoratedResponses", "logFamiliarActions", "logGainMessages", "logReadableHTML", "logPreferenceChange", "logMonsterHealth", "logReverseOrder", "logStatGains", "logStatusEffects", "logStatusOnLogin", "macroDebug", "macroLens", "mementoListActive", "mergeHobopolisChat", "pingLogin", "pingStealthyTimein", "printStackOnAbort", "proxySet", "relayAddSounds", "relayAddsCustomCombat", "relayAddsDiscoHelper", "relayAddsGraphicalCLI", "relayAddsQuickScripts", "relayAddsRestoreLinks", "relayAddsUpArrowLinks", "relayAddsUseLinks", "relayAddsWikiLinks", "relayAllowRemoteAccess", "relayBrowserOnly", "relayCacheUncacheable", "relayFormatsChatText", "relayHidesJunkMallItems", "relayMaintainsEffects", "relayMaintainsHealth", "relayMaintainsMana", "relayOverridesImages", "relayRunsAfterAdventureScript", "relayRunsBeforeBattleScript", "relayRunsBeforePVPScript", "relayScriptButtonFirst", "relayTextualizesEffects", "relayTrimsZapList", "relayUsesInlineLinks", "relayUsesIntegratedChat", "relayWarnOnRecoverFailure", "removeMalignantEffects", "saveSettingsOnSet", "sharePriceData", "showAllRequests", "showExceptionalRequests", "stealthLogin", "svnAlwaysAdd", "svnAlwaysOverwrite", "svnInstallDependencies", "svnShowCommitMessages", "svnUpdateOnLogin", "switchEquipmentForBuffs", "syncAfterSvnUpdate", "useChatToolbar", "useContactsFrame", "useDevProxyServer", "useDockIconBadge", "useHugglerChannel", "useImageCache", "useLastUserAgent", "useSystemTrayIcon", "useTabbedChatFrame", "useToolbars", "useCachedVolcanoMaps", "useZoneComboBox", "verboseSpeakeasy", "verboseFloundry", "wrapLongLines", "_gitUpdated", "_svnRepoFileFetched", "_svnUpdated", "antagonisticSnowmanKitAvailable", "arcadeGameHints", "armoryUnlocked", "autoForbidIgnoringStores", "autoCraft", "autoQuest", "autoEntangle", "autoGarish", "autoManaRestore", "autoFillMayoMinder", "autoPinkyRing", "autoPlantHardcore", "autoPlantSoftcore", "autoPotionID", "autoRepairBoxServants", "autoSatisfyWithCloset", "autoSatisfyWithCoinmasters", "autoSatisfyWithMall", "autoSatisfyWithNPCs", "autoSatisfyWithStash", "autoSatisfyWithStorage", "autoSetConditions", "autoSteal", "autoTuxedo", "backupCameraReverserEnabled", "badMoonEncounter01", "badMoonEncounter02", "badMoonEncounter03", "badMoonEncounter04", "badMoonEncounter05", "badMoonEncounter06", "badMoonEncounter07", "badMoonEncounter08", "badMoonEncounter09", "badMoonEncounter10", "badMoonEncounter11", "badMoonEncounter12", "badMoonEncounter13", "badMoonEncounter14", "badMoonEncounter15", "badMoonEncounter16", "badMoonEncounter17", "badMoonEncounter18", "badMoonEncounter19", "badMoonEncounter20", "badMoonEncounter21", "badMoonEncounter22", "badMoonEncounter23", "badMoonEncounter24", "badMoonEncounter25", "badMoonEncounter26", "badMoonEncounter27", "badMoonEncounter28", "badMoonEncounter29", "badMoonEncounter30", "badMoonEncounter31", "badMoonEncounter32", "badMoonEncounter33", "badMoonEncounter34", "badMoonEncounter35", "badMoonEncounter36", "badMoonEncounter37", "badMoonEncounter38", "badMoonEncounter39", "badMoonEncounter40", "badMoonEncounter41", "badMoonEncounter42", "badMoonEncounter43", "badMoonEncounter44", "badMoonEncounter45", "badMoonEncounter46", "badMoonEncounter47", "badMoonEncounter48", "barrelShrineUnlocked", "bigBrotherRescued", "blackBartsBootyAvailable", "bondAdv", "bondBeach", "bondBeat", "bondBooze", "bondBridge", "bondDesert", "bondDR", "bondDrunk1", "bondDrunk2", "bondHoney", "bondHP", "bondInit", "bondItem1", "bondItem2", "bondItem3", "bondJetpack", "bondMartiniDelivery", "bondMartiniPlus", "bondMartiniTurn", "bondMeat", "bondMox1", "bondMox2", "bondMPregen", "bondMus1", "bondMus2", "bondMys1", "bondMys2", "bondSpleen", "bondStat", "bondStat2", "bondStealth", "bondStealth2", "bondSymbols", "bondWar", "bondWeapon2", "bondWpn", "booPeakLit", "bootsCharged", "breakfastCompleted", "burrowgrubHiveUsed", "calzoneOfLegendEaten", "canteenUnlocked", "chaosButterflyThrown", "chatbotScriptExecuted", "chateauAvailable", "chatLiterate", "chatServesUpdates", "checkJackassHardcore", "checkJackassSoftcore", "clanAttacksEnabled", "coldAirportAlways", "considerShadowNoodles", "controlRoomUnlock", "concertVisited", "controlPanel1", "controlPanel2", "controlPanel3", "controlPanel4", "controlPanel5", "controlPanel6", "controlPanel7", "controlPanel8", "controlPanel9", "corralUnlocked", "dailyDungeonDone", "dampOldBootPurchased", "daycareOpen", "deepDishOfLegendEaten", "demonSummoned", "dinseyAudienceEngagement", "dinseyGarbagePirate", "dinseyRapidPassEnabled", "dinseyRollercoasterNext", "dinseySafetyProtocolsLoose", "doghouseBoarded", "dontStopForCounters", "drippingHallUnlocked", "drippyShieldUnlocked", "edUsedLash", "eldritchFissureAvailable", "eldritchHorrorAvailable", "errorOnAmbiguousFold", "essenceOfAnnoyanceAvailable", "essenceOfBearAvailable", "expressCardUsed", "falloutShelterChronoUsed", "falloutShelterCoolingTankUsed", "fireExtinguisherBatHoleUsed", "fireExtinguisherChasmUsed", "fireExtinguisherCyrptUsed", "fireExtinguisherDesertUsed", "fireExtinguisherHaremUsed", "fistTeachingsHaikuDungeon", "fistTeachingsPokerRoom", "fistTeachingsBarroomBrawl", "fistTeachingsConservatory", "fistTeachingsBatHole", "fistTeachingsFunHouse", "fistTeachingsMenagerie", "fistTeachingsSlums", "fistTeachingsFratHouse", "fistTeachingsRoad", "fistTeachingsNinjaSnowmen", "flickeringPixel1", "flickeringPixel2", "flickeringPixel3", "flickeringPixel4", "flickeringPixel5", "flickeringPixel6", "flickeringPixel7", "flickeringPixel8", "floristFriarAvailable", "floristFriarChecked", "frAlways", "frCemetaryUnlocked", "friarsBlessingReceived", "frMountainsUnlocked", "frSwampUnlocked", "frVillageUnlocked", "frWoodUnlocked", "getawayCampsiteUnlocked", "ghostPencil1", "ghostPencil2", "ghostPencil3", "ghostPencil4", "ghostPencil5", "ghostPencil6", "ghostPencil7", "ghostPencil8", "ghostPencil9", "gingerAdvanceClockUnlocked", "gingerBlackmailAccomplished", "gingerbreadCityAvailable", "gingerExtraAdventures", "gingerNegativesDropped", "gingerSewersUnlocked", "gingerSubwayLineUnlocked", "gingerRetailUnlocked", "glitchItemAvailable", "grabCloversHardcore", "grabCloversSoftcore", "guideToSafariAvailable", "guyMadeOfBeesDefeated", "hallowienerDefiledNook", "hallowienerGuanoJunction", "hallowienerKnollGym", "hallowienerMadnessBakery", "hallowienerMiddleChamber", "hallowienerOvergrownLot", "hallowienerSkeletonStore", "hallowienerSmutOrcs", "hallowienerSonofaBeach", "hallowienerVolcoino", "hardcorePVPWarning", "harvestBatteriesHardcore", "harvestBatteriesSoftcore", "hasAutumnaton", "hasBartender", "hasChef", "hasCocktailKit", "hasCosmicBowlingBall", "hasDetectiveSchool", "hasMaydayContract", "hasOven", "hasRange", "hasShaker", "hasSushiMat", "hasTwinkleVision", "haveBoxingDaydreamHardcore", "haveBoxingDaydreamSoftcore", "hermitHax0red", "holidayHalsBookAvailable", "horseryAvailable", "hotAirportAlways", "implementGlitchItem", "intenseCurrents", "itemBoughtPerAscension637", "itemBoughtPerAscension8266", "itemBoughtPerAscension10790", "itemBoughtPerAscension10794", "itemBoughtPerAscension10795", "itemBoughtPerCharacter6423", "itemBoughtPerCharacter6428", "itemBoughtPerCharacter6429", "kingLiberated", "lastPirateInsult1", "lastPirateInsult2", "lastPirateInsult3", "lastPirateInsult4", "lastPirateInsult5", "lastPirateInsult6", "lastPirateInsult7", "lastPirateInsult8", "lawOfAveragesAvailable", "leafletCompleted", "ledCandleDropped", "libraryCardUsed", "lockPicked", "logBastilleBattalionBattles", "loginRecoveryHardcore", "loginRecoverySoftcore", "lovebugsUnlocked", "loveTunnelAvailable", "lowerChamberUnlock", "madnessBakeryAvailable", "makePocketWishesHardcore", "makePocketWishesSoftcore", "manualOfNumberologyAvailable", "mappingMonsters", "mapToAnemoneMinePurchased", "mapToKokomoAvailable", "mapToMadnessReefPurchased", "mapToTheDiveBarPurchased", "mapToTheMarinaraTrenchPurchased", "mapToTheSkateParkPurchased", "maraisBeaverUnlock", "maraisCorpseUnlock", "maraisDarkUnlock", "maraisVillageUnlock", "maraisWildlifeUnlock", "maraisWizardUnlock", "maximizerAlwaysCurrent", "maximizerCreateOnHand", "maximizerCurrentMallPrices", "maximizerFoldables", "maximizerIncludeAll", "maximizerNoAdventures", "middleChamberUnlock", "milkOfMagnesiumActive", "moonTuned", "neverendingPartyAlways", "noncombatForcerActive", "oasisAvailable", "odeBuffbotCheck", "oilPeakLit", "oscusSodaUsed", "outrageousSombreroUsed", "overgrownLotAvailable", "ownsFloristFriar", "ownsSpeakeasy", "pathedSummonsHardcore", "pathedSummonsSoftcore", "pizzaOfLegendEaten", "popularTartUnlocked", "potatoAlarmClockUsed", "prAlways", "prayedForGlamour", "prayedForProtection", "prayedForVigor", "primaryLabCheerCoreGrabbed", "pyramidBombUsed", "rageGlandVented", "readManualHardcore", "readManualSoftcore", "relayShowSpoilers", "relayShowWarnings", "rememberDesktopSize", "replicaChateauAvailable", "replicaNeverendingPartyAlways", "replicaWitchessSetAvailable", "requireBoxServants", "requireSewerTestItems", "restUsingCampAwayTent", "restUsingChateau", "ROMOfOptimalityAvailable", "safePickpocket", "schoolOfHardKnocksDiplomaAvailable", "scriptCascadingMenus", "serverAddsCustomCombat", "SHAWARMAInitiativeUnlocked", "showForbiddenStores", "showGainsPerUnit", "showIgnoringStorePrices", "showNoSummonOnly", "showTurnFreeOnly", "skeletonStoreAvailable", "sleazeAirportAlways", "snojoAvailable", "sortByEffect", "sortByRoom", "spacegateAlways", "spacegateVaccine1", "spacegateVaccine2", "spacegateVaccine3", "spaceInvaderDefeated", "spelunkyHints", "spiceMelangeUsed", "spookyAirportAlways", "stenchAirportAlways", "stopForFixedWanderer", "stopForUltraRare", "styxPixieVisited", "superconductorDefeated", "suppressInappropriateNags", "suppressPowerPixellation", "suppressMallPriceCacheMessages", "telegraphOfficeAvailable", "telescopeLookedHigh", "timeTowerAvailable", "trackLightsOut", "uneffectWithHotTub", "universalSeasoningActive", "universalSeasoningAvailable", "useBookOfEverySkillHardcore", "useBookOfEverySkillSoftcore", "useCrimboToysHardcore", "useCrimboToysSoftcore", "verboseMaximizer", "visitLoungeHardcore", "visitLoungeSoftcore", "visitRumpusHardcore", "visitRumpusSoftcore", "voteAlways", "wildfireBarrelCaulked", "wildfireDusted", "wildfireFracked", "wildfirePumpGreased", "wildfireSprinkled", "yearbookCameraPending", "youRobotScavenged", "_2002MrStoreCreditsCollected", "_affirmationCookieEaten", "_affirmationHateUsed", "_airFryerUsed", "_akgyxothUsed", "_alienAnimalMilkUsed", "_alienPlantPodUsed", "_allYearSucker", "_aprilShower", "_armyToddlerCast", "_aug1Cast", "_aug2Cast", "_aug3Cast", "_aug4Cast", "_aug5Cast", "_aug6Cast", "_aug7Cast", "_aug8Cast", "_aug9Cast", "_aug10Cast", "_aug11Cast", "_aug12Cast", "_aug13Cast", "_aug14Cast", "_aug15Cast", "_aug16Cast", "_aug17Cast", "_aug18Cast", "_aug19Cast", "_aug20Cast", "_aug21Cast", "_aug22Cast", "_aug23Cast", "_aug24Cast", "_aug25Cast", "_aug26Cast", "_aug27Cast", "_aug28Cast", "_aug29Cast", "_aug30Cast", "_aug31Cast", "_augTodayCast", "_authorsInkUsed", "_baconMachineUsed", "_bagOfCandy", "_bagOfCandyUsed", "_bagOTricksUsed", "_ballastTurtleUsed", "_ballInACupUsed", "_ballpit", "_barrelPrayer", "_bastilleLastBattleWon", "_beachCombing", "_bendHellUsed", "_blackMonolithUsed", "_blankoutUsed", "_bonersSummoned", "_bookOfEverySkillUsed", "_borrowedTimeUsed", "_bowleggedSwaggerUsed", "_bowlFullOfJellyUsed", "_boxOfHammersUsed", "_brainPreservationFluidUsed", "_brassDreadFlaskUsed", "_cameraUsed", "_canSeekBirds", "_carboLoaded", "_cargoPocketEmptied", "_ceciHatUsed", "_chateauDeskHarvested", "_chateauMonsterFought", "_chibiChanged", "_chronerCrossUsed", "_chronerTriggerUsed", "_chubbyAndPlumpUsed", "_circadianRhythmsRecalled", "_circleDrumUsed", "_clanFortuneBuffUsed", "_claraBellUsed", "_coalPaperweightUsed", "_cocoaDispenserUsed", "_cocktailShakerUsed", "_coldAirportToday", "_coldOne", "_communismUsed", "_confusingLEDClockUsed", "_controlPanelUsed", "_cookbookbatRecipeDrops", "_corruptedStardustUsed", "_cosmicSixPackConjured", "_crappyCameraUsed", "_creepyVoodooDollUsed", "_crimboTraining", "_crimboTree", "_cursedKegUsed", "_cursedMicrowaveUsed", "_dailyDungeonMalwareUsed", "_darkChocolateHeart", "_daycareFights", "_daycareNap", "_daycareSpa", "_daycareToday", "_defectiveTokenChecked", "_defectiveTokenUsed", "_dinseyGarbageDisposed", "_discoKnife", "_distentionPillUsed", "_dnaHybrid", "_docClocksThymeCocktailDrunk", "_drippingHallDoor1", "_drippingHallDoor2", "_drippingHallDoor3", "_drippingHallDoor4", "_drippyCaviarUsed", "_drippyNuggetUsed", "_drippyPilsnerUsed", "_drippyPlumUsed", "_drippyWineUsed", "_eldritchHorrorEvoked", "_eldritchTentacleFought", "_entauntaunedToday", "_envyfishEggUsed", "_epicMcTwistUsed", "_essentialTofuUsed", "_etchedHourglassUsed", "_eternalCarBatteryUsed", "_everfullGlassUsed", "_eyeAndATwistUsed", "_fancyChessSetUsed", "_falloutShelterSpaUsed", "_fancyHotDogEaten", "_farmerItemsCollected", "_favoriteBirdVisited", "_firedJokestersGun", "_fireExtinguisherRefilled", "_fireStartingKitUsed", "_fireworksShop", "_fireworksShopHatBought", "_fireworksShopEquipmentBought", "_fireworkUsed", "_fishyPipeUsed", "_floundryItemCreated", "_floundryItemUsed", "_freePillKeeperUsed", "_frToday", "_fudgeSporkUsed", "_garbageItemChanged", "_gingerBiggerAlligators", "_gingerbreadCityToday", "_gingerbreadClockAdvanced", "_gingerbreadClockVisited", "_gingerbreadColumnDestroyed", "_gingerbreadMobHitUsed", "_glennGoldenDiceUsed", "_glitchItemImplemented", "_gnollEyeUsed", "_governmentPerDiemUsed", "_grimBuff", "_guildManualUsed", "_guzzlrQuestAbandoned", "_hardKnocksDiplomaUsed", "_hippyMeatCollected", "_hobbyHorseUsed", "_holidayFunUsed", "_holoWristCrystal", "_hotAirportToday", "_hungerSauceUsed", "_hyperinflatedSealLungUsed", "_iceHotelRoomsRaided", "_iceSculptureUsed", "_incredibleSelfEsteemCast", "_infernoDiscoVisited", "_internetDailyDungeonMalwareBought", "_internetGallonOfMilkBought", "_internetPlusOneBought", "_internetPrintScreenButtonBought", "_internetViralVideoBought", "_interviewIsabella", "_interviewMasquerade", "_interviewVlad", "_inquisitorsUnidentifiableObjectUsed", "_ironicMoustache", "_jackassPlumberGame", "_jarlsCheeseSummoned", "_jarlsCreamSummoned", "_jarlsDoughSummoned", "_jarlsEggsSummoned", "_jarlsFruitSummoned", "_jarlsMeatSummoned", "_jarlsPotatoSummoned", "_jarlsVeggiesSummoned", "_jingleBellUsed", "_jukebox", "_kgbFlywheelCharged", "_kgbLeftDrawerUsed", "_kgbOpened", "_kgbRightDrawerUsed", "_kolConSixPackUsed", "_kolhsCutButNotDried", "_kolhsIsskayLikeAnAshtray", "_kolhsPoeticallyLicenced", "_kolhsSchoolSpirited", "_kudzuSaladEaten", "_lastCombatLost", "_lastCombatWon", "_latteBanishUsed", "_latteCopyUsed", "_latteDrinkUsed", "_legendaryBeat", "_licenseToChillUsed", "_lodestoneUsed", "_lookingGlass", "_loveTunnelToday", "_loveTunnelUsed", "_luckyGoldRingVolcoino", "_lunchBreak", "_lupineHormonesUsed", "_lyleFavored", "_madLiquorDrunk", "_madTeaParty", "_mafiaMiddleFingerRingUsed", "_managerialManipulationUsed", "_mansquitoSerumUsed", "_mapToACandyRichBlockUsed", "_maydayDropped", "_mayoDeviceRented", "_mayoTankSoaked", "_meatballMachineUsed", "_meatifyMatterUsed", "_milkOfMagnesiumUsed", "_mimeArmyShotglassUsed", "_missGravesVermouthDrunk", "_missileLauncherUsed", "_molehillMountainUsed", "_momFoodReceived", "_mrBurnsgerEaten", "_muffinOrderedToday", "_mushroomGardenVisited", "_neverendingPartyToday", "_newYouQuestCompleted", "_olympicSwimmingPool", "_olympicSwimmingPoolItemFound", "_overflowingGiftBasketUsed", "_partyHard", "_pastaAdditive", "_perfectFreezeUsed", "_perfectlyFairCoinUsed", "_petePartyThrown", "_peteRiotIncited", "_photocopyUsed", "_pickyTweezersUsed", "_pingPongGame", "_pirateBellowUsed", "_pirateForkUsed", "_pixelOrbUsed", "_plumbersMushroomStewEaten", "_pneumaticityPotionUsed", "_portableSteamUnitUsed", "_pottedTeaTreeUsed", "_prToday", "_psychoJarFilled", "_psychoJarUsed", "_psychokineticHugUsed", "_rainStickUsed", "_redwoodRainStickUsed", "_replicaSnowconeTomeUsed", "_replicaResolutionLibramUsed", "_replicaSmithsTomeUsed", "_requestSandwichSucceeded", "_rhinestonesAcquired", "_seaJellyHarvested", "_setOfJacksUsed", "_sewingKitUsed", "_sexChanged", "_shadowAffinityToday", "_shadowForestLooted", "_shrubDecorated", "_silverDreadFlaskUsed", "_sitCourseCompleted", "_skateBuff1", "_skateBuff2", "_skateBuff3", "_skateBuff4", "_skateBuff5", "_sleazeAirportToday", "_sobrieTeaUsed", "_softwareGlitchTurnReceived", "_sotParcelReturned", "_spacegateMurderbot", "_spacegateRuins", "_spacegateSpant", "_spacegateToday", "_spacegateVaccine", "_spaghettiBreakfast", "_spaghettiBreakfastEaten", "_spinmasterLatheVisited", "_spinningWheel", "_spookyAirportToday", "_stabonicScrollUsed", "_steelyEyedSquintUsed", "_stenchAirportToday", "_stinkyCheeseBanisherUsed", "_strangeStalagmiteUsed", "_streamsCrossed", "_stuffedPocketwatchUsed", "_styxSprayUsed", "_summonAnnoyanceUsed", "_summonCarrotUsed", "_summonResortPassUsed", "_sweetToothUsed", "_syntheticDogHairPillUsed", "_tacoFlierUsed", "_telegraphOfficeToday", "_templeHiddenPower", "_tempuraAirUsed", "_thesisDelivered", "_timeSpinnerReplicatorUsed", "_toastSummoned", "_tonicDjinn", "_treasuryEliteMeatCollected", "_treasuryHaremMeatCollected", "_trivialAvocationsGame", "_tryptophanDartUsed", "_turtlePowerCast", "_twelveNightEnergyUsed", "_ultraMegaSourBallUsed", "_victorSpoilsUsed", "_villainLairCanLidUsed", "_villainLairColorChoiceUsed", "_villainLairDoorChoiceUsed", "_villainLairFirecrackerUsed", "_villainLairSymbologyChoiceUsed", "_villainLairWebUsed", "_vmaskBanisherUsed", "_voraciTeaUsed", "_volcanoItemRedeemed", "_volcanoSuperduperheatedMetal", "_voteToday", "_VYKEACafeteriaRaided", "_VYKEALoungeRaided", "_walfordQuestStartedToday", "_warbearBankUsed", "_warbearBreakfastMachineUsed", "_warbearGyrocopterUsed", "_warbearSodaMachineUsed", "_wildfireBarrelHarvested", "_witchessBuff", "_workshedItemUsed", "_zombieClover", "_preventScurvy", "lockedItem4637", "lockedItem4638", "lockedItem4639", "lockedItem4646", "lockedItem4647", "unknownRecipe3542", "unknownRecipe3543", "unknownRecipe3544", "unknownRecipe3545", "unknownRecipe3546", "unknownRecipe3547", "unknownRecipe3548", "unknownRecipe3749", "unknownRecipe3751", "unknownRecipe4172", "unknownRecipe4173", "unknownRecipe4174", "unknownRecipe5060", "unknownRecipe5061", "unknownRecipe5062", "unknownRecipe5063", "unknownRecipe5064", "unknownRecipe5066", "unknownRecipe5067", "unknownRecipe5069", "unknownRecipe5070", "unknownRecipe5072", "unknownRecipe5073", "unknownRecipe5670", "unknownRecipe5671", "unknownRecipe6501", "unknownRecipe6564", "unknownRecipe6565", "unknownRecipe6566", "unknownRecipe6567", "unknownRecipe6568", "unknownRecipe6569", "unknownRecipe6570", "unknownRecipe6571", "unknownRecipe6572", "unknownRecipe6573", "unknownRecipe6574", "unknownRecipe6575", "unknownRecipe6576", "unknownRecipe6577", "unknownRecipe6578", "unknownRecipe7752", "unknownRecipe7753", "unknownRecipe7754", "unknownRecipe7755", "unknownRecipe7756", "unknownRecipe7757", "unknownRecipe7758", "unknownRecipe10970", "unknownRecipe10971", "unknownRecipe10972", "unknownRecipe10973", "unknownRecipe10974", "unknownRecipe10975", "unknownRecipe10976", "unknownRecipe10977", "unknownRecipe10978", "unknownRecipe10988", "unknownRecipe10989", "unknownRecipe10990", "unknownRecipe10991", "unknownRecipe10992", "unknownRecipe11000"];
    numericProperties = ["coinMasterIndex", "dailyDeedsVersion", "defaultDropdown1", "defaultDropdown2", "defaultDropdownSplit", "defaultLimit", "fixedThreadPoolSize", "itemManagerIndex", "lastBuffRequestType", "lastGlobalCounterDay", "lastImageCacheClear", "pingDefaultTestPings", "pingLoginCount", "pingLoginGoal", "pingLoginThreshold", "pingTestPings", "previousUpdateRevision", "relayDelayForSVN", "relaySkillButtonCount", "scriptButtonPosition", "statusDropdown", "svnThreadPoolSize", "toolbarPosition", "_beachTides", "_g9Effect", "8BitBonusTurns", "8BitScore", "addingScrolls", "affirmationCookiesEaten", "aminoAcidsUsed", "antagonisticSnowmanKitCost", "ascensionsToday", "asolDeferredPoints", "asolPointsPigSkinner", "asolPointsCheeseWizard", "asolPointsJazzAgent", "autoAbortThreshold", "autoAntidote", "autoBuyPriceLimit", "autumnatonQuestTurn", "availableCandyCredits", "availableDimes", "availableFunPoints", "availableMrStore2002Credits", "availableQuarters", "availableStoreCredits", "availableSwagger", "averageSwagger", "awolMedicine", "awolPointsBeanslinger", "awolPointsCowpuncher", "awolPointsSnakeoiler", "awolDeferredPointsBeanslinger", "awolDeferredPointsCowpuncher", "awolDeferredPointsSnakeoiler", "awolVenom", "bagOTricksCharges", "ballpitBonus", "bankedKarma", "bartenderTurnsUsed", "basementMallPrices", "basementSafetyMargin", "batmanFundsAvailable", "batmanBonusInitialFunds", "batmanTimeLeft", "bearSwagger", "beeCounter", "beGregariousCharges", "beGregariousFightsLeft", "birdformCold", "birdformHot", "birdformRoc", "birdformSleaze", "birdformSpooky", "birdformStench", "blackBartsBootyCost", "blackPuddingsDefeated", "blackForestProgress", "blankOutUsed", "bloodweiserDrunk", "bondPoints", "bondVillainsDefeated", "boneAbacusVictories", "bookOfFactsGummi", "bookOfFactsPinata", "booPeakProgress", "borisPoints", "breakableHandling", "breakableHandling1964", "breakableHandling9691", "breakableHandling9692", "breakableHandling9699", "breathitinCharges", "brodenBacteria", "brodenSprinkles", "buffBotMessageDisposal", "buffBotPhilanthropyType", "buffJimmyIngredients", "burnoutsDefeated", "burrowgrubSummonsRemaining", "camelSpit", "camerasUsed", "campAwayDecoration", "candyWitchTurnsUsed", "candyWitchCandyTotal", "carboLoading", "catBurglarBankHeists", "cellarLayout", "charitableDonations", "chasmBridgeProgress", "chefTurnsUsed", "chessboardsCleared", "chibiAlignment", "chibiBirthday", "chibiFitness", "chibiIntelligence", "chibiLastVisit", "chibiSocialization", "chilledToTheBone", "cinchoSaltAndLime", "cinderellaMinutesToMidnight", "cinderellaScore", "cocktailSummons", "commerceGhostCombats", "controlPanelOmega", "cornucopiasOpened", "cosmicBowlingBallReturnCombats", "cozyCounter6332", "cozyCounter6333", "cozyCounter6334", "craftingClay", "craftingLeather", "craftingStraw", "crimbo16BeardChakraCleanliness", "crimbo16BootsChakraCleanliness", "crimbo16BungChakraCleanliness", "crimbo16CrimboHatChakraCleanliness", "crimbo16GutsChakraCleanliness", "crimbo16HatChakraCleanliness", "crimbo16JellyChakraCleanliness", "crimbo16LiverChakraCleanliness", "crimbo16NippleChakraCleanliness", "crimbo16NoseChakraCleanliness", "crimbo16ReindeerChakraCleanliness", "crimbo16SackChakraCleanliness", "crimboTrainingSkill", "crimboTreeDays", "cubelingProgress", "currentExtremity", "currentHedgeMazeRoom", "currentMojoFilters", "currentNunneryMeat", "currentPortalEnergy", "currentReplicaStoreYear", "cursedMagnifyingGlassCount", "cyrptAlcoveEvilness", "cyrptCrannyEvilness", "cyrptNicheEvilness", "cyrptNookEvilness", "cyrptTotalEvilness", "darkGyfftePoints", "daycareEquipment", "daycareInstructors", "daycareLastScavenge", "daycareToddlers", "dbNemesisSkill1", "dbNemesisSkill2", "dbNemesisSkill3", "desertExploration", "desktopHeight", "desktopWidth", "dinseyFilthLevel", "dinseyFunProgress", "dinseyNastyBearsDefeated", "dinseySocialJusticeIProgress", "dinseySocialJusticeIIProgress", "dinseyTouristsFed", "dinseyToxicMultiplier", "doctorBagQuestLights", "doctorBagUpgrades", "dreadScroll1", "dreadScroll2", "dreadScroll3", "dreadScroll4", "dreadScroll5", "dreadScroll6", "dreadScroll7", "dreadScroll8", "dripAdventuresSinceAscension", "drippingHallAdventuresSinceAscension", "drippingTreesAdventuresSinceAscension", "drippyBatsUnlocked", "drippyJuice", "drippyOrbsClaimed", "drunkenSwagger", "edDefeatAbort", "edPoints", "eldritchTentaclesFought", "electricKoolAidEaten", "elfGratitude", "encountersUntilDMTChoice", "encountersUntilYachtzeeChoice", "encountersUntilNEPChoice", "encountersUntilSRChoice", "ensorceleeLevel", "entauntaunedColdRes", "essenceOfAnnoyanceCost", "essenceOfBearCost", "extraRolloverAdventures", "falloutShelterLevel", "familiarSweat", "fingernailsClipped", "fistSkillsKnown", "flyeredML", "fossilB", "fossilD", "fossilN", "fossilP", "fossilS", "fossilW", "fratboysDefeated", "frenchGuardTurtlesFreed", "funGuyMansionKills", "garbageChampagneCharge", "garbageFireProgress", "garbageShirtCharge", "garbageTreeCharge", "garlandUpgrades", "getsYouDrunkTurnsLeft", "ghostPepperTurnsLeft", "gingerDigCount", "gingerLawChoice", "gingerMuscleChoice", "gingerTrainScheduleStudies", "gladiatorBallMovesKnown", "gladiatorBladeMovesKnown", "gladiatorNetMovesKnown", "glitchItemCost", "glitchItemImplementationCount", "glitchItemImplementationLevel", "glitchSwagger", "gloverPoints", "gnasirProgress", "goldenMrAccessories", "gongPath", "gooseDronesRemaining", "goreCollected", "gourdItemCount", "greyYouPoints", "grimoire1Summons", "grimoire2Summons", "grimoire3Summons", "grimstoneCharge", "guardTurtlesFreed", "guideToSafariCost", "guyMadeOfBeesCount", "guzzlrBronzeDeliveries", "guzzlrDeliveryProgress", "guzzlrGoldDeliveries", "guzzlrPlatinumDeliveries", "haciendaLayout", "hallowiener8BitRealm", "hallowienerCoinspiracy", "hareMillisecondsSaved", "hareTurnsUsed", "heavyRainsStartingThunder", "heavyRainsStartingRain", "heavyRainsStartingLightning", "heroDonationBoris", "heroDonationJarlsberg", "heroDonationSneakyPete", "hiddenApartmentProgress", "hiddenBowlingAlleyProgress", "hiddenHospitalProgress", "hiddenOfficeProgress", "hiddenTavernUnlock", "highTopPumped", "hippiesDefeated", "holidayHalsBookCost", "holidaySwagger", "homemadeRobotUpgrades", "homebodylCharges", "hpAutoRecovery", "hpAutoRecoveryTarget", "iceSwagger", "jarlsbergPoints", "jungCharge", "junglePuns", "knownAscensions", "kolhsTotalSchoolSpirited", "lastAnticheeseDay", "lastArcadeAscension", "lastBadMoonReset", "lastBangPotionReset", "lastBattlefieldReset", "lastBeardBuff", "lastBreakfast", "lastCartographyBooPeak", "lastCartographyCastleTop", "lastCartographyDarkNeck", "lastCartographyDefiledNook", "lastCartographyFratHouse", "lastCartographyFratHouseVerge", "lastCartographyGuanoJunction", "lastCartographyHauntedBilliards", "lastCartographyHippyCampVerge", "lastCartographyZeppelinProtesters", "lastCastleGroundUnlock", "lastCastleTopUnlock", "lastCellarReset", "lastChanceThreshold", "lastChasmReset", "lastColosseumRoundWon", "lastCouncilVisit", "lastCounterDay", "lastDesertUnlock", "lastDispensaryOpen", "lastDMTDuplication", "lastDwarfFactoryReset", "lastEVHelmetValue", "lastEVHelmetReset", "lastEmptiedStorage", "lastFilthClearance", "lastGoofballBuy", "lastGuildStoreOpen", "lastGuyMadeOfBeesReset", "lastFratboyCall", "lastFriarCeremonyAscension", "lastFriarsElbowNC", "lastFriarsHeartNC", "lastFriarsNeckNC", "lastHippyCall", "lastIslandUnlock", "lastKeyotronUse", "lastKingLiberation", "lastLightsOutTurn", "lastMushroomPlot", "lastMiningReset", "lastNemesisReset", "lastPaperStripReset", "lastPirateEphemeraReset", "lastPirateInsultReset", "lastPlusSignUnlock", "lastQuartetAscension", "lastQuartetRequest", "lastSecondFloorUnlock", "lastShadowForgeUnlockAdventure", "lastSkateParkReset", "lastStillBeatingSpleen", "lastTavernAscension", "lastTavernSquare", "lastTelescopeReset", "lastTempleAdventures", "lastTempleButtonsUnlock", "lastTempleUnlock", "lastThingWithNoNameDefeated", "lastTowelAscension", "lastTr4pz0rQuest", "lastTrainsetConfiguration", "lastVioletFogMap", "lastVoteMonsterTurn", "lastWartDinseyDefeated", "lastWuTangDefeated", "lastYearbookCameraAscension", "lastZapperWand", "lastZapperWandExplosionDay", "lawOfAveragesCost", "legacyPoints", "libramSummons", "lightsOutAutomation", "louvreDesiredGoal", "louvreGoal", "lovebugsAridDesert", "lovebugsBeachBuck", "lovebugsBooze", "lovebugsChroner", "lovebugsCoinspiracy", "lovebugsCyrpt", "lovebugsFreddy", "lovebugsFunFunds", "lovebugsHoboNickel", "lovebugsItemDrop", "lovebugsMeat", "lovebugsMeatDrop", "lovebugsMoxie", "lovebugsMuscle", "lovebugsMysticality", "lovebugsOilPeak", "lovebugsOrcChasm", "lovebugsPowder", "lovebugsWalmart", "lttQuestDifficulty", "lttQuestStageCount", "manaBurnSummonThreshold", "manaBurningThreshold", "manaBurningTrigger", "manorDrawerCount", "manualOfNumberologyCost", "mapToKokomoCost", "masksUnlocked", "maximizerMRUSize", "maximizerCombinationLimit", "maximizerEquipmentLevel", "maximizerEquipmentScope", "maximizerMaxPrice", "maximizerPriceLevel", "maxManaBurn", "mayflyExperience", "mayoLevel", "meansuckerPrice", "merkinVocabularyMastery", "miniAdvClass", "miniMartinisDrunk", "moleTunnelLevel", "mothershipProgress", "mpAutoRecovery", "mpAutoRecoveryTarget", "munchiesPillsUsed", "mushroomGardenCropLevel", "nextParanormalActivity", "nextQuantumFamiliarOwnerId", "nextQuantumFamiliarTurn", "noobPoints", "noobDeferredPoints", "noodleSummons", "nsContestants1", "nsContestants2", "nsContestants3", "nuclearAutumnPoints", "numericSwagger", "nunsVisits", "oilPeakProgress", "optimalSwagger", "optimisticCandleProgress", "palindomeDudesDefeated", "parasolUsed", "pendingMapReflections", "pingpongSkill", "pirateSwagger", "plantingDay", "plumberBadgeCost", "plumberCostumeCost", "plumberPoints", "poolSharkCount", "poolSkill", "primaryLabGooIntensity", "prismaticSummons", "procrastinatorLanguageFluency", "promptAboutCrafting", "puzzleChampBonus", "pyramidPosition", "quantumPoints", "reagentSummons", "reanimatorArms", "reanimatorLegs", "reanimatorSkulls", "reanimatorWeirdParts", "reanimatorWings", "recentLocations", "redSnapperProgress", "relayPort", "relocatePygmyJanitor", "relocatePygmyLawyer", "rockinRobinProgress", "ROMOfOptimalityCost", "rumpelstiltskinKidsRescued", "rumpelstiltskinTurnsUsed", "rwbMonsterCount", "safariSwagger", "sausageGrinderUnits", "schoolOfHardKnocksDiplomaCost", "schoolSwagger", "scrapbookCharges", "screechCombats", "scriptMRULength", "seaodesFound", "SeasoningSwagger", "sexChanges", "shenInitiationDay", "shockingLickCharges", "singleFamiliarRun", "skillBurn3", "skillBurn90", "skillBurn153", "skillBurn154", "skillBurn155", "skillBurn1019", "skillBurn5017", "skillBurn6014", "skillBurn6015", "skillBurn6016", "skillBurn6020", "skillBurn6021", "skillBurn6022", "skillBurn6023", "skillBurn6024", "skillBurn6026", "skillBurn6028", "skillBurn7323", "skillBurn14008", "skillBurn14028", "skillBurn14038", "skillBurn15011", "skillBurn15028", "skillBurn17005", "skillBurn22034", "skillBurn22035", "skillBurn23301", "skillBurn23302", "skillBurn23303", "skillBurn23304", "skillBurn23305", "skillBurn23306", "skillLevel46", "skillLevel47", "skillLevel48", "skillLevel117", "skillLevel118", "skillLevel121", "skillLevel128", "skillLevel134", "skillLevel144", "skillLevel180", "skillLevel188", "skillLevel227", "skillLevel7254", "slimelingFullness", "slimelingStacksDropped", "slimelingStacksDue", "smoresEaten", "smutOrcNoncombatProgress", "sneakyPetePoints", "snojoMoxieWins", "snojoMuscleWins", "snojoMysticalityWins", "sourceAgentsDefeated", "sourceEnlightenment", "sourceInterval", "sourcePoints", "sourceTerminalGram", "sourceTerminalPram", "sourceTerminalSpam", "spaceBabyLanguageFluency", "spacePirateLanguageFluency", "spelunkyNextNoncombat", "spelunkySacrifices", "spelunkyWinCount", "spookyPuttyCopiesMade", "spookyVHSTapeMonsterTurn", "statbotUses", "sugarCounter4178", "sugarCounter4179", "sugarCounter4180", "sugarCounter4181", "sugarCounter4182", "sugarCounter4183", "sugarCounter4191", "summonAnnoyanceCost", "sweat", "tacoDanCocktailSauce", "tacoDanFishMeat", "tavernLayout", "telescopeUpgrades", "tempuraSummons", "timeSpinnerMedals", "timesRested", "tomeSummons", "totalCharitableDonations", "trainsetPosition", "turtleBlessingTurns", "twinPeakProgress", "twoCRSPoints", "unicornHornInflation", "universalSeasoningCost", "usable1HWeapons", "usable1xAccs", "usable2HWeapons", "usable3HWeapons", "usableAccessories", "usableHats", "usableOffhands", "usableOther", "usablePants", "usableShirts", "valueOfAdventure", "valueOfInventory", "valueOfStill", "valueOfTome", "vintnerCharge", "vintnerWineLevel", "violetFogGoal", "walfordBucketProgress", "warehouseProgress", "welcomeBackAdv", "whetstonesUsed", "wolfPigsEvicted", "wolfTurnsUsed", "writingDesksDefeated", "xoSkeleltonXProgress", "xoSkeleltonOProgress", "yearbookCameraAscensions", "yearbookCameraUpgrades", "youRobotBody", "youRobotBottom", "youRobotLeft", "youRobotPoints", "youRobotRight", "youRobotTop", "zeppelinProtestors", "zigguratLianas", "zombiePoints", "_absintheDrops", "_abstractionDropsCrown", "_aguaDrops", "_xenomorphCharge", "_ancestralRecallCasts", "_antihangoverBonus", "_astralDrops", "_augSkillsCast", "_autumnatonQuests", "_backUpUses", "_badlyRomanticArrows", "_badgerCharge", "_balefulHowlUses", "_banderRunaways", "_bastilleCheese", "_bastilleGames", "_bastilleGameTurn", "_bastilleLastCheese", "_beanCannonUses", "_bearHugs", "_beerLensDrops", "_bellydancerPickpockets", "_benettonsCasts", "_birdsSoughtToday", "_bookOfFactsWishes", "_bookOfFactsTatters", "_boomBoxFights", "_boomBoxSongsLeft", "_bootStomps", "_boxingGloveArrows", "_brickoEyeSummons", "_brickoFights", "_campAwayCloudBuffs", "_campAwaySmileBuffs", "_candySummons", "_captainHagnkUsed", "_carnieCandyDrops", "_carrotNoseDrops", "_catBurglarCharge", "_catBurglarHeistsComplete", "_cheerleaderSteam", "_chestXRayUsed", "_chibiAdventures", "_chipBags", "_chocolateCigarsUsed", "_chocolateCoveredPingPongBallsUsed", "_chocolateSculpturesUsed", "_chocolatesUsed", "_chronolithActivations", "_chronolithNextCost", "_cinchUsed", "_cinchoRests", "_circadianRhythmsAdventures", "_clanFortuneConsultUses", "_clipartSummons", "_cloversPurchased", "_coldMedicineConsults", "_coldMedicineEquipmentTaken", "_companionshipCasts", "_cookbookbatCrafting", "_cosmicBowlingSkillsUsed", "_crimbo21ColdResistance", "_dailySpecialPrice", "_daycareGymScavenges", "_daycareRecruits", "_deckCardsDrawn", "_deluxeKlawSummons", "_demandSandwich", "_detectiveCasesCompleted", "_disavowed", "_dnaPotionsMade", "_donhosCasts", "_douseFoeUses", "_dreamJarDrops", "_drunkPygmyBanishes", "_edDefeats", "_edLashCount", "_elronsCasts", "_enamorangs", "_energyCollected", "_expertCornerCutterUsed", "_favorRareSummons", "_feastUsed", "_feelinTheRhythm", "_feelPrideUsed", "_feelExcitementUsed", "_feelHatredUsed", "_feelLonelyUsed", "_feelNervousUsed", "_feelEnvyUsed", "_feelDisappointedUsed", "_feelSuperiorUsed", "_feelLostUsed", "_feelNostalgicUsed", "_feelPeacefulUsed", "_fingertrapArrows", "_fireExtinguisherCharge", "_fragrantHerbsUsed", "_freeBeachWalksUsed", "_frButtonsPressed", "_fudgeWaspFights", "_gapBuffs", "_garbageFireDrops", "_garbageFireDropsCrown", "_genieFightsUsed", "_genieWishesUsed", "_gibbererAdv", "_gibbererCharge", "_gingerbreadCityTurns", "_glarkCableUses", "_glitchMonsterFights", "_gnomeAdv", "_godLobsterFights", "_goldenMoneyCharge", "_gongDrops", "_gothKidCharge", "_gothKidFights", "_greyYouAdventures", "_grimBrotherCharge", "_grimFairyTaleDrops", "_grimFairyTaleDropsCrown", "_grimoireConfiscatorSummons", "_grimoireGeekySummons", "_grimstoneMaskDrops", "_grimstoneMaskDropsCrown", "_grooseCharge", "_grooseDrops", "_grubbyWoolDrops", "_guzzlrDeliveries", "_guzzlrGoldDeliveries", "_guzzlrPlatinumDeliveries", "_hareAdv", "_hareCharge", "_highTopPumps", "_hipsterAdv", "_hoardedCandyDropsCrown", "_hoboUnderlingSummons", "_holoWristDrops", "_holoWristProgress", "_hotAshesDrops", "_hotJellyUses", "_hotTubSoaks", "_humanMuskUses", "_iceballUses", "_inigosCasts", "_jerksHealthMagazinesUsed", "_jiggleCheese", "_jiggleCream", "_jiggleLife", "_jiggleSteak", "_jitbCharge", "_juneCleaverFightsLeft", "_juneCleaverEncounters", "_juneCleaverStench", "_juneCleaverSpooky", "_juneCleaverSleaze", "_juneCleaverHot", "_juneCleaverCold", "_juneCleaverSkips", "_jungDrops", "_kgbClicksUsed", "_kgbDispenserUses", "_kgbTranquilizerDartUses", "_klawSummons", "_kloopCharge", "_kloopDrops", "_kolhsAdventures", "_kolhsSavedByTheBell", "_lastDailyDungeonRoom", "_lastSausageMonsterTurn", "_lastZomboEye", "_latteRefillsUsed", "_leafblowerML", "_legionJackhammerCrafting", "_llamaCharge", "_longConUsed", "_lovebugsBeachBuck", "_lovebugsChroner", "_lovebugsCoinspiracy", "_lovebugsFreddy", "_lovebugsFunFunds", "_lovebugsHoboNickel", "_lovebugsWalmart", "_loveChocolatesUsed", "_lynyrdSnareUses", "_machineTunnelsAdv", "_macrometeoriteUses", "_mafiaThumbRingAdvs", "_mapToACandyRichBlockDrops", "_mayflowerDrops", "_mayflySummons", "_mediumSiphons", "_meteoriteAdesUsed", "_meteorShowerUses", "_micrometeoriteUses", "_mildEvilPerpetrated", "_miniMartiniDrops", "_monkeyPawWishesUsed", "_monsterHabitatsFightsLeft", "_monsterHabitatsRecalled", "_monstersMapped", "_mushroomGardenFights", "_nanorhinoCharge", "_navelRunaways", "_neverendingPartyFreeTurns", "_newYouQuestSharpensDone", "_newYouQuestSharpensToDo", "_nextColdMedicineConsult", "_nextQuantumAlignment", "_nightmareFuelCharges", "_noobSkillCount", "_nuclearStockpileUsed", "_oilExtracted", "_olfactionsUsed", "_optimisticCandleDropsCrown", "_oreDropsCrown", "_otoscopeUsed", "_oysterEggsFound", "_pantsgivingBanish", "_pantsgivingCount", "_pantsgivingCrumbs", "_pantsgivingFullness", "_pasteDrops", "_peteJukeboxFixed", "_peteJumpedShark", "_petePeeledOut", "_pieDrops", "_piePartsCount", "_pixieCharge", "_pocketProfessorLectures", "_poisonArrows", "_pokeGrowFertilizerDrops", "_poolGames", "_powderedGoldDrops", "_powderedMadnessUses", "_powerfulGloveBatteryPowerUsed", "_powerPillDrops", "_powerPillUses", "_precisionCasts", "_questPartyFairItemsOpened", "_radlibSummons", "_raindohCopiesMade", "_rapidPrototypingUsed", "_raveStealCount", "_reflexHammerUsed", "_resolutionAdv", "_resolutionRareSummons", "_riftletAdv", "_robinEggDrops", "_roboDrops", "_rogueProgramCharge", "_romanticFightsLeft", "_saberForceMonsterCount", "_saberForceUses", "_saberMod", "_saltGrainsConsumed", "_sandwormCharge", "_saplingsPlanted", "_sausageFights", "_sausagesEaten", "_sausagesMade", "_sealFigurineUses", "_sealScreeches", "_sealsSummoned", "_shadowBricksUsed", "_shadowRiftCombats", "_shatteringPunchUsed", "_shortOrderCookCharge", "_shrubCharge", "_sloppyDinerBeachBucks", "_smilesOfMrA", "_smithsnessSummons", "_snojoFreeFights", "_snojoParts", "_snokebombUsed", "_snowconeSummons", "_snowglobeDrops", "_snowSuitCount", "_sourceTerminalDigitizeMonsterCount", "_sourceTerminalDigitizeUses", "_sourceTerminalDuplicateUses", "_sourceTerminalEnhanceUses", "_sourceTerminalExtrudes", "_sourceTerminalPortscanUses", "_spaceFurDropsCrown", "_spacegatePlanetIndex", "_spacegateTurnsLeft", "_spaceJellyfishDrops", "_speakeasyDrinksDrunk", "_speakeasyFreeFights", "_spelunkerCharges", "_spelunkingTalesDrops", "_spikolodonSpikeUses", "_spookyJellyUses", "_stackLumpsUses", "_steamCardDrops", "_stickerSummons", "_stinkyCheeseCount", "_stressBallSqueezes", "_sugarSummons", "_sweatOutSomeBoozeUsed", "_taffyRareSummons", "_taffyYellowSummons", "_thanksgettingFoodsEaten", "_thingfinderCasts", "_thinknerdPackageDrops", "_thorsPliersCrafting", "_timeHelmetAdv", "_timeSpinnerMinutesUsed", "_tokenDrops", "_transponderDrops", "_turkeyBlastersUsed", "_turkeyBooze", "_turkeyMuscle", "_turkeyMyst", "_turkeyMoxie", "_unaccompaniedMinerUsed", "_unconsciousCollectiveCharge", "_universalSeasoningsUsed", "_universeCalculated", "_universeImploded", "_usedReplicaBatoomerang", "_vampyreCloakeFormUses", "_villainLairProgress", "_vitachocCapsulesUsed", "_vmaskAdv", "_voidFreeFights", "_volcanoItem1", "_volcanoItem2", "_volcanoItem3", "_volcanoItemCount1", "_volcanoItemCount2", "_volcanoItemCount3", "_voteFreeFights", "_VYKEACompanionLevel", "_warbearAutoAnvilCrafting", "_waxGlobDrops", "_whiteRiceDrops", "_witchessFights", "_xoHugsUsed", "_yellowPixelDropsCrown", "_zapCount", "_zombieSmashPocketsUsed"];
    monsterProperties = ["beGregariousMonster", "cameraMonster", "chateauMonster", "clumsinessGroveBoss", "crappyCameraMonster", "crudeMonster", "enamorangMonster", "envyfishMonster", "glacierOfJerksBoss", "holdHandsMonster", "iceSculptureMonster", "lastCopyableMonster", "longConMonster", "maelstromOfLoversBoss", "makeFriendsMonster", "merkinLockkeyMonster", "monkeyPointMonster", "motifMonster", "nosyNoseMonster", "olfactedMonster", "photocopyMonster", "rainDohMonster", "romanticTarget", "rufusDesiredEntity", "rwbMonster", "screencappedMonster", "spookyPuttyMonster", "spookyVHSTapeMonster", "stenchCursedMonster", "superficiallyInterestedMonster", "waxMonster", "yearbookCameraTarget", "_gallapagosMonster", "_jiggleCreamedMonster", "_latteMonster", "_monsterHabitatsMonster", "_nanorhinoBanishedMonster", "_newYouQuestMonster", "_relativityMonster", "_saberForceMonster", "_sourceTerminalDigitizeMonster", "_voteMonster"];
    locationProperties = ["autumnatonQuestLocation", "currentJunkyardLocation", "doctorBagQuestLocation", "ghostLocation", "guzzlrQuestLocation", "nextSpookyravenElizabethRoom", "nextSpookyravenStephenRoom", "rwbLocation", "sourceOracleTarget", "_floundryBassLocation", "_floundryCarpLocation", "_floundryCodLocation", "_floundryHatchetfishLocation", "_floundryTroutLocation", "_floundryTunaLocation", "_sotParcelLocation"];
    stringProperties = ["autoLogin", "browserBookmarks", "chatFontSize", "combatHotkey0", "combatHotkey1", "combatHotkey2", "combatHotkey3", "combatHotkey4", "combatHotkey5", "combatHotkey6", "combatHotkey7", "combatHotkey8", "combatHotkey9", "commandLineNamespace", "dailyDeedsOptions", "defaultBorderColor", "displayName", "externalEditor", "getBreakfast", "headerStates", "highlightList", "http.proxyHost", "http.proxyPassword", "http.proxyPort", "http.proxyUser", "https.proxyHost", "https.proxyPassword", "https.proxyPort", "https.proxyUser", "initialDesktop", "initialFrames", "lastRelayUpdate", "lastUserAgent", "lastUsername", "logPreferenceChangeFilter", "loginScript", "loginServerName", "loginWindowLogo", "logoutScript", "pingDefaultTestPage", "pingLatest", "pingLoginAbort", "pingLoginCheck", "pingLoginFail", "pingLongest", "pingShortest", "pingTestPage", "previousNotifyList", "previousUpdateVersion", "saveState", "saveStateActive", "scriptList", "swingLookAndFeel", "userAgent", "8BitColor", "afterAdventureScript", "autoOlfact", "autoPutty", "autumnatonUpgrades", "backupCameraMode", "banishedMonsters", "banishedPhyla", "banishingShoutMonsters", "batmanStats", "batmanZone", "batmanUpgrades", "battleAction", "beachHeadsUnlocked", "beforePVPScript", "betweenBattleScript", "boomBoxSong", "breakfastAlways", "breakfastHardcore", "breakfastSoftcore", "buffBotCasting", "buyScript", "cargoPocketsEmptied", "cargoPocketScraps", "chatbotScript", "chatPlayerScript", "chibiName", "choiceAdventureScript", "chosenTrip", "clanFortuneReply1", "clanFortuneReply2", "clanFortuneReply3", "clanFortuneWord1", "clanFortuneWord2", "clanFortuneWord3", "commerceGhostItem", "counterScript", "copperheadClubHazard", "crimbotChassis", "crimbotArm", "crimbotPropulsion", "crystalBallPredictions", "csServicesPerformed", "currentAstralTrip", "currentDistillateMods", "currentEasyBountyItem", "currentHardBountyItem", "currentHippyStore", "currentJunkyardTool", "currentLlamaForm", "currentMood", "currentPVPSeason", "currentPvpVictories", "currentSpecialBountyItem", "currentSITSkill", "customCombatScript", "cyrusAdjectives", "defaultFlowerLossMessage", "defaultFlowerWinMessage", "demonName1", "demonName2", "demonName3", "demonName4", "demonName5", "demonName6", "demonName7", "demonName8", "demonName9", "demonName10", "demonName11", "demonName12", "demonName13", "dinseyGatorStenchDamage", "dinseyRollercoasterStats", "doctorBagQuestItem", "dolphinItem", "duckAreasCleared", "duckAreasSelected", "edPiece", "enamorangMonsterTurn", "ensorcelee", "EVEDirections", "extraCosmeticModifiers", "familiarScript", "forbiddenStores", "gameProBossSpecialPower", "gooseReprocessed", "grimoireSkillsHardcore", "grimoireSkillsSoftcore", "grimstoneMaskPath", "guzzlrQuestClient", "guzzlrQuestBooze", "guzzlrQuestTier", "harvestGardenHardcore", "harvestGardenSoftcore", "hpAutoRecoveryItems", "invalidBuffMessage", "jickSwordModifier", "juneCleaverQueue", "kingLiberatedScript", "lassoTraining", "lastAdventure", "lastBangPotion819", "lastBangPotion820", "lastBangPotion821", "lastBangPotion822", "lastBangPotion823", "lastBangPotion824", "lastBangPotion825", "lastBangPotion826", "lastBangPotion827", "lastChanceBurn", "lastChessboard", "lastCombatEnvironments", "lastDwarfDiceRolls", "lastDwarfDigitRunes", "lastDwarfEquipmentRunes", "lastDwarfFactoryItem118", "lastDwarfFactoryItem119", "lastDwarfFactoryItem120", "lastDwarfFactoryItem360", "lastDwarfFactoryItem361", "lastDwarfFactoryItem362", "lastDwarfFactoryItem363", "lastDwarfFactoryItem364", "lastDwarfFactoryItem365", "lastDwarfFactoryItem910", "lastDwarfFactoryItem3199", "lastDwarfOfficeItem3208", "lastDwarfOfficeItem3209", "lastDwarfOfficeItem3210", "lastDwarfOfficeItem3211", "lastDwarfOfficeItem3212", "lastDwarfOfficeItem3213", "lastDwarfOfficeItem3214", "lastDwarfOreRunes", "lastDwarfHopper1", "lastDwarfHopper2", "lastDwarfHopper3", "lastDwarfHopper4", "lastEncounter", "lastMacroError", "lastMessageId", "lastPaperStrip3144", "lastPaperStrip4138", "lastPaperStrip4139", "lastPaperStrip4140", "lastPaperStrip4141", "lastPaperStrip4142", "lastPaperStrip4143", "lastPaperStrip4144", "lastPirateEphemera", "lastPorkoBoard", "lastPorkoPayouts", "lastPorkoExpected", "lastSlimeVial3885", "lastSlimeVial3886", "lastSlimeVial3887", "lastSlimeVial3888", "lastSlimeVial3889", "lastSlimeVial3890", "lastSlimeVial3891", "lastSlimeVial3892", "lastSlimeVial3893", "lastSlimeVial3894", "lastSlimeVial3895", "lastSlimeVial3896", "latteIngredients", "latteModifier", "latteUnlocks", "ledCandleMode", "libramSkillsHardcore", "libramSkillsSoftcore", "louvreOverride", "lovePotion", "lttQuestName", "maximizerList", "maximizerMRUList", "mayoInMouth", "mayoMinderSetting", "merkinQuestPath", "mineLayout1", "mineLayout2", "mineLayout3", "mineLayout4", "mineLayout5", "mineLayout6", "mpAutoRecoveryItems", "muffinOnOrder", "nextAdventure", "nextDistillateMods", "nextQuantumFamiliarName", "nextQuantumFamiliarOwner", "nsChallenge2", "nsChallenge3", "nsChallenge4", "nsChallenge5", "nsTowerDoorKeysUsed", "oceanAction", "oceanDestination", "parkaMode", "pastaThrall1", "pastaThrall2", "pastaThrall3", "pastaThrall4", "pastaThrall5", "pastaThrall6", "pastaThrall7", "pastaThrall8", "peteMotorbikeTires", "peteMotorbikeGasTank", "peteMotorbikeHeadlight", "peteMotorbikeCowling", "peteMotorbikeMuffler", "peteMotorbikeSeat", "pieStuffing", "plantingDate", "plantingLength", "plantingScript", "plumberCostumeWorn", "pokefamBoosts", "postAscensionScript", "preAscensionScript", "questClumsinessGrove", "questDoctorBag", "questECoBucket", "questESlAudit", "questESlBacteria", "questESlCheeseburger", "questESlCocktail", "questESlDebt", "questESlFish", "questESlMushStash", "questESlSalt", "questESlSprinkles", "questESpClipper", "questESpEVE", "questESpFakeMedium", "questESpGore", "questESpJunglePun", "questESpOutOfOrder", "questESpSerum", "questESpSmokes", "questEStFishTrash", "questEStGiveMeFuel", "questEStNastyBears", "questEStSocialJusticeI", "questEStSocialJusticeII", "questEStSuperLuber", "questEStWorkWithFood", "questEStZippityDooDah", "questEUNewYou", "questF01Primordial", "questF02Hyboria", "questF03Future", "questF04Elves", "questF05Clancy", "questG01Meatcar", "questG02Whitecastle", "questG03Ego", "questG04Nemesis", "questG05Dark", "questG06Delivery", "questG07Myst", "questG08Moxie", "questG09Muscle", "questGlacierOfJerks", "questGuzzlr", "questI01Scapegoat", "questI02Beat", "questL02Larva", "questL03Rat", "questL04Bat", "questL05Goblin", "questL06Friar", "questL07Cyrptic", "questL08Trapper", "questL09Topping", "questL10Garbage", "questL11Black", "questL11Business", "questL11Curses", "questL11Desert", "questL11Doctor", "questL11MacGuffin", "questL11Manor", "questL11Palindome", "questL11Pyramid", "questL11Ron", "questL11Shen", "questL11Spare", "questL11Worship", "questL12HippyFrat", "questL12War", "questL13Final", "questL13Warehouse", "questLTTQuestByWire", "questM01Untinker", "questM02Artist", "questM03Bugbear", "questM05Toot", "questM06Gourd", "questM07Hammer", "questM08Baker", "questM09Rocks", "questM10Azazel", "questM11Postal", "questM12Pirate", "questM13Escape", "questM14Bounty", "questM15Lol", "questM16Temple", "questM17Babies", "questM18Swamp", "questM19Hippy", "questM20Necklace", "questM21Dance", "questM22Shirt", "questM23Meatsmith", "questM24Doc", "questM25Armorer", "questM26Oracle", "questMaelstromOfLovers", "questPAGhost", "questRufus", "questS01OldGuy", "questS02Monkees", "raveCombo1", "raveCombo2", "raveCombo3", "raveCombo4", "raveCombo5", "raveCombo6", "recoveryScript", "relayCounters", "retroCapeSuperhero", "retroCapeWashingInstructions", "royalty", "rufusDesiredArtifact", "rufusDesiredItems", "rufusQuestTarget", "rufusQuestType", "scriptMRUList", "seahorseName", "shadowLabyrinthGoal", "shadowRiftIngress", "shenQuestItem", "shrubGarland", "shrubGifts", "shrubLights", "shrubTopper", "sideDefeated", "sidequestArenaCompleted", "sidequestFarmCompleted", "sidequestJunkyardCompleted", "sidequestLighthouseCompleted", "sidequestNunsCompleted", "sidequestOrchardCompleted", "skateParkStatus", "snowsuit", "sourceTerminalChips", "sourceTerminalEducate1", "sourceTerminalEducate2", "sourceTerminalEnquiry", "sourceTerminalEducateKnown", "sourceTerminalEnhanceKnown", "sourceTerminalEnquiryKnown", "sourceTerminalExtrudeKnown", "spadingData", "spadingScript", "speakeasyName", "spelunkyStatus", "spelunkyUpgrades", "spookyravenRecipeUsed", "stationaryButton1", "stationaryButton2", "stationaryButton3", "stationaryButton4", "stationaryButton5", "streamCrossDefaultTarget", "sweetSynthesisBlacklist", "telescope1", "telescope2", "telescope3", "telescope4", "telescope5", "testudinalTeachings", "textColors", "thanksMessage", "tomeSkillsHardcore", "tomeSkillsSoftcore", "trackVoteMonster", "trainsetConfiguration", "trapperOre", "umbrellaState", "umdLastObtained", "vintnerWineEffect", "vintnerWineName", "vintnerWineType", "violetFogLayout", "volcanoMaze1", "volcanoMaze2", "volcanoMaze3", "volcanoMaze4", "volcanoMaze5", "walfordBucketItem", "warProgress", "watchedPreferences", "workteaClue", "yourFavoriteBird", "yourFavoriteBirdMods", "youRobotCPUUpgrades", "_bastilleBoosts", "_bastilleChoice1", "_bastilleChoice2", "_bastilleChoice3", "_bastilleCurrentStyles", "_bastilleEnemyCastle", "_bastilleEnemyName", "_bastilleLastBattleResults", "_bastilleLastEncounter", "_bastilleStats", "_beachHeadsUsed", "_beachLayout", "_beachMinutes", "_birdOfTheDay", "_birdOfTheDayMods", "_bittycar", "_campAwaySmileBuffSign", "_citizenZone", "_citizenZoneMods", "_cloudTalkMessage", "_cloudTalkSmoker", "_coatOfPaintModifier", "_dailySpecial", "_deckCardsSeen", "_feastedFamiliars", "_floristPlantsUsed", "_frAreasUnlocked", "_frHoursLeft", "_frMonstersKilled", "_horsery", "_horseryCrazyMox", "_horseryCrazyMus", "_horseryCrazyMys", "_horseryCrazyName", "_horseryCurrentName", "_horseryDarkName", "_horseryNormalName", "_horseryPaleName", "_jickJarAvailable", "_jiggleCheesedMonsters", "_lastCombatStarted", "_lastPirateRealmIsland", "_locketMonstersFought", "_mummeryMods", "_mummeryUses", "_newYouQuestSkill", "_noHatModifier", "_pantogramModifier", "_pottedPowerPlant", "_questESp", "_questPartyFair", "_questPartyFairProgress", "_questPartyFairQuest", "_roboDrinks", "_roninStoragePulls", "_spacegateAnimalLife", "_spacegateCoordinates", "_spacegateGear", "_spacegateHazards", "_spacegateIntelligentLife", "_spacegatePlanetName", "_spacegatePlantLife", "_stolenAccordions", "_tempRelayCounters", "_timeSpinnerFoodAvailable", "_unknownEasyBountyItem", "_unknownHardBountyItem", "_unknownSpecialBountyItem", "_untakenEasyBountyItem", "_untakenHardBountyItem", "_untakenSpecialBountyItem", "_userMods", "_villainLairColor", "_villainLairKey", "_voteLocal1", "_voteLocal2", "_voteLocal3", "_voteLocal4", "_voteMonster1", "_voteMonster2", "_voteModifier", "_VYKEACompanionType", "_VYKEACompanionRune", "_VYKEACompanionName"];
    numericOrStringProperties = ["statusEngineering", "statusGalley", "statusMedbay", "statusMorgue", "statusNavigation", "statusScienceLab", "statusSonar", "statusSpecialOps", "statusWasteProcessing", "choiceAdventure2", "choiceAdventure3", "choiceAdventure4", "choiceAdventure5", "choiceAdventure6", "choiceAdventure7", "choiceAdventure8", "choiceAdventure9", "choiceAdventure10", "choiceAdventure11", "choiceAdventure12", "choiceAdventure14", "choiceAdventure15", "choiceAdventure16", "choiceAdventure17", "choiceAdventure18", "choiceAdventure19", "choiceAdventure20", "choiceAdventure21", "choiceAdventure22", "choiceAdventure23", "choiceAdventure24", "choiceAdventure25", "choiceAdventure26", "choiceAdventure27", "choiceAdventure28", "choiceAdventure29", "choiceAdventure40", "choiceAdventure41", "choiceAdventure42", "choiceAdventure45", "choiceAdventure46", "choiceAdventure47", "choiceAdventure71", "choiceAdventure72", "choiceAdventure73", "choiceAdventure74", "choiceAdventure75", "choiceAdventure76", "choiceAdventure77", "choiceAdventure86", "choiceAdventure87", "choiceAdventure88", "choiceAdventure89", "choiceAdventure90", "choiceAdventure91", "choiceAdventure105", "choiceAdventure106", "choiceAdventure107", "choiceAdventure108", "choiceAdventure109", "choiceAdventure110", "choiceAdventure111", "choiceAdventure112", "choiceAdventure113", "choiceAdventure114", "choiceAdventure115", "choiceAdventure116", "choiceAdventure117", "choiceAdventure118", "choiceAdventure120", "choiceAdventure123", "choiceAdventure125", "choiceAdventure126", "choiceAdventure127", "choiceAdventure129", "choiceAdventure131", "choiceAdventure132", "choiceAdventure135", "choiceAdventure136", "choiceAdventure137", "choiceAdventure138", "choiceAdventure139", "choiceAdventure140", "choiceAdventure141", "choiceAdventure142", "choiceAdventure143", "choiceAdventure144", "choiceAdventure145", "choiceAdventure146", "choiceAdventure147", "choiceAdventure148", "choiceAdventure149", "choiceAdventure151", "choiceAdventure152", "choiceAdventure153", "choiceAdventure154", "choiceAdventure155", "choiceAdventure156", "choiceAdventure157", "choiceAdventure158", "choiceAdventure159", "choiceAdventure160", "choiceAdventure161", "choiceAdventure162", "choiceAdventure163", "choiceAdventure164", "choiceAdventure165", "choiceAdventure166", "choiceAdventure167", "choiceAdventure168", "choiceAdventure169", "choiceAdventure170", "choiceAdventure171", "choiceAdventure172", "choiceAdventure177", "choiceAdventure178", "choiceAdventure180", "choiceAdventure181", "choiceAdventure182", "choiceAdventure184", "choiceAdventure185", "choiceAdventure186", "choiceAdventure187", "choiceAdventure188", "choiceAdventure189", "choiceAdventure191", "choiceAdventure197", "choiceAdventure198", "choiceAdventure199", "choiceAdventure200", "choiceAdventure201", "choiceAdventure202", "choiceAdventure203", "choiceAdventure204", "choiceAdventure205", "choiceAdventure206", "choiceAdventure207", "choiceAdventure208", "choiceAdventure211", "choiceAdventure212", "choiceAdventure213", "choiceAdventure214", "choiceAdventure215", "choiceAdventure216", "choiceAdventure217", "choiceAdventure218", "choiceAdventure219", "choiceAdventure220", "choiceAdventure221", "choiceAdventure222", "choiceAdventure223", "choiceAdventure224", "choiceAdventure225", "choiceAdventure230", "choiceAdventure272", "choiceAdventure273", "choiceAdventure276", "choiceAdventure277", "choiceAdventure278", "choiceAdventure279", "choiceAdventure280", "choiceAdventure281", "choiceAdventure282", "choiceAdventure283", "choiceAdventure284", "choiceAdventure285", "choiceAdventure286", "choiceAdventure287", "choiceAdventure288", "choiceAdventure289", "choiceAdventure290", "choiceAdventure291", "choiceAdventure292", "choiceAdventure293", "choiceAdventure294", "choiceAdventure295", "choiceAdventure296", "choiceAdventure297", "choiceAdventure298", "choiceAdventure299", "choiceAdventure302", "choiceAdventure303", "choiceAdventure304", "choiceAdventure305", "choiceAdventure306", "choiceAdventure307", "choiceAdventure308", "choiceAdventure309", "choiceAdventure310", "choiceAdventure311", "choiceAdventure317", "choiceAdventure318", "choiceAdventure319", "choiceAdventure320", "choiceAdventure321", "choiceAdventure322", "choiceAdventure326", "choiceAdventure327", "choiceAdventure328", "choiceAdventure329", "choiceAdventure330", "choiceAdventure331", "choiceAdventure332", "choiceAdventure333", "choiceAdventure334", "choiceAdventure335", "choiceAdventure336", "choiceAdventure337", "choiceAdventure338", "choiceAdventure339", "choiceAdventure340", "choiceAdventure341", "choiceAdventure342", "choiceAdventure343", "choiceAdventure344", "choiceAdventure345", "choiceAdventure346", "choiceAdventure347", "choiceAdventure348", "choiceAdventure349", "choiceAdventure350", "choiceAdventure351", "choiceAdventure352", "choiceAdventure353", "choiceAdventure354", "choiceAdventure355", "choiceAdventure356", "choiceAdventure357", "choiceAdventure358", "choiceAdventure360", "choiceAdventure361", "choiceAdventure362", "choiceAdventure363", "choiceAdventure364", "choiceAdventure365", "choiceAdventure366", "choiceAdventure367", "choiceAdventure372", "choiceAdventure376", "choiceAdventure387", "choiceAdventure388", "choiceAdventure389", "choiceAdventure390", "choiceAdventure391", "choiceAdventure392", "choiceAdventure393", "choiceAdventure395", "choiceAdventure396", "choiceAdventure397", "choiceAdventure398", "choiceAdventure399", "choiceAdventure400", "choiceAdventure401", "choiceAdventure402", "choiceAdventure403", "choiceAdventure423", "choiceAdventure424", "choiceAdventure425", "choiceAdventure426", "choiceAdventure427", "choiceAdventure428", "choiceAdventure429", "choiceAdventure430", "choiceAdventure431", "choiceAdventure432", "choiceAdventure433", "choiceAdventure435", "choiceAdventure438", "choiceAdventure439", "choiceAdventure442", "choiceAdventure444", "choiceAdventure445", "choiceAdventure446", "choiceAdventure447", "choiceAdventure448", "choiceAdventure449", "choiceAdventure451", "choiceAdventure452", "choiceAdventure453", "choiceAdventure454", "choiceAdventure455", "choiceAdventure456", "choiceAdventure457", "choiceAdventure458", "choiceAdventure460", "choiceAdventure461", "choiceAdventure462", "choiceAdventure463", "choiceAdventure464", "choiceAdventure465", "choiceAdventure467", "choiceAdventure468", "choiceAdventure469", "choiceAdventure470", "choiceAdventure471", "choiceAdventure472", "choiceAdventure473", "choiceAdventure474", "choiceAdventure475", "choiceAdventure477", "choiceAdventure478", "choiceAdventure480", "choiceAdventure483", "choiceAdventure484", "choiceAdventure485", "choiceAdventure486", "choiceAdventure488", "choiceAdventure489", "choiceAdventure490", "choiceAdventure491", "choiceAdventure496", "choiceAdventure497", "choiceAdventure502", "choiceAdventure503", "choiceAdventure504", "choiceAdventure505", "choiceAdventure506", "choiceAdventure507", "choiceAdventure509", "choiceAdventure510", "choiceAdventure511", "choiceAdventure512", "choiceAdventure513", "choiceAdventure514", "choiceAdventure515", "choiceAdventure517", "choiceAdventure518", "choiceAdventure519", "choiceAdventure521", "choiceAdventure522", "choiceAdventure523", "choiceAdventure527", "choiceAdventure528", "choiceAdventure529", "choiceAdventure530", "choiceAdventure531", "choiceAdventure532", "choiceAdventure533", "choiceAdventure534", "choiceAdventure535", "choiceAdventure536", "choiceAdventure538", "choiceAdventure539", "choiceAdventure542", "choiceAdventure543", "choiceAdventure544", "choiceAdventure546", "choiceAdventure548", "choiceAdventure549", "choiceAdventure550", "choiceAdventure551", "choiceAdventure552", "choiceAdventure553", "choiceAdventure554", "choiceAdventure556", "choiceAdventure557", "choiceAdventure558", "choiceAdventure559", "choiceAdventure560", "choiceAdventure561", "choiceAdventure562", "choiceAdventure563", "choiceAdventure564", "choiceAdventure565", "choiceAdventure566", "choiceAdventure567", "choiceAdventure568", "choiceAdventure569", "choiceAdventure571", "choiceAdventure572", "choiceAdventure573", "choiceAdventure574", "choiceAdventure575", "choiceAdventure576", "choiceAdventure577", "choiceAdventure578", "choiceAdventure579", "choiceAdventure581", "choiceAdventure582", "choiceAdventure583", "choiceAdventure584", "choiceAdventure594", "choiceAdventure595", "choiceAdventure596", "choiceAdventure597", "choiceAdventure598", "choiceAdventure599", "choiceAdventure600", "choiceAdventure603", "choiceAdventure604", "choiceAdventure616", "choiceAdventure634", "choiceAdventure640", "choiceAdventure654", "choiceAdventure655", "choiceAdventure656", "choiceAdventure657", "choiceAdventure658", "choiceAdventure664", "choiceAdventure669", "choiceAdventure670", "choiceAdventure671", "choiceAdventure672", "choiceAdventure673", "choiceAdventure674", "choiceAdventure675", "choiceAdventure676", "choiceAdventure677", "choiceAdventure678", "choiceAdventure679", "choiceAdventure681", "choiceAdventure683", "choiceAdventure684", "choiceAdventure685", "choiceAdventure686", "choiceAdventure687", "choiceAdventure688", "choiceAdventure689", "choiceAdventure690", "choiceAdventure691", "choiceAdventure692", "choiceAdventure693", "choiceAdventure694", "choiceAdventure695", "choiceAdventure696", "choiceAdventure697", "choiceAdventure698", "choiceAdventure700", "choiceAdventure701", "choiceAdventure705", "choiceAdventure706", "choiceAdventure707", "choiceAdventure708", "choiceAdventure709", "choiceAdventure710", "choiceAdventure711", "choiceAdventure712", "choiceAdventure713", "choiceAdventure714", "choiceAdventure715", "choiceAdventure716", "choiceAdventure717", "choiceAdventure721", "choiceAdventure725", "choiceAdventure729", "choiceAdventure733", "choiceAdventure737", "choiceAdventure741", "choiceAdventure745", "choiceAdventure749", "choiceAdventure753", "choiceAdventure771", "choiceAdventure778", "choiceAdventure780", "choiceAdventure781", "choiceAdventure783", "choiceAdventure784", "choiceAdventure785", "choiceAdventure786", "choiceAdventure787", "choiceAdventure788", "choiceAdventure789", "choiceAdventure791", "choiceAdventure793", "choiceAdventure794", "choiceAdventure795", "choiceAdventure796", "choiceAdventure797", "choiceAdventure803", "choiceAdventure805", "choiceAdventure808", "choiceAdventure809", "choiceAdventure813", "choiceAdventure815", "choiceAdventure830", "choiceAdventure832", "choiceAdventure833", "choiceAdventure834", "choiceAdventure835", "choiceAdventure837", "choiceAdventure838", "choiceAdventure839", "choiceAdventure840", "choiceAdventure841", "choiceAdventure842", "choiceAdventure851", "choiceAdventure852", "choiceAdventure853", "choiceAdventure854", "choiceAdventure855", "choiceAdventure856", "choiceAdventure857", "choiceAdventure858", "choiceAdventure866", "choiceAdventure873", "choiceAdventure875", "choiceAdventure876", "choiceAdventure877", "choiceAdventure878", "choiceAdventure879", "choiceAdventure880", "choiceAdventure881", "choiceAdventure882", "choiceAdventure888", "choiceAdventure889", "choiceAdventure918", "choiceAdventure919", "choiceAdventure920", "choiceAdventure921", "choiceAdventure923", "choiceAdventure924", "choiceAdventure925", "choiceAdventure926", "choiceAdventure927", "choiceAdventure928", "choiceAdventure929", "choiceAdventure930", "choiceAdventure931", "choiceAdventure932", "choiceAdventure940", "choiceAdventure941", "choiceAdventure942", "choiceAdventure943", "choiceAdventure944", "choiceAdventure945", "choiceAdventure946", "choiceAdventure950", "choiceAdventure955", "choiceAdventure957", "choiceAdventure958", "choiceAdventure959", "choiceAdventure960", "choiceAdventure961", "choiceAdventure962", "choiceAdventure963", "choiceAdventure964", "choiceAdventure965", "choiceAdventure966", "choiceAdventure970", "choiceAdventure973", "choiceAdventure974", "choiceAdventure975", "choiceAdventure976", "choiceAdventure977", "choiceAdventure979", "choiceAdventure980", "choiceAdventure981", "choiceAdventure982", "choiceAdventure983", "choiceAdventure988", "choiceAdventure989", "choiceAdventure993", "choiceAdventure998", "choiceAdventure1000", "choiceAdventure1003", "choiceAdventure1005", "choiceAdventure1006", "choiceAdventure1007", "choiceAdventure1008", "choiceAdventure1009", "choiceAdventure1010", "choiceAdventure1011", "choiceAdventure1012", "choiceAdventure1013", "choiceAdventure1015", "choiceAdventure1016", "choiceAdventure1017", "choiceAdventure1018", "choiceAdventure1019", "choiceAdventure1020", "choiceAdventure1021", "choiceAdventure1022", "choiceAdventure1023", "choiceAdventure1026", "choiceAdventure1027", "choiceAdventure1028", "choiceAdventure1029", "choiceAdventure1030", "choiceAdventure1031", "choiceAdventure1032", "choiceAdventure1033", "choiceAdventure1034", "choiceAdventure1035", "choiceAdventure1036", "choiceAdventure1037", "choiceAdventure1038", "choiceAdventure1039", "choiceAdventure1040", "choiceAdventure1041", "choiceAdventure1042", "choiceAdventure1044", "choiceAdventure1045", "choiceAdventure1046", "choiceAdventure1048", "choiceAdventure1051", "choiceAdventure1052", "choiceAdventure1053", "choiceAdventure1054", "choiceAdventure1055", "choiceAdventure1056", "choiceAdventure1057", "choiceAdventure1059", "choiceAdventure1060", "choiceAdventure1061", "choiceAdventure1062", "choiceAdventure1065", "choiceAdventure1067", "choiceAdventure1068", "choiceAdventure1069", "choiceAdventure1070", "choiceAdventure1071", "choiceAdventure1073", "choiceAdventure1077", "choiceAdventure1080", "choiceAdventure1081", "choiceAdventure1082", "choiceAdventure1083", "choiceAdventure1084", "choiceAdventure1085", "choiceAdventure1091", "choiceAdventure1094", "choiceAdventure1095", "choiceAdventure1096", "choiceAdventure1097", "choiceAdventure1102", "choiceAdventure1106", "choiceAdventure1107", "choiceAdventure1108", "choiceAdventure1110", "choiceAdventure1114", "choiceAdventure1115", "choiceAdventure1116", "choiceAdventure1118", "choiceAdventure1119", "choiceAdventure1120", "choiceAdventure1121", "choiceAdventure1122", "choiceAdventure1123", "choiceAdventure1171", "choiceAdventure1172", "choiceAdventure1173", "choiceAdventure1174", "choiceAdventure1175", "choiceAdventure1193", "choiceAdventure1195", "choiceAdventure1196", "choiceAdventure1197", "choiceAdventure1198", "choiceAdventure1199", "choiceAdventure1202", "choiceAdventure1203", "choiceAdventure1204", "choiceAdventure1205", "choiceAdventure1206", "choiceAdventure1207", "choiceAdventure1208", "choiceAdventure1209", "choiceAdventure1210", "choiceAdventure1211", "choiceAdventure1212", "choiceAdventure1213", "choiceAdventure1214", "choiceAdventure1215", "choiceAdventure1219", "choiceAdventure1222", "choiceAdventure1223", "choiceAdventure1224", "choiceAdventure1225", "choiceAdventure1226", "choiceAdventure1227", "choiceAdventure1228", "choiceAdventure1229", "choiceAdventure1236", "choiceAdventure1237", "choiceAdventure1238", "choiceAdventure1239", "choiceAdventure1240", "choiceAdventure1241", "choiceAdventure1242", "choiceAdventure1243", "choiceAdventure1244", "choiceAdventure1245", "choiceAdventure1246", "choiceAdventure1247", "choiceAdventure1248", "choiceAdventure1249", "choiceAdventure1250", "choiceAdventure1251", "choiceAdventure1252", "choiceAdventure1253", "choiceAdventure1254", "choiceAdventure1255", "choiceAdventure1256", "choiceAdventure1266", "choiceAdventure1280", "choiceAdventure1281", "choiceAdventure1282", "choiceAdventure1283", "choiceAdventure1284", "choiceAdventure1285", "choiceAdventure1286", "choiceAdventure1287", "choiceAdventure1288", "choiceAdventure1289", "choiceAdventure1290", "choiceAdventure1291", "choiceAdventure1292", "choiceAdventure1293", "choiceAdventure1294", "choiceAdventure1295", "choiceAdventure1296", "choiceAdventure1297", "choiceAdventure1298", "choiceAdventure1299", "choiceAdventure1300", "choiceAdventure1301", "choiceAdventure1302", "choiceAdventure1303", "choiceAdventure1304", "choiceAdventure1305", "choiceAdventure1307", "choiceAdventure1310", "choiceAdventure1312", "choiceAdventure1313", "choiceAdventure1314", "choiceAdventure1315", "choiceAdventure1316", "choiceAdventure1317", "choiceAdventure1318", "choiceAdventure1319", "choiceAdventure1321", "choiceAdventure1322", "choiceAdventure1323", "choiceAdventure1324", "choiceAdventure1325", "choiceAdventure1326", "choiceAdventure1327", "choiceAdventure1328", "choiceAdventure1332", "choiceAdventure1333", "choiceAdventure1335", "choiceAdventure1340", "choiceAdventure1341", "choiceAdventure1345", "choiceAdventure1389", "choiceAdventure1392", "choiceAdventure1397", "choiceAdventure1399", "choiceAdventure1405", "choiceAdventure1411", "choiceAdventure1415", "choiceAdventure1427", "choiceAdventure1428", "choiceAdventure1429", "choiceAdventure1430", "choiceAdventure1431", "choiceAdventure1432", "choiceAdventure1433", "choiceAdventure1434", "choiceAdventure1436", "choiceAdventure1460", "choiceAdventure1461", "choiceAdventure1467", "choiceAdventure1468", "choiceAdventure1469", "choiceAdventure1470", "choiceAdventure1471", "choiceAdventure1472", "choiceAdventure1473", "choiceAdventure1474", "choiceAdventure1475", "choiceAdventure1486", "choiceAdventure1487", "choiceAdventure1488", "choiceAdventure1489", "choiceAdventure1491", "choiceAdventure1494", "choiceAdventure1505"];
    familiarProperties = ["commaFamiliar", "nextQuantumFamiliar", "stillsuitFamiliar"];
    statProperties = ["nsChallenge1", "snojoSetting"];
    phylumProperties = ["dnaSyringe", "locketPhylum", "redSnapperPhylum", "_circadianRhythmsPhylum"];
  }
});

// ../../node_modules/libram/dist/propertyTyping.js
function isBooleanProperty(property) {
  return booleanPropertiesSet.has(property);
}
function isNumericProperty(property) {
  return numericPropertiesSet.has(property);
}
function isNumericOrStringProperty(property) {
  return numericOrStringPropertiesSet.has(property);
}
function isStringProperty(property) {
  return stringPropertiesSet.has(property);
}
function isLocationProperty(property) {
  return locationPropertiesSet.has(property);
}
function isMonsterProperty(property) {
  return monsterPropertiesSet.has(property);
}
function isFamiliarProperty(property) {
  return familiarPropertiesSet.has(property);
}
function isStatProperty(property) {
  return statPropertiesSet.has(property);
}
function isPhylumProperty(property) {
  return phylumPropertiesSet.has(property);
}
var booleanPropertiesSet, numericPropertiesSet, numericOrStringPropertiesSet, stringPropertiesSet, locationPropertiesSet, monsterPropertiesSet, familiarPropertiesSet, statPropertiesSet, phylumPropertiesSet;
var init_propertyTyping = __esm({
  "../../node_modules/libram/dist/propertyTyping.js": function() {
    init_propertyTypes();
    booleanPropertiesSet = new Set(booleanProperties);
    numericPropertiesSet = new Set(numericProperties);
    numericOrStringPropertiesSet = new Set(numericOrStringProperties);
    stringPropertiesSet = new Set(stringProperties);
    locationPropertiesSet = new Set(locationProperties);
    monsterPropertiesSet = new Set(monsterProperties);
    familiarPropertiesSet = new Set(familiarProperties);
    statPropertiesSet = new Set(statProperties);
    phylumPropertiesSet = new Set(phylumProperties);
  }
});

// ../../node_modules/libram/dist/property.js
var property_exports = {};
__export(property_exports, {
  PropertiesManager: function() {
    return PropertiesManager;
  },
  decrement: function() {
    return decrement;
  },
  get: function() {
    return get;
  },
  getBoolean: function() {
    return getBoolean;
  },
  getBounty: function() {
    return getBounty;
  },
  getClass: function() {
    return getClass;
  },
  getCoinmaster: function() {
    return getCoinmaster;
  },
  getCommaSeparated: function() {
    return getCommaSeparated;
  },
  getEffect: function() {
    return getEffect;
  },
  getElement: function() {
    return getElement;
  },
  getFamiliar: function() {
    return getFamiliar;
  },
  getItem: function() {
    return getItem;
  },
  getLocation: function() {
    return getLocation;
  },
  getMonster: function() {
    return getMonster;
  },
  getNumber: function() {
    return getNumber;
  },
  getPhylum: function() {
    return getPhylum;
  },
  getServant: function() {
    return getServant;
  },
  getSkill: function() {
    return getSkill;
  },
  getSlot: function() {
    return getSlot;
  },
  getStat: function() {
    return getStat;
  },
  getString: function() {
    return getString;
  },
  getThrall: function() {
    return getThrall;
  },
  increment: function() {
    return increment;
  },
  set: function() {
    return _set;
  },
  setProperties: function() {
    return setProperties;
  },
  withChoice: function() {
    return withChoice;
  },
  withChoices: function() {
    return withChoices;
  },
  withProperties: function() {
    return withProperties;
  },
  withProperty: function() {
    return withProperty;
  }
});
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty3(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey3(descriptor.key), descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty3(obj, key, value) {
  key = _toPropertyKey3(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey3(arg) {
  var key = _toPrimitive3(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive3(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function get(property, _default) {
  var value = getString(property);
  if (isBooleanProperty(property)) {
    var _getBoolean;
    return (_getBoolean = getBoolean(property, _default)) !== null && _getBoolean !== void 0 ? _getBoolean : false;
  } else if (isNumericProperty(property)) {
    var _getNumber;
    return (_getNumber = getNumber(property, _default)) !== null && _getNumber !== void 0 ? _getNumber : 0;
  } else if (isNumericOrStringProperty(property)) {
    return value.match(/^\d+$/) ? parseInt(value) : value;
  } else if (isLocationProperty(property)) {
    return getLocation(property, _default);
  } else if (isMonsterProperty(property)) {
    return getMonster(property, _default);
  } else if (isFamiliarProperty(property)) {
    return getFamiliar(property, _default);
  } else if (isStatProperty(property)) {
    return getStat(property, _default);
  } else if (isPhylumProperty(property)) {
    return getPhylum(property, _default);
  } else if (isStringProperty(property)) {
    return value;
  }
  if (_default instanceof import_kolmafia3.Location) {
    return getLocation(property, _default);
  } else if (_default instanceof import_kolmafia3.Monster) {
    return getMonster(property, _default);
  } else if (_default instanceof import_kolmafia3.Familiar) {
    return getFamiliar(property, _default);
  } else if (_default instanceof import_kolmafia3.Stat) {
    return getStat(property, _default);
  } else if (_default instanceof import_kolmafia3.Phylum) {
    return getPhylum(property, _default);
  } else if (typeof _default === "boolean") {
    return value === "true" ? true : value === "false" ? false : _default;
  } else if (typeof _default === "number") {
    return value === "" ? _default : parseInt(value);
  } else if (value === "") {
    return _default === void 0 ? "" : _default;
  } else {
    return value;
  }
}
function _set(property, value) {
  var stringValue = value === null ? "" : value.toString();
  (0, import_kolmafia3.setProperty)(property, stringValue);
  return value;
}
function increment(property) {
  var delta = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var max = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;
  var value = get(property);
  if (!isNumericProperty(property))
    return value;
  var nextValue = Math.min(max, value + delta);
  return _set(property, nextValue);
}
function decrement(property) {
  var delta = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var min = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;
  var value = get(property);
  if (!isNumericProperty(property))
    return value;
  var nextValue = Math.max(min, value - delta);
  return _set(property, nextValue);
}
function setProperties(properties) {
  for (var _i = 0, _Object$entries = Object.entries(properties); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), prop = _Object$entries$_i[0], value = _Object$entries$_i[1];
    _set(prop, value);
  }
}
function withProperties(properties, callback) {
  var propertiesBackup = Object.fromEntries(Object.entries(properties).map(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 1), prop = _ref2[0];
    return [prop, get(prop)];
  }));
  setProperties(properties);
  try {
    return callback();
  } finally {
    setProperties(propertiesBackup);
  }
}
function withProperty(property, value, callback) {
  return withProperties(_defineProperty3({}, property, value), callback);
}
function withChoices(choices2, callback) {
  var properties = Object.fromEntries(Object.entries(choices2).map(function(_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), choice = _ref4[0], option = _ref4[1];
    return ["choiceAdventure".concat(choice), option];
  }));
  return withProperties(properties, callback);
}
function withChoice(choice, value, callback) {
  return withChoices(_defineProperty3({}, choice, value), callback);
}
var import_kolmafia3, createPropertyGetter, createMafiaClassPropertyGetter, getString, getCommaSeparated, getBoolean, getNumber, getBounty, getClass, getCoinmaster, getEffect, getElement, getFamiliar, getItem, getLocation, getMonster, getPhylum, getServant, getSkill, getSlot, getStat, getThrall, PropertiesManager;
var init_property = __esm({
  "../../node_modules/libram/dist/property.js": function() {
    import_kolmafia3 = require("kolmafia");
    init_propertyTyping();
    createPropertyGetter = function(transform) {
      return function(property, default_) {
        var value = (0, import_kolmafia3.getProperty)(property);
        if (default_ !== void 0 && value === "") {
          return default_;
        }
        return transform(value, property);
      };
    };
    createMafiaClassPropertyGetter = function(Type, toType) {
      return createPropertyGetter(function(value) {
        if (value === "")
          return null;
        var v = toType(value);
        return v === Type.none ? null : v;
      });
    };
    getString = createPropertyGetter(function(value) {
      return value;
    });
    getCommaSeparated = createPropertyGetter(function(value) {
      return value.split(/, ?/);
    });
    getBoolean = createPropertyGetter(function(value) {
      return value === "true";
    });
    getNumber = createPropertyGetter(function(value) {
      return Number(value);
    });
    getBounty = createMafiaClassPropertyGetter(import_kolmafia3.Bounty, import_kolmafia3.toBounty);
    getClass = createMafiaClassPropertyGetter(import_kolmafia3.Class, import_kolmafia3.toClass);
    getCoinmaster = createMafiaClassPropertyGetter(import_kolmafia3.Coinmaster, import_kolmafia3.toCoinmaster);
    getEffect = createMafiaClassPropertyGetter(import_kolmafia3.Effect, import_kolmafia3.toEffect);
    getElement = createMafiaClassPropertyGetter(import_kolmafia3.Element, import_kolmafia3.toElement);
    getFamiliar = createMafiaClassPropertyGetter(import_kolmafia3.Familiar, import_kolmafia3.toFamiliar);
    getItem = createMafiaClassPropertyGetter(import_kolmafia3.Item, import_kolmafia3.toItem);
    getLocation = createMafiaClassPropertyGetter(import_kolmafia3.Location, import_kolmafia3.toLocation);
    getMonster = createMafiaClassPropertyGetter(import_kolmafia3.Monster, import_kolmafia3.toMonster);
    getPhylum = createMafiaClassPropertyGetter(import_kolmafia3.Phylum, import_kolmafia3.toPhylum);
    getServant = createMafiaClassPropertyGetter(import_kolmafia3.Servant, import_kolmafia3.toServant);
    getSkill = createMafiaClassPropertyGetter(import_kolmafia3.Skill, import_kolmafia3.toSkill);
    getSlot = createMafiaClassPropertyGetter(import_kolmafia3.Slot, import_kolmafia3.toSlot);
    getStat = createMafiaClassPropertyGetter(import_kolmafia3.Stat, import_kolmafia3.toStat);
    getThrall = createMafiaClassPropertyGetter(import_kolmafia3.Thrall, import_kolmafia3.toThrall);
    PropertiesManager = /* @__PURE__ */ function() {
      function PropertiesManager2() {
        _classCallCheck3(this, PropertiesManager2);
        _defineProperty3(this, "properties", {});
      }
      _createClass3(PropertiesManager2, [{
        key: "storedValues",
        get: function get4() {
          return this.properties;
        }
        /**
         * Sets a collection of properties to the given values, storing the old values.
         *
         * @param propertiesToSet A Properties object, keyed by property name.
         */
      }, {
        key: "set",
        value: function set3(propertiesToSet) {
          for (var _i2 = 0, _Object$entries2 = Object.entries(propertiesToSet); _i2 < _Object$entries2.length; _i2++) {
            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2), propertyName = _Object$entries2$_i[0], propertyValue = _Object$entries2$_i[1];
            if (this.properties[propertyName] === void 0) {
              this.properties[propertyName] = get(propertyName);
            }
            _set(propertyName, propertyValue);
          }
        }
        /**
         * Sets a collection of choice adventure properties to the given values, storing the old values.
         *
         * @param choicesToSet An object keyed by choice adventure number.
         */
      }, {
        key: "setChoices",
        value: function setChoices(choicesToSet) {
          this.set(Object.fromEntries(Object.entries(choicesToSet).map(function(_ref5) {
            var _ref6 = _slicedToArray(_ref5, 2), choiceNumber = _ref6[0], choiceValue = _ref6[1];
            return ["choiceAdventure".concat(choiceNumber), choiceValue];
          })));
        }
        /**
         * Sets a single choice adventure property to the given value, storing the old value.
         *
         * @param choiceToSet The number of the choice adventure to set the property for.
         * @param value The value to assign to that choice adventure.
         */
      }, {
        key: "setChoice",
        value: function setChoice2(choiceToSet, value) {
          this.setChoices(_defineProperty3({}, choiceToSet, value));
        }
        /**
         * Resets the given properties to their original stored value. Does not delete entries from the manager.
         *
         * @param properties Collection of properties to reset.
         */
      }, {
        key: "reset",
        value: function reset() {
          for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
            properties[_key] = arguments[_key];
          }
          for (var _i3 = 0, _properties = properties; _i3 < _properties.length; _i3++) {
            var property = _properties[_i3];
            var value = this.properties[property];
            if (value) {
              _set(property, value);
            }
          }
        }
        /**
         * Iterates over all stored values, setting each property back to its original stored value. Does not delete entries from the manager.
         */
      }, {
        key: "resetAll",
        value: function resetAll() {
          setProperties(this.properties);
        }
        /**
         * Stops storing the original values of inputted properties.
         *
         * @param properties Properties for the manager to forget.
         */
      }, {
        key: "clear",
        value: function clear() {
          for (var _len2 = arguments.length, properties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            properties[_key2] = arguments[_key2];
          }
          for (var _i4 = 0, _properties2 = properties; _i4 < _properties2.length; _i4++) {
            var property = _properties2[_i4];
            if (this.properties[property]) {
              delete this.properties[property];
            }
          }
        }
        /**
         * Clears all properties.
         */
      }, {
        key: "clearAll",
        value: function clearAll() {
          this.properties = {};
        }
        /**
         * Increases a numeric property to the given value if necessary.
         *
         * @param property The numeric property we want to potentially raise.
         * @param value The minimum value we want that property to have.
         * @returns Whether we needed to change the property.
         */
      }, {
        key: "setMinimumValue",
        value: function setMinimumValue(property, value) {
          if (get(property, 0) < value) {
            this.set(_defineProperty3({}, property, value));
            return true;
          }
          return false;
        }
        /**
         * Decrease a numeric property to the given value if necessary.
         *
         * @param property The numeric property we want to potentially lower.
         * @param value The maximum value we want that property to have.
         * @returns Whether we needed to change the property.
         */
      }, {
        key: "setMaximumValue",
        value: function setMaximumValue(property, value) {
          if (get(property, 0) > value) {
            this.set(_defineProperty3({}, property, value));
            return true;
          }
          return false;
        }
        /**
         * Creates a new PropertiesManager with identical stored values to this one.
         *
         * @returns A new PropertiesManager, with identical stored values to this one.
         */
      }, {
        key: "clone",
        value: function clone() {
          var newGuy = new PropertiesManager2();
          newGuy.properties = this.storedValues;
          return newGuy;
        }
        /**
         * Clamps a numeric property, modulating it up or down to fit within a specified range
         *
         * @param property The numeric property to clamp
         * @param min The lower bound for what we want the property to be allowed to be.
         * @param max The upper bound for what we want the property to be allowed to be.
         * @returns Whether we ended up changing the property or not.
         */
      }, {
        key: "clamp",
        value: function clamp2(property, min, max) {
          if (max < min)
            return false;
          var start = get(property);
          this.setMinimumValue(property, min);
          this.setMaximumValue(property, max);
          return start !== get(property);
        }
        /**
         * Determines whether this PropertiesManager has identical stored values to another.
         *
         * @param other The PropertiesManager to compare to this one.
         * @returns Whether their StoredValues are identical.
         */
      }, {
        key: "equals",
        value: function equals(other) {
          var thisProps = Object.entries(this.storedValues);
          var otherProps = new Map(Object.entries(other.storedValues));
          if (thisProps.length !== otherProps.size)
            return false;
          for (var _i5 = 0, _thisProps = thisProps; _i5 < _thisProps.length; _i5++) {
            var _thisProps$_i = _slicedToArray(_thisProps[_i5], 2), propertyName = _thisProps$_i[0], propertyValue = _thisProps$_i[1];
            if (otherProps.get(propertyName) === propertyValue)
              return false;
          }
          return true;
        }
        /**
         * Merges a PropertiesManager onto this one, letting the input win in the event that both PropertiesManagers have a value stored.
         *
         * @param other The PropertiesManager to be merged onto this one.
         * @returns A new PropertiesManager with stored values from both its parents.
         */
      }, {
        key: "merge",
        value: function merge(other) {
          var newGuy = new PropertiesManager2();
          newGuy.properties = _objectSpread2(_objectSpread2({}, this.properties), other.properties);
          return newGuy;
        }
        /**
         * Merges an arbitrary collection of PropertiesManagers, letting the rightmost PropertiesManager win in the event of verlap.
         *
         * @param mergees The PropertiesManagers to merge together.
         * @returns A PropertiesManager that is just an amalgam of all the constituents.
         */
      }], [{
        key: "merge",
        value: function merge() {
          for (var _len3 = arguments.length, mergees = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            mergees[_key3] = arguments[_key3];
          }
          if (mergees.length === 0)
            return new PropertiesManager2();
          return mergees.reduce(function(a, b) {
            return a.merge(b);
          });
        }
      }]);
      return PropertiesManager2;
    }();
  }
});

// ../../node_modules/libram/dist/utils.js
function _createForOfIteratorHelper2(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray3(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit2(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray3(arr);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function notNull(value) {
  return value !== null;
}
function parseNumber(n) {
  return Number.parseInt(n.replace(/,/g, ""));
}
function clamp(n, min, max) {
  return Math.max(min, Math.min(max, n));
}
function chunk(array, chunkSize) {
  var result = [];
  for (var i = 0; i < array.length; i += chunkSize) {
    result.push(array.slice(i, i + chunkSize));
  }
  return result;
}
function arrayToCountedMap(array) {
  if (!Array.isArray(array))
    return array;
  var map = /* @__PURE__ */ new Map();
  array.forEach(function(item10) {
    map.set(item10, (map.get(item10) || 0) + 1);
  });
  return map;
}
function countedMapToArray(map) {
  var _ref;
  return (_ref = []).concat.apply(_ref, _toConsumableArray(_toConsumableArray(map).map(function(_ref2) {
    var _ref3 = _slicedToArray2(_ref2, 2), item10 = _ref3[0], quantity = _ref3[1];
    return Array(quantity).fill(item10);
  })));
}
function countedMapToString(map) {
  return _toConsumableArray(map).map(function(_ref4) {
    var _ref5 = _slicedToArray2(_ref4, 2), item10 = _ref5[0], quantity = _ref5[1];
    return "".concat(quantity, " x ").concat(item10);
  }).join(", ");
}
function sum(addends, x) {
  return addends.reduce(function(subtotal, element) {
    return subtotal + (typeof x === "function" ? x(element) : element[x]);
  }, 0);
}
function sumNumbers(addends) {
  return sum(addends, function(x) {
    return x;
  });
}
function arrayContains(item10, array) {
  return array.includes(item10);
}
function setEqual(a, b) {
  var sortedA = _toConsumableArray(a).sort();
  var sortedB = _toConsumableArray(b).sort();
  return a.length === b.length && sortedA.every(function(item10, index) {
    return item10 === sortedB[index];
  });
}
function invertMap(map) {
  var returnValue = /* @__PURE__ */ new Map();
  var _iterator = _createForOfIteratorHelper2(map), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray2(_step.value, 2), key = _step$value[0], value = _step$value[1];
      returnValue.set(value, key);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return returnValue;
}
function splitByCommasWithEscapes(str) {
  var returnValue = [];
  var ignoreNext = false;
  var currentString = "";
  var _iterator2 = _createForOfIteratorHelper2(str.split("")), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var char = _step2.value;
      if (char === "\\") {
        ignoreNext = true;
      } else {
        if (char == "," && !ignoreNext) {
          returnValue.push(currentString.trim());
          currentString = "";
        } else {
          currentString += char;
        }
        ignoreNext = false;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  returnValue.push(currentString.trim());
  return returnValue;
}
function maxBy(array, optimizer) {
  var reverse = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!array.length)
    throw new Error("Cannot call maxBy on an empty array!");
  if (typeof optimizer === "function") {
    return _toConsumableArray(array).reduce(function(_ref6, other) {
      var value = _ref6.value, item10 = _ref6.item;
      var otherValue = optimizer(other);
      return value >= otherValue !== reverse ? {
        value: value,
        item: item10
      } : {
        value: otherValue,
        item: other
      };
    }, {
      item: array[0],
      value: optimizer(array[0])
    }).item;
  } else {
    return array.reduce(function(a, b) {
      return a[optimizer] >= b[optimizer] !== reverse ? a : b;
    });
  }
}
function arrayEquals(left, right) {
  if (left.length !== right.length)
    return false;
  return left.every(function(element, index) {
    return element === right[index];
  });
}
function undelay(delayedObject) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  return typeof delayedObject === "function" ? delayedObject.apply(void 0, args) : delayedObject;
}
function makeByXFunction(source) {
  return function(options) {
    var _options$val;
    var val = undelay(source);
    if ("default" in options)
      return (_options$val = options[val]) !== null && _options$val !== void 0 ? _options$val : options.default;
    return options[val];
  };
}
function flat(arr) {
  var depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
  var flatArray = [];
  var _iterator3 = _createForOfIteratorHelper2(arr), _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
      var item10 = _step3.value;
      if (Array.isArray(item10) && depth > 0) {
        flatArray = flatArray.concat(flat(item10, depth - 1));
      } else {
        flatArray.push(item10);
      }
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  return flatArray;
}
function random(array) {
  return array[Math.floor(Math.random() * array.length)];
}
var tc;
var init_utils = __esm({
  "../../node_modules/libram/dist/utils.js": function() {
    tc = function(word) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    };
  }
});

// ../../node_modules/libram/dist/template-string.js
var import_kolmafia4, concatTemplateString, handleTypeGetError, createSingleConstant, createPluralConstant, $bounty, $bounties, $class, $classes, $coinmaster, $coinmasters, $effect, $effects, $element, $elements, $familiar, $familiars, $item, $items, $location, $locations, $modifier, $modifiers, $monster, $monsters, $phylum, $phyla, $servant, $servants, $skill, $skills, $slot, $slots, $stat, $stats, $thrall, $thralls, $path, $paths;
var init_template_string = __esm({
  "../../node_modules/libram/dist/template-string.js": function() {
    import_kolmafia4 = require("kolmafia");
    init_utils();
    concatTemplateString = function concatTemplateString2(literals) {
      for (var _len = arguments.length, placeholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        placeholders[_key - 1] = arguments[_key];
      }
      return literals.raw.reduce(function(acc, literal, i) {
        var _placeholders$i;
        return acc + literal + ((_placeholders$i = placeholders[i]) !== null && _placeholders$i !== void 0 ? _placeholders$i : "");
      }, "");
    };
    handleTypeGetError = function(Type, error2) {
      var message = "".concat(error2);
      var match = message.match(RegExp("Bad ".concat(Type.name.toLowerCase(), " value: .*")));
      if (match) {
        (0, import_kolmafia4.print)("".concat(match[0], "; if you're certain that this ").concat(Type.name, " exists and is spelled correctly, please update KoLMafia"), "red");
      } else {
        (0, import_kolmafia4.print)(message);
      }
    };
    createSingleConstant = function(Type) {
      var tagFunction = function tagFunction2(literals) {
        for (var _len2 = arguments.length, placeholders = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          placeholders[_key2 - 1] = arguments[_key2];
        }
        var input = concatTemplateString.apply(void 0, [literals].concat(placeholders));
        try {
          return Type.get(input);
        } catch (error2) {
          handleTypeGetError(Type, error2);
        }
        (0, import_kolmafia4.abort)();
      };
      tagFunction.none = Type.none;
      return tagFunction;
    };
    createPluralConstant = function(Type) {
      var tagFunction = function tagFunction2(literals) {
        for (var _len3 = arguments.length, placeholders = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          placeholders[_key3 - 1] = arguments[_key3];
        }
        var input = concatTemplateString.apply(void 0, [literals].concat(placeholders));
        if (input === "") {
          return Type.all();
        }
        try {
          return Type.get(splitByCommasWithEscapes(input));
        } catch (error2) {
          handleTypeGetError(Type, error2);
        }
        (0, import_kolmafia4.abort)();
      };
      tagFunction.all = function() {
        return Type.all();
      };
      return tagFunction;
    };
    $bounty = createSingleConstant(import_kolmafia4.Bounty);
    $bounties = createPluralConstant(import_kolmafia4.Bounty);
    $class = createSingleConstant(import_kolmafia4.Class);
    $classes = createPluralConstant(import_kolmafia4.Class);
    $coinmaster = createSingleConstant(import_kolmafia4.Coinmaster);
    $coinmasters = createPluralConstant(import_kolmafia4.Coinmaster);
    $effect = createSingleConstant(import_kolmafia4.Effect);
    $effects = createPluralConstant(import_kolmafia4.Effect);
    $element = createSingleConstant(import_kolmafia4.Element);
    $elements = createPluralConstant(import_kolmafia4.Element);
    $familiar = createSingleConstant(import_kolmafia4.Familiar);
    $familiars = createPluralConstant(import_kolmafia4.Familiar);
    $item = createSingleConstant(import_kolmafia4.Item);
    $items = createPluralConstant(import_kolmafia4.Item);
    $location = createSingleConstant(import_kolmafia4.Location);
    $locations = createPluralConstant(import_kolmafia4.Location);
    $modifier = createSingleConstant(import_kolmafia4.Modifier);
    $modifiers = createPluralConstant(import_kolmafia4.Modifier);
    $monster = createSingleConstant(import_kolmafia4.Monster);
    $monsters = createPluralConstant(import_kolmafia4.Monster);
    $phylum = createSingleConstant(import_kolmafia4.Phylum);
    $phyla = createPluralConstant(import_kolmafia4.Phylum);
    $servant = createSingleConstant(import_kolmafia4.Servant);
    $servants = createPluralConstant(import_kolmafia4.Servant);
    $skill = createSingleConstant(import_kolmafia4.Skill);
    $skills = createPluralConstant(import_kolmafia4.Skill);
    $slot = createSingleConstant(import_kolmafia4.Slot);
    $slots = createPluralConstant(import_kolmafia4.Slot);
    $stat = createSingleConstant(import_kolmafia4.Stat);
    $stats = createPluralConstant(import_kolmafia4.Stat);
    $thrall = createSingleConstant(import_kolmafia4.Thrall);
    $thralls = createPluralConstant(import_kolmafia4.Thrall);
    $path = createSingleConstant(import_kolmafia4.Path);
    $paths = createPluralConstant(import_kolmafia4.Path);
  }
});

// ../../node_modules/libram/dist/lib.js
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey4(descriptor.key), descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey4(arg) {
  var key = _toPrimitive4(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive4(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self2);
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _wrapNativeSuper(Class6) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper5(Class7) {
    if (Class7 === null || !_isNativeFunction(Class7))
      return Class7;
    if (typeof Class7 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class7))
        return _cache.get(Class7);
      _cache.set(Class7, Wrapper);
    }
    function Wrapper() {
      return _construct(Class7, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class7.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf(Wrapper, Class7);
  };
  return _wrapNativeSuper(Class6);
}
function _construct(Parent, args, Class6) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct5(Parent2, args2, Class7) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class7)
        _setPrototypeOf(instance, Class7.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _createForOfIteratorHelper3(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray4(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray3(arr, i) {
  return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray4(arr, i) || _nonIterableRest3();
}
function _nonIterableRest3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray4(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray4(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray4(o, minLen);
}
function _arrayLikeToArray4(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit3(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles3(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function getSongLimit() {
  return 3 + ((0, import_kolmafia5.booleanModifier)("Four Songs") ? 1 : 0) + (0, import_kolmafia5.numericModifier)("Additional Song");
}
function isSong(skillOrEffect) {
  if (skillOrEffect instanceof import_kolmafia5.Effect && skillOrEffect.attributes.includes("song")) {
    return true;
  } else {
    var skill = skillOrEffect instanceof import_kolmafia5.Effect ? (0, import_kolmafia5.toSkill)(skillOrEffect) : skillOrEffect;
    return skill.class === $class(_templateObject || (_templateObject = _taggedTemplateLiteral(["Accordion Thief"]))) && skill.buff;
  }
}
function getActiveEffects() {
  return Object.keys((0, import_kolmafia5.myEffects)()).map(function(e) {
    return import_kolmafia5.Effect.get(e);
  });
}
function getActiveSongs() {
  return getActiveEffects().filter(isSong);
}
function getSongCount() {
  return getActiveSongs().length;
}
function canRememberSong() {
  var quantity = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
  return getSongLimit() - getSongCount() >= quantity;
}
function getMonsterLocations(monster) {
  return import_kolmafia5.Location.all().filter(function(location) {
    return monster.name in (0, import_kolmafia5.appearanceRates)(location);
  });
}
function getRemainingLiver() {
  return (0, import_kolmafia5.inebrietyLimit)() - (0, import_kolmafia5.myInebriety)();
}
function getRemainingStomach() {
  return (0, import_kolmafia5.fullnessLimit)() - (0, import_kolmafia5.myFullness)();
}
function getRemainingSpleen() {
  return (0, import_kolmafia5.spleenLimit)() - (0, import_kolmafia5.mySpleenUse)();
}
function have(thing) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if (thing instanceof import_kolmafia5.Effect) {
    return (0, import_kolmafia5.haveEffect)(thing) >= quantity;
  }
  if (thing instanceof import_kolmafia5.Familiar) {
    return (0, import_kolmafia5.haveFamiliar)(thing);
  }
  if (thing instanceof import_kolmafia5.Item) {
    return (0, import_kolmafia5.availableAmount)(thing) >= quantity;
  }
  if (thing instanceof import_kolmafia5.Servant) {
    return (0, import_kolmafia5.haveServant)(thing);
  }
  if (thing instanceof import_kolmafia5.Skill) {
    return (0, import_kolmafia5.haveSkill)(thing);
  }
  if (thing instanceof import_kolmafia5.Thrall) {
    var thrall = (0, import_kolmafia5.myThrall)();
    return thrall.id === thing.id && thrall.level >= quantity;
  }
  return false;
}
function haveInCampground(item10) {
  return Object.keys((0, import_kolmafia5.getCampground)()).map(function(i) {
    return import_kolmafia5.Item.get(i);
  }).includes(item10);
}
function haveCounter(counterName) {
  var minTurns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var maxTurns = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 500;
  return (0, import_kolmafia5.getCounters)(counterName, minTurns, maxTurns) === counterName;
}
function haveWandererCounter(wanderer2) {
  if (deterministicWanderers.includes(wanderer2)) {
    return haveCounter(wanderer2);
  }
  var begin = wanderer2 + " window begin";
  var end = wanderer2 + " window end";
  return haveCounter(begin) || haveCounter(end);
}
function isVoteWandererNow() {
  return (0, import_kolmafia5.totalTurnsPlayed)() % 11 === 1 && get("lastVoteMonsterTurn") < (0, import_kolmafia5.totalTurnsPlayed)();
}
function isWandererNow(wanderer2) {
  if (deterministicWanderers.includes(wanderer2)) {
    return haveCounter(wanderer2, 0, 0);
  }
  if (wanderer2 === Wanderer.Kramco) {
    return true;
  }
  if (wanderer2 === Wanderer.Vote) {
    return isVoteWandererNow();
  }
  if (wanderer2 === Wanderer.Familiar) {
    return get("_hipsterAdv") < 7;
  }
  var begin = wanderer2 + " window begin";
  var end = wanderer2 + " window end";
  return !haveCounter(begin, 1) && haveCounter(end);
}
function getKramcoWandererChance() {
  var fights = get("_sausageFights");
  var lastFight = get("_lastSausageMonsterTurn");
  var totalTurns = (0, import_kolmafia5.totalTurnsPlayed)();
  if (fights < 1) {
    return lastFight === totalTurns && (0, import_kolmafia5.myTurncount)() < 1 ? 0.5 : 1;
  }
  var turnsSinceLastFight = totalTurns - lastFight;
  return Math.min(1, (turnsSinceLastFight + 1) / (5 + fights * 3 + Math.pow(Math.max(0, fights - 5), 3)));
}
function getFamiliarWandererChance() {
  var totalFights = get("_hipsterAdv");
  var probability = [0.5, 0.4, 0.3, 0.2];
  if (totalFights < 4) {
    return probability[totalFights];
  }
  return totalFights > 7 ? 0 : 0.1;
}
function getWandererChance(wanderer2) {
  if (deterministicWanderers.includes(wanderer2)) {
    return haveCounter(wanderer2, 0, 0) ? 1 : 0;
  }
  if (wanderer2 === Wanderer.Kramco) {
    getKramcoWandererChance();
  }
  if (wanderer2 === Wanderer.Vote) {
    return isVoteWandererNow() ? 1 : 0;
  }
  if (wanderer2 === Wanderer.Familiar) {
    getFamiliarWandererChance();
  }
  var begin = wanderer2 + " window begin";
  var end = wanderer2 + " window end";
  if (haveCounter(begin, 1, 100)) {
    return 0;
  }
  var counters = get("relayCounters");
  var re = new RegExp("(\\d+):" + end);
  var matches = counters.match(re);
  if (matches && matches.length === 2) {
    var window2 = Number.parseInt(matches[1]) - (0, import_kolmafia5.myTurncount)();
    return 1 / window2;
  }
  return 0;
}
function isCurrentFamiliar(familiar7) {
  return (0, import_kolmafia5.myFamiliar)() === familiar7;
}
function getFoldGroup(item10) {
  return Object.entries((0, import_kolmafia5.getRelated)(item10, "fold")).sort(function(_ref, _ref2) {
    var _ref3 = _slicedToArray3(_ref, 2), a = _ref3[1];
    var _ref4 = _slicedToArray3(_ref2, 2), b = _ref4[1];
    return a - b;
  }).map(function(_ref5) {
    var _ref6 = _slicedToArray3(_ref5, 1), i = _ref6[0];
    return import_kolmafia5.Item.get(i);
  });
}
function getZapGroup(item10) {
  return Object.keys((0, import_kolmafia5.getRelated)(item10, "zap")).map(function(i) {
    return import_kolmafia5.Item.get(i);
  });
}
function getBanishedMonsters() {
  var banishes = chunk(get("banishedMonsters").split(":"), 3);
  var result = /* @__PURE__ */ new Map();
  var _iterator = _createForOfIteratorHelper3(banishes), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray3(_step.value, 2), foe = _step$value[0], banisher = _step$value[1];
      if (foe === void 0 || banisher === void 0)
        break;
      var banisherItem = (0, import_kolmafia5.toItem)(banisher);
      if (banisher.toLowerCase() === "saber force") {
        result.set($skill(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Use the Force"]))), import_kolmafia5.Monster.get(foe));
      } else if (banisher.toLowerCase() === "nanorhino") {
        result.set($skill(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Unleash Nanites"]))), import_kolmafia5.Monster.get(foe));
      } else if ([import_kolmafia5.Item.none, import_kolmafia5.Item.get("training scroll:  Snokebomb"), import_kolmafia5.Item.get("tomayohawk-style reflex hammer"), null].includes(banisherItem)) {
        if (import_kolmafia5.Skill.get(banisher) === $skill.none) {
          break;
        } else {
          result.set(import_kolmafia5.Skill.get(banisher), import_kolmafia5.Monster.get(foe));
        }
      } else {
        result.set(banisherItem, import_kolmafia5.Monster.get(foe));
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return result;
}
function canUse(item10) {
  var path3 = (0, import_kolmafia5.myPath)();
  if (path3 !== import_kolmafia5.Path.get("Nuclear Autumn")) {
    if ($items(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Shrieking Weasel holo-record, Power-Guy 2000 holo-record, Lucky Strikes holo-record, EMD holo-record, Superdrifter holo-record, The Pigs holo-record, Drunk Uncles holo-record"]))).includes(item10)) {
      return false;
    }
  }
  if (path3 === import_kolmafia5.Path.get("G-Lover")) {
    if (!item10.name.toLowerCase().includes("g"))
      return false;
  }
  if (path3 === import_kolmafia5.Path.get("Bees Hate You")) {
    if (item10.name.toLowerCase().includes("b"))
      return false;
  }
  return true;
}
function noneToNull(thing) {
  if (thing instanceof import_kolmafia5.Effect) {
    return thing === import_kolmafia5.Effect.none ? null : thing;
  }
  if (thing instanceof import_kolmafia5.Familiar) {
    return thing === import_kolmafia5.Familiar.none ? null : thing;
  }
  if (thing instanceof import_kolmafia5.Item) {
    return thing === import_kolmafia5.Item.none ? null : thing;
  }
  return thing;
}
function getAverage(range) {
  var _range$match;
  if (range.indexOf("-") < 0)
    return Number(range);
  var _ref7 = (_range$match = range.match(/(-?[0-9]+)-(-?[0-9]+)/)) !== null && _range$match !== void 0 ? _range$match : ["0", "0", "0"], _ref8 = _slicedToArray3(_ref7, 3), lower = _ref8[1], upper = _ref8[2];
  return (Number(lower) + Number(upper)) / 2;
}
function getAverageAdventures(item10) {
  return getAverage(item10.adventures);
}
function uneffect(effect2) {
  return (0, import_kolmafia5.cliExecute)("uneffect ".concat(effect2.name));
}
function getPlayerFromIdOrName(idOrName) {
  var id = typeof idOrName === "number" ? idOrName : parseInt((0, import_kolmafia5.getPlayerId)(idOrName));
  return {
    name: (0, import_kolmafia5.getPlayerName)(id),
    id: id
  };
}
function questStep(questName) {
  var stringStep = get(questName);
  if (stringStep === "unstarted")
    return -1;
  else if (stringStep === "started")
    return 0;
  else if (stringStep === "finished" || stringStep === "")
    return 999;
  else {
    if (stringStep.substring(0, 4) !== "step") {
      throw new Error("Quest state parsing error.");
    }
    return parseInt(stringStep.substring(4), 10);
  }
}
function ensureEffect(ef) {
  var turns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if ((0, import_kolmafia5.haveEffect)(ef) < turns) {
    if (ef.default === null) {
      throw new EnsureError(ef, "No default action");
    }
    if (!(0, import_kolmafia5.cliExecute)(ef.default) || (0, import_kolmafia5.haveEffect)(ef) === 0) {
      throw new EnsureError(ef);
    }
  }
}
function getSaleValue() {
  for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
    items[_key] = arguments[_key];
  }
  return items.map(function(item10) {
    if (valueMap.has(item10))
      return valueMap.get(item10) || 0;
    if (item10.discardable) {
      valueMap.set(item10, (0, import_kolmafia5.mallPrice)(item10) > Math.max(2 * (0, import_kolmafia5.autosellPrice)(item10), 100) ? MALL_VALUE_MODIFIER * (0, import_kolmafia5.mallPrice)(item10) : (0, import_kolmafia5.autosellPrice)(item10));
    } else {
      valueMap.set(item10, (0, import_kolmafia5.mallPrice)(item10) > 100 ? MALL_VALUE_MODIFIER * (0, import_kolmafia5.mallPrice)(item10) : 0);
    }
    return valueMap.get(item10) || 0;
  }).reduce(function(s, price2) {
    return s + price2;
  }, 0) / items.length;
}
function findLeprechaunMultiplier(familiar7) {
  if (familiar7 === $familiar(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Mutant Cactus Bud"])))) {
    return (0, import_kolmafia5.numericModifier)(familiar7, "Leprechaun Effectiveness", 1, $item.none);
  }
  if (familiar7 === $familiar(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Reanimated Reanimator"]))))
    return 0;
  var meatBonus = (0, import_kolmafia5.numericModifier)(familiar7, "Meat Drop", 1, $item.none);
  if (meatBonus === 0)
    return 0;
  return Math.pow(Math.sqrt(meatBonus / 2 + 55 / 4 + 3) - Math.sqrt(55) / 2, 2);
}
function findFairyMultiplier(familiar7) {
  if (familiar7 === $familiar(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["Mutant Fire Ant"])))) {
    return (0, import_kolmafia5.numericModifier)(familiar7, "Fairy Effectiveness", 1, $item.none);
  }
  if (familiar7 === $familiar(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["Reanimated Reanimator"]))))
    return 0;
  var itemBonus = (0, import_kolmafia5.numericModifier)(familiar7, "Item Drop", 1, $item.none);
  if (itemBonus === 0)
    return 0;
  return Math.pow(Math.sqrt(itemBonus + 55 / 4 + 3) - Math.sqrt(55) / 2, 2);
}
function getTodaysHolidayWanderers() {
  return flat((0, import_kolmafia5.holiday)().split("/").map(function(holiday5) {
    var _holidayWanderers$get;
    return (_holidayWanderers$get = holidayWanderers.get(holiday5)) !== null && _holidayWanderers$get !== void 0 ? _holidayWanderers$get : [];
  }));
}
function canVisitUrl() {
  if ((0, import_kolmafia5.currentRound)()) {
    logger_default.debug("Current round is ".concat((0, import_kolmafia5.currentRound)(), "; you're in combat."));
    return false;
  }
  if ((0, import_kolmafia5.inMultiFight)()) {
    logger_default.debug("You're in a multifight.");
    return false;
  }
  if ((0, import_kolmafia5.choiceFollowsFight)()) {
    logger_default.debug("A choice follows this fight.");
    return false;
  }
  if ((0, import_kolmafia5.handlingChoice)()) {
    logger_default.debug("You're currently in a choice adventure");
    return false;
  }
  return true;
}
function damageTakenByElement(baseDamage, element) {
  if (baseDamage < 0)
    return 1;
  var res = (0, import_kolmafia5.elementalResistance)(element);
  return Math.max(1, Math.ceil(baseDamage - baseDamage * res / 100));
}
function telescope() {
  return {
    statContest: telescopeStats.get(get("telescope1")),
    elementContest: telescopeElements.get(get("telescope2")),
    hedge1: hedgeTrap1.get(get("telescope3")),
    hedge2: hedgeTrap2.get(get("telescope4")),
    hedge3: hedgeTrap3.get(get("telescope5"))
  };
}
function examine(thing) {
  var url = thing instanceof import_kolmafia5.Item ? "desc_item.php?whichitem=".concat(thing.descid) : thing instanceof import_kolmafia5.Familiar ? "desc_familiar.php?which=".concat(thing.id) : thing instanceof import_kolmafia5.Effect ? "desc_effect.php?whicheffect=".concat(thing.descid) : "desc_skill.php?whichskill=".concat(thing.id);
  return (0, import_kolmafia5.visitUrl)(url);
}
function directlyUse(item10) {
  return (0, import_kolmafia5.visitUrl)("inv_use.php?which=3&whichitem=".concat(item10.id, "&pwd"));
}
function unequip(thing) {
  if (thing instanceof import_kolmafia5.Slot)
    return (0, import_kolmafia5.equip)(thing, $item.none);
  var failedSlots = import_kolmafia5.Slot.all().filter(function(s) {
    if ((0, import_kolmafia5.equippedItem)(s) !== thing)
      return false;
    return !unequip(thing);
  });
  if (failedSlots.length)
    logger_default.debug("Failed to unequip ".concat(thing, " from slots ").concat(failedSlots.join(", ")));
  return failedSlots.length === 0;
}
function gameDay() {
  var _todayToString$match;
  var _map = ((_todayToString$match = (0, import_kolmafia5.todayToString)().match(/(\d{4})(\d{2})(\d{2})/)) !== null && _todayToString$match !== void 0 ? _todayToString$match : []).map(Number), _map2 = _slicedToArray3(_map, 4), year = _map2[1], month = _map2[2], day = _map2[3];
  return new Date(year, month - 1, day, 0, 0, 0);
}
function freeCrafts() {
  var type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "all";
  var effectCrafts = function(effect2) {
    return Math.floor((0, import_kolmafia5.haveEffect)(effect2) / 5);
  };
  var all2 = (have($skill(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral(["Rapid Prototyping"])))) ? 5 - get("_rapidPrototypingUsed") : 0) + (have($skill(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral(["Expert Corner-Cutter"])))) ? 5 - get("_expertCornerCutterUsed") : 0) + effectCrafts($effect(_templateObject37 || (_templateObject37 = _taggedTemplateLiteral(["Inigo's Incantation of Inspiration"])))) + effectCrafts($effect(_templateObject38 || (_templateObject38 = _taggedTemplateLiteral(["Craft Tea"])))) + // eslint-disable-next-line libram/verify-constants
  effectCrafts($effect(_templateObject39 || (_templateObject39 = _taggedTemplateLiteral(["Cooking Concentrate"]))));
  var food = type === "food" ? 5 - get("_cookbookbatCrafting") : 0;
  var smith = type === "smith" ? 5 - get("_thorsPliersCrafting") : 0;
  var booze = 0;
  return all2 + food + smith + booze;
}
function realmAvailable(identifier) {
  if (identifier === "fantasy") {
    return get("_frToday") || get("frAlways");
  } else if (identifier === "pirate") {
    return get("_prToday") || get("prAlways");
  }
  return get("_".concat(identifier, "AirportToday")) || get("".concat(identifier, "AirportAlways"));
}
function realmCurrency(realm) {
  switch (realm) {
    case "sleaze":
      return $item(_templateObject40 || (_templateObject40 = _taggedTemplateLiteral(["Beach Buck"])));
    case "spooky":
      return $item(_templateObject41 || (_templateObject41 = _taggedTemplateLiteral(["Coinspiracy"])));
    case "stench":
      return $item(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral(["FunFunds\u2122"])));
    case "cold":
      return $item(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral(["Wal-Mart gift certificate"])));
    case "hot":
      return $item(_templateObject44 || (_templateObject44 = _taggedTemplateLiteral(["Volcoino"])));
    case "fantasy":
      return $item(_templateObject45 || (_templateObject45 = _taggedTemplateLiteral(["Rubee\u2122"])));
  }
}
function lgrCurrencies() {
  return realmTypes.filter(function(realm) {
    return realmAvailable(realm) && !(realm === "hot" && get("_luckyGoldRingVolcoino"));
  }).map(realmCurrency).filter(function(i) {
    return !!i;
  });
}
var import_kolmafia5, _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36, _templateObject37, _templateObject38, _templateObject39, _templateObject40, _templateObject41, _templateObject42, _templateObject43, _templateObject44, _templateObject45, Wanderer, deterministicWanderers, EnsureError, valueMap, MALL_VALUE_MODIFIER, Environment, holidayWanderers, telescopeStats, telescopeElements, hedgeTrap1, hedgeTrap2, hedgeTrap3, byStat, byClass, realmTypes;
var init_lib = __esm({
  "../../node_modules/libram/dist/lib.js": function() {
    import_kolmafia5 = require("kolmafia");
    init_logger();
    init_property();
    init_template_string();
    init_utils();
    (function(Wanderer2) {
      Wanderer2["Digitize"] = "Digitize Monster";
      Wanderer2["Enamorang"] = "Enamorang Monster";
      Wanderer2["Familiar"] = "Familiar";
      Wanderer2["Holiday"] = "Holiday Monster";
      Wanderer2["Kramco"] = "Kramco";
      Wanderer2["Nemesis"] = "Nemesis Assassin";
      Wanderer2["Portscan"] = "portscan.edu";
      Wanderer2["Romantic"] = "Romantic Monster";
      Wanderer2["Vote"] = "Vote Monster";
    })(Wanderer || (Wanderer = {}));
    deterministicWanderers = [Wanderer.Digitize, Wanderer.Portscan];
    EnsureError = /* @__PURE__ */ function(_Error) {
      _inherits(EnsureError2, _Error);
      var _super = _createSuper(EnsureError2);
      function EnsureError2(cause, reason) {
        var _this;
        _classCallCheck4(this, EnsureError2);
        _this = _super.call(this, "Failed to ensure ".concat(cause.name, "!").concat(reason ? " ".concat(reason) : ""));
        _this.name = "Ensure Error";
        return _this;
      }
      return _createClass4(EnsureError2);
    }(/* @__PURE__ */ _wrapNativeSuper(Error));
    valueMap = /* @__PURE__ */ new Map();
    MALL_VALUE_MODIFIER = 0.9;
    Environment = {
      Outdoor: "outdoor",
      Indoor: "indoor",
      Underground: "underground",
      Underwater: "underwater"
    };
    holidayWanderers = /* @__PURE__ */ new Map([["El Dia De Los Muertos Borrachos", $monsters(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["Novia Cad\xE1ver, Novio Cad\xE1ver, Padre Cad\xE1ver, Persona Inocente Cad\xE1ver"])))], ["Feast of Boris", $monsters(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["Candied Yam Golem, Malevolent Tofurkey, Possessed Can of Cranberry Sauce, Stuffing Golem"])))], ["Talk Like a Pirate Day", $monsters(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["ambulatory pirate, migratory pirate, peripatetic pirate"])))]]);
    telescopeStats = /* @__PURE__ */ new Map([["standing around flexing their muscles and using grip exercisers", $stat(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["Muscle"])))], ["sitting around playing chess and solving complicated-looking logic puzzles", $stat(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["Mysticality"])))], ["all wearing sunglasses and dancing", $stat(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["Moxie"])))]]);
    telescopeElements = /* @__PURE__ */ new Map([["people, all of whom appear to be on fire", $element(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral(["hot"])))], ["people, surrounded by a cloud of eldritch mist", $element(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral(["spooky"])))], ["greasy-looking people furtively skulking around", $element(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral(["sleaze"])))], ["people, surrounded by garbage and clouds of flies", $element(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral(["stench"])))], ["people, clustered around a group of igloos", $element(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap1 = /* @__PURE__ */ new Map([["smoldering bushes on the outskirts of a hedge maze", $element(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral(["hot"])))], ["creepy-looking black bushes on the outskirts of a hedge maze", $element(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral(["spooky"])))], ["purplish, greasy-looking hedges", $element(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral(["sleaze"])))], ["nasty-looking, dripping green bushes on the outskirts of a hedge maze", $element(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral(["stench"])))], ["frost-rimed bushes on the outskirts of a hedge maze", $element(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap2 = /* @__PURE__ */ new Map([["smoke rising from deeper within the maze", $element(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral(["hot"])))], ["a miasma of eldritch vapors rising from deeper within the maze", $element(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral(["spooky"])))], ["a greasy purple cloud hanging over the center of the maze", $element(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral(["sleaze"])))], ["a cloud of green gas hovering over the maze", $element(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral(["stench"])))], ["wintry mists rising from deeper within the maze", $element(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral(["cold"])))]]);
    hedgeTrap3 = /* @__PURE__ */ new Map([["with lava slowly oozing out of it", $element(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral(["hot"])))], ["surrounded by creepy black mist", $element(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral(["spooky"])))], ["that occasionally vomits out a greasy ball of hair", $element(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral(["sleaze"])))], ["disgorging a really surprising amount of sewage", $element(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral(["stench"])))], ["occasionally disgorging a bunch of ice cubes", $element(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral(["cold"])))]]);
    byStat = makeByXFunction(function() {
      return (0, import_kolmafia5.myPrimestat)().toString();
    });
    byClass = makeByXFunction(function() {
      return (0, import_kolmafia5.myClass)().toString();
    });
    realmTypes = ["spooky", "stench", "hot", "cold", "sleaze", "fantasy", "pirate"];
  }
});

// ../../node_modules/libram/dist/overlappingNames.js
var overlappingItemNames, overlappingSkillNames;
var init_overlappingNames = __esm({
  "../../node_modules/libram/dist/overlappingNames.js": function() {
    overlappingItemNames = ["spider web", "really sticky spider web", "dictionary", "NG", "Cloaca-Cola", "yo-yo", "top", "ball", "kite", "yo", "red potion", "blue potion", "bowling ball", "adder", "red button", "pile of sand", "mushroom", "deluxe mushroom"];
    overlappingSkillNames = ["Shoot", "Thrust-Smack", "Headbutt", "Toss", "Knife in the Dark", "Sing", "Disarm", "LIGHT", "BURN", "Extract", "Meteor Shower", "Snipe", "Cleave", "Boil", "Slice", "Rainbow"];
  }
});

// ../../node_modules/libram/dist/combat.js
function _get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get.bind();
  } else {
    _get = function _get3(target, property, receiver) {
      var base = _superPropBase(target, property);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    };
  }
  return _get.apply(this, arguments);
}
function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf2(object);
    if (object === null)
      break;
  }
  return object;
}
function _createForOfIteratorHelper4(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray5(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray5(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray5(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray5(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray5(o, minLen);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray5(arr);
}
function _arrayLikeToArray5(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _defineProperty4(obj, key, value) {
  key = _toPropertyKey5(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _defineProperties5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey5(descriptor.key), descriptor);
  }
}
function _createClass5(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties5(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties5(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey5(arg) {
  var key = _toPrimitive5(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive5(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf2(subClass, superClass);
}
function _createSuper2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct2();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf2(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf2(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn2(this, result);
  };
}
function _possibleConstructorReturn2(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized2(self2);
}
function _assertThisInitialized2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _wrapNativeSuper2(Class6) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper2 = function _wrapNativeSuper5(Class7) {
    if (Class7 === null || !_isNativeFunction2(Class7))
      return Class7;
    if (typeof Class7 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class7))
        return _cache.get(Class7);
      _cache.set(Class7, Wrapper);
    }
    function Wrapper() {
      return _construct2(Class7, arguments, _getPrototypeOf2(this).constructor);
    }
    Wrapper.prototype = Object.create(Class7.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf2(Wrapper, Class7);
  };
  return _wrapNativeSuper2(Class6);
}
function _construct2(Parent, args, Class6) {
  if (_isNativeReflectConstruct2()) {
    _construct2 = Reflect.construct.bind();
  } else {
    _construct2 = function _construct5(Parent2, args2, Class7) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class7)
        _setPrototypeOf2(instance, Class7.prototype);
      return instance;
    };
  }
  return _construct2.apply(null, arguments);
}
function _isNativeReflectConstruct2() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _isNativeFunction2(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _getPrototypeOf2(o) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf2(o);
}
function getMacroId() {
  var name = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : MACRO_NAME;
  var macroMatches = (0, import_kolmafia6.xpath)((0, import_kolmafia6.visitUrl)("account_combatmacros.php"), '//select[@name="macroid"]/option[text()="'.concat(name, '"]/@value'));
  if (macroMatches.length === 0) {
    (0, import_kolmafia6.visitUrl)("account_combatmacros.php?action=new");
    var newMacroText = (0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=0&name=".concat(name, "&macrotext=abort&action=save"));
    return parseInt((0, import_kolmafia6.xpath)(newMacroText, "//input[@name=".concat(name, "]/@value"))[0], 10);
  } else {
    return parseInt(macroMatches[0], 10);
  }
}
function itemOrNameToItem(itemOrName) {
  return typeof itemOrName === "string" ? import_kolmafia6.Item.get(itemOrName) : itemOrName;
}
function itemOrItemsBallsMacroName(itemOrItems) {
  if (Array.isArray(itemOrItems)) {
    return itemOrItems.map(itemOrItemsBallsMacroName).join(", ");
  } else {
    var item10 = itemOrNameToItem(itemOrItems);
    return !overlappingItemNames.includes(item10.name) ? item10.name : item10.id.toFixed(0);
  }
}
function itemOrItemsBallsMacroPredicate(itemOrItems) {
  if (Array.isArray(itemOrItems)) {
    return itemOrItems.map(itemOrItemsBallsMacroPredicate).join(" && ");
  } else {
    return "hascombatitem ".concat(itemOrItems);
  }
}
function skillOrNameToSkill(skillOrName) {
  if (typeof skillOrName === "string") {
    return import_kolmafia6.Skill.get(skillOrName);
  } else {
    return skillOrName;
  }
}
function skillBallsMacroName(skillOrName) {
  var skill = skillOrNameToSkill(skillOrName);
  return skill.name.match(/^[A-Za-z ]+$/) && !overlappingSkillNames.includes(skill.name) ? skill.name : skill.id;
}
function adventureMacro(loc, macro) {
  macro.save();
  (0, import_kolmafia6.setAutoAttack)(0);
  try {
    (0, import_kolmafia6.adv1)(loc, 0, "");
    while ((0, import_kolmafia6.inMultiFight)())
      (0, import_kolmafia6.runCombat)();
    if ((0, import_kolmafia6.choiceFollowsFight)())
      (0, import_kolmafia6.visitUrl)("choice.php");
  } finally {
    Macro.clearSaved();
  }
}
function adventureMacroAuto(loc, autoMacro) {
  var _nextMacro;
  var nextMacro = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
  nextMacro = (_nextMacro = nextMacro) !== null && _nextMacro !== void 0 ? _nextMacro : Macro.abort();
  autoMacro.setAutoAttack();
  nextMacro.save();
  try {
    (0, import_kolmafia6.adv1)(loc, 0, "");
    while ((0, import_kolmafia6.inMultiFight)())
      (0, import_kolmafia6.runCombat)();
    if ((0, import_kolmafia6.choiceFollowsFight)())
      (0, import_kolmafia6.visitUrl)("choice.php");
  } finally {
    Macro.clearSaved();
  }
}
var import_kolmafia6, MACRO_NAME, InvalidMacroError, Macro, StrictMacro;
var init_combat = __esm({
  "../../node_modules/libram/dist/combat.js": function() {
    import_kolmafia6 = require("kolmafia");
    init_lib();
    init_overlappingNames();
    init_property();
    MACRO_NAME = "Script Autoattack Macro";
    InvalidMacroError = /* @__PURE__ */ function(_Error) {
      _inherits2(InvalidMacroError2, _Error);
      var _super = _createSuper2(InvalidMacroError2);
      function InvalidMacroError2() {
        _classCallCheck5(this, InvalidMacroError2);
        return _super.apply(this, arguments);
      }
      return _createClass5(InvalidMacroError2);
    }(/* @__PURE__ */ _wrapNativeSuper2(Error));
    Macro = /* @__PURE__ */ function() {
      function Macro3() {
        _classCallCheck5(this, Macro3);
        _defineProperty4(this, "components", []);
        _defineProperty4(this, "name", MACRO_NAME);
      }
      _createClass5(Macro3, [{
        key: "toString",
        value: (
          /**
           * Convert macro to string.
           *
           * @returns BALLS macro
           */
          function toString() {
            return (this.components.join(";") + ";").replace(/;;+/g, ";");
          }
        )
        /**
         * Gives your macro a new name to be used when saving an autoattack.
         *
         * @param name The name to be used when saving as an autoattack.
         * @returns The macro in question
         */
      }, {
        key: "rename",
        value: function rename(name) {
          this.name = name;
          return this;
        }
        /**
         * Creates a new Macro with a name other than the default name.
         *
         * @param name The name to assign this macro.
         * @returns A new Macro with the assigned name.
         */
      }, {
        key: "save",
        value: (
          /**
           * Save a macro to a Mafia property for use in a consult script.
           */
          function save() {
            _set(Macro3.SAVED_MACRO_PROPERTY, this.toString());
          }
        )
        /**
         * Load a saved macro from the Mafia property.
         *
         * @returns Loaded macro text
         */
      }, {
        key: "step",
        value: (
          /**
           * Statefully add one or several steps to a macro.
           *
           * @param nextSteps The steps to add to the macro.
           * @returns {Macro} This object itself.
           */
          function step() {
            var _ref, _this$components;
            for (var _len = arguments.length, nextSteps = new Array(_len), _key = 0; _key < _len; _key++) {
              nextSteps[_key] = arguments[_key];
            }
            var nextStepsStrings = (_ref = []).concat.apply(_ref, _toConsumableArray2(nextSteps.map(function(x) {
              return x instanceof Macro3 ? x.components : [x];
            })));
            (_this$components = this.components).push.apply(_this$components, _toConsumableArray2(nextStepsStrings.filter(function(s) {
              return s.length > 0;
            })));
            return this;
          }
        )
        /**
         * Statefully add one or several steps to a macro.
         *
         * @param nextSteps The steps to add to the macro.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "submit",
        value: (
          /**
           * Submit the built macro to KoL. Only works inside combat.
           *
           * @returns Contents of the fight page after macro submission
           */
          function submit() {
            var final = this.toString();
            return (0, import_kolmafia6.visitUrl)("fight.php?action=macro&macrotext=".concat((0, import_kolmafia6.urlEncode)(final)), true, true);
          }
        )
        /**
         * Set this macro as a KoL native autoattack.
         */
      }, {
        key: "setAutoAttack",
        value: function setAutoAttack6() {
          var id = Macro3.cachedMacroIds.get(this.name);
          if (id === void 0) {
            id = getMacroId(this.name);
            Macro3.cachedMacroIds.set(this.name, id);
          }
          if ((0, import_kolmafia6.getAutoAttack)() === 99e6 + id && this.toString() === Macro3.cachedAutoAttacks.get(this.name)) {
            return;
          }
          (0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=".concat(id, "&name=").concat((0, import_kolmafia6.urlEncode)(this.name), "&macrotext=").concat((0, import_kolmafia6.urlEncode)(this.toString()), "&action=save"), true, true);
          (0, import_kolmafia6.visitUrl)("account.php?am=1&action=autoattack&value=".concat(99e6 + id, "&ajax=1"));
          Macro3.cachedAutoAttacks.set(this.name, this.toString());
        }
        /**
         * Renames the macro, then sets it as an autoattack.
         *
         * @param name The name to save the macro under as an autoattack.
         */
      }, {
        key: "setAutoAttackAs",
        value: function setAutoAttackAs(name) {
          this.name = name;
          this.setAutoAttack();
        }
        /**
         * Clear all cached autoattacks, and delete all stored macros server-side.
         */
      }, {
        key: "abort",
        value: (
          /**
           * Add an "abort" step to this macro.
           *
           * @returns {Macro} This object itself.
           */
          function abort6() {
            return this.step("abort");
          }
        )
        /**
         * Create a new macro with an "abort" step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "abortWithWarning",
        value: (
          /**
           * Adds an "abort" step to this macro, with a warning message to print
           *
           * @param warning The warning message to print
           * @returns  {Macro} This object itself.
           */
          function abortWithWarning(warning) {
            return this.step('abort "'.concat(warning, '"'));
          }
        )
        /**
         * Create a new macro with an "abort" step to this macro, with a warning message to print
         *
         * @param warning The warning message to print
         * @returns  {Macro} This object itself.
         */
      }, {
        key: "runaway",
        value: (
          /**
           * Add a "runaway" step to this macro.
           *
           * @returns {Macro} This object itself.
           */
          function runaway() {
            return this.step("runaway");
          }
        )
        /**
         * Create a new macro with an "runaway" step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "if_",
        value: (
          /**
           * Add an "if" statement to this macro.
           *
           * @param condition The BALLS condition for the if statement.
           * @param ifTrue Continuation if the condition is true.
           * @returns {Macro} This object itself.
           */
          function if_(condition, ifTrue) {
            return this.step("if ".concat(Macro3.makeBALLSPredicate(condition))).step(ifTrue).step("endif");
          }
        )
        /**
         * Create a new macro with an "if" statement.
         *
         * @param condition The BALLS condition for the if statement.
         * @param ifTrue Continuation if the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "ifNot",
        value: (
          /**
           * Add an "if" statement to this macro, inverting the condition.
           *
           * @param condition The BALLS condition for the if statement.
           * @param ifTrue Continuation if the condition is true.
           * @returns {Macro} This object itself.
           */
          function ifNot(condition, ifTrue) {
            return this.step("if !(".concat(Macro3.makeBALLSPredicate(condition), ")")).step(ifTrue).step("endif");
          }
        )
        /**
         * Create a new macro with an "if" statement, inverting the condition.
         *
         * @param condition The BALLS condition for the if statement.
         * @param ifTrue Continuation if the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "while_",
        value: (
          /**
           * Add a "while" statement to this macro.
           *
           * @param condition The BALLS condition for the if statement.
           * @param contents Loop to repeat while the condition is true.
           * @returns {Macro} This object itself.
           */
          function while_(condition, contents) {
            return this.step("while ".concat(condition)).step(contents).step("endwhile");
          }
        )
        /**
         * Create a new macro with a "while" statement.
         *
         * @param condition The BALLS condition for the if statement.
         * @param contents Loop to repeat while the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "externalIf",
        value: (
          /**
           * Conditionally add a step to a macro based on a condition evaluated at the time of building the macro.
           *
           * @param condition The JS condition.
           * @param ifTrue Continuation to add if the condition is true.
           * @param ifFalse Optional input to turn this into an if...else statement.
           * @returns {Macro} This object itself.
           */
          function externalIf(condition, ifTrue, ifFalse) {
            if (condition)
              return this.step(ifTrue);
            else if (ifFalse)
              return this.step(ifFalse);
            else
              return this;
          }
        )
        /**
         * Create a new macro with a condition evaluated at the time of building the macro.
         *
         * @param condition The JS condition.
         * @param ifTrue Continuation to add if the condition is true.
         * @param ifFalse Optional input to turn this into an if...else statement.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "repeat",
        value: (
          /**
           * Add a repeat step to the macro.
           *
           * @returns {Macro} This object itself.
           */
          function repeat() {
            return this.step("repeat");
          }
        )
        /**
         * Add one or more skill cast steps to the macro.
         *
         * @param skills Skills to cast.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "skill",
        value: function skill() {
          for (var _len2 = arguments.length, skills3 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            skills3[_key2] = arguments[_key2];
          }
          return this.step.apply(this, _toConsumableArray2(skills3.map(function(skill2) {
            return "skill ".concat(skillBallsMacroName(skill2));
          })));
        }
        /**
         * Create a new macro with one or more skill cast steps.
         *
         * @param skills Skills to cast.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "trySkill",
        value: (
          /**
           * Add one or more skill cast steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try casting.
           * @returns {Macro} This object itself.
           */
          function trySkill() {
            for (var _len3 = arguments.length, skills3 = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              skills3[_key3] = arguments[_key3];
            }
            return this.step.apply(this, _toConsumableArray2(skills3.map(function(skill) {
              return Macro3.if_("hasskill ".concat(skillBallsMacroName(skill)), Macro3.skill(skill));
            })));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try casting.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "trySkillRepeat",
        value: (
          /**
           * Add one or more skill-cast-and-repeat steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try repeatedly casting.
           * @returns {Macro} This object itself.
           */
          function trySkillRepeat() {
            for (var _len4 = arguments.length, skills3 = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
              skills3[_key4] = arguments[_key4];
            }
            return this.step.apply(this, _toConsumableArray2(skills3.map(function(skill) {
              return Macro3.if_("hasskill ".concat(skillBallsMacroName(skill)), Macro3.skill(skill).repeat());
            })));
          }
        )
        /**
         * Create a new macro with one or more skill-cast-and-repeat steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try repeatedly casting.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "item",
        value: (
          /**
           * Add one or more item steps to the macro.
           *
           * @param items Items to use. Pass a tuple [item1, item2] to funksling.
           * @returns {Macro} This object itself.
           */
          function item10() {
            for (var _len5 = arguments.length, items = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
              items[_key5] = arguments[_key5];
            }
            return this.step.apply(this, _toConsumableArray2(items.map(function(itemOrItems) {
              return "use ".concat(itemOrItemsBallsMacroName(itemOrItems));
            })));
          }
        )
        /**
         * Create a new macro with one or more item steps.
         *
         * @param items Items to use. Pass a tuple [item1, item2] to funksling.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "tryItem",
        value: (
          /**
           * Add one or more item steps to the macro, where each step checks to see if you have the item first.
           *
           * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
           * @returns {Macro} This object itself.
           */
          function tryItem() {
            for (var _len6 = arguments.length, items = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
              items[_key6] = arguments[_key6];
            }
            return this.step.apply(this, _toConsumableArray2(items.map(function(item10) {
              return Macro3.if_(itemOrItemsBallsMacroPredicate(item10), "use ".concat(itemOrItemsBallsMacroName(item10)));
            })));
          }
        )
        /**
         * Create a new macro with one or more item steps, where each step checks to see if you have the item first.
         *
         * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "attack",
        value: (
          /**
           * Add an attack step to the macro.
           *
           * @returns {Macro} This object itself.
           */
          function attack() {
            return this.step("attack");
          }
        )
        /**
         * Create a new macro with an attack step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "ifHolidayWanderer",
        value: (
          /**
           * Create an if_ statement based on what holiday of loathing it currently is. On non-holidays, returns the original macro, unmutated.
           *
           * @param macro The macro to place in the if_ statement
           * @returns This macro with supplied macro wapped in if statement matching holiday wanderers
           */
          function ifHolidayWanderer(macro) {
            var todaysWanderers = getTodaysHolidayWanderers();
            if (todaysWanderers.length === 0)
              return this;
            return this.if_(todaysWanderers.map(function(monster) {
              return "monsterid ".concat(monster.id);
            }).join(" || "), macro);
          }
        )
        /**
         * Create a new macro starting with an ifHolidayWanderer step.
         *
         * @param macro The macro to place inside the if_ statement
         * @returns New macro with supplied macro wrapped in if statement matching holiday wanderers
         */
      }, {
        key: "ifNotHolidayWanderer",
        value: (
          /**
           * Create an if_ statement based on what holiday of loathing it currently is. On non-holidays, returns the original macro, with the input macro appended.
           *
           * @param macro The macro to place in the if_ statement.
           * @returns This macro with supplied macro wrapped in if statement matching monsters that are not holiday wanderers
           */
          function ifNotHolidayWanderer(macro) {
            var todaysWanderers = getTodaysHolidayWanderers();
            if (todaysWanderers.length === 0)
              return this.step(macro);
            return this.if_(todaysWanderers.map(function(monster) {
              return "!monsterid ".concat(monster.id);
            }).join(" && "), macro);
          }
        )
        /**
         * Create a new macro starting with an ifNotHolidayWanderer step.
         *
         * @param macro The macro to place inside the if_ statement
         * @returns New macro with supplied macro wrapped in if statement matching monsters that are not holiday wanderers
         */
      }], [{
        key: "rename",
        value: function rename(name) {
          return new this().rename(name);
        }
      }, {
        key: "load",
        value: function load() {
          var _this;
          return (_this = new this()).step.apply(_this, _toConsumableArray2(get(Macro3.SAVED_MACRO_PROPERTY).split(";")));
        }
        /**
         * Clear the saved macro in the Mafia property.
         */
      }, {
        key: "clearSaved",
        value: function clearSaved() {
          (0, import_kolmafia6.removeProperty)(Macro3.SAVED_MACRO_PROPERTY);
        }
      }, {
        key: "step",
        value: function step() {
          var _this2;
          return (_this2 = new this()).step.apply(_this2, arguments);
        }
      }, {
        key: "clearAutoAttackMacros",
        value: function clearAutoAttackMacros() {
          var _iterator = _createForOfIteratorHelper4(Macro3.cachedAutoAttacks.keys()), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _Macro$cachedMacroIds;
              var name = _step.value;
              var id = (_Macro$cachedMacroIds = Macro3.cachedMacroIds.get(name)) !== null && _Macro$cachedMacroIds !== void 0 ? _Macro$cachedMacroIds : getMacroId(name);
              (0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=".concat(id, "&action=edit&what=Delete&confirm=1"));
              Macro3.cachedAutoAttacks.delete(name);
              Macro3.cachedMacroIds.delete(name);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }
      }, {
        key: "abort",
        value: function abort6() {
          return new this().abort();
        }
      }, {
        key: "abortWithWarning",
        value: function abortWithWarning(warning) {
          return new this().abortWithWarning(warning);
        }
      }, {
        key: "runaway",
        value: function runaway() {
          return new this().runaway();
        }
      }, {
        key: "makeBALLSPredicate",
        value: function makeBALLSPredicate(condition) {
          var ballsCondition = "";
          if (condition instanceof import_kolmafia6.Monster) {
            ballsCondition = "monsterid ".concat(condition.id);
          } else if (condition instanceof Array) {
            ballsCondition = condition.map(function(mon) {
              return "monsterid ".concat(mon.id);
            }).join(" || ");
            ballsCondition = "(".concat(ballsCondition, ")");
          } else if (condition instanceof import_kolmafia6.Effect) {
            ballsCondition = "haseffect ".concat(condition.id);
          } else if (condition instanceof import_kolmafia6.Skill) {
            ballsCondition = "hasskill ".concat(skillBallsMacroName(condition));
          } else if (condition instanceof import_kolmafia6.Item) {
            if (!condition.combat) {
              throw new InvalidMacroError("Item ".concat(condition, " cannot be made a valid BALLS predicate (it is not combat-usable)"));
            }
            ballsCondition = "hascombatitem ".concat(itemOrItemsBallsMacroName(condition));
          } else if (condition instanceof import_kolmafia6.Location) {
            var snarfblat = condition.id;
            if (snarfblat < 1) {
              throw new InvalidMacroError("Location ".concat(condition, " cannot be made a valid BALLS predicate (it has no location id)"));
            }
            ballsCondition = "snarfblat ".concat(snarfblat);
          } else if (condition instanceof import_kolmafia6.Class) {
            if (condition.id > 6) {
              throw new InvalidMacroError("Class ".concat(condition, " cannot be made a valid BALLS predicate (it is not a standard class)"));
            }
            ballsCondition = condition.toString().replaceAll(" ", "").toLowerCase();
          } else if (condition instanceof import_kolmafia6.Stat) {
            ballsCondition = "".concat(condition.toString().toLowerCase(), "class");
          } else {
            ballsCondition = condition;
          }
          return ballsCondition;
        }
      }, {
        key: "if_",
        value: function if_(condition, ifTrue) {
          return new this().if_(condition, ifTrue);
        }
      }, {
        key: "ifNot",
        value: function ifNot(condition, ifTrue) {
          return new this().ifNot(condition, ifTrue);
        }
      }, {
        key: "while_",
        value: function while_(condition, contents) {
          return new this().while_(condition, contents);
        }
      }, {
        key: "externalIf",
        value: function externalIf(condition, ifTrue, ifFalse) {
          return new this().externalIf(condition, ifTrue, ifFalse);
        }
      }, {
        key: "skill",
        value: function skill() {
          var _this3;
          return (_this3 = new this()).skill.apply(_this3, arguments);
        }
      }, {
        key: "trySkill",
        value: function trySkill() {
          var _this4;
          return (_this4 = new this()).trySkill.apply(_this4, arguments);
        }
      }, {
        key: "trySkillRepeat",
        value: function trySkillRepeat() {
          var _this5;
          return (_this5 = new this()).trySkillRepeat.apply(_this5, arguments);
        }
      }, {
        key: "item",
        value: function item10() {
          var _this6;
          return (_this6 = new this()).item.apply(_this6, arguments);
        }
      }, {
        key: "tryItem",
        value: function tryItem() {
          var _this7;
          return (_this7 = new this()).tryItem.apply(_this7, arguments);
        }
      }, {
        key: "attack",
        value: function attack() {
          return new this().attack();
        }
      }, {
        key: "ifHolidayWanderer",
        value: function ifHolidayWanderer(macro) {
          return new this().ifHolidayWanderer(macro);
        }
      }, {
        key: "ifNotHolidayWanderer",
        value: function ifNotHolidayWanderer(macro) {
          return new this().ifNotHolidayWanderer(macro);
        }
      }]);
      return Macro3;
    }();
    _defineProperty4(Macro, "SAVED_MACRO_PROPERTY", "libram_savedMacro");
    _defineProperty4(Macro, "cachedMacroIds", /* @__PURE__ */ new Map());
    _defineProperty4(Macro, "cachedAutoAttacks", /* @__PURE__ */ new Map());
    StrictMacro = /* @__PURE__ */ function(_Macro) {
      _inherits2(StrictMacro2, _Macro);
      var _super2 = _createSuper2(StrictMacro2);
      function StrictMacro2() {
        _classCallCheck5(this, StrictMacro2);
        return _super2.apply(this, arguments);
      }
      _createClass5(StrictMacro2, [{
        key: "skill",
        value: (
          /**
           * Add one or more skill cast steps to the macro.
           *
           * @param skills Skills to cast.
           * @returns {StrictMacro} This object itself.
           */
          function skill() {
            var _get22;
            for (var _len7 = arguments.length, skills3 = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
              skills3[_key7] = arguments[_key7];
            }
            return (_get22 = _get(_getPrototypeOf2(StrictMacro2.prototype), "skill", this)).call.apply(_get22, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps.
         *
         * @param skills Skills to cast.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "item",
        value: (
          /**
           * Add one or more item steps to the macro.
           *
           * @param items Items to use. Pass a tuple [item1, item2] to funksling.
           * @returns {StrictMacro} This object itself.
           */
          function item10() {
            var _get3;
            for (var _len8 = arguments.length, items = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
              items[_key8] = arguments[_key8];
            }
            return (_get3 = _get(_getPrototypeOf2(StrictMacro2.prototype), "item", this)).call.apply(_get3, [this].concat(items));
          }
        )
        /**
         * Create a new macro with one or more item steps.
         *
         * @param items Items to use. Pass a tuple [item1, item2] to funksling.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "trySkill",
        value: (
          /**
           * Add one or more skill cast steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try casting.
           * @returns {StrictMacro} This object itself.
           */
          function trySkill() {
            var _get4;
            for (var _len9 = arguments.length, skills3 = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
              skills3[_key9] = arguments[_key9];
            }
            return (_get4 = _get(_getPrototypeOf2(StrictMacro2.prototype), "trySkill", this)).call.apply(_get4, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try casting.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "tryItem",
        value: (
          /**
           * Add one or more item steps to the macro, where each step checks to see if you have the item first.
           *
           * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
           * @returns {StrictMacro} This object itself.
           */
          function tryItem() {
            var _get5;
            for (var _len10 = arguments.length, items = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
              items[_key10] = arguments[_key10];
            }
            return (_get5 = _get(_getPrototypeOf2(StrictMacro2.prototype), "tryItem", this)).call.apply(_get5, [this].concat(items));
          }
        )
        /**
         * Create a new macro with one or more item steps, where each step checks to see if you have the item first.
         *
         * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "trySkillRepeat",
        value: (
          /**
           * Add one or more skill-cast-and-repeat steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try repeatedly casting.
           * @returns {StrictMacro} This object itself.
           */
          function trySkillRepeat() {
            var _get6;
            for (var _len11 = arguments.length, skills3 = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
              skills3[_key11] = arguments[_key11];
            }
            return (_get6 = _get(_getPrototypeOf2(StrictMacro2.prototype), "trySkillRepeat", this)).call.apply(_get6, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill-cast-and-repeat steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try repeatedly casting.
         * @returns {StrictMacro} This object itself.
         */
      }], [{
        key: "skill",
        value: function skill() {
          var _this8;
          return (_this8 = new this()).skill.apply(_this8, arguments);
        }
      }, {
        key: "item",
        value: function item10() {
          var _this9;
          return (_this9 = new this()).item.apply(_this9, arguments);
        }
      }, {
        key: "trySkill",
        value: function trySkill() {
          var _this10;
          return (_this10 = new this()).trySkill.apply(_this10, arguments);
        }
      }, {
        key: "tryItem",
        value: function tryItem() {
          var _this11;
          return (_this11 = new this()).tryItem.apply(_this11, arguments);
        }
      }, {
        key: "trySkillRepeat",
        value: function trySkillRepeat() {
          var _this12;
          return (_this12 = new this()).trySkillRepeat.apply(_this12, arguments);
        }
      }]);
      return StrictMacro2;
    }(Macro);
  }
});

// ../../node_modules/libram/dist/maximize.js
function _slicedToArray4(arr, i) {
  return _arrayWithHoles4(arr) || _iterableToArrayLimit4(arr, i) || _unsupportedIterableToArray6(arr, i) || _nonIterableRest4();
}
function _nonIterableRest4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit4(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles4(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classPrivateFieldInitSpec(obj, privateMap, value) {
  _checkPrivateRedeclaration(obj, privateMap);
  privateMap.set(obj, value);
}
function _checkPrivateRedeclaration(obj, privateCollection) {
  if (privateCollection.has(obj)) {
    throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
}
function _classPrivateFieldGet(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
  return _classApplyDescriptorGet(receiver, descriptor);
}
function _classApplyDescriptorGet(receiver, descriptor) {
  if (descriptor.get) {
    return descriptor.get.call(receiver);
  }
  return descriptor.value;
}
function _classPrivateFieldSet(receiver, privateMap, value) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set");
  _classApplyDescriptorSet(receiver, descriptor, value);
  return value;
}
function _classExtractFieldDescriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to " + action + " private field on non-instance");
  }
  return privateMap.get(receiver);
}
function _classApplyDescriptorSet(receiver, descriptor, value) {
  if (descriptor.set) {
    descriptor.set.call(receiver, value);
  } else {
    if (!descriptor.writable) {
      throw new TypeError("attempted to set read only private field");
    }
    descriptor.value = value;
  }
}
function _defineProperties6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey6(descriptor.key), descriptor);
  }
}
function _createClass6(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties6(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties6(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _createForOfIteratorHelper5(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray6(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _taggedTemplateLiteral2(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty5(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty5(obj, key, value) {
  key = _toPropertyKey6(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey6(arg) {
  var key = _toPrimitive6(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive6(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toConsumableArray3(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray6(arr) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray6(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray6(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray6(o, minLen);
}
function _iterableToArray3(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray6(arr);
}
function _arrayLikeToArray6(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function toMaximizerName(_ref) {
  var name = _ref.name, id = _ref.id;
  return name.includes(";") ? "\xB6".concat(id) : name;
}
function mergeMaximizeOptions(defaultOptions, addendums) {
  var _addendums$updateOnFa, _addendums$updateOnCa, _addendums$useOutfitC, _addendums$forceEquip, _addendums$preventEqu, _addendums$bonusEquip, _addendums$onlySlot, _addendums$preventSlo, _addendums$forceUpdat, _addendums$modes;
  return {
    updateOnFamiliarChange: (_addendums$updateOnFa = addendums.updateOnFamiliarChange) !== null && _addendums$updateOnFa !== void 0 ? _addendums$updateOnFa : defaultOptions.updateOnFamiliarChange,
    updateOnCanEquipChanged: (_addendums$updateOnCa = addendums.updateOnCanEquipChanged) !== null && _addendums$updateOnCa !== void 0 ? _addendums$updateOnCa : defaultOptions.updateOnCanEquipChanged,
    useOutfitCaching: (_addendums$useOutfitC = addendums.useOutfitCaching) !== null && _addendums$useOutfitC !== void 0 ? _addendums$useOutfitC : defaultOptions.useOutfitCaching,
    forceEquip: [].concat(_toConsumableArray3(defaultOptions.forceEquip), _toConsumableArray3((_addendums$forceEquip = addendums.forceEquip) !== null && _addendums$forceEquip !== void 0 ? _addendums$forceEquip : [])),
    preventEquip: [].concat(_toConsumableArray3(defaultOptions.preventEquip), _toConsumableArray3((_addendums$preventEqu = addendums.preventEquip) !== null && _addendums$preventEqu !== void 0 ? _addendums$preventEqu : [])).filter(function(item10) {
      var _addendums$forceEquip2;
      return !defaultOptions.forceEquip.includes(item10) && !((_addendums$forceEquip2 = addendums.forceEquip) !== null && _addendums$forceEquip2 !== void 0 && _addendums$forceEquip2.includes(item10));
    }),
    bonusEquip: new Map([].concat(_toConsumableArray3(defaultOptions.bonusEquip), _toConsumableArray3((_addendums$bonusEquip = addendums.bonusEquip) !== null && _addendums$bonusEquip !== void 0 ? _addendums$bonusEquip : []))),
    onlySlot: (_addendums$onlySlot = addendums.onlySlot) !== null && _addendums$onlySlot !== void 0 ? _addendums$onlySlot : defaultOptions.onlySlot,
    preventSlot: [].concat(_toConsumableArray3(defaultOptions.preventSlot), _toConsumableArray3((_addendums$preventSlo = addendums.preventSlot) !== null && _addendums$preventSlo !== void 0 ? _addendums$preventSlo : [])),
    forceUpdate: (_addendums$forceUpdat = addendums.forceUpdate) !== null && _addendums$forceUpdat !== void 0 ? _addendums$forceUpdat : defaultOptions.forceUpdate,
    modes: _objectSpread3(_objectSpread3({}, defaultOptions.modes), (_addendums$modes = addendums.modes) !== null && _addendums$modes !== void 0 ? _addendums$modes : {})
  };
}
function setDefaultMaximizeOptions(options) {
  Object.assign(defaultMaximizeOptions, options);
}
function getCurrentModes() {
  var modes = {};
  var _iterator = _createForOfIteratorHelper5(modeableCommands), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var key = _step.value;
      if ((0, import_kolmafia7.haveEquipped)(modeableItems[key])) {
        modes[key] = modeableState[key]();
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return modes;
}
function applyModes(modes) {
  var _iterator2 = _createForOfIteratorHelper5(modeableCommands), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var command = _step2.value;
      if ((0, import_kolmafia7.haveEquipped)(modeableItems[command]) && modes[command] !== void 0) {
        if (modeableState[command]() !== modes[command]) {
          (0, import_kolmafia7.cliExecute)(command + " " + modes[command]);
        }
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}
function saveOutfit(name) {
  (0, import_kolmafia7.cliExecute)("outfit save ".concat(name));
}
function canEquipItemCount() {
  var stats = $stats(_templateObject82 || (_templateObject82 = _taggedTemplateLiteral2(["Muscle, Mysticality, Moxie"]))).map(function(stat) {
    return Math.min((0, import_kolmafia7.myBasestat)(stat), 300);
  });
  if (stats.every(function(value, index) {
    return value === cachedStats[index];
  })) {
    return cachedCanEquipItemCount;
  }
  cachedStats = stats;
  cachedCanEquipItemCount = import_kolmafia7.Item.all().filter(function(item10) {
    return (0, import_kolmafia7.canEquip)(item10);
  }).length;
  return cachedCanEquipItemCount;
}
function checkCache(cacheKey, options) {
  var entry = cachedObjectives[cacheKey];
  if (!entry) {
    return null;
  }
  if (options.updateOnFamiliarChange && (0, import_kolmafia7.myFamiliar)() !== entry.familiar) {
    logger_default.warning("Equipment found in maximize cache but familiar is different.");
    return null;
  }
  if (options.updateOnCanEquipChanged && entry.canEquipItemCount !== canEquipItemCount()) {
    logger_default.warning("Equipment found in maximize cache but equippable item list is out of date.");
    return null;
  }
  return entry;
}
function applyCached(entry, options) {
  var outfitName = options.useOutfitCaching ? outfitCache.get(entry) : void 0;
  if (outfitName) {
    if (!(0, import_kolmafia7.isWearingOutfit)(outfitName)) {
      (0, import_kolmafia7.outfit)(outfitName);
    }
    var familiarEquip = entry.equipment.get($slot(_templateObject92 || (_templateObject92 = _taggedTemplateLiteral2(["familiar"]))));
    if (familiarEquip)
      (0, import_kolmafia7.equip)($slot(_templateObject102 || (_templateObject102 = _taggedTemplateLiteral2(["familiar"]))), familiarEquip);
  } else {
    var _iterator3 = _createForOfIteratorHelper5(entry.equipment), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var _step3$value = _slicedToArray4(_step3.value, 2), slot = _step3$value[0], item10 = _step3$value[1];
        if ((0, import_kolmafia7.equippedItem)(slot) !== item10 && (0, import_kolmafia7.availableAmount)(item10) > 0) {
          (0, import_kolmafia7.equip)(slot, item10);
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    if (verifyCached(entry) && options.useOutfitCaching) {
      var _outfitName = outfitCache.insert(entry);
      logger_default.info("Saving equipment to outfit ".concat(_outfitName, "."));
      saveOutfit(_outfitName);
    }
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject112 || (_templateObject112 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && entry.rider.get($item(_templateObject122 || (_templateObject122 = _taggedTemplateLiteral2(["Crown of Thrones"]))))) {
    (0, import_kolmafia7.enthroneFamiliar)(entry.rider.get($item(_templateObject132 || (_templateObject132 = _taggedTemplateLiteral2(["Crown of Thrones"])))) || $familiar.none);
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject142 || (_templateObject142 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && entry.rider.get($item(_templateObject152 || (_templateObject152 = _taggedTemplateLiteral2(["Buddy Bjorn"]))))) {
    (0, import_kolmafia7.bjornifyFamiliar)(entry.rider.get($item(_templateObject162 || (_templateObject162 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) || $familiar.none);
  }
  applyModes(_objectSpread3(_objectSpread3({}, entry.modes), options.modes));
}
function verifyCached(entry) {
  var warn2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  var success = true;
  var _iterator4 = _createForOfIteratorHelper5(slotStructure), _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      var slotGroup = _step4.value;
      var desiredSlots = slotGroup.map(function(slot) {
        var _entry$equipment$get;
        return [slot, (_entry$equipment$get = entry.equipment.get(slot)) !== null && _entry$equipment$get !== void 0 ? _entry$equipment$get : null];
      }).filter(function(_ref2) {
        var _ref3 = _slicedToArray4(_ref2, 2), item10 = _ref3[1];
        return item10 !== null;
      });
      var desiredSet = desiredSlots.map(function(_ref4) {
        var _ref5 = _slicedToArray4(_ref4, 2), item10 = _ref5[1];
        return item10;
      });
      var equippedSet = desiredSlots.map(function(_ref6) {
        var _ref7 = _slicedToArray4(_ref6, 1), slot = _ref7[0];
        return (0, import_kolmafia7.equippedItem)(slot);
      });
      if (!setEqual(desiredSet, equippedSet)) {
        if (warn2) {
          logger_default.warning("Failed to apply cached ".concat(desiredSet.join(", "), " in ").concat(slotGroup.join(", "), "."));
        }
        success = false;
      }
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject242 || (_templateObject242 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && entry.rider.get($item(_templateObject252 || (_templateObject252 = _taggedTemplateLiteral2(["Crown of Thrones"]))))) {
    if (entry.rider.get($item(_templateObject262 || (_templateObject262 = _taggedTemplateLiteral2(["Crown of Thrones"])))) !== (0, import_kolmafia7.myEnthronedFamiliar)()) {
      if (warn2) {
        logger_default.warning("Failed to apply ".concat(entry.rider.get($item(_templateObject272 || (_templateObject272 = _taggedTemplateLiteral2(["Crown of Thrones"])))), " in ").concat($item(_templateObject282 || (_templateObject282 = _taggedTemplateLiteral2(["Crown of Thrones"]))), "."));
      }
      success = false;
    }
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject292 || (_templateObject292 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && entry.rider.get($item(_templateObject302 || (_templateObject302 = _taggedTemplateLiteral2(["Buddy Bjorn"]))))) {
    if (entry.rider.get($item(_templateObject312 || (_templateObject312 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) !== (0, import_kolmafia7.myBjornedFamiliar)()) {
      if (warn2) {
        logger_default.warning("Failed to apply".concat(entry.rider.get($item(_templateObject322 || (_templateObject322 = _taggedTemplateLiteral2(["Buddy Bjorn"])))), " in ").concat($item(_templateObject332 || (_templateObject332 = _taggedTemplateLiteral2(["Buddy Bjorn"]))), "."));
      }
      success = false;
    }
  }
  return success;
}
function saveCached(cacheKey, options) {
  var equipment = /* @__PURE__ */ new Map();
  var rider = /* @__PURE__ */ new Map();
  var _iterator5 = _createForOfIteratorHelper5(cachedSlots), _step5;
  try {
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
      var _slot2 = _step5.value;
      equipment.set(_slot2, (0, import_kolmafia7.equippedItem)(_slot2));
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject342 || (_templateObject342 = _taggedTemplateLiteral2(["card sleeve"])))) > 0) {
    equipment.set($slot(_templateObject352 || (_templateObject352 = _taggedTemplateLiteral2(["card-sleeve"]))), (0, import_kolmafia7.equippedItem)($slot(_templateObject362 || (_templateObject362 = _taggedTemplateLiteral2(["card-sleeve"])))));
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject372 || (_templateObject372 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0) {
    rider.set($item(_templateObject382 || (_templateObject382 = _taggedTemplateLiteral2(["Crown of Thrones"]))), (0, import_kolmafia7.myEnthronedFamiliar)());
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject392 || (_templateObject392 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0) {
    rider.set($item(_templateObject402 || (_templateObject402 = _taggedTemplateLiteral2(["Buddy Bjorn"]))), (0, import_kolmafia7.myBjornedFamiliar)());
  }
  if (options.preventSlot && options.preventSlot.length > 0) {
    var _iterator6 = _createForOfIteratorHelper5(options.preventSlot), _step6;
    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
        var slot = _step6.value;
        equipment.delete(slot);
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }
    if (options.preventSlot.includes($slot(_templateObject412 || (_templateObject412 = _taggedTemplateLiteral2(["buddy-bjorn"]))))) {
      rider.delete($item(_templateObject422 || (_templateObject422 = _taggedTemplateLiteral2(["Buddy Bjorn"]))));
    }
    if (options.preventSlot.includes($slot(_templateObject432 || (_templateObject432 = _taggedTemplateLiteral2(["crown-of-thrones"]))))) {
      rider.delete($item(_templateObject442 || (_templateObject442 = _taggedTemplateLiteral2(["Crown of Thrones"]))));
    }
  }
  if (options.onlySlot && options.onlySlot.length > 0) {
    var _iterator7 = _createForOfIteratorHelper5(import_kolmafia7.Slot.all()), _step7;
    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
        var _slot = _step7.value;
        if (!options.onlySlot.includes(_slot)) {
          equipment.delete(_slot);
        }
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }
    if (!options.onlySlot.includes($slot(_templateObject452 || (_templateObject452 = _taggedTemplateLiteral2(["buddy-bjorn"]))))) {
      rider.delete($item(_templateObject462 || (_templateObject462 = _taggedTemplateLiteral2(["Buddy Bjorn"]))));
    }
    if (!options.onlySlot.includes($slot(_templateObject472 || (_templateObject472 = _taggedTemplateLiteral2(["crown-of-thrones"]))))) {
      rider.delete($item(_templateObject48 || (_templateObject48 = _taggedTemplateLiteral2(["Crown of Thrones"]))));
    }
  }
  var entry = new CacheEntry(equipment, rider, (0, import_kolmafia7.myFamiliar)(), canEquipItemCount(), _objectSpread3(_objectSpread3({}, getCurrentModes()), options.modes));
  cachedObjectives[cacheKey] = entry;
  if (options.useOutfitCaching) {
    var outfitName = outfitCache.insert(entry);
    logger_default.info("Saving equipment to outfit ".concat(outfitName, "."));
    saveOutfit(outfitName);
  }
}
function maximizeCached(objectives) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var fullOptions = mergeMaximizeOptions(defaultMaximizeOptions, options);
  var forceEquip = fullOptions.forceEquip, preventEquip = fullOptions.preventEquip, bonusEquip = fullOptions.bonusEquip, onlySlot = fullOptions.onlySlot, preventSlot = fullOptions.preventSlot, forceUpdate = fullOptions.forceUpdate;
  var objective = _toConsumableArray3(new Set([].concat(_toConsumableArray3(objectives.sort()), _toConsumableArray3(forceEquip.map(function(item10) {
    return '"equip '.concat(toMaximizerName(item10), '"');
  }).sort()), _toConsumableArray3(preventEquip.map(function(item10) {
    return '-"equip '.concat(toMaximizerName(item10), '"');
  }).sort()), _toConsumableArray3(onlySlot.map(function(slot) {
    return "".concat(slot);
  }).sort()), _toConsumableArray3(preventSlot.map(function(slot) {
    return "-".concat(slot);
  }).sort()), _toConsumableArray3(Array.from(bonusEquip.entries()).filter(function(_ref8) {
    var _ref9 = _slicedToArray4(_ref8, 2), bonus = _ref9[1];
    return bonus !== 0;
  }).map(function(_ref10) {
    var _ref11 = _slicedToArray4(_ref10, 2), item10 = _ref11[0], bonus = _ref11[1];
    return "".concat(Math.round(bonus * 100) / 100, ' "bonus ').concat(toMaximizerName(item10), '"');
  }).sort())))).join(", ");
  var untouchedSlots = cachedSlots.filter(function(slot) {
    return preventSlot.includes(slot) || onlySlot.length > 0 && !onlySlot.includes(slot);
  });
  var cacheKey = [objective].concat(_toConsumableArray3(untouchedSlots.map(function(slot) {
    return "".concat(slot, ":").concat((0, import_kolmafia7.equippedItem)(slot));
  }).sort()), [have($effect(_templateObject49 || (_templateObject49 = _taggedTemplateLiteral2(["Offhand Remarkable"]))))]).join("; ");
  var cacheEntry = checkCache(cacheKey, fullOptions);
  if (cacheEntry && !forceUpdate) {
    if (verifyCached(cacheEntry, false))
      return true;
    logger_default.info("Equipment found in maximize cache, equipping...");
    applyCached(cacheEntry, fullOptions);
    if (verifyCached(cacheEntry)) {
      logger_default.info("Equipped cached ".concat(cacheKey));
      return true;
    }
    logger_default.warning("Maximize cache application failed, maximizing...");
  }
  var result = (0, import_kolmafia7.maximize)(objective, false);
  saveCached(cacheKey, fullOptions);
  return result;
}
function clearMaximizerCache() {
  outfitCache.clear();
  for (var member in cachedObjectives)
    delete cachedObjectives[member];
}
var import_kolmafia7, _templateObject46, _templateObject210, _templateObject310, _templateObject47, _templateObject52, _templateObject62, _templateObject72, _templateObject82, _templateObject92, _templateObject102, _templateObject112, _templateObject122, _templateObject132, _templateObject142, _templateObject152, _templateObject162, _templateObject172, _templateObject182, _templateObject192, _templateObject202, _templateObject212, _templateObject222, _templateObject232, _templateObject242, _templateObject252, _templateObject262, _templateObject272, _templateObject282, _templateObject292, _templateObject302, _templateObject312, _templateObject322, _templateObject332, _templateObject342, _templateObject352, _templateObject362, _templateObject372, _templateObject382, _templateObject392, _templateObject402, _templateObject412, _templateObject422, _templateObject432, _templateObject442, _templateObject452, _templateObject462, _templateObject472, _templateObject48, _templateObject49, defaultMaximizeOptions, modeableCommands, modeableItems, modeableState, cachedSlots, CacheEntry, _outfitSlots, _useHistory, _maxSize, OutfitLRUCache, cachedObjectives, outfitCache, cachedStats, cachedCanEquipItemCount, slotStructure, _maximizeParameters, _maximizeOptions, Requirement;
var init_maximize = __esm({
  "../../node_modules/libram/dist/maximize.js": function() {
    import_kolmafia7 = require("kolmafia");
    init_lib();
    init_logger();
    init_template_string();
    init_utils();
    defaultMaximizeOptions = {
      updateOnFamiliarChange: true,
      updateOnCanEquipChanged: true,
      useOutfitCaching: true,
      forceEquip: [],
      preventEquip: [],
      bonusEquip: /* @__PURE__ */ new Map(),
      onlySlot: [],
      preventSlot: [],
      forceUpdate: false,
      modes: {}
    };
    modeableCommands = ["backupcamera", "umbrella", "snowsuit", "edpiece", "retrocape", "parka"];
    modeableItems = {
      backupcamera: $item(_templateObject46 || (_templateObject46 = _taggedTemplateLiteral2(["backup camera"]))),
      umbrella: $item(_templateObject210 || (_templateObject210 = _taggedTemplateLiteral2(["unbreakable umbrella"]))),
      snowsuit: $item(_templateObject310 || (_templateObject310 = _taggedTemplateLiteral2(["Snow Suit"]))),
      edpiece: $item(_templateObject47 || (_templateObject47 = _taggedTemplateLiteral2(["The Crown of Ed the Undying"]))),
      retrocape: $item(_templateObject52 || (_templateObject52 = _taggedTemplateLiteral2(["unwrapped knock-off retro superhero cape"]))),
      parka: $item(_templateObject62 || (_templateObject62 = _taggedTemplateLiteral2(["Jurassic Parka"])))
    };
    modeableState = {
      backupcamera: function() {
        return (0, import_kolmafia7.getProperty)("backupCameraMode");
      },
      umbrella: function() {
        return (0, import_kolmafia7.getProperty)("umbrellaState");
      },
      snowsuit: function() {
        return (0, import_kolmafia7.getProperty)("snowsuit");
      },
      edpiece: function() {
        return (0, import_kolmafia7.getProperty)("edPiece");
      },
      retrocape: function() {
        return (0, import_kolmafia7.getProperty)("retroCapeSuperhero") + " " + (0, import_kolmafia7.getProperty)("retroCapeWashingInstructions");
      },
      parka: function() {
        return (0, import_kolmafia7.getProperty)("parkaMode");
      }
    };
    cachedSlots = $slots(_templateObject72 || (_templateObject72 = _taggedTemplateLiteral2(["hat, weapon, off-hand, back, shirt, pants, acc1, acc2, acc3, familiar"])));
    CacheEntry = /* @__PURE__ */ _createClass6(function CacheEntry2(equipment, rider, familiar7, canEquipItemCount2, modes) {
      _classCallCheck6(this, CacheEntry2);
      _defineProperty5(this, "equipment", void 0);
      _defineProperty5(this, "rider", void 0);
      _defineProperty5(this, "familiar", void 0);
      _defineProperty5(this, "canEquipItemCount", void 0);
      _defineProperty5(this, "modes", void 0);
      this.equipment = equipment;
      this.rider = rider;
      this.familiar = familiar7;
      this.canEquipItemCount = canEquipItemCount2;
      this.modes = modes;
    });
    _outfitSlots = /* @__PURE__ */ new WeakMap();
    _useHistory = /* @__PURE__ */ new WeakMap();
    _maxSize = /* @__PURE__ */ new WeakMap();
    OutfitLRUCache = /* @__PURE__ */ function() {
      function OutfitLRUCache2(maxSize) {
        _classCallCheck6(this, OutfitLRUCache2);
        _classPrivateFieldInitSpec(this, _outfitSlots, {
          writable: true,
          value: []
        });
        _classPrivateFieldInitSpec(this, _useHistory, {
          writable: true,
          value: []
        });
        _classPrivateFieldInitSpec(this, _maxSize, {
          writable: true,
          value: void 0
        });
        _classPrivateFieldSet(this, _maxSize, maxSize);
      }
      _createClass6(OutfitLRUCache2, [{
        key: "checkConsistent",
        value: function checkConsistent() {
          if (_classPrivateFieldGet(this, _useHistory).length !== _classPrivateFieldGet(this, _outfitSlots).length || !_toConsumableArray3(_classPrivateFieldGet(this, _useHistory)).sort().every(function(value, index) {
            return value === index;
          })) {
            throw new Error("Outfit cache consistency failed.");
          }
        }
      }, {
        key: "promote",
        value: function promote(index) {
          _classPrivateFieldSet(this, _useHistory, [index].concat(_toConsumableArray3(_classPrivateFieldGet(this, _useHistory).filter(function(i) {
            return i !== index;
          }))));
          this.checkConsistent();
        }
      }, {
        key: "get",
        value: function get4(key) {
          var index = _classPrivateFieldGet(this, _outfitSlots).indexOf(key);
          if (index < 0)
            return void 0;
          this.promote(index);
          return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(index);
        }
      }, {
        key: "insert",
        value: function insert(key) {
          var lastUseIndex = void 0;
          if (_classPrivateFieldGet(this, _outfitSlots).length >= _classPrivateFieldGet(this, _maxSize)) {
            lastUseIndex = _classPrivateFieldGet(this, _useHistory).pop();
            if (lastUseIndex === void 0) {
              throw new Error("Outfit cache consistency failed.");
            }
            _classPrivateFieldGet(this, _useHistory).splice(0, 0, lastUseIndex);
            _classPrivateFieldGet(this, _outfitSlots)[lastUseIndex] = key;
            this.checkConsistent();
            return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(lastUseIndex);
          } else {
            var index = _classPrivateFieldGet(this, _outfitSlots).push(key) - 1;
            _classPrivateFieldGet(this, _useHistory).splice(0, 0, index);
            this.checkConsistent();
            return "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(index);
          }
        }
      }, {
        key: "clear",
        value: function clear() {
          _classPrivateFieldSet(this, _outfitSlots, []);
          _classPrivateFieldSet(this, _useHistory, []);
        }
      }]);
      return OutfitLRUCache2;
    }();
    _defineProperty5(OutfitLRUCache, "OUTFIT_PREFIX", "Script Outfit");
    cachedObjectives = {};
    outfitCache = new OutfitLRUCache(6);
    cachedStats = [0, 0, 0];
    cachedCanEquipItemCount = 0;
    slotStructure = [$slots(_templateObject172 || (_templateObject172 = _taggedTemplateLiteral2(["hat"]))), $slots(_templateObject182 || (_templateObject182 = _taggedTemplateLiteral2(["back"]))), $slots(_templateObject192 || (_templateObject192 = _taggedTemplateLiteral2(["shirt"]))), $slots(_templateObject202 || (_templateObject202 = _taggedTemplateLiteral2(["weapon, off-hand"]))), $slots(_templateObject212 || (_templateObject212 = _taggedTemplateLiteral2(["pants"]))), $slots(_templateObject222 || (_templateObject222 = _taggedTemplateLiteral2(["acc1, acc2, acc3"]))), $slots(_templateObject232 || (_templateObject232 = _taggedTemplateLiteral2(["familiar"])))];
    _maximizeParameters = /* @__PURE__ */ new WeakMap();
    _maximizeOptions = /* @__PURE__ */ new WeakMap();
    Requirement = /* @__PURE__ */ function() {
      function Requirement2(maximizeParameters, maximizeOptions) {
        _classCallCheck6(this, Requirement2);
        _classPrivateFieldInitSpec(this, _maximizeParameters, {
          writable: true,
          value: void 0
        });
        _classPrivateFieldInitSpec(this, _maximizeOptions, {
          writable: true,
          value: void 0
        });
        _classPrivateFieldSet(this, _maximizeParameters, maximizeParameters);
        _classPrivateFieldSet(this, _maximizeOptions, maximizeOptions);
      }
      _createClass6(Requirement2, [{
        key: "maximizeParameters",
        get: function get4() {
          return _classPrivateFieldGet(this, _maximizeParameters);
        }
      }, {
        key: "maximizeOptions",
        get: function get4() {
          return _classPrivateFieldGet(this, _maximizeOptions);
        }
        /**
         * Merges two requirements, concanating relevant arrays. Typically used in static form.
         *
         * @param other Requirement to merge with.
         */
      }, {
        key: "merge",
        value: function merge(other) {
          var _optionsA$forceEquip, _other$maximizeOption, _optionsA$preventEqui, _other$maximizeOption3, _optionsA$bonusEquip$, _optionsA$bonusEquip, _optionsB$bonusEquip$, _optionsB$bonusEquip, _optionsA$onlySlot, _optionsB$onlySlot, _optionsA$preventSlot, _optionsB$preventSlot;
          var optionsA = this.maximizeOptions;
          var optionsB = other.maximizeOptions;
          return new Requirement2([].concat(_toConsumableArray3(this.maximizeParameters), _toConsumableArray3(other.maximizeParameters)), {
            updateOnFamiliarChange: optionsA.updateOnFamiliarChange || other.maximizeOptions.updateOnFamiliarChange,
            updateOnCanEquipChanged: optionsA.updateOnCanEquipChanged || other.maximizeOptions.updateOnCanEquipChanged,
            forceEquip: [].concat(_toConsumableArray3((_optionsA$forceEquip = optionsA.forceEquip) !== null && _optionsA$forceEquip !== void 0 ? _optionsA$forceEquip : []), _toConsumableArray3((_other$maximizeOption = other.maximizeOptions.forceEquip) !== null && _other$maximizeOption !== void 0 ? _other$maximizeOption : [])).filter(function(x) {
              var _other$maximizeOption2;
              return !((_other$maximizeOption2 = other.maximizeOptions.preventEquip) !== null && _other$maximizeOption2 !== void 0 && _other$maximizeOption2.includes(x));
            }),
            preventEquip: [].concat(_toConsumableArray3((_optionsA$preventEqui = optionsA.preventEquip) !== null && _optionsA$preventEqui !== void 0 ? _optionsA$preventEqui : []), _toConsumableArray3((_other$maximizeOption3 = other.maximizeOptions.preventEquip) !== null && _other$maximizeOption3 !== void 0 ? _other$maximizeOption3 : [])).filter(function(x) {
              var _other$maximizeOption4;
              return !((_other$maximizeOption4 = other.maximizeOptions.forceEquip) !== null && _other$maximizeOption4 !== void 0 && _other$maximizeOption4.includes(x));
            }),
            bonusEquip: new Map([].concat(_toConsumableArray3((_optionsA$bonusEquip$ = (_optionsA$bonusEquip = optionsA.bonusEquip) === null || _optionsA$bonusEquip === void 0 ? void 0 : _optionsA$bonusEquip.entries()) !== null && _optionsA$bonusEquip$ !== void 0 ? _optionsA$bonusEquip$ : []), _toConsumableArray3((_optionsB$bonusEquip$ = (_optionsB$bonusEquip = optionsB.bonusEquip) === null || _optionsB$bonusEquip === void 0 ? void 0 : _optionsB$bonusEquip.entries()) !== null && _optionsB$bonusEquip$ !== void 0 ? _optionsB$bonusEquip$ : []))),
            onlySlot: [].concat(_toConsumableArray3((_optionsA$onlySlot = optionsA.onlySlot) !== null && _optionsA$onlySlot !== void 0 ? _optionsA$onlySlot : []), _toConsumableArray3((_optionsB$onlySlot = optionsB.onlySlot) !== null && _optionsB$onlySlot !== void 0 ? _optionsB$onlySlot : [])),
            preventSlot: [].concat(_toConsumableArray3((_optionsA$preventSlot = optionsA.preventSlot) !== null && _optionsA$preventSlot !== void 0 ? _optionsA$preventSlot : []), _toConsumableArray3((_optionsB$preventSlot = optionsB.preventSlot) !== null && _optionsB$preventSlot !== void 0 ? _optionsB$preventSlot : [])),
            forceUpdate: optionsA.forceUpdate || optionsB.forceUpdate
          });
        }
        /**
         * Merges a set of requirements together, starting with an empty requirement.
         *
         * @param allRequirements Requirements to merge
         * @returns Merged requirements
         */
      }, {
        key: "maximize",
        value: (
          /**
           * Runs maximizeCached, using the maximizeParameters and maximizeOptions contained by this requirement.
           *
           * @returns Whether the maximize call succeeded.
           */
          function maximize7() {
            return maximizeCached(this.maximizeParameters, this.maximizeOptions);
          }
        )
        /**
         * Merges requirements, and then runs maximizeCached on the combined requirement.
         *
         * @param requirements Requirements to maximize on
         */
      }], [{
        key: "merge",
        value: function merge(allRequirements) {
          return allRequirements.reduce(function(x, y) {
            return x.merge(y);
          }, new Requirement2([], {}));
        }
      }, {
        key: "maximize",
        value: function maximize7() {
          for (var _len = arguments.length, requirements = new Array(_len), _key = 0; _key < _len; _key++) {
            requirements[_key] = arguments[_key];
          }
          Requirement2.merge(requirements).maximize();
        }
      }]);
      return Requirement2;
    }();
  }
});

// ../../node_modules/libram/dist/actions/ActionSource.js
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties7(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey7(descriptor.key), descriptor);
  }
}
function _createClass7(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties7(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties7(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty6(obj, key, value) {
  key = _toPropertyKey7(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey7(arg) {
  var key = _toPrimitive7(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive7(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toConsumableArray4(arr) {
  return _arrayWithoutHoles4(arr) || _iterableToArray4(arr) || _unsupportedIterableToArray7(arr) || _nonIterableSpread4();
}
function _nonIterableSpread4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray7(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray7(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray7(o, minLen);
}
function _iterableToArray4(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles4(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray7(arr);
}
function _arrayLikeToArray7(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function mergeConstraints() {
  for (var _len = arguments.length, allConstraints = new Array(_len), _key = 0; _key < _len; _key++) {
    allConstraints[_key] = arguments[_key];
  }
  var familiars = allConstraints.map(function(constraints) {
    return constraints.familiar;
  }).filter(function(familiar7) {
    return familiar7;
  });
  if (familiars.length > 1) {
    return null;
  }
  return {
    equipmentRequirements: function() {
      return Requirement.merge(_toConsumableArray4(allConstraints.map(function(constraints) {
        var _constraints$equipmen, _constraints$equipmen2;
        return (_constraints$equipmen = (_constraints$equipmen2 = constraints.equipmentRequirements) === null || _constraints$equipmen2 === void 0 ? void 0 : _constraints$equipmen2.call(constraints)) !== null && _constraints$equipmen !== void 0 ? _constraints$equipmen : new Requirement([], {});
      })));
    },
    preparation: function() {
      var success = true;
      for (var _i = 0, _allConstraints = allConstraints; _i < _allConstraints.length; _i++) {
        var constraints = _allConstraints[_i];
        success = success && (!constraints.preparation || constraints.preparation());
      }
      return success;
    },
    familiar: familiars.find(function(familiar7) {
      return familiar7;
    }),
    cost: function() {
      return sum(allConstraints, function(constraints) {
        var _constraints$cost, _constraints$cost2;
        return (_constraints$cost = (_constraints$cost2 = constraints.cost) === null || _constraints$cost2 === void 0 ? void 0 : _constraints$cost2.call(constraints)) !== null && _constraints$cost !== void 0 ? _constraints$cost : 0;
      });
    }
  };
}
function filterAction(action, constraints) {
  var _constraints$requireF, _constraints$requireU, _constraints$noFamili, _constraints$noRequir, _constraints$noPrepar, _constraints$maximumC, _constraints$maximumC2;
  return action.available() && (constraints.allowedAction === void 0 || constraints.allowedAction(action)) && !((_constraints$requireF = constraints.requireFamiliar) !== null && _constraints$requireF !== void 0 && _constraints$requireF.call(constraints) && !action.constraints.familiar) && !((_constraints$requireU = constraints.requireUnlimited) !== null && _constraints$requireU !== void 0 && _constraints$requireU.call(constraints) && !action.isUnlimited()) && !((_constraints$noFamili = constraints.noFamiliar) !== null && _constraints$noFamili !== void 0 && _constraints$noFamili.call(constraints) && action.constraints.familiar) && !((_constraints$noRequir = constraints.noRequirements) !== null && _constraints$noRequir !== void 0 && _constraints$noRequir.call(constraints) && action.constraints.equipmentRequirements) && !((_constraints$noPrepar = constraints.noPreparation) !== null && _constraints$noPrepar !== void 0 && _constraints$noPrepar.call(constraints) && action.constraints.preparation) && action.cost() <= ((_constraints$maximumC = (_constraints$maximumC2 = constraints.maximumCost) === null || _constraints$maximumC2 === void 0 ? void 0 : _constraints$maximumC2.call(constraints)) !== null && _constraints$maximumC !== void 0 ? _constraints$maximumC : 0);
}
function findActionSource(actions) {
  var constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var validActions = actions.filter(function(actions2) {
    return filterAction(actions2, constraints);
  });
  if (validActions.length < 1)
    return null;
  return validActions.reduce(function(a, b) {
    return a.cost() <= b.cost() ? a : b;
  });
}
function actionSourcesAvailable(actions) {
  var constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return sum(actions.filter(function(action) {
    return filterAction(action, constraints !== null && constraints !== void 0 ? constraints : {});
  }), function(action) {
    return action.potential();
  });
}
var import_kolmafia8, ActionSource;
var init_ActionSource = __esm({
  "../../node_modules/libram/dist/actions/ActionSource.js": function() {
    import_kolmafia8 = require("kolmafia");
    init_combat();
    init_maximize();
    init_utils();
    ActionSource = /* @__PURE__ */ function() {
      function ActionSource2(source, potential, macro) {
        var constraints = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        _classCallCheck7(this, ActionSource2);
        _defineProperty6(this, "source", void 0);
        _defineProperty6(this, "potential", void 0);
        _defineProperty6(this, "macro", void 0);
        _defineProperty6(this, "constraints", void 0);
        this.source = source;
        this.potential = potential;
        this.macro = macro;
        this.constraints = constraints;
      }
      _createClass7(ActionSource2, [{
        key: "name",
        value: function name() {
          return this.source.toString();
        }
        /**
         * @returns Whether the action is available.
         */
      }, {
        key: "available",
        value: function available4() {
          return this.potential() > 0;
        }
        /**
         * @returns Cost in meat per usage of the action.
         */
      }, {
        key: "cost",
        value: function cost() {
          return this.constraints.cost ? this.constraints.cost() : 0;
        }
        /**
         * @returns Whether the action costs 0 meat to use.
         */
      }, {
        key: "isFree",
        value: function isFree3() {
          return !this.cost || this.cost() === 0;
        }
        /**
         * @returns Whether unlimited uses of the action are available.
         */
      }, {
        key: "isUnlimited",
        value: function isUnlimited() {
          return this.potential() === Infinity;
        }
        /**
         * Create a compound action source with merged constraints.
         *
         * @param others Other actions to have available.
         * @returns Merged constraints, or null if they are inconsistent.
         */
      }, {
        key: "merge",
        value: function merge() {
          for (var _len2 = arguments.length, others = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            others[_key2] = arguments[_key2];
          }
          var actions = [this].concat(others);
          var constraints = mergeConstraints.apply(void 0, _toConsumableArray4(actions.map(function(action) {
            return action.constraints;
          })));
          if (constraints === null) {
            return null;
          }
          return new ActionSource2(_toConsumableArray4(flat(actions.map(function(action) {
            return action.source;
          }))), function() {
            return sum(actions, function(action) {
              return action.potential();
            });
          }, Macro.step.apply(Macro, _toConsumableArray4(actions.map(function(action) {
            return action.macro;
          }))), constraints);
        }
        /**
         * Perform all preparation necessary to make this action available.
         *
         * @param otherRequirements Any other equipment requirements.
         * @returns Whether preparation succeeded.
         */
      }, {
        key: "prepare",
        value: function prepare(otherRequirements) {
          var _this$constraints$fam, _this$constraints;
          if ((_this$constraints$fam = (_this$constraints = this.constraints).familiar) !== null && _this$constraints$fam !== void 0 && _this$constraints$fam.call(_this$constraints)) {
            if (!(0, import_kolmafia8.useFamiliar)(this.constraints.familiar()))
              return false;
          }
          if (this.constraints.equipmentRequirements) {
            var requirement = otherRequirements ? otherRequirements.merge(this.constraints.equipmentRequirements()) : this.constraints.equipmentRequirements();
            if (!requirement.maximize())
              return false;
          }
          if (this.constraints.preparation)
            return this.constraints.preparation();
          return true;
        }
        /**
         * Perform all preparation necessary to make this action available.
         * Throws an error if preparation fails.
         *
         * @param otherRequirements Any other equipment requirements.
         */
      }, {
        key: "ensure",
        value: function ensure(otherRequirements) {
          if (!this.prepare(otherRequirements)) {
            throw new Error("Failed to prepare action ".concat(this.name(), "."));
          }
        }
      }]);
      return ActionSource2;
    }();
    _defineProperty6(ActionSource, "defaultPriceFunction", function(item10) {
      return (0, import_kolmafia8.mallPrice)(item10) > 0 ? (0, import_kolmafia8.mallPrice)(item10) : Infinity;
    });
  }
});

// ../../node_modules/libram/dist/resources/2017/AsdonMartin.js
var AsdonMartin_exports = {};
__export(AsdonMartin_exports, {
  Driving: function() {
    return Driving;
  },
  drive: function() {
    return drive;
  },
  fillTo: function() {
    return fillTo;
  },
  fillWithInventoryTo: function() {
    return fillWithInventoryTo;
  },
  have: function() {
    return have2;
  },
  insertFuel: function() {
    return insertFuel;
  },
  installed: function() {
    return installed;
  },
  isFuelItem: function() {
    return isFuelItem;
  }
});
function _slicedToArray5(arr, i) {
  return _arrayWithHoles5(arr) || _iterableToArrayLimit5(arr, i) || _unsupportedIterableToArray8(arr, i) || _nonIterableRest5();
}
function _nonIterableRest5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray8(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray8(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray8(o, minLen);
}
function _arrayLikeToArray8(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit5(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles5(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral3(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed() {
  return (0, import_kolmafia9.getWorkshed)() === $item(_templateObject50 || (_templateObject50 = _taggedTemplateLiteral3(["Asdon Martin keyfob"])));
}
function have2() {
  return installed() || have($item(_templateObject211 || (_templateObject211 = _taggedTemplateLiteral3(["Asdon Martin keyfob"]))));
}
function priceTooOld(item10) {
  return (0, import_kolmafia9.historicalPrice)(item10) === 0 || (0, import_kolmafia9.historicalAge)(item10) >= 7;
}
function historicalPriceOrMax(item10) {
  var historical = (0, import_kolmafia9.historicalPrice)(item10);
  return historical < 0 ? 999999999 : historical;
}
function mallPriceOrMax(item10) {
  var mall = (0, import_kolmafia9.mallPrice)(item10);
  return mall < 0 ? 999999999 : mall;
}
function price(item10, priceAge) {
  switch (priceAge) {
    case PriceAge.HISTORICAL: {
      var historical = historicalPriceOrMax(item10);
      return historical === 0 ? mallPriceOrMax(item10) : historical;
    }
    case PriceAge.RECENT:
      return priceTooOld(item10) ? mallPriceOrMax(item10) : historicalPriceOrMax(item10);
    case PriceAge.TODAY:
      return mallPriceOrMax(item10);
  }
}
function inventoryItems() {
  return import_kolmafia9.Item.all().filter(isFuelItem).filter(function(item10) {
    return have(item10) && [100, (0, import_kolmafia9.autosellPrice)(item10)].includes(price(item10, PriceAge.RECENT));
  });
}
function calculateFuelUnitCost(it) {
  var priceAge = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : PriceAge.RECENT;
  var units = getAverageAdventures(it);
  return price(it, priceAge) / units;
}
function isFuelItem(it) {
  return !(0, import_kolmafia9.isNpcItem)(it) && it.fullness + it.inebriety > 0 && getAverageAdventures(it) > 0 && it.tradeable && it.discardable && !fuelSkiplist.includes(it);
}
function getBestFuels() {
  var allFuel = import_kolmafia9.Item.all().filter(isFuelItem);
  if (allFuel.filter(function(item10) {
    return (0, import_kolmafia9.historicalPrice)(item10) === 0;
  }).length > 100) {
    (0, import_kolmafia9.mallPrices)("food");
    (0, import_kolmafia9.mallPrices)("booze");
  }
  var keyHistorical = function(item10) {
    return calculateFuelUnitCost(item10, PriceAge.HISTORICAL);
  };
  allFuel.sort(function(x, y) {
    return keyHistorical(x) - keyHistorical(y);
  });
  var bestUnitCost = keyHistorical(allFuel[0]);
  var firstBadIndex = allFuel.findIndex(function(item10) {
    return keyHistorical(item10) > 5 * bestUnitCost;
  });
  var potentialFuel = firstBadIndex > 0 ? allFuel.slice(0, firstBadIndex) : allFuel;
  if (potentialFuel.filter(function(item10) {
    return priceTooOld(item10);
  }).length > 100) {
    (0, import_kolmafia9.mallPrices)("food");
    (0, import_kolmafia9.mallPrices)("booze");
  }
  var key1 = function(item10) {
    return -getAverageAdventures(item10);
  };
  var key2 = function(item10) {
    return calculateFuelUnitCost(item10, PriceAge.RECENT);
  };
  potentialFuel.sort(function(x, y) {
    return key1(x) - key1(y);
  });
  potentialFuel.sort(function(x, y) {
    return key2(x) - key2(y);
  });
  var candidates = potentialFuel.slice(0, 10);
  var key3 = function(item10) {
    return calculateFuelUnitCost(item10, PriceAge.TODAY);
  };
  candidates.sort(function(x, y) {
    return key3(x) - key3(y);
  });
  if (calculateFuelUnitCost(candidates[0], PriceAge.TODAY) > 100) {
    throw new Error("Could not identify any fuel with efficiency better than 100 meat per fuel. This means something went wrong.");
  }
  return candidates;
}
function insertFuel(it) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var result = (0, import_kolmafia9.visitUrl)("campground.php?action=fuelconvertor&pwd&qty=".concat(quantity, "&iid=").concat(it.id, "&go=Convert%21"));
  return result.includes("The display updates with a");
}
function fillTo(targetUnits) {
  if (!installed())
    return false;
  while ((0, import_kolmafia9.getFuel)() < targetUnits) {
    var _ref = (0, import_kolmafia9.canInteract)() ? getBestFuels() : [$item(_templateObject410 || (_templateObject410 = _taggedTemplateLiteral3(["loaf of soda bread"]))), void 0], _ref2 = _slicedToArray5(_ref, 2), bestFuel = _ref2[0], secondBest = _ref2[1];
    var count = Math.ceil(targetUnits / getAverageAdventures(bestFuel));
    var ceiling = void 0;
    if (secondBest) {
      var efficiencyOfSecondBest = (0, import_kolmafia9.mallPrice)(secondBest) / getAverageAdventures(secondBest);
      ceiling = Math.ceil(efficiencyOfSecondBest * getAverageAdventures(bestFuel));
    }
    if (!(0, import_kolmafia9.canInteract)())
      (0, import_kolmafia9.retrieveItem)(count, bestFuel);
    else
      ceiling ? (0, import_kolmafia9.buy)(count, bestFuel, ceiling) : (0, import_kolmafia9.buy)(count, bestFuel);
    if (!insertFuel(bestFuel, Math.min((0, import_kolmafia9.itemAmount)(bestFuel), count))) {
      throw new Error("Failed to fuel Asdon Martin.");
    }
  }
  return (0, import_kolmafia9.getFuel)() >= targetUnits;
}
function fillWithBestInventoryItem(targetUnits) {
  var options = inventoryItems().sort(function(a, b) {
    return getAverageAdventures(b) / (0, import_kolmafia9.autosellPrice)(b) - getAverageAdventures(a) / (0, import_kolmafia9.autosellPrice)(a);
  });
  if (options.length === 0)
    return false;
  var best = options[0];
  if ((0, import_kolmafia9.autosellPrice)(best) / getAverageAdventures(best) > 100)
    return false;
  var amountToUse = clamp(Math.ceil(targetUnits / getAverageAdventures(best)), 0, (0, import_kolmafia9.itemAmount)(best));
  return insertFuel(best, amountToUse);
}
function fillWithInventoryTo(targetUnits) {
  if (!installed())
    return false;
  var continueFuelingFromInventory = true;
  while ((0, import_kolmafia9.getFuel)() < targetUnits && continueFuelingFromInventory) {
    continueFuelingFromInventory && (continueFuelingFromInventory = fillWithBestInventoryItem(targetUnits));
  }
  return fillTo(targetUnits);
}
function drive(style) {
  var turns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var preferInventory = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!Object.values(Driving).includes(style))
    return false;
  if (!installed())
    return false;
  if ((0, import_kolmafia9.haveEffect)(style) >= turns)
    return true;
  var fuelNeeded = 37 * Math.ceil((turns - (0, import_kolmafia9.haveEffect)(style)) / 30);
  (preferInventory ? fillWithInventoryTo : fillTo)(fuelNeeded);
  while ((0, import_kolmafia9.getFuel)() >= 37 && (0, import_kolmafia9.haveEffect)(style) < turns) {
    (0, import_kolmafia9.cliExecute)("asdonmartin drive ".concat(style.name.replace("Driving ", "")));
  }
  return (0, import_kolmafia9.haveEffect)(style) >= turns;
}
var import_kolmafia9, _templateObject50, _templateObject211, _templateObject311, _templateObject410, _templateObject53, _templateObject63, _templateObject73, _templateObject83, _templateObject93, _templateObject103, _templateObject113, _templateObject123, _templateObject133, PriceAge, fuelSkiplist, Driving;
var init_AsdonMartin = __esm({
  "../../node_modules/libram/dist/resources/2017/AsdonMartin.js": function() {
    import_kolmafia9 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    (function(PriceAge2) {
      PriceAge2[PriceAge2["HISTORICAL"] = 0] = "HISTORICAL";
      PriceAge2[PriceAge2["RECENT"] = 1] = "RECENT";
      PriceAge2[PriceAge2["TODAY"] = 2] = "TODAY";
    })(PriceAge || (PriceAge = {}));
    fuelSkiplist = $items(_templateObject311 || (_templateObject311 = _taggedTemplateLiteral3(['cup of "tea", thermos of "whiskey", Lucky Lindy, Bee\'s Knees, Sockdollager, Ish Kabibble, Hot Socks, Phonus Balonus, Flivver, Sloppy Jalopy, glass of "milk"'])));
    Driving = {
      Obnoxiously: $effect(_templateObject53 || (_templateObject53 = _taggedTemplateLiteral3(["Driving Obnoxiously"]))),
      Stealthily: $effect(_templateObject63 || (_templateObject63 = _taggedTemplateLiteral3(["Driving Stealthily"]))),
      Wastefully: $effect(_templateObject73 || (_templateObject73 = _taggedTemplateLiteral3(["Driving Wastefully"]))),
      Safely: $effect(_templateObject83 || (_templateObject83 = _taggedTemplateLiteral3(["Driving Safely"]))),
      Recklessly: $effect(_templateObject93 || (_templateObject93 = _taggedTemplateLiteral3(["Driving Recklessly"]))),
      Intimidatingly: $effect(_templateObject103 || (_templateObject103 = _taggedTemplateLiteral3(["Driving Intimidatingly"]))),
      Quickly: $effect(_templateObject113 || (_templateObject113 = _taggedTemplateLiteral3(["Driving Quickly"]))),
      Observantly: $effect(_templateObject123 || (_templateObject123 = _taggedTemplateLiteral3(["Driving Observantly"]))),
      Waterproofly: $effect(_templateObject133 || (_templateObject133 = _taggedTemplateLiteral3(["Driving Waterproofly"])))
    };
  }
});

// ../../node_modules/libram/dist/actions/FreeKill.js
function _taggedTemplateLiteral4(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray5(arr) {
  return _arrayWithoutHoles5(arr) || _iterableToArray5(arr) || _unsupportedIterableToArray9(arr) || _nonIterableSpread5();
}
function _nonIterableSpread5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray9(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray9(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray9(o, minLen);
}
function _iterableToArray5(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles5(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray9(arr);
}
function _arrayLikeToArray9(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function tryFindFreeKill(constraints) {
  return findActionSource(freeKillSources, constraints);
}
function ensureFreeKill(constraints) {
  var source = tryFindFreeKill(constraints);
  if (!source) {
    throw new Error("Failed to ensure Free Kill source");
  }
  return source;
}
var import_kolmafia10, _templateObject51, _templateObject213, _templateObject313, _templateObject411, _templateObject54, _templateObject64, _templateObject74, _templateObject84, _templateObject94, _templateObject104, _templateObject114, _templateObject124, _templateObject134, _templateObject143, _templateObject153, _templateObject163, _templateObject173, _templateObject183, _templateObject193, _templateObject203, _templateObject214, _templateObject223, _templateObject233, _templateObject243, _templateObject253, _templateObject263, _templateObject273, _templateObject283, _templateObject293, _templateObject303, _templateObject314, _templateObject323, _templateObject333, _templateObject343, _templateObject353, _templateObject363, _templateObject373, _templateObject383, _templateObject393, _templateObject403, _templateObject413, _templateObject423, _templateObject433, _templateObject443, _templateObject453, freeKillSources;
var init_FreeKill = __esm({
  "../../node_modules/libram/dist/actions/FreeKill.js": function() {
    import_kolmafia10 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_AsdonMartin();
    init_template_string();
    init_ActionSource();
    freeKillSources = [
      // Free limited sources
      new ActionSource($skill(_templateObject51 || (_templateObject51 = _taggedTemplateLiteral4(["Gingerbread Mob Hit"]))), function() {
        return !get("_gingerbreadMobHitUsed") && have($skill(_templateObject213 || (_templateObject213 = _taggedTemplateLiteral4(["Gingerbread Mob Hit"])))) ? 1 : 0;
      }, Macro.skill($skill(_templateObject313 || (_templateObject313 = _taggedTemplateLiteral4(["Gingerbread Mob Hit"])))), {
        preparation: function() {
          return (0, import_kolmafia10.restoreMp)(30);
        }
      }),
      new ActionSource($skill(_templateObject411 || (_templateObject411 = _taggedTemplateLiteral4(["Shattering Punch"]))), function() {
        return have($skill(_templateObject54 || (_templateObject54 = _taggedTemplateLiteral4(["Shattering Punch"])))) ? 3 - get("_shatteringPunchUsed") : 0;
      }, Macro.skill($skill(_templateObject64 || (_templateObject64 = _taggedTemplateLiteral4(["Shattering Punch"])))), {
        preparation: function() {
          return (0, import_kolmafia10.restoreMp)(30);
        }
      }),
      new ActionSource($item(_templateObject74 || (_templateObject74 = _taggedTemplateLiteral4(["replica bat-oomerang"]))), function() {
        return have($item(_templateObject84 || (_templateObject84 = _taggedTemplateLiteral4(["replica bat-oomerang"])))) ? 3 - get("_usedReplicaBatoomerang") : 0;
      }, Macro.item($item(_templateObject94 || (_templateObject94 = _taggedTemplateLiteral4(["replica bat-oomerang"]))))),
      new ActionSource($item(_templateObject104 || (_templateObject104 = _taggedTemplateLiteral4(["The Jokester's gun"]))), function() {
        return !get("_firedJokestersGun") && have($item(_templateObject114 || (_templateObject114 = _taggedTemplateLiteral4(["The Jokester's gun"])))) && (0, import_kolmafia10.canEquip)($item(_templateObject124 || (_templateObject124 = _taggedTemplateLiteral4(["The Jokester's gun"])))) ? 1 : 0;
      }, Macro.skill($skill(_templateObject134 || (_templateObject134 = _taggedTemplateLiteral4(["Fire the Jokester's Gun"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject143 || (_templateObject143 = _taggedTemplateLiteral4(["The Jokester's gun"])))
          });
        }
      }),
      new ActionSource($item(_templateObject153 || (_templateObject153 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"]))), function() {
        return have($item(_templateObject163 || (_templateObject163 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"])))) ? 3 - get("_chestXRayUsed") : 0;
      }, Macro.skill($skill(_templateObject173 || (_templateObject173 = _taggedTemplateLiteral4(["Chest X-Ray"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject183 || (_templateObject183 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"])))
          });
        }
      }),
      new ActionSource($skill(_templateObject193 || (_templateObject193 = _taggedTemplateLiteral4(["Asdon Martin: Missile Launcher"]))), function() {
        return !get("_missileLauncherUsed") && installed() ? 1 : 0;
      }, Macro.skill($skill(_templateObject203 || (_templateObject203 = _taggedTemplateLiteral4(["Asdon Martin: Missile Launcher"])))), {
        preparation: function() {
          return fillTo(100);
        }
      }),
      // Heavy Rains
      new ActionSource($skill(_templateObject214 || (_templateObject214 = _taggedTemplateLiteral4(["Lightning Strike"]))), function() {
        return have($skill(_templateObject223 || (_templateObject223 = _taggedTemplateLiteral4(["Lightning Strike"])))) ? Math.floor((0, import_kolmafia10.myLightning)() / 20) : 0;
      }, Macro.skill($skill(_templateObject233 || (_templateObject233 = _taggedTemplateLiteral4(["Lightning Strike"]))))),
      // Expensive limited sources
      new ActionSource($item(_templateObject243 || (_templateObject243 = _taggedTemplateLiteral4(["powdered madness"]))), function() {
        return 5 - get("_powderedMadnessUses");
      }, Macro.item($item(_templateObject253 || (_templateObject253 = _taggedTemplateLiteral4(["powdered madness"])))), {
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject263 || (_templateObject263 = _taggedTemplateLiteral4(["powdered madness"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject273 || (_templateObject273 = _taggedTemplateLiteral4(["powdered madness"]))));
        }
      }),
      new ActionSource($familiar(_templateObject283 || (_templateObject283 = _taggedTemplateLiteral4(["Puck Man"]))), function() {
        return have($familiar(_templateObject293 || (_templateObject293 = _taggedTemplateLiteral4(["Puck Man"])))) ? 20 - get("_powerPillUses") : 0;
      }, Macro.item($item(_templateObject303 || (_templateObject303 = _taggedTemplateLiteral4(["power pill"])))), {
        familiar: function() {
          return $familiar(_templateObject314 || (_templateObject314 = _taggedTemplateLiteral4(["Puck Man"])));
        },
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject323 || (_templateObject323 = _taggedTemplateLiteral4(["power pill"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject333 || (_templateObject333 = _taggedTemplateLiteral4(["power pill"]))));
        }
      }),
      new ActionSource($familiar(_templateObject343 || (_templateObject343 = _taggedTemplateLiteral4(["Ms. Puck Man"]))), function() {
        return have($familiar(_templateObject353 || (_templateObject353 = _taggedTemplateLiteral4(["Ms. Puck Man"])))) ? 20 - get("_powerPillUses") : 0;
      }, Macro.item($item(_templateObject363 || (_templateObject363 = _taggedTemplateLiteral4(["power pill"])))), {
        familiar: function() {
          return $familiar(_templateObject373 || (_templateObject373 = _taggedTemplateLiteral4(["Ms. Puck Man"])));
        },
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject383 || (_templateObject383 = _taggedTemplateLiteral4(["power pill"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject393 || (_templateObject393 = _taggedTemplateLiteral4(["power pill"]))));
        }
      }),
      // Expensive unlimited sources
      new ActionSource($skill(_templateObject403 || (_templateObject403 = _taggedTemplateLiteral4(["Shocking Lick"]))), function() {
        return Infinity;
      }, Macro.skill($skill(_templateObject413 || (_templateObject413 = _taggedTemplateLiteral4(["Shocking Lick"])))), {
        preparation: function() {
          if (get("shockingLickCharges") === 0 && (0, import_kolmafia10.retrieveItem)($item(_templateObject423 || (_templateObject423 = _taggedTemplateLiteral4(["battery (9-Volt)"]))))) {
            (0, import_kolmafia10.use)($item(_templateObject433 || (_templateObject433 = _taggedTemplateLiteral4(["battery (9-Volt)"]))));
          }
          return get("shockingLickCharges") > 0;
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject443 || (_templateObject443 = _taggedTemplateLiteral4(["battery (AAA)"])))) * 4;
        }
      })
    ].concat(_toConsumableArray5($items(_templateObject453 || (_templateObject453 = _taggedTemplateLiteral4(["Daily Affirmation: Think Win-Lose, superduperheated metal"]))).map(function(item10) {
      return new ActionSource(item10, function() {
        return Infinity;
      }, Macro.item(item10), {
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)(item10);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item10);
        }
      });
    })));
  }
});

// ../../node_modules/libram/dist/resources/2009/Bandersnatch.js
var Bandersnatch_exports = {};
__export(Bandersnatch_exports, {
  canRunaway: function() {
    return canRunaway;
  },
  couldRunaway: function() {
    return couldRunaway;
  },
  getMaxRunaways: function() {
    return getMaxRunaways;
  },
  getRemainingRunaways: function() {
    return getRemainingRunaways;
  },
  getRunaways: function() {
    return getRunaways;
  },
  have: function() {
    return have3;
  },
  prepareRunaway: function() {
    return prepareRunaway;
  }
});
function _createForOfIteratorHelper6(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray10(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray10(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray10(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray10(o, minLen);
}
function _arrayLikeToArray10(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral5(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have3() {
  return have(familiar);
}
function getRunaways() {
  return get("_banderRunaways");
}
function getMaxRunaways() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  var weightBuffs = considerWeightAdjustment ? (0, import_kolmafia11.weightAdjustment)() : 0;
  return Math.floor(((0, import_kolmafia11.familiarWeight)(familiar) + weightBuffs) / 5);
}
function getRemainingRunaways() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.max(0, getMaxRunaways(considerWeightAdjustment) - getRunaways());
}
function couldRunaway() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return have3() && getRemainingRunaways(considerWeightAdjustment) > 0;
}
function canRunaway() {
  return isCurrentFamiliar(familiar) && couldRunaway() && have(odeEffect);
}
function prepareRunaway(songsToRemove) {
  if (!have(odeEffect)) {
    if (!have(odeSkill)) {
      return false;
    }
    if (!canRememberSong()) {
      var activeSongs = getActiveSongs();
      var _iterator = _createForOfIteratorHelper6(songsToRemove), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var song2 = _step.value;
          if (activeSongs.includes(song2) && uneffect(song2)) {
            break;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    if (!(0, import_kolmafia11.useSkill)(odeSkill)) {
      return false;
    }
  }
  return (0, import_kolmafia11.useFamiliar)(familiar);
}
var import_kolmafia11, _templateObject55, _templateObject215, _templateObject315, familiar, odeSkill, odeEffect;
var init_Bandersnatch = __esm({
  "../../node_modules/libram/dist/resources/2009/Bandersnatch.js": function() {
    import_kolmafia11 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar = $familiar(_templateObject55 || (_templateObject55 = _taggedTemplateLiteral5(["Frumious Bandersnatch"])));
    odeSkill = $skill(_templateObject215 || (_templateObject215 = _taggedTemplateLiteral5(["The Ode to Booze"])));
    odeEffect = $effect(_templateObject315 || (_templateObject315 = _taggedTemplateLiteral5(["Ode to Booze"])));
  }
});

// ../../node_modules/libram/dist/resources/2011/StompingBoots.js
var StompingBoots_exports = {};
__export(StompingBoots_exports, {
  canRunaway: function() {
    return canRunaway2;
  },
  couldRunaway: function() {
    return couldRunaway2;
  },
  getMaxRunaways: function() {
    return getMaxRunaways2;
  },
  getRemainingRunaways: function() {
    return getRemainingRunaways2;
  },
  getRunaways: function() {
    return getRunaways2;
  },
  have: function() {
    return have4;
  },
  prepareRunaway: function() {
    return prepareRunaway2;
  }
});
function _taggedTemplateLiteral6(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have4() {
  return have(familiar2);
}
function getRunaways2() {
  return get("_banderRunaways");
}
function getMaxRunaways2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  var weightBuffs = considerWeightAdjustment ? (0, import_kolmafia12.weightAdjustment)() : 0;
  return Math.floor(((0, import_kolmafia12.familiarWeight)(familiar2) + weightBuffs) / 5);
}
function getRemainingRunaways2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return Math.max(0, getMaxRunaways2(considerWeightAdjustment) - getRunaways2());
}
function couldRunaway2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return have4() && getRemainingRunaways2(considerWeightAdjustment) > 0;
}
function canRunaway2() {
  return isCurrentFamiliar(familiar2) && couldRunaway2();
}
function prepareRunaway2() {
  return (0, import_kolmafia12.useFamiliar)(familiar2);
}
var import_kolmafia12, _templateObject56, familiar2;
var init_StompingBoots = __esm({
  "../../node_modules/libram/dist/resources/2011/StompingBoots.js": function() {
    import_kolmafia12 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar2 = $familiar(_templateObject56 || (_templateObject56 = _taggedTemplateLiteral6(["Pair of Stomping Boots"])));
  }
});

// ../../node_modules/libram/dist/actions/FreeRun.js
function _toConsumableArray6(arr) {
  return _arrayWithoutHoles6(arr) || _iterableToArray6(arr) || _unsupportedIterableToArray11(arr) || _nonIterableSpread6();
}
function _nonIterableSpread6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray11(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray11(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray11(o, minLen);
}
function _iterableToArray6(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles6(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray11(arr);
}
function _arrayLikeToArray11(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral7(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function tryFindFreeRun(constraints) {
  var source = findActionSource(freeRunSources, constraints);
  if (source && asdonMartinSource.available()) {
    source = asdonMartinSource.merge(source);
  }
  return source;
}
function ensureFreeRun(constraints) {
  var source = tryFindFreeRun(constraints);
  if (!source) {
    throw new Error("Failed to ensure Free Run source");
  }
  return source;
}
var import_kolmafia13, _templateObject57, _templateObject216, _templateObject316, _templateObject414, _templateObject58, _templateObject65, _templateObject75, _templateObject85, _templateObject95, _templateObject105, _templateObject115, _templateObject125, _templateObject135, _templateObject144, _templateObject154, _templateObject164, _templateObject174, _templateObject184, _templateObject194, _templateObject204, _templateObject217, _templateObject224, _templateObject234, _templateObject244, _templateObject254, _templateObject264, _templateObject274, _templateObject284, _templateObject294, _templateObject304, _templateObject317, _templateObject324, _templateObject334, _templateObject344, _templateObject354, _templateObject364, _templateObject374, _templateObject384, _templateObject394, _templateObject404, _templateObject415, _templateObject424, _templateObject434, _templateObject444, _templateObject454, _templateObject463, _templateObject473, _templateObject482, _templateObject492, _templateObject502, _templateObject512, _templateObject522, _templateObject532, _templateObject542, _templateObject552, _templateObject562, _templateObject572, _templateObject582, _templateObject59, _templateObject60, _templateObject61, _templateObject622, scrapbookChargesLastUpdated, asdonMartinSource, freeRunSources;
var init_FreeRun = __esm({
  "../../node_modules/libram/dist/actions/FreeRun.js": function() {
    import_kolmafia13 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_Bandersnatch();
    init_StompingBoots();
    init_AsdonMartin();
    init_template_string();
    init_ActionSource();
    scrapbookChargesLastUpdated = get("_lastCombatStarted");
    asdonMartinSource = new ActionSource($skill(_templateObject57 || (_templateObject57 = _taggedTemplateLiteral7(["Asdon Martin: Spring-Loaded Front Bumper"]))), function() {
      if (!installed())
        return 0;
      var banishes = get("banishedMonsters").split(":");
      var bumperIndex = banishes.map(function(string) {
        return string.toLowerCase();
      }).indexOf("spring-loaded front bumper");
      if (bumperIndex === -1)
        return 1;
      return (0, import_kolmafia13.myTurncount)() - parseInt(banishes[bumperIndex + 1]) > 30 ? 1 : 0;
    }, Macro.trySkill($skill(_templateObject216 || (_templateObject216 = _taggedTemplateLiteral7(["Asdon Martin: Spring-Loaded Front Bumper"])))), {
      preparation: function() {
        return fillTo(50);
      }
    });
    freeRunSources = [
      // Free limited sources
      new ActionSource($familiar(_templateObject316 || (_templateObject316 = _taggedTemplateLiteral7(["Frumious Bandersnatch"]))), function() {
        return (have($effect(_templateObject414 || (_templateObject414 = _taggedTemplateLiteral7(["Ode to Booze"])))) || getSongCount() < getSongLimit()) && couldRunaway() ? getRemainingRunaways() : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement(["Familiar Weight"], {});
        },
        preparation: function() {
          ensureEffect($effect(_templateObject58 || (_templateObject58 = _taggedTemplateLiteral7(["Ode to Booze"]))));
          return have($effect(_templateObject65 || (_templateObject65 = _taggedTemplateLiteral7(["Ode to Booze"]))));
        },
        familiar: function() {
          return $familiar(_templateObject75 || (_templateObject75 = _taggedTemplateLiteral7(["Frumious Bandersnatch"])));
        }
      }),
      new ActionSource($familiar(_templateObject85 || (_templateObject85 = _taggedTemplateLiteral7(["Pair of Stomping Boots"]))), function() {
        return couldRunaway2() ? getRemainingRunaways2() : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement(["Familiar Weight"], {});
        },
        familiar: function() {
          return $familiar(_templateObject95 || (_templateObject95 = _taggedTemplateLiteral7(["Pair of Stomping Boots"])));
        }
      }),
      new ActionSource($skill(_templateObject105 || (_templateObject105 = _taggedTemplateLiteral7(["Snokebomb"]))), function() {
        return have($skill(_templateObject115 || (_templateObject115 = _taggedTemplateLiteral7(["Snokebomb"])))) ? 3 - get("_snokebombUsed") : 0;
      }, Macro.skill($skill(_templateObject125 || (_templateObject125 = _taggedTemplateLiteral7(["Snokebomb"])))), {
        preparation: function() {
          return (0, import_kolmafia13.restoreMp)(50);
        }
      }),
      new ActionSource($skill(_templateObject135 || (_templateObject135 = _taggedTemplateLiteral7(["Emotionally Chipped"]))), function() {
        return have($skill(_templateObject144 || (_templateObject144 = _taggedTemplateLiteral7(["Emotionally Chipped"])))) ? 3 - get("_feelHatredUsed") : 0;
      }, Macro.skill($skill(_templateObject154 || (_templateObject154 = _taggedTemplateLiteral7(["Feel Hatred"]))))),
      new ActionSource($item(_templateObject164 || (_templateObject164 = _taggedTemplateLiteral7(["Kremlin's Greatest Briefcase"]))), function() {
        return have($item(_templateObject174 || (_templateObject174 = _taggedTemplateLiteral7(["Kremlin's Greatest Briefcase"])))) ? 3 - get("_kgbTranquilizerDartUses") : 0;
      }, Macro.skill($skill(_templateObject184 || (_templateObject184 = _taggedTemplateLiteral7(["KGB tranquilizer dart"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject194 || (_templateObject194 = _taggedTemplateLiteral7(["Kremlin's Greatest Briefcase"])))
          });
        }
      }),
      new ActionSource($item(_templateObject204 || (_templateObject204 = _taggedTemplateLiteral7(["latte lovers member's mug"]))), function() {
        return have($item(_templateObject217 || (_templateObject217 = _taggedTemplateLiteral7(["latte lovers member's mug"])))) && !get("_latteBanishUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject224 || (_templateObject224 = _taggedTemplateLiteral7(["Throw Latte on Opponent"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject234 || (_templateObject234 = _taggedTemplateLiteral7(["latte lovers member's mug"])))
          });
        }
      }),
      new ActionSource($item(_templateObject244 || (_templateObject244 = _taggedTemplateLiteral7(["Lil' Doctor\u2122 bag"]))), function() {
        return have($item(_templateObject254 || (_templateObject254 = _taggedTemplateLiteral7(["Lil' Doctor\u2122 bag"])))) ? 3 - get("_reflexHammerUsed") : 0;
      }, Macro.skill($skill(_templateObject264 || (_templateObject264 = _taggedTemplateLiteral7(["Reflex Hammer"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject274 || (_templateObject274 = _taggedTemplateLiteral7(["Lil' Doctor\u2122 bag"])))
          });
        }
      }),
      new ActionSource($item(_templateObject284 || (_templateObject284 = _taggedTemplateLiteral7(["mafia middle finger ring"]))), function() {
        return have($item(_templateObject294 || (_templateObject294 = _taggedTemplateLiteral7(["mafia middle finger ring"])))) && (0, import_kolmafia13.canEquip)($item(_templateObject304 || (_templateObject304 = _taggedTemplateLiteral7(["mafia middle finger ring"])))) && !get("_mafiaMiddleFingerRingUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject317 || (_templateObject317 = _taggedTemplateLiteral7(["Show them your ring"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject324 || (_templateObject324 = _taggedTemplateLiteral7(["mafia middle finger ring"])))
          });
        }
      }),
      new ActionSource($item(_templateObject334 || (_templateObject334 = _taggedTemplateLiteral7(["V for Vivala mask"]))), function() {
        return have($item(_templateObject344 || (_templateObject344 = _taggedTemplateLiteral7(["V for Vivala mask"])))) && !get("_vmaskBanisherUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject354 || (_templateObject354 = _taggedTemplateLiteral7(["Creepy Grin"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject364 || (_templateObject364 = _taggedTemplateLiteral7(["V for Vivala mask"])))
          });
        },
        preparation: function() {
          return (0, import_kolmafia13.restoreMp)(30);
        }
      }),
      new ActionSource($item(_templateObject374 || (_templateObject374 = _taggedTemplateLiteral7(["stinky cheese eye"]))), function() {
        return getFoldGroup($item(_templateObject384 || (_templateObject384 = _taggedTemplateLiteral7(["stinky cheese eye"])))).some(function(item10) {
          return have(item10);
        }) && !get("_stinkyCheeseBanisherUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject394 || (_templateObject394 = _taggedTemplateLiteral7(["Give Your Opponent the Stinkeye"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject404 || (_templateObject404 = _taggedTemplateLiteral7(["stinky cheese eye"])))
          });
        },
        preparation: function() {
          if (!have($item(_templateObject415 || (_templateObject415 = _taggedTemplateLiteral7(["stinky cheese eye"]))))) {
            (0, import_kolmafia13.cliExecute)("fold stinky cheese eye");
          }
          return have($item(_templateObject424 || (_templateObject424 = _taggedTemplateLiteral7(["stinky cheese eye"]))));
        }
      }),
      new ActionSource($item(_templateObject434 || (_templateObject434 = _taggedTemplateLiteral7(["navel ring of navel gazing"]))), function() {
        return have($item(_templateObject444 || (_templateObject444 = _taggedTemplateLiteral7(["navel ring of navel gazing"])))) ? Math.max(0, 3 - get("_navelRunaways")) : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject454 || (_templateObject454 = _taggedTemplateLiteral7(["navel ring of navel gazing"])))
          });
        }
      }),
      new ActionSource($item(_templateObject463 || (_templateObject463 = _taggedTemplateLiteral7(["Greatest American Pants"]))), function() {
        return have($item(_templateObject473 || (_templateObject473 = _taggedTemplateLiteral7(["Greatest American Pants"])))) ? Math.max(0, 3 - get("_navelRunaways")) : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject482 || (_templateObject482 = _taggedTemplateLiteral7(["Greatest American Pants"])))
          });
        }
      }),
      new ActionSource($skill(_templateObject492 || (_templateObject492 = _taggedTemplateLiteral7(["Show your boring familiar pictures"]))), function() {
        if (have($item(_templateObject502 || (_templateObject502 = _taggedTemplateLiteral7(["familiar scrapbook"]))))) {
          if (scrapbookChargesLastUpdated !== get("_lastCombatStarted")) {
            (0, import_kolmafia13.visitUrl)("desc_item.php?whichitem=463063785");
            scrapbookChargesLastUpdated = get("_lastCombatStarted");
          }
          return Math.floor(get("scrapbookCharges") / 100);
        }
        return 0;
      }, Macro.skill($skill(_templateObject512 || (_templateObject512 = _taggedTemplateLiteral7(["Show your boring familiar pictures"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject522 || (_templateObject522 = _taggedTemplateLiteral7(["familiar scrapbook"])))
          });
        }
      }),
      new ActionSource($item(_templateObject532 || (_templateObject532 = _taggedTemplateLiteral7(["peppermint parasol"]))), function() {
        return Math.max(0, 3 - get("_navelRunaways"));
      }, Macro.item($item(_templateObject542 || (_templateObject542 = _taggedTemplateLiteral7(["peppermint parasol"])))), {
        preparation: function() {
          return (0, import_kolmafia13.retrieveItem)($item(_templateObject552 || (_templateObject552 = _taggedTemplateLiteral7(["peppermint parasol"]))));
        },
        cost: function() {
          return Math.min(ActionSource.defaultPriceFunction($item(_templateObject562 || (_templateObject562 = _taggedTemplateLiteral7(["peppermint sprout"])))) * 5, ActionSource.defaultPriceFunction($item(_templateObject572 || (_templateObject572 = _taggedTemplateLiteral7(["peppermint parasol"]))))) / 10;
        }
        // Breaks after 10 successful runaways.
      }),
      new ActionSource($item(_templateObject582 || (_templateObject582 = _taggedTemplateLiteral7(["human musk"]))), function() {
        return Math.max(0, 3 - get("_humanMuskUses"));
      }, Macro.item($item(_templateObject59 || (_templateObject59 = _taggedTemplateLiteral7(["human musk"])))), {
        preparation: function() {
          return (0, import_kolmafia13.retrieveItem)($item(_templateObject60 || (_templateObject60 = _taggedTemplateLiteral7(["human musk"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject61 || (_templateObject61 = _taggedTemplateLiteral7(["human musk"]))));
        }
      })
    ].concat(_toConsumableArray6($items(_templateObject622 || (_templateObject622 = _taggedTemplateLiteral7(["Louder Than Bomb, divine champagne popper, tennis ball"]))).map(function(item10) {
      return new ActionSource(item10, function() {
        return Infinity;
      }, Macro.item(item10), {
        preparation: function() {
          return (0, import_kolmafia13.retrieveItem)(item10);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item10);
        }
      });
    })));
  }
});

// ../../node_modules/libram/dist/actions/index.js
var init_actions = __esm({
  "../../node_modules/libram/dist/actions/index.js": function() {
    init_ActionSource();
    init_FreeKill();
    init_FreeRun();
  }
});

// ../../node_modules/libram/dist/resources/2008/Stickers.js
var Stickers_exports = {};
__export(Stickers_exports, {
  currentStickers: function() {
    return currentStickers;
  },
  foldWeapon: function() {
    return foldWeapon;
  },
  have: function() {
    return have5;
  },
  makeSword: function() {
    return makeSword;
  },
  setStickers: function() {
    return setStickers;
  },
  stickers: function() {
    return stickers;
  },
  weapon: function() {
    return weapon;
  }
});
function _taggedTemplateLiteral8(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have5() {
  return (0, import_kolmafia14.haveSkill)($skill(_templateObject76 || (_templateObject76 = _taggedTemplateLiteral8(["Summon Stickers"]))));
}
function weapon() {
  var _find;
  return (_find = $items(_templateObject86 || (_templateObject86 = _taggedTemplateLiteral8(["scratch 'n' sniff sword, scratch 'n' sniff crossbow"]))).find(function(i) {
    return (0, import_kolmafia14.availableAmount)(i);
  })) !== null && _find !== void 0 ? _find : null;
}
function makeSword(sticker) {
  if (weapon())
    return;
  (0, import_kolmafia14.visitUrl)("bedazzle.php?action=juststick&sticker=".concat(stickers[sticker].id, "&pwd"));
}
function foldWeapon(mode) {
  var currentWep = weapon();
  if (!currentWep)
    return false;
  if (weapons[mode] === currentWep)
    return true;
  (0, import_kolmafia14.visitUrl)("bedazzle.php?action=fold&pwd");
  return weapons[mode] === currentWep;
}
function currentStickers() {
  return $slots(_templateObject116 || (_templateObject116 = _taggedTemplateLiteral8(["sticker1, sticker2, sticker3"]))).map(function(s) {
    return (0, import_kolmafia14.equippedItem)(s);
  });
}
function setStickers() {
  for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++) {
    options[_key] = arguments[_key];
  }
  var _loop = function _loop2() {
    var s = _options[_i];
    if (s)
      (0, import_kolmafia14.retrieveItem)(stickers[s], options.filter(function(x) {
        return x === s;
      }).length);
  };
  for (var _i = 0, _options = options; _i < _options.length; _i++) {
    _loop();
  }
  (0, import_kolmafia14.visitUrl)("bedazzle.php");
  var start = currentStickers();
  for (var i = 0; i <= 2; i++) {
    var sticker = options[i];
    if (!sticker)
      continue;
    var item10 = stickers[sticker];
    if (start[i] === item10)
      continue;
    (0, import_kolmafia14.visitUrl)("bedazzle.php?action=peel&slot=".concat(i + 1, "&pwd"));
    (0, import_kolmafia14.visitUrl)("bedazzle.php?action=stick&slot=".concat(i + 1, "&sticker=").concat(item10.id, "&pwd"));
  }
  return currentStickers();
}
var import_kolmafia14, _templateObject66, _templateObject218, _templateObject318, _templateObject416, _templateObject510, _templateObject67, _templateObject76, _templateObject86, _templateObject96, _templateObject106, _templateObject116, stickers, weapons;
var init_Stickers = __esm({
  "../../node_modules/libram/dist/resources/2008/Stickers.js": function() {
    import_kolmafia14 = require("kolmafia");
    init_template_string();
    stickers = {
      unicorn: $item(_templateObject66 || (_templateObject66 = _taggedTemplateLiteral8(["scratch 'n' sniff unicorn sticker"]))),
      apple: $item(_templateObject218 || (_templateObject218 = _taggedTemplateLiteral8(["scratch 'n' sniff apple sticker"]))),
      UPC: $item(_templateObject318 || (_templateObject318 = _taggedTemplateLiteral8(["scratch 'n' sniff UPC sticker"]))),
      wrestler: $item(_templateObject416 || (_templateObject416 = _taggedTemplateLiteral8(["scratch 'n' sniff wrestler sticker"]))),
      dragon: $item(_templateObject510 || (_templateObject510 = _taggedTemplateLiteral8(["scratch 'n' sniff dragon sticker"]))),
      rockband: $item(_templateObject67 || (_templateObject67 = _taggedTemplateLiteral8(["scratch 'n' sniff rock band sticker"])))
    };
    weapons = {
      sword: $item(_templateObject96 || (_templateObject96 = _taggedTemplateLiteral8(["scratch 'n' sniff sword"]))),
      crossbow: $item(_templateObject106 || (_templateObject106 = _taggedTemplateLiteral8(["scratch 'n' sniff crossbow"])))
    };
  }
});

// ../../node_modules/libram/dist/resources/2009/SpookyPutty.js
var SpookyPutty_exports = {};
__export(SpookyPutty_exports, {
  getSpookyPuttySheetCopiesMade: function() {
    return getSpookyPuttySheetCopiesMade;
  },
  getSpookyPuttySheetMonster: function() {
    return getSpookyPuttySheetMonster;
  },
  have: function() {
    return have6;
  },
  prepareSpookyPuttySheet: function() {
    return prepareSpookyPuttySheet;
  },
  useSpookyPuttySheet: function() {
    return useSpookyPuttySheet;
  }
});
function _taggedTemplateLiteral9(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have6() {
  return getFoldGroup(sheet).some(function(item10) {
    return have(item10);
  });
}
function getSpookyPuttySheetCopiesMade() {
  return Math.max(0, get("spookyPuttyCopiesMade"));
}
function prepareSpookyPuttySheet() {
  if (!have6())
    return false;
  if (have(sheet))
    return true;
  return (0, import_kolmafia15.cliExecute)("fold Spooky putty sheet");
}
function getSpookyPuttySheetMonster() {
  return get("spookyPuttyMonster");
}
function useSpookyPuttySheet() {
  return (0, import_kolmafia15.use)(sheet);
}
var import_kolmafia15, _templateObject68, sheet;
var init_SpookyPutty = __esm({
  "../../node_modules/libram/dist/resources/2009/SpookyPutty.js": function() {
    import_kolmafia15 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    sheet = $item(_templateObject68 || (_templateObject68 = _taggedTemplateLiteral9(["Spooky Putty sheet"])));
  }
});

// ../../node_modules/libram/dist/resources/2010/CrownOfThrones.js
var CrownOfThrones_exports = {};
__export(CrownOfThrones_exports, {
  createModifierValueFunction: function() {
    return createModifierValueFunction;
  },
  createRiderMode: function() {
    return createRiderMode;
  },
  getModifier: function() {
    return getModifier;
  },
  hasRiderMode: function() {
    return hasRiderMode;
  },
  pickRider: function() {
    return pickRider;
  },
  ridingFamiliars: function() {
    return ridingFamiliars;
  },
  valueRider: function() {
    return valueRider;
  }
});
function ownKeys4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys4(Object(t), true).forEach(function(r2) {
      _defineProperty7(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys4(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty7(obj, key, value) {
  key = _toPropertyKey8(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey8(arg) {
  var key = _toPrimitive8(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive8(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toConsumableArray7(arr) {
  return _arrayWithoutHoles7(arr) || _iterableToArray7(arr) || _unsupportedIterableToArray12(arr) || _nonIterableSpread7();
}
function _nonIterableSpread7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray12(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray12(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray12(o, minLen);
}
function _iterableToArray7(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles7(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray12(arr);
}
function _arrayLikeToArray12(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral10(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function valueRider(rider, modifierValueFunction, dropsValueFunction2) {
  var ignoreLimitedDrops = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  var dropValue2 = !rider.dropPredicate || rider.dropPredicate() && !ignoreLimitedDrops ? rider.probability * (typeof rider.drops === "number" ? rider.drops : dropsValueFunction2(rider.drops)) : 0;
  var modifierValue = modifierValueFunction(rider.familiar);
  return dropValue2 + modifierValue;
}
function createRiderMode(name, details) {
  return riderModes.set(name, _objectSpread4(_objectSpread4({}, DEFAULTS), details));
}
function hasRiderMode(name) {
  return riderModes.has(name);
}
function pickRider(mode) {
  var modeData = riderModes.get(mode);
  if (!modeData)
    return null;
  var modifierValueFunction = modeData.modifierValueFunction, dropsValueFunction2 = modeData.dropsValueFunction, ignoreLimitedDrops = modeData.ignoreLimitedDrops, excludeCurrentFamiliar = modeData.excludeCurrentFamiliar;
  if (!riderLists.has(mode)) {
    riderLists.set(mode, FULL_RIDING_LIST.filter(function(_ref2) {
      var familiar7 = _ref2.familiar;
      return have(familiar7);
    }).sort(function(a, b) {
      return valueRider(b, modifierValueFunction, dropsValueFunction2, ignoreLimitedDrops) - valueRider(a, modifierValueFunction, dropsValueFunction2, ignoreLimitedDrops);
    }));
  }
  var list = riderLists.get(mode);
  if (list) {
    var riderToReturn = list.find(function(_ref3) {
      var _dropPredicate;
      var dropPredicate = _ref3.dropPredicate, familiar7 = _ref3.familiar;
      return ((_dropPredicate = dropPredicate === null || dropPredicate === void 0 ? void 0 : dropPredicate()) !== null && _dropPredicate !== void 0 ? _dropPredicate : true) && (!excludeCurrentFamiliar || (0, import_kolmafia16.myFamiliar)() !== familiar7);
    });
    return riderToReturn !== null && riderToReturn !== void 0 ? riderToReturn : null;
  }
  return null;
}
function getModifier(modifier, familiar7) {
  return (0, import_kolmafia16.numericModifier)("Throne:".concat(familiar7), modifier);
}
function createModifierValueFunction(modifiers, functions) {
  return function(familiar7) {
    return sum(modifiers, function(modifier) {
      return functions[modifier](getModifier(modifier, familiar7));
    });
  };
}
var import_kolmafia16, _templateObject69, _templateObject219, _templateObject319, _templateObject417, _templateObject511, _templateObject610, _templateObject77, _templateObject87, _templateObject97, _templateObject107, _templateObject117, _templateObject126, _templateObject136, _templateObject145, _templateObject155, _templateObject165, _templateObject175, _templateObject185, _templateObject195, _templateObject205, _templateObject2110, _templateObject225, _templateObject235, _templateObject245, _templateObject255, _templateObject265, _templateObject275, _templateObject285, _templateObject295, _templateObject305, _templateObject3110, _templateObject325, _templateObject335, _templateObject345, _templateObject355, _templateObject365, _templateObject375, _templateObject385, _templateObject395, _templateObject405, _templateObject418, _templateObject425, _templateObject435, _templateObject445, _templateObject455, _templateObject464, _templateObject474, _templateObject483, _templateObject493, _templateObject503, _templateObject513, _templateObject523, _templateObject533, _templateObject543, _templateObject553, _templateObject563, _templateObject573, _templateObject583, _templateObject592, _templateObject602, _templateObject612, _templateObject623, _templateObject632, _templateObject642, _templateObject652, _templateObject662, _templateObject672, _templateObject682, _templateObject692, _templateObject70, _templateObject71, _templateObject722, _templateObject732, _templateObject742, _templateObject752, _templateObject762, _templateObject772, _templateObject78, _templateObject79, _templateObject80, _templateObject81, _templateObject822, _templateObject832, _templateObject842, _templateObject852, _templateObject862, _templateObject872, _templateObject88, _templateObject89, _templateObject90, _templateObject91, _templateObject922, _templateObject932, _templateObject942, _templateObject952, _templateObject962, _templateObject972, _templateObject98, _templateObject99, ridingFamiliars, FULL_RIDING_LIST, riderModes, DEFAULTS, riderLists;
var init_CrownOfThrones = __esm({
  "../../node_modules/libram/dist/resources/2010/CrownOfThrones.js": function() {
    import_kolmafia16 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    ridingFamiliars = [{
      familiar: $familiar(_templateObject69 || (_templateObject69 = _taggedTemplateLiteral10(["Puck Man"]))),
      drops: $items(_templateObject219 || (_templateObject219 = _taggedTemplateLiteral10(["yellow pixel"]))),
      probability: 0.25,
      dropPredicate: function() {
        return get("_yellowPixelDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject319 || (_templateObject319 = _taggedTemplateLiteral10(["Ms. Puck Man"]))),
      drops: $items(_templateObject417 || (_templateObject417 = _taggedTemplateLiteral10(["yellow pixel"]))),
      probability: 0.25,
      dropPredicate: function() {
        return get("_yellowPixelDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject511 || (_templateObject511 = _taggedTemplateLiteral10(["Grimstone Golem"]))),
      drops: $items(_templateObject610 || (_templateObject610 = _taggedTemplateLiteral10(["grimstone mask"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_grimstoneMaskDropsCrown") < 1;
      }
    }, {
      familiar: $familiar(_templateObject77 || (_templateObject77 = _taggedTemplateLiteral10(["Knob Goblin Organ Grinder"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject87 || (_templateObject87 = _taggedTemplateLiteral10(["Happy Medium"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject97 || (_templateObject97 = _taggedTemplateLiteral10(["Garbage Fire"]))),
      drops: $items(_templateObject107 || (_templateObject107 = _taggedTemplateLiteral10(["burning newspaper"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_garbageFireDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject117 || (_templateObject117 = _taggedTemplateLiteral10(["Machine Elf"]))),
      drops: $items(_templateObject126 || (_templateObject126 = _taggedTemplateLiteral10(["abstraction: sensation, abstraction: thought, abstraction: action, abstraction: category, abstraction: perception, abstraction: purpose"]))),
      probability: 0.2,
      dropPredicate: function() {
        return get("_abstractionDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject136 || (_templateObject136 = _taggedTemplateLiteral10(["Trick-or-Treating Tot"]))),
      drops: $items(_templateObject145 || (_templateObject145 = _taggedTemplateLiteral10(["hoarded candy wad"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_hoardedCandyDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject155 || (_templateObject155 = _taggedTemplateLiteral10(["Warbear Drone"]))),
      drops: $items(_templateObject165 || (_templateObject165 = _taggedTemplateLiteral10(["warbear whosit"]))),
      probability: 1 / 4.5
    }, {
      familiar: $familiar(_templateObject175 || (_templateObject175 = _taggedTemplateLiteral10(["Li'l Xenomorph"]))),
      drops: $items(_templateObject185 || (_templateObject185 = _taggedTemplateLiteral10(["lunar isotope"]))),
      probability: 0.05
    }, {
      familiar: $familiar(_templateObject195 || (_templateObject195 = _taggedTemplateLiteral10(["Pottery Barn Owl"]))),
      drops: $items(_templateObject205 || (_templateObject205 = _taggedTemplateLiteral10(["volcanic ash"]))),
      probability: 0.1
    }, {
      familiar: $familiar(_templateObject2110 || (_templateObject2110 = _taggedTemplateLiteral10(["Grim Brother"]))),
      drops: $items(_templateObject225 || (_templateObject225 = _taggedTemplateLiteral10(["grim fairy tale"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_grimFairyTaleDropsCrown") < 2;
      }
    }, {
      familiar: $familiar(_templateObject235 || (_templateObject235 = _taggedTemplateLiteral10(["Optimistic Candle"]))),
      drops: $items(_templateObject245 || (_templateObject245 = _taggedTemplateLiteral10(["glob of melted wax"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_optimisticCandleDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject255 || (_templateObject255 = _taggedTemplateLiteral10(["Adventurous Spelunker"]))),
      drops: $items(_templateObject265 || (_templateObject265 = _taggedTemplateLiteral10(["teflon ore, velcro ore, vinyl ore, cardboard ore, styrofoam ore, bubblewrap ore"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_oreDropsCrown") < 6;
      }
    }, {
      familiar: $familiar(_templateObject275 || (_templateObject275 = _taggedTemplateLiteral10(["Twitching Space Critter"]))),
      drops: $items(_templateObject285 || (_templateObject285 = _taggedTemplateLiteral10(["space beast fur"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_spaceFurDropsCrown") < 1;
      }
    }, {
      familiar: $familiar(_templateObject295 || (_templateObject295 = _taggedTemplateLiteral10(["Party Mouse"]))),
      drops: 50,
      probability: 0.05
    }, {
      familiar: $familiar(_templateObject305 || (_templateObject305 = _taggedTemplateLiteral10(["Yule Hound"]))),
      drops: $items(_templateObject3110 || (_templateObject3110 = _taggedTemplateLiteral10(["candy cane"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject325 || (_templateObject325 = _taggedTemplateLiteral10(["Gluttonous Green Ghost"]))),
      drops: $items(_templateObject335 || (_templateObject335 = _taggedTemplateLiteral10(["bean burrito, enchanted bean burrito, jumping bean burrito"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject345 || (_templateObject345 = _taggedTemplateLiteral10(["Reassembled Blackbird"]))),
      drops: $items(_templateObject355 || (_templateObject355 = _taggedTemplateLiteral10(["blackberry"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject365 || (_templateObject365 = _taggedTemplateLiteral10(["Reconstituted Crow"]))),
      drops: $items(_templateObject375 || (_templateObject375 = _taggedTemplateLiteral10(["blackberry"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject385 || (_templateObject385 = _taggedTemplateLiteral10(["Hunchbacked Minion"]))),
      drops: /* @__PURE__ */ new Map([[$item(_templateObject395 || (_templateObject395 = _taggedTemplateLiteral10(["disembodied brain"]))), 0.02], [$item(_templateObject405 || (_templateObject405 = _taggedTemplateLiteral10(["skeleton bone"]))), 0.98]]),
      probability: 1
    }, {
      familiar: $familiar(_templateObject418 || (_templateObject418 = _taggedTemplateLiteral10(["Reanimated Reanimator"]))),
      drops: $items(_templateObject425 || (_templateObject425 = _taggedTemplateLiteral10(["hot wing, broken skull"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject435 || (_templateObject435 = _taggedTemplateLiteral10(["Attention-Deficit Demon"]))),
      drops: $items(_templateObject445 || (_templateObject445 = _taggedTemplateLiteral10(["chorizo brownies, white chocolate and tomato pizza, carob chunk noodles"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject455 || (_templateObject455 = _taggedTemplateLiteral10(["Piano Cat"]))),
      drops: $items(_templateObject464 || (_templateObject464 = _taggedTemplateLiteral10(["beertini, papaya slung, salty slug, tomato daiquiri"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject474 || (_templateObject474 = _taggedTemplateLiteral10(["Golden Monkey"]))),
      drops: $items(_templateObject483 || (_templateObject483 = _taggedTemplateLiteral10(["gold nuggets"]))),
      probability: 0.5
    }, {
      familiar: $familiar(_templateObject493 || (_templateObject493 = _taggedTemplateLiteral10(["Robot Reindeer"]))),
      drops: $items(_templateObject503 || (_templateObject503 = _taggedTemplateLiteral10(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject513 || (_templateObject513 = _taggedTemplateLiteral10(["Stocking Mimic"]))),
      drops: $items(_templateObject523 || (_templateObject523 = _taggedTemplateLiteral10(["Angry Farmer candy, Cold Hots candy, Rock Pops, Tasty Fun Good rice candy, Wint-O-Fresh mint"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject533 || (_templateObject533 = _taggedTemplateLiteral10(["BRICKO chick"]))),
      drops: $items(_templateObject543 || (_templateObject543 = _taggedTemplateLiteral10(["BRICKO brick"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject553 || (_templateObject553 = _taggedTemplateLiteral10(["Cotton Candy Carnie"]))),
      drops: $items(_templateObject563 || (_templateObject563 = _taggedTemplateLiteral10(["cotton candy pinch"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject573 || (_templateObject573 = _taggedTemplateLiteral10(["Untamed Turtle"]))),
      drops: $items(_templateObject583 || (_templateObject583 = _taggedTemplateLiteral10(["snailmail bits, turtlemail bits, turtle wax"]))),
      probability: 0.35
    }, {
      familiar: $familiar(_templateObject592 || (_templateObject592 = _taggedTemplateLiteral10(["Astral Badger"]))),
      drops: $items(_templateObject602 || (_templateObject602 = _taggedTemplateLiteral10(["spooky mushroom, Knob mushroom, Knoll mushroom"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject612 || (_templateObject612 = _taggedTemplateLiteral10(["Green Pixie"]))),
      drops: $items(_templateObject623 || (_templateObject623 = _taggedTemplateLiteral10(["bottle of tequila"]))),
      probability: 0.2
    }, {
      familiar: $familiar(_templateObject632 || (_templateObject632 = _taggedTemplateLiteral10(["Angry Goat"]))),
      drops: $items(_templateObject642 || (_templateObject642 = _taggedTemplateLiteral10(["goat cheese pizza"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject652 || (_templateObject652 = _taggedTemplateLiteral10(["Adorable Seal Larva"]))),
      drops: $items(_templateObject662 || (_templateObject662 = _taggedTemplateLiteral10(["stench nuggets, spooky nuggets, hot nuggets, cold nuggets, sleaze nuggets"]))),
      probability: 0.35
    }, {
      familiar: $familiar(_templateObject672 || (_templateObject672 = _taggedTemplateLiteral10(["Ancient Yuletide Troll"]))),
      drops: $items(_templateObject682 || (_templateObject682 = _taggedTemplateLiteral10(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject692 || (_templateObject692 = _taggedTemplateLiteral10(["Sweet Nutcracker"]))),
      drops: $items(_templateObject70 || (_templateObject70 = _taggedTemplateLiteral10(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject71 || (_templateObject71 = _taggedTemplateLiteral10(["Casagnova Gnome"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject722 || (_templateObject722 = _taggedTemplateLiteral10(["Coffee Pixie"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject732 || (_templateObject732 = _taggedTemplateLiteral10(["Dancing Frog"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject742 || (_templateObject742 = _taggedTemplateLiteral10(["Grouper Groupie"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject752 || (_templateObject752 = _taggedTemplateLiteral10(["Hand Turkey"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject762 || (_templateObject762 = _taggedTemplateLiteral10(["Hippo Ballerina"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject772 || (_templateObject772 = _taggedTemplateLiteral10(["Jitterbug"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject78 || (_templateObject78 = _taggedTemplateLiteral10(["Leprechaun"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject79 || (_templateObject79 = _taggedTemplateLiteral10(["Obtuse Angel"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject80 || (_templateObject80 = _taggedTemplateLiteral10(["Psychedelic Bear"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject81 || (_templateObject81 = _taggedTemplateLiteral10(["Robortender"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject822 || (_templateObject822 = _taggedTemplateLiteral10(["Ghost of Crimbo Commerce"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject832 || (_templateObject832 = _taggedTemplateLiteral10(["Hobo Monkey"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject842 || (_templateObject842 = _taggedTemplateLiteral10(["Rockin' Robin"]))),
      drops: 60,
      probability: 1
    }, {
      familiar: $familiar(_templateObject852 || (_templateObject852 = _taggedTemplateLiteral10(["Feral Kobold"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject862 || (_templateObject862 = _taggedTemplateLiteral10(["Oily Woim"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject872 || (_templateObject872 = _taggedTemplateLiteral10(["Cat Burglar"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject88 || (_templateObject88 = _taggedTemplateLiteral10(["Misshapen Animal Skeleton"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject89 || (_templateObject89 = _taggedTemplateLiteral10(["Gelatinous Cubeling"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject90 || (_templateObject90 = _taggedTemplateLiteral10(["Frozen Gravy Fairy"]))),
      drops: $items(_templateObject91 || (_templateObject91 = _taggedTemplateLiteral10(["cold nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject922 || (_templateObject922 = _taggedTemplateLiteral10(["Stinky Gravy Fairy"]))),
      drops: $items(_templateObject932 || (_templateObject932 = _taggedTemplateLiteral10(["stench nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject942 || (_templateObject942 = _taggedTemplateLiteral10(["Sleazy Gravy Fairy"]))),
      drops: $items(_templateObject952 || (_templateObject952 = _taggedTemplateLiteral10(["sleaze nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject962 || (_templateObject962 = _taggedTemplateLiteral10(["Spooky Gravy Fairy"]))),
      drops: $items(_templateObject972 || (_templateObject972 = _taggedTemplateLiteral10(["spooky nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject98 || (_templateObject98 = _taggedTemplateLiteral10(["Flaming Gravy Fairy"]))),
      // drops a hot nugget every combat, 5 of which can be used to make a hot wad
      drops: $items(_templateObject99 || (_templateObject99 = _taggedTemplateLiteral10(["hot nuggets"]))),
      probability: 1
    }];
    FULL_RIDING_LIST = [].concat(ridingFamiliars, _toConsumableArray7(import_kolmafia16.Familiar.all().filter(function(f) {
      return !ridingFamiliars.some(function(_ref) {
        var familiar7 = _ref.familiar;
        return familiar7 === f;
      });
    }).map(function(familiar7) {
      return {
        familiar: familiar7,
        drops: 0,
        probability: 1
      };
    })));
    riderModes = /* @__PURE__ */ new Map();
    DEFAULTS = {
      modifierValueFunction: function() {
        return 0;
      },
      dropsValueFunction: function() {
        return 0;
      },
      ignoreLimitedDrops: false,
      excludeCurrentFamiliar: true
    };
    riderLists = /* @__PURE__ */ new Map();
  }
});

// ../../node_modules/libram/dist/resources/2010/LookingGlass.js
var LookingGlass_exports = {};
__export(LookingGlass_exports, {
  findTeaPartyHatLength: function() {
    return findTeaPartyHatLength;
  },
  findTeaPartyHats: function() {
    return findTeaPartyHats;
  },
  haveTeaPartyHat: function() {
    return haveTeaPartyHat;
  },
  tryTeaPartyBuff: function() {
    return tryTeaPartyBuff;
  }
});
function _taggedTemplateLiteral11(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function validTeaPartyHat(item10, characters) {
  if ((0, import_kolmafia17.toSlot)(item10) !== $slot(_templateObject320 || (_templateObject320 = _taggedTemplateLiteral11(["hat"]))) || !(0, import_kolmafia17.canEquip)(item10)) {
    return false;
  } else if (characters <= 5) {
    return item10.nameLength <= 5;
  } else if (characters >= 30) {
    return item10.nameLength >= 30;
  }
  return characters === item10.nameLength;
}
function findTeaPartyHatLength(effect2) {
  var effectId = effect2.id;
  if (effectId < firstTeaPartyEffect.id || effectId > lastTeaPartyEffect.id) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return Math.floor(effectId - firstTeaPartyEffect.id + 5);
}
function findTeaPartyHats(effect2) {
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return import_kolmafia17.Item.all().filter(function(item10) {
    return validTeaPartyHat(item10, characters);
  });
}
function haveTeaPartyHat(effect2) {
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  return import_kolmafia17.Item.all().find(function(item10) {
    return validTeaPartyHat(item10, characters) && have(item10);
  }) !== void 0;
}
function tryTeaPartyBuff(effect2) {
  if (get("_madTeaParty")) {
    return false;
  }
  var characters = findTeaPartyHatLength(effect2);
  if (!characters) {
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  }
  if (!haveTeaPartyHat(effect2)) {
    return false;
  }
  ensureEffect($effect(_templateObject419 || (_templateObject419 = _taggedTemplateLiteral11(["Down the Rabbit Hole"]))));
  if (!have($effect(_templateObject514 || (_templateObject514 = _taggedTemplateLiteral11(["Down the Rabbit Hole"]))))) {
    return false;
  }
  var turns = (0, import_kolmafia17.haveEffect)(effect2);
  (0, import_kolmafia17.cliExecute)("hatter ".concat(characters));
  return have(effect2) && (0, import_kolmafia17.haveEffect)(effect2) > turns;
}
var import_kolmafia17, _templateObject100, _templateObject220, _templateObject320, _templateObject419, _templateObject514, firstTeaPartyEffect, lastTeaPartyEffect;
var init_LookingGlass = __esm({
  "../../node_modules/libram/dist/resources/2010/LookingGlass.js": function() {
    import_kolmafia17 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    firstTeaPartyEffect = $effect(_templateObject100 || (_templateObject100 = _taggedTemplateLiteral11(["Assaulted with Pepper"])));
    lastTeaPartyEffect = $effect(_templateObject220 || (_templateObject220 = _taggedTemplateLiteral11(["Oleaginous Soles"])));
  }
});

// ../../node_modules/libram/dist/Copier.js
function _defineProperties8(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey9(descriptor.key), descriptor);
  }
}
function _createClass8(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties8(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties8(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperty8(obj, key, value) {
  key = _toPropertyKey9(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey9(arg) {
  var key = _toPrimitive9(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive9(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var Copier;
var init_Copier = __esm({
  "../../node_modules/libram/dist/Copier.js": function() {
    Copier = /* @__PURE__ */ _createClass8(function Copier2(couldCopy, prepare, canCopy, copiedMonster, fightCopy) {
      _classCallCheck8(this, Copier2);
      _defineProperty8(this, "couldCopy", void 0);
      _defineProperty8(this, "prepare", void 0);
      _defineProperty8(this, "canCopy", void 0);
      _defineProperty8(this, "copiedMonster", void 0);
      _defineProperty8(this, "fightCopy", null);
      this.couldCopy = couldCopy;
      this.prepare = prepare;
      this.canCopy = canCopy;
      this.copiedMonster = copiedMonster;
      if (fightCopy)
        this.fightCopy = fightCopy;
    });
  }
});

// ../../node_modules/libram/dist/resources/2011/ObtuseAngel.js
var ObtuseAngel_exports = {};
__export(ObtuseAngel_exports, {
  BadlyRomanticArrow: function() {
    return BadlyRomanticArrow;
  },
  canUseBadlyRomanticArrow: function() {
    return canUseBadlyRomanticArrow;
  },
  couldUseBadlyRomanticArrow: function() {
    return couldUseBadlyRomanticArrow;
  },
  getBadlyRomanticArrowMonster: function() {
    return getBadlyRomanticArrowMonster;
  },
  getBadlyRomanticArrowUses: function() {
    return getBadlyRomanticArrowUses;
  },
  have: function() {
    return have7;
  },
  haveBadlyRomanticArrowUsesRemaining: function() {
    return haveBadlyRomanticArrowUsesRemaining;
  },
  prepareBadlyRomanticArrow: function() {
    return prepareBadlyRomanticArrow;
  }
});
function _taggedTemplateLiteral12(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have7() {
  return have(familiar3);
}
function getBadlyRomanticArrowUses() {
  return Math.max(0, get("_badlyRomanticArrows"));
}
function haveBadlyRomanticArrowUsesRemaining() {
  return getBadlyRomanticArrowUses() === 0;
}
function couldUseBadlyRomanticArrow() {
  return have7() && haveBadlyRomanticArrowUsesRemaining();
}
function prepareBadlyRomanticArrow() {
  return (0, import_kolmafia18.useFamiliar)(familiar3);
}
function canUseBadlyRomanticArrow() {
  return isCurrentFamiliar(familiar3) && haveBadlyRomanticArrowUsesRemaining();
}
function getBadlyRomanticArrowMonster() {
  return get("romanticTarget");
}
var import_kolmafia18, _templateObject101, familiar3, BadlyRomanticArrow;
var init_ObtuseAngel = __esm({
  "../../node_modules/libram/dist/resources/2011/ObtuseAngel.js": function() {
    import_kolmafia18 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    familiar3 = $familiar(_templateObject101 || (_templateObject101 = _taggedTemplateLiteral12(["Obtuse Angel"])));
    BadlyRomanticArrow = new Copier(function() {
      return couldUseBadlyRomanticArrow();
    }, function() {
      return prepareBadlyRomanticArrow();
    }, function() {
      return canUseBadlyRomanticArrow();
    }, function() {
      return getBadlyRomanticArrowMonster();
    });
  }
});

// ../../node_modules/libram/dist/resources/2012/RainDoh.js
var RainDoh_exports = {};
__export(RainDoh_exports, {
  getRainDohBlackBoxCopiesMade: function() {
    return getRainDohBlackBoxCopiesMade;
  },
  getRainDohBlackBoxMonster: function() {
    return getRainDohBlackBoxMonster;
  },
  have: function() {
    return have8;
  },
  useRainDohBlackBox: function() {
    return useRainDohBlackBox;
  }
});
function _taggedTemplateLiteral13(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have8() {
  return getFoldGroup(box).some(function(item10) {
    return have(item10);
  });
}
function getRainDohBlackBoxCopiesMade() {
  return Math.max(0, get("_raindohCopiesMade"));
}
function getRainDohBlackBoxMonster() {
  return get("rainDohMonster");
}
function useRainDohBlackBox() {
  return (0, import_kolmafia19.use)(box);
}
var import_kolmafia19, _templateObject108, box;
var init_RainDoh = __esm({
  "../../node_modules/libram/dist/resources/2012/RainDoh.js": function() {
    import_kolmafia19 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    box = $item(_templateObject108 || (_templateObject108 = _taggedTemplateLiteral13(["Rain-Doh black box"])));
  }
});

// ../../node_modules/libram/dist/resources/2012/ReagnimatedGnome.js
var ReagnimatedGnome_exports = {};
__export(ReagnimatedGnome_exports, {
  bodyParts: function() {
    return bodyParts;
  },
  choosePart: function() {
    return choosePart;
  },
  chosenParts: function() {
    return chosenParts;
  },
  expectedAdvsPerCombat: function() {
    return expectedAdvsPerCombat;
  },
  have: function() {
    return have9;
  }
});
function _taggedTemplateLiteral14(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have9() {
  return have($familiar(_templateObject109 || (_templateObject109 = _taggedTemplateLiteral14(["Reagnimated Gnome"]))));
}
function chosenParts() {
  return Object.values(bodyParts).filter(function(part) {
    return have(part);
  });
}
function choosePart(part) {
  if (!have9())
    return false;
  if (have(bodyParts[part]))
    return true;
  (0, import_kolmafia20.visitUrl)("arena.php");
  (0, import_kolmafia20.runChoice)(4);
  return chosenParts().includes(bodyParts[part]);
}
function expectedAdvsPerCombat(weight) {
  return Math.min(0.01 + weight / 1e3 * 0.99, 1);
}
var import_kolmafia20, _templateObject109, _templateObject221, _templateObject321, _templateObject420, _templateObject515, _templateObject611, bodyParts;
var init_ReagnimatedGnome = __esm({
  "../../node_modules/libram/dist/resources/2012/ReagnimatedGnome.js": function() {
    import_kolmafia20 = require("kolmafia");
    init_lib();
    init_template_string();
    bodyParts = {
      ears: $item(_templateObject221 || (_templateObject221 = _taggedTemplateLiteral14(["gnomish swimmer's ears"]))),
      lung: $item(_templateObject321 || (_templateObject321 = _taggedTemplateLiteral14(["gnomish coal miner's lung"]))),
      elbow: $item(_templateObject420 || (_templateObject420 = _taggedTemplateLiteral14(["gnomish tennis elbow"]))),
      kgnee: $item(_templateObject515 || (_templateObject515 = _taggedTemplateLiteral14(["gnomish housemaid's kgnee"]))),
      foot: $item(_templateObject611 || (_templateObject611 = _taggedTemplateLiteral14(["gnomish athlete's foot"])))
    };
  }
});

// ../../node_modules/libram/dist/modifierTypes.js
var booleanModifiers, classModifiers, numericModifiers, effectModifiers, monsterModifiers, skillModifiers, statModifiers, stringModifiers;
var init_modifierTypes = __esm({
  "../../node_modules/libram/dist/modifierTypes.js": function() {
    booleanModifiers = ["Softcore Only", "Single Equip", "Never Fumble", "Weakens Monster", "Free Pull", "Variable", "Nonstackable Watch", "Cold Immunity", "Hot Immunity", "Sleaze Immunity", "Spooky Immunity", "Stench Immunity", "Cold Vulnerability", "Hot Vulnerability", "Sleaze Vulnerability", "Spooky Vulnerability", "Stench Vulnerability", "Moxie Controls MP", "Moxie May Control MP", "Four Songs", "Adventure Underwater", "Underwater Familiar", "Generic", "Unarmed", "No Pull", "Lasts Until Rollover", "Attacks Can't Miss", "Pirate", "Breakable", "Drops Items", "Drops Meat"];
    classModifiers = ["Class"];
    numericModifiers = ["Familiar Weight", "Monster Level", "Combat Rate", "Initiative", "Experience", "Item Drop", "Meat Drop", "Damage Absorption", "Damage Reduction", "Cold Resistance", "Hot Resistance", "Sleaze Resistance", "Spooky Resistance", "Stench Resistance", "Mana Cost", "Moxie", "Moxie Percent", "Muscle", "Muscle Percent", "Mysticality", "Mysticality Percent", "Maximum HP", "Maximum HP Percent", "Maximum MP", "Maximum MP Percent", "Weapon Damage", "Ranged Damage", "Spell Damage", "Spell Damage Percent", "Cold Damage", "Hot Damage", "Sleaze Damage", "Spooky Damage", "Stench Damage", "Cold Spell Damage", "Hot Spell Damage", "Sleaze Spell Damage", "Spooky Spell Damage", "Stench Spell Damage", "Underwater Combat Rate", "Fumble", "HP Regen Min", "HP Regen Max", "MP Regen Min", "MP Regen Max", "Adventures", "Familiar Weight Percent", "Weapon Damage Percent", "Ranged Damage Percent", "Stackable Mana Cost", "Hobo Power", "Base Resting HP", "Resting HP Percent", "Bonus Resting HP", "Base Resting MP", "Resting MP Percent", "Bonus Resting MP", "Critical Hit Percent", "PvP Fights", "Volleyball", "Sombrero", "Leprechaun", "Fairy", "Meat Drop Penalty", "Hidden Familiar Weight", "Item Drop Penalty", "Initiative Penalty", "Food Drop", "Booze Drop", "Hat Drop", "Weapon Drop", "Offhand Drop", "Shirt Drop", "Pants Drop", "Accessory Drop", "Volleyball Effectiveness", "Sombrero Effectiveness", "Leprechaun Effectiveness", "Fairy Effectiveness", "Familiar Weight Cap", "Slime Resistance", "Slime Hates It", "Spell Critical Percent", "Muscle Experience", "Mysticality Experience", "Moxie Experience", "Effect Duration", "Candy Drop", "DB Combat Damage", "Sombrero Bonus", "Familiar Experience", "Sporadic Meat Drop", "Sporadic Item Drop", "Meat Bonus", "Pickpocket Chance", "Combat Mana Cost", "Muscle Experience Percent", "Mysticality Experience Percent", "Moxie Experience Percent", "Minstrel Level", "Muscle Limit", "Mysticality Limit", "Moxie Limit", "Song Duration", "Prismatic Damage", "Smithsness", "Supercold Resistance", "Reduce Enemy Defense", "Pool Skill", "Surgeonosity", "Familiar Damage", "Gear Drop", "Maximum Hooch", "Water Level", "Crimbot Outfit Power", "Familiar Tuning Muscle", "Familiar Tuning Mysticality", "Familiar Tuning Moxie", "Random Monster Modifiers", "Luck", "Othello Skill", "Disco Style", "Rollover Effect Duration", "Sixgun Damage", "Fishing Skill", "Additional Song", "Sprinkle Drop", "Absorb Adventures", "Absorb Stats", "Rubee Drop", "Kruegerand Drop", "WarBear Armor Penetration", "Clowniness", "Maximum PP", "Plumber Power", "Drippy Damage", "Drippy Resistance", "Energy", "Scrap", "Familiar Action Bonus", "Water"];
    effectModifiers = ["Effect", "Rollover Effect"];
    monsterModifiers = ["Avatar"];
    skillModifiers = ["Skill"];
    statModifiers = ["Plumber Stat"];
    stringModifiers = ["Intrinsic Effect", "Equalize", "Wiki Name", "Modifiers", "Outfit", "Stat Tuning", "Equips On", "Familiar Effect", "Jiggle", "Equalize Muscle", "Equalize Mysticality", "Equalize Moxie", "Floor Buffed Muscle", "Floor Buffed Mysticality", "Floor Buffed Moxie"];
  }
});

// ../../node_modules/libram/dist/modifier.js
function ownKeys5(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread5(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys5(Object(t), true).forEach(function(r2) {
      _defineProperty9(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys5(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty9(obj, key, value) {
  key = _toPropertyKey10(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey10(arg) {
  var key = _toPrimitive10(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive10(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function get2(name, subject) {
  if (arrayContains(name, booleanModifiers)) {
    return subject === void 0 ? (0, import_kolmafia21.booleanModifier)(name) : (0, import_kolmafia21.booleanModifier)(subject, name);
  }
  if (arrayContains(name, classModifiers)) {
    return (0, import_kolmafia21.classModifier)(subject, name);
  }
  if (arrayContains(name, effectModifiers)) {
    return (0, import_kolmafia21.effectModifier)(subject, name);
  }
  if (arrayContains(name, monsterModifiers)) {
    return (0, import_kolmafia21.monsterModifier)(subject, name);
  }
  if (arrayContains(name, numericModifiers)) {
    return subject === void 0 ? (0, import_kolmafia21.numericModifier)(name) : (0, import_kolmafia21.numericModifier)(subject, name);
  }
  if (arrayContains(name, skillModifiers)) {
    return (0, import_kolmafia21.skillModifier)(subject, name);
  }
  if (arrayContains(name, stringModifiers)) {
    return subject === void 0 ? (0, import_kolmafia21.stringModifier)(name) : (0, import_kolmafia21.stringModifier)(subject, name);
  }
  if (arrayContains(name, statModifiers)) {
    return (0, import_kolmafia21.statModifier)(subject, name);
  }
}
function pairwiseMerge(modifiers1, modifiers2) {
  var returnValue = _objectSpread5(_objectSpread5({}, modifiers1), modifiers2);
  for (var modifier in modifiers1) {
    if (Array.from(Object.values(modifiers2)).includes(modifier)) {
      if (arrayContains(modifier, numericModifiers)) {
        var _modifiers1$modifier, _modifiers2$modifier;
        returnValue[modifier] = ((_modifiers1$modifier = modifiers1[modifier]) !== null && _modifiers1$modifier !== void 0 ? _modifiers1$modifier : 0) + ((_modifiers2$modifier = modifiers2[modifier]) !== null && _modifiers2$modifier !== void 0 ? _modifiers2$modifier : 0);
      }
      if (arrayContains(modifier, booleanModifiers)) {
        var _modifiers1$modifier2, _modifiers2$modifier2;
        returnValue[modifier] = ((_modifiers1$modifier2 = modifiers1[modifier]) !== null && _modifiers1$modifier2 !== void 0 ? _modifiers1$modifier2 : false) || ((_modifiers2$modifier2 = modifiers2[modifier]) !== null && _modifiers2$modifier2 !== void 0 ? _modifiers2$modifier2 : false);
      }
    }
  }
  return returnValue;
}
function mergeModifiers() {
  for (var _len = arguments.length, modifierss = new Array(_len), _key = 0; _key < _len; _key++) {
    modifierss[_key] = arguments[_key];
  }
  return modifierss.reduce(function(a, b) {
    return pairwiseMerge(a, b);
  }, {});
}
function getTotalModifier(modifier) {
  for (var _len2 = arguments.length, subjects = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    subjects[_key2 - 1] = arguments[_key2];
  }
  return sum(subjects, function(subject) {
    return get2(modifier, subject);
  });
}
var import_kolmafia21;
var init_modifier = __esm({
  "../../node_modules/libram/dist/modifier.js": function() {
    import_kolmafia21 = require("kolmafia");
    init_modifierTypes();
    init_utils();
  }
});

// ../../node_modules/libram/dist/resources/2013/Florist.js
var Florist_exports = {};
__export(Florist_exports, {
  AloeGuvnor: function() {
    return AloeGuvnor;
  },
  ArcticMoss: function() {
    return ArcticMoss;
  },
  Artichoker: function() {
    return Artichoker;
  },
  BamBoo: function() {
    return BamBoo;
  },
  BlusteryPuffball: function() {
    return BlusteryPuffball;
  },
  CannedSpinach: function() {
    return CannedSpinach;
  },
  CeleryStalker: function() {
    return CeleryStalker;
  },
  Chillterelle: function() {
    return Chillterelle;
  },
  Crookweed: function() {
    return Crookweed;
  },
  DeadlyCinnamon: function() {
    return DeadlyCinnamon;
  },
  DisLichen: function() {
    return DisLichen;
  },
  Duckweed: function() {
    return Duckweed;
  },
  ElectricEelgrass: function() {
    return ElectricEelgrass;
  },
  FoulToadstool: function() {
    return FoulToadstool;
  },
  HornOfPlenty: function() {
    return HornOfPlenty;
  },
  Impatiens: function() {
    return Impatiens;
  },
  Kelptomaniac: function() {
    return Kelptomaniac;
  },
  LettuceSpray: function() {
    return LettuceSpray;
  },
  LooseMorels: function() {
    return LooseMorels;
  },
  MaxHeadshroom: function() {
    return MaxHeadshroom;
  },
  OrcaOrchid: function() {
    return OrcaOrchid;
  },
  PitcherPlant: function() {
    return PitcherPlant;
  },
  Portlybella: function() {
    return Portlybella;
  },
  RabidDogwood: function() {
    return RabidDogwood;
  },
  RadishRadish: function() {
    return RadishRadish;
  },
  RedFern: function() {
    return RedFern;
  },
  Rutabeggar: function() {
    return Rutabeggar;
  },
  Sargassum: function() {
    return Sargassum;
  },
  SeltzerWatercress: function() {
    return SeltzerWatercress;
  },
  ShuffleTruffle: function() {
    return ShuffleTruffle;
  },
  SkunkCabbage: function() {
    return SkunkCabbage;
  },
  SmokeRa: function() {
    return SmokeRa;
  },
  Snori: function() {
    return Snori;
  },
  Spankton: function() {
    return Spankton;
  },
  SpiderPlant: function() {
    return SpiderPlant;
  },
  StealingMagnolia: function() {
    return StealingMagnolia;
  },
  SubSeaRose: function() {
    return SubSeaRose;
  },
  UpSeaDaisy: function() {
    return UpSeaDaisy;
  },
  WarLily: function() {
    return WarLily;
  },
  WizardsWig: function() {
    return WizardsWig;
  },
  all: function() {
    return all;
  },
  flowersAvailableFor: function() {
    return flowersAvailableFor;
  },
  flowersIn: function() {
    return flowersIn;
  },
  have: function() {
    return have10;
  },
  isFull: function() {
    return isFull;
  }
});
function _toConsumableArray8(arr) {
  return _arrayWithoutHoles8(arr) || _iterableToArray8(arr) || _unsupportedIterableToArray13(arr) || _nonIterableSpread8();
}
function _nonIterableSpread8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray13(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray13(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray13(o, minLen);
}
function _iterableToArray8(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles8(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray13(arr);
}
function _arrayLikeToArray13(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck9(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties9(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey11(descriptor.key), descriptor);
  }
}
function _createClass9(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties9(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties9(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty10(obj, key, value) {
  key = _toPropertyKey11(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey11(arg) {
  var key = _toPrimitive11(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive11(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function have10() {
  return (0, import_kolmafia22.floristAvailable)();
}
function toFlower(name) {
  return all.find(function(flower) {
    return name === flower.name;
  });
}
function flowersIn(location) {
  var returnValue = [];
  Flower.plantNamesInZone(location).map(toFlower).forEach(function(flower) {
    if (flower)
      returnValue.push(flower);
  });
  return returnValue;
}
function flowersAvailableFor() {
  var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
  return all.filter(function(flower) {
    return flower.available(location);
  });
}
function isFull() {
  var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
  return flowersIn(location).length === 3;
}
var import_kolmafia22, Flower, RabidDogwood, Rutabeggar, RadishRadish, Artichoker, SmokeRa, SkunkCabbage, DeadlyCinnamon, CeleryStalker, LettuceSpray, SeltzerWatercress, WarLily, StealingMagnolia, CannedSpinach, Impatiens, SpiderPlant, RedFern, BamBoo, ArcticMoss, AloeGuvnor, PitcherPlant, BlusteryPuffball, HornOfPlenty, WizardsWig, ShuffleTruffle, DisLichen, LooseMorels, FoulToadstool, Chillterelle, Portlybella, MaxHeadshroom, Spankton, Kelptomaniac, Crookweed, ElectricEelgrass, Duckweed, OrcaOrchid, Sargassum, SubSeaRose, Snori, UpSeaDaisy, all;
var init_Florist = __esm({
  "../../node_modules/libram/dist/resources/2013/Florist.js": function() {
    import_kolmafia22 = require("kolmafia");
    init_modifier();
    init_property();
    Flower = /* @__PURE__ */ function() {
      function Flower2(name, id, environment, modifier) {
        var territorial = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
        _classCallCheck9(this, Flower2);
        _defineProperty10(this, "name", void 0);
        _defineProperty10(this, "id", void 0);
        _defineProperty10(this, "environment", void 0);
        _defineProperty10(this, "modifier", void 0);
        _defineProperty10(this, "territorial", void 0);
        this.name = name;
        this.id = id;
        this.environment = environment;
        this.modifier = modifier;
        this.territorial = territorial;
      }
      _createClass9(Flower2, [{
        key: "isPlantedHere",
        value: function isPlantedHere() {
          var _Flower$plantNamesInZ;
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
          var plantedHere = (_Flower$plantNamesInZ = Flower2.plantNamesInZone(location)) === null || _Flower$plantNamesInZ === void 0 ? void 0 : _Flower$plantNamesInZ.includes(this.name);
          return plantedHere !== void 0 && plantedHere;
        }
      }, {
        key: "available",
        value: function available4() {
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
          return this.environment === location.environment && !get("_floristPlantsUsed").includes(this.name) && !this.isPlantedHere(location);
        }
      }, {
        key: "dig",
        value: function dig() {
          if (!this.isPlantedHere())
            return false;
          var flowers = Flower2.plantNamesInZone();
          if (!flowers[2])
            return false;
          var plantNumber = flowers.indexOf(this.name);
          Flower2.visit();
          (0, import_kolmafia22.runChoice)(2, "plnti=".concat(plantNumber));
          return !this.isPlantedHere();
        }
      }, {
        key: "plant",
        value: function plant() {
          if (this.isPlantedHere())
            return true;
          if (isFull())
            return false;
          Flower2.visit();
          (0, import_kolmafia22.runChoice)(1, "plant=".concat(this.id));
          return this.isPlantedHere();
        }
      }], [{
        key: "visit",
        value: function visit() {
          (0, import_kolmafia22.visitUrl)("place.php?whichplace=forestvillage&action=fv_friar");
        }
      }, {
        key: "plantNamesInZone",
        value: function plantNamesInZone() {
          var _getFloristPlants$loc;
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
          return (_getFloristPlants$loc = (0, import_kolmafia22.getFloristPlants)()[location.toString()]) !== null && _getFloristPlants$loc !== void 0 ? _getFloristPlants$loc : [];
        }
      }, {
        key: "plantsInZone",
        value: function plantsInZone() {
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
          return this.plantNamesInZone(location).map(function(flowerName) {
            return toFlower(flowerName);
          }).filter(function(flower) {
            return flower !== void 0;
          });
        }
      }, {
        key: "modifiersInZone",
        value: function modifiersInZone() {
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
          var plants = this.plantsInZone(location);
          if (!plants)
            return {};
          var modifiers = plants.map(function(plant) {
            return plant.modifier;
          }).map(function(modifier) {
            return typeof modifier === "string" ? {} : modifier;
          });
          return mergeModifiers.apply(void 0, _toConsumableArray8(modifiers));
        }
      }]);
      return Flower2;
    }();
    RabidDogwood = new Flower("Rabid Dogwood", 1, "outdoor", {
      "Monster Level": 30
    }, true);
    Rutabeggar = new Flower("Rutabeggar", 2, "outdoor", {
      "Item Drop": 25
    }, true);
    RadishRadish = new Flower("Rad-ish Radish", 3, "outdoor", {
      "Moxie Experience": 5
    }, true);
    Artichoker = new Flower("Artichoker", 4, "outdoor", "Delevels Enemy");
    SmokeRa = new Flower("Smoke-ra", 5, "outdoor", "Blocks Attacks");
    SkunkCabbage = new Flower("Skunk Cabbage", 6, "outdoor", {
      "Stench Damage": 12.5
    });
    DeadlyCinnamon = new Flower("Deadly Cinnamon", 7, "outdoor", {
      "Hot Damage": 12.5
    });
    CeleryStalker = new Flower("Celery Stalker", 8, "outdoor", {
      "Spooky Damage": 12.5
    });
    LettuceSpray = new Flower("Lettus Spray", 9, "outdoor", {
      "HP Regen Min": 10,
      "HP Regen Max": 29
    });
    SeltzerWatercress = new Flower("Seltzer Watercress", 10, "outdoor", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    WarLily = new Flower("War Lily", 11, "indoor", {
      "Monster Level": 30
    }, true);
    StealingMagnolia = new Flower("Stealing Magnolia", 12, "indoor", {
      "Item Drop": 25
    }, true);
    CannedSpinach = new Flower("Canned Spinach", 13, "indoor", {
      "Muscle Experience": 5
    }, true);
    Impatiens = new Flower("Impatiens", 14, "indoor", {
      Initiative: 25
    });
    SpiderPlant = new Flower("Spider Plant", 15, "indoor", "Poison");
    RedFern = new Flower("Red Fern", 16, "indoor", "Delevels Enemy");
    BamBoo = new Flower("BamBOO!", 17, "indoor", {
      "Spooky Damage": 12.5
    });
    ArcticMoss = new Flower("Arctic Moss", 18, "indoor", {
      "Cold Damage": 12.5
    });
    AloeGuvnor = new Flower("Aloe Guv'nor", 19, "indoor", {
      "HP Regen Min": 10,
      "HP Regen Max": 30
    });
    PitcherPlant = new Flower("Pitcher Plant", 20, "indoor", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    BlusteryPuffball = new Flower("Blustery Puffball", 21, "underground", {
      "Monster Level": 30
    }, true);
    HornOfPlenty = new Flower("Horn of Plenty", 22, "underground", {
      "Item Drop": 25
    }, true);
    WizardsWig = new Flower("Wizard's Wig", 23, "underground", {
      "Mysticality Experience": 5
    }, true);
    ShuffleTruffle = new Flower("Shuffle Truffle", 24, "underground", {
      Initiative: 25
    });
    DisLichen = new Flower("Dis Lichen", 25, "underground", "Delevels Enemy");
    LooseMorels = new Flower("Loose Morels", 26, "underground", {
      "Sleaze Damage": 12.5
    });
    FoulToadstool = new Flower("Foul Toadstool", 27, "underground", {
      "Stench Damage": 12.5
    });
    Chillterelle = new Flower("Chillterelle", 28, "underground", {
      "Cold Damage": 12.5
    });
    Portlybella = new Flower("Portlybella", 29, "underground", {
      "HP Regen Min": 10,
      "HP Regen Max": 30
    });
    MaxHeadshroom = new Flower("Max Headshroom", 30, "underground", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    });
    Spankton = new Flower("Spankton", 31, "underwater", "Delevels Enemy", true);
    Kelptomaniac = new Flower("Kelptomaniac", 32, "underwater", {
      "Item Drop": 40
    }, true);
    Crookweed = new Flower("Crookweed", 33, "underwater", {
      "Meat Drop": 60
    }, true);
    ElectricEelgrass = new Flower("Electric Eelgrass", 34, "underwater", "Blocks Attacks");
    Duckweed = new Flower("Duckweed", 35, "underwater", "Blocks Attacks");
    OrcaOrchid = new Flower("Orca Orchid", 36, "underwater", {
      "Weapon Damage": 12.5
    });
    Sargassum = new Flower("Sargassum", 37, "underwater", {
      "Stench Damage": 12.5
    });
    SubSeaRose = new Flower("Sub-Sea Rose", 38, "underwater", {
      "Cold Damage": 12.5
    });
    Snori = new Flower("Snori", 39, "underwater", {
      "HP Regen Min": 20,
      "HP Regen Max": 30,
      "MP Regen Min": 10,
      "MP Regen Max": 20
    });
    UpSeaDaisy = new Flower("Up Sea Daisy", 40, "underwater", {
      Experience: 30
    });
    all = Object.freeze([RabidDogwood, Rutabeggar, RadishRadish, Artichoker, SmokeRa, SkunkCabbage, DeadlyCinnamon, CeleryStalker, LettuceSpray, SeltzerWatercress, WarLily, StealingMagnolia, CannedSpinach, Impatiens, SpiderPlant, RedFern, BamBoo, ArcticMoss, AloeGuvnor, PitcherPlant, BlusteryPuffball, HornOfPlenty, WizardsWig, ShuffleTruffle, DisLichen, LooseMorels, FoulToadstool, Chillterelle, Portlybella, MaxHeadshroom, Spankton, Kelptomaniac, Crookweed, ElectricEelgrass, Duckweed, OrcaOrchid, Sargassum, SubSeaRose, Snori, UpSeaDaisy]);
  }
});

// ../../node_modules/libram/dist/resources/2013/JungMan.js
var JungMan_exports = {};
__export(JungMan_exports, {
  JAR_ITEMS: function() {
    return JAR_ITEMS;
  },
  Jar: function() {
    return Jar;
  },
  canJickJar: function() {
    return canJickJar;
  },
  have: function() {
    return have11;
  },
  makeJar: function() {
    return makeJar;
  }
});
function _slicedToArray6(arr, i) {
  return _arrayWithHoles6(arr) || _iterableToArrayLimit6(arr, i) || _unsupportedIterableToArray14(arr, i) || _nonIterableRest6();
}
function _nonIterableRest6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray14(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray14(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray14(o, minLen);
}
function _arrayLikeToArray14(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit6(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles6(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _defineProperty11(obj, key, value) {
  key = _toPropertyKey12(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey12(arg) {
  var key = _toPrimitive12(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive12(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral15(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have11() {
  return (0, import_kolmafia23.haveFamiliar)(familiar4);
}
function getJungUrl(jar) {
  var _PLACES$jar = _slicedToArray6(PLACES[jar], 2), page = _PLACES$jar[0], answer = _PLACES$jar[1];
  var question = page === "showplayer" ? "who" : "which".concat(page);
  var params = [["action", "jung"], ["whichperson", jar]];
  if (answer)
    params.push([question, answer]);
  return "".concat(page, ".php?").concat(params.map(function(pair) {
    return pair.join("=");
  }).join("&"));
}
function canJickJar() {
  if (get("_jickJarAvailable") === "unknown")
    (0, import_kolmafia23.visitUrl)("showplayer.php?who=1");
  return get("_jickJarAvailable") === "true" && !get("_psychoJarFilled");
}
function makeJar(jar) {
  if (jar === Jar.JICK && !canJickJar())
    return false;
  var result = (0, import_kolmafia23.visitUrl)(getJungUrl(jar));
  return result.includes("You open up the jar and look into the patient's eyes.");
}
var import_kolmafia23, _templateObject110, _PLACES, _templateObject226, _templateObject326, _templateObject421, _templateObject516, _templateObject613, _templateObject710, _templateObject810, _JAR_ITEMS, familiar4, Jar, PLACES, JAR_ITEMS;
var init_JungMan = __esm({
  "../../node_modules/libram/dist/resources/2013/JungMan.js": function() {
    import_kolmafia23 = require("kolmafia");
    init_property();
    init_template_string();
    familiar4 = $familiar(_templateObject110 || (_templateObject110 = _taggedTemplateLiteral15(["Angry Jung Man"])));
    (function(Jar2) {
      Jar2["SUSPICIOUS_GUY"] = "susguy";
      Jar2["GOURD_CAPTAIN"] = "gourdcaptain";
      Jar2["CRACKPOT_MYSTIC"] = "mystic";
      Jar2["OLD_MAN"] = "oldman";
      Jar2["PRETENTIOUS_ARTIST"] = "artist";
      Jar2["MEATSMITH"] = "meatsmith";
      Jar2["JICK"] = "jick";
    })(Jar || (Jar = {}));
    PLACES = (_PLACES = {}, _defineProperty11(_PLACES, Jar.PRETENTIOUS_ARTIST, ["place", "town_wrong"]), _defineProperty11(_PLACES, Jar.GOURD_CAPTAIN, ["place", "town_right"]), _defineProperty11(_PLACES, Jar.CRACKPOT_MYSTIC, ["shop", "mystic"]), _defineProperty11(_PLACES, Jar.OLD_MAN, ["place", "sea_oldman"]), _defineProperty11(_PLACES, Jar.MEATSMITH, ["shop", "meatsmith"]), _defineProperty11(_PLACES, Jar.JICK, ["showplayer", "1"]), _defineProperty11(_PLACES, Jar.SUSPICIOUS_GUY, ["tavern"]), _PLACES);
    JAR_ITEMS = (_JAR_ITEMS = {}, _defineProperty11(_JAR_ITEMS, Jar.SUSPICIOUS_GUY, $item(_templateObject226 || (_templateObject226 = _taggedTemplateLiteral15(["jar of psychoses (The Suspicious-Looking Guy)"])))), _defineProperty11(_JAR_ITEMS, Jar.GOURD_CAPTAIN, $item(_templateObject326 || (_templateObject326 = _taggedTemplateLiteral15(["jar of psychoses (The Captain of the Gourd)"])))), _defineProperty11(_JAR_ITEMS, Jar.CRACKPOT_MYSTIC, $item(_templateObject421 || (_templateObject421 = _taggedTemplateLiteral15(["jar of psychoses (The Crackpot Mystic)"])))), _defineProperty11(_JAR_ITEMS, Jar.OLD_MAN, $item(_templateObject516 || (_templateObject516 = _taggedTemplateLiteral15(["jar of psychoses (The Old Man)"])))), _defineProperty11(_JAR_ITEMS, Jar.PRETENTIOUS_ARTIST, $item(_templateObject613 || (_templateObject613 = _taggedTemplateLiteral15(["jar of psychoses (The Pretentious Artist)"])))), _defineProperty11(_JAR_ITEMS, Jar.MEATSMITH, $item(_templateObject710 || (_templateObject710 = _taggedTemplateLiteral15(["jar of psychoses (The Meatsmith)"])))), _defineProperty11(_JAR_ITEMS, Jar.JICK, $item(_templateObject810 || (_templateObject810 = _taggedTemplateLiteral15(["jar of psychoses (Jick)"])))), _JAR_ITEMS);
  }
});

// ../../node_modules/libram/dist/resources/2014/CrimboShrub.js
var CrimboShrub_exports = {};
__export(CrimboShrub_exports, {
  decorate: function() {
    return decorate;
  },
  have: function() {
    return have12;
  }
});
function _taggedTemplateLiteral16(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have12() {
  return have($familiar(_templateObject111 || (_templateObject111 = _taggedTemplateLiteral16(["Crimbo Shrub"]))));
}
function isDecoratedWith(topper, lights, garland, gifts) {
  var decorations = [get("shrubTopper"), get("shrubLights"), get("shrubGarland"), get("shrubGifts")].map(function(x) {
    return Prefs[x];
  });
  return [topper, lights, garland, gifts].every(function(x, i) {
    return x === decorations[i];
  });
}
function decorate(topper, lights, garland, gifts) {
  if (!have12())
    return false;
  if (get("_shrubDecorated"))
    return isDecoratedWith(topper, lights, garland, gifts);
  if (!have($item(_templateObject227 || (_templateObject227 = _taggedTemplateLiteral16(["box of old Crimbo decorations"]))))) {
    (0, import_kolmafia24.useFamiliar)($familiar(_templateObject327 || (_templateObject327 = _taggedTemplateLiteral16(["Crimbo Shrub"]))));
  }
  directlyUse($item(_templateObject426 || (_templateObject426 = _taggedTemplateLiteral16(["box of old Crimbo decorations"]))));
  (0, import_kolmafia24.visitUrl)("choice.php?whichchoice=999&pwd=&option=1&topper=".concat(Toppers[topper], "&lights=").concat(Lights[lights], "&garland=").concat(Garland[garland], "&gift=").concat(Gifts[gifts]));
  return isDecoratedWith(topper, lights, garland, gifts);
}
var import_kolmafia24, _templateObject111, _templateObject227, _templateObject327, _templateObject426, Toppers, Lights, Garland, Gifts, Prefs;
var init_CrimboShrub = __esm({
  "../../node_modules/libram/dist/resources/2014/CrimboShrub.js": function() {
    import_kolmafia24 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    Toppers = {
      Muscle: 1,
      Mysticality: 2,
      Moxie: 3
    };
    Lights = {
      "Prismatic Damage": 1,
      "Hot Damage": 2,
      "Cold Damage": 3,
      "Stench Damage": 4,
      "Spooky Damage": 5,
      "Sleaze Damage": 6
    };
    Garland = {
      "HP Regen": 1,
      "PvP Fights": 2,
      Blocking: 3
    };
    Gifts = {
      "Yellow Ray": 1,
      "Red Ray": 2,
      Gifts: 3
    };
    Prefs = {
      Muscle: "Muscle",
      Mysticality: "Mysticality",
      Moxie: "Moxie",
      Prismatic: "Prismatic Damage",
      Hot: "Hot Damage",
      Cold: "Cold Damage",
      Stench: "Stench Damage",
      Spooky: "Spooky Damage",
      Sleaze: "Sleaze Damage",
      HP: "HP Regen",
      PvP: "PvP Fights",
      blocking: "Blocking",
      yellow: "Yellow Ray",
      meat: "Red Ray",
      gifts: "Gifts"
    };
  }
});

// ../../node_modules/libram/dist/resources/2014/DNALab.js
var DNALab_exports = {};
__export(DNALab_exports, {
  getEffect: function() {
    return getEffect2;
  },
  getTonic: function() {
    return getTonic;
  },
  have: function() {
    return have13;
  },
  hybridize: function() {
    return hybridize;
  },
  installed: function() {
    return installed2;
  },
  isHybridized: function() {
    return isHybridized;
  },
  makeTonic: function() {
    return makeTonic;
  },
  phylumFor: function() {
    return phylumFor;
  },
  tonicsLeft: function() {
    return tonicsLeft;
  }
});
function _slicedToArray7(arr, i) {
  return _arrayWithHoles7(arr) || _iterableToArrayLimit7(arr, i) || _unsupportedIterableToArray15(arr, i) || _nonIterableRest7();
}
function _nonIterableRest7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray15(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray15(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray15(o, minLen);
}
function _arrayLikeToArray15(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit7(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles7(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral17(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have13() {
  return have(lab) || (0, import_kolmafia25.getWorkshed)() === lab;
}
function installed2() {
  return (0, import_kolmafia25.getWorkshed)() === lab;
}
function isHybridized(tonic) {
  if (!tonic)
    return installed2() && get("_dnaHybrid");
  var tonicEffect = tonic instanceof import_kolmafia25.Effect ? tonic : tonic instanceof import_kolmafia25.Phylum ? getEffect2(tonic) : get2("Effect", tonic);
  return tonicEffects.includes(tonicEffect) && (0, import_kolmafia25.haveEffect)(tonicEffect) === 2147483647;
}
function getTonic(phylum) {
  var _phylaTonics$get;
  return (_phylaTonics$get = phylaTonics.get(phylum)) !== null && _phylaTonics$get !== void 0 ? _phylaTonics$get : $item.none;
}
function getEffect2(phylum) {
  var _phylaEffects$get;
  return (_phylaEffects$get = phylaEffects.get(phylum)) !== null && _phylaEffects$get !== void 0 ? _phylaEffects$get : $effect.none;
}
function phylumFor(dnatype) {
  if (dnatype instanceof import_kolmafia25.Effect) {
    var phylumPair = Array.from(phylaEffects.entries()).find(function(_ref) {
      var _ref2 = _slicedToArray7(_ref, 2), effect2 = _ref2[1];
      return effect2 === dnatype;
    });
    return phylumPair ? phylumPair[0] : null;
  } else {
    var _phylumPair = Array.from(phylaTonics.entries()).find(function(_ref3) {
      var _ref4 = _slicedToArray7(_ref3, 2), tonic = _ref4[1];
      return tonic === dnatype;
    });
    return _phylumPair ? _phylumPair[0] : null;
  }
}
function hybridize() {
  if (get("_dnaHybrid"))
    return false;
  if (!installed2())
    return false;
  var currentSyringe = get("dnaSyringe");
  if (!currentSyringe)
    return false;
  var tonicPotion = getTonic(currentSyringe);
  var expectedEffect = get2("Effect", tonicPotion);
  (0, import_kolmafia25.cliExecute)("camp dnainject");
  return isHybridized(expectedEffect);
}
function makeTonic() {
  var amount = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
  if (!installed2())
    return false;
  var currentSyringe = get("dnaSyringe");
  if (!currentSyringe)
    return false;
  var tonicPotion = getTonic(currentSyringe);
  var amountToMake = clamp(amount, 0, tonicsLeft());
  var startingAmount = (0, import_kolmafia25.itemAmount)(tonicPotion);
  (0, import_kolmafia25.cliExecute)("camp dnapotion ".concat(amountToMake));
  return (0, import_kolmafia25.itemAmount)(tonicPotion) - startingAmount === amountToMake;
}
function tonicsLeft() {
  return clamp(3 - get("_dnaPotionsMade"), 0, 3);
}
var import_kolmafia25, _templateObject118, _templateObject228, _templateObject328, _templateObject427, _templateObject517, _templateObject614, _templateObject711, _templateObject811, _templateObject910, _templateObject1010, _templateObject119, _templateObject127, _templateObject137, _templateObject146, _templateObject156, _templateObject166, _templateObject176, _templateObject186, _templateObject196, _templateObject206, _templateObject2111, _templateObject229, _templateObject236, _templateObject246, _templateObject256, _templateObject266, _templateObject276, _templateObject286, _templateObject296, _templateObject306, _templateObject3111, _templateObject329, _templateObject336, _templateObject346, _templateObject356, _templateObject366, _templateObject376, _templateObject386, _templateObject396, _templateObject406, _templateObject4110, _templateObject428, _templateObject436, _templateObject446, _templateObject456, _templateObject465, _templateObject475, _templateObject484, _templateObject494, _templateObject504, _templateObject518, _templateObject524, _templateObject534, _templateObject544, _templateObject554, _templateObject564, _templateObject574, _templateObject584, _templateObject593, _templateObject603, _templateObject615, _templateObject624, _templateObject633, _templateObject643, _templateObject653, _templateObject663, _templateObject673, _templateObject683, _templateObject693, _templateObject702, _templateObject712, _templateObject723, _templateObject733, _templateObject743, _templateObject753, _templateObject763, _templateObject773, _templateObject782, _templateObject792, _templateObject802, _templateObject812, _templateObject823, _templateObject833, _templateObject843, _templateObject853, lab, phylaEffects, phylaTonics, tonicEffects;
var init_DNALab = __esm({
  "../../node_modules/libram/dist/resources/2014/DNALab.js": function() {
    import_kolmafia25 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_template_string();
    init_utils();
    lab = $item(_templateObject118 || (_templateObject118 = _taggedTemplateLiteral17(["Little Geneticist DNA-Splicing Lab"])));
    phylaEffects = /* @__PURE__ */ new Map([[$phylum(_templateObject228 || (_templateObject228 = _taggedTemplateLiteral17(["beast"]))), $effect(_templateObject328 || (_templateObject328 = _taggedTemplateLiteral17(["Human-Beast Hybrid"])))], [$phylum(_templateObject427 || (_templateObject427 = _taggedTemplateLiteral17(["bug"]))), $effect(_templateObject517 || (_templateObject517 = _taggedTemplateLiteral17(["Human-Insect Hybrid"])))], [$phylum(_templateObject614 || (_templateObject614 = _taggedTemplateLiteral17(["constellation"]))), $effect(_templateObject711 || (_templateObject711 = _taggedTemplateLiteral17(["Human-Constellation Hybrid"])))], [$phylum(_templateObject811 || (_templateObject811 = _taggedTemplateLiteral17(["construct"]))), $effect(_templateObject910 || (_templateObject910 = _taggedTemplateLiteral17(["Human-Machine Hybrid"])))], [$phylum(_templateObject1010 || (_templateObject1010 = _taggedTemplateLiteral17(["demon"]))), $effect(_templateObject119 || (_templateObject119 = _taggedTemplateLiteral17(["Human-Demon Hybrid"])))], [$phylum(_templateObject127 || (_templateObject127 = _taggedTemplateLiteral17(["dude"]))), $effect(_templateObject137 || (_templateObject137 = _taggedTemplateLiteral17(["Human-Human Hybrid"])))], [$phylum(_templateObject146 || (_templateObject146 = _taggedTemplateLiteral17(["elemental"]))), $effect(_templateObject156 || (_templateObject156 = _taggedTemplateLiteral17(["Human-Elemental Hybrid"])))], [$phylum(_templateObject166 || (_templateObject166 = _taggedTemplateLiteral17(["elf"]))), $effect(_templateObject176 || (_templateObject176 = _taggedTemplateLiteral17(["Human-Elf Hybrid"])))], [$phylum(_templateObject186 || (_templateObject186 = _taggedTemplateLiteral17(["fish"]))), $effect(_templateObject196 || (_templateObject196 = _taggedTemplateLiteral17(["Human-Fish Hybrid"])))], [$phylum(_templateObject206 || (_templateObject206 = _taggedTemplateLiteral17(["goblin"]))), $effect(_templateObject2111 || (_templateObject2111 = _taggedTemplateLiteral17(["Human-Goblin Hybrid"])))], [$phylum(_templateObject229 || (_templateObject229 = _taggedTemplateLiteral17(["hippy"]))), $effect(_templateObject236 || (_templateObject236 = _taggedTemplateLiteral17(["Human-Hobo Hybrid"])))], [$phylum(_templateObject246 || (_templateObject246 = _taggedTemplateLiteral17(["horror"]))), $effect(_templateObject256 || (_templateObject256 = _taggedTemplateLiteral17(["Human-Horror Hybrid"])))], [$phylum(_templateObject266 || (_templateObject266 = _taggedTemplateLiteral17(["humanoid"]))), $effect(_templateObject276 || (_templateObject276 = _taggedTemplateLiteral17(["Human-Humanoid Hybrid"])))], [$phylum(_templateObject286 || (_templateObject286 = _taggedTemplateLiteral17(["mer-kin"]))), $effect(_templateObject296 || (_templateObject296 = _taggedTemplateLiteral17(["Human-Mer-kin Hybrid"])))], [$phylum(_templateObject306 || (_templateObject306 = _taggedTemplateLiteral17(["orc"]))), $effect(_templateObject3111 || (_templateObject3111 = _taggedTemplateLiteral17(["Human-Orc Hybrid"])))], [$phylum(_templateObject329 || (_templateObject329 = _taggedTemplateLiteral17(["penguin"]))), $effect(_templateObject336 || (_templateObject336 = _taggedTemplateLiteral17(["Human-Penguin Hybrid"])))], [$phylum(_templateObject346 || (_templateObject346 = _taggedTemplateLiteral17(["pirate"]))), $effect(_templateObject356 || (_templateObject356 = _taggedTemplateLiteral17(["Human-Pirate Hybrid"])))], [$phylum(_templateObject366 || (_templateObject366 = _taggedTemplateLiteral17(["plant"]))), $effect(_templateObject376 || (_templateObject376 = _taggedTemplateLiteral17(["Human-Plant Hybrid"])))], [$phylum(_templateObject386 || (_templateObject386 = _taggedTemplateLiteral17(["slime"]))), $effect(_templateObject396 || (_templateObject396 = _taggedTemplateLiteral17(["Human-Slime Hybrid"])))], [$phylum(_templateObject406 || (_templateObject406 = _taggedTemplateLiteral17(["undead"]))), $effect(_templateObject4110 || (_templateObject4110 = _taggedTemplateLiteral17(["Human-Undead Hybrid"])))], [$phylum(_templateObject428 || (_templateObject428 = _taggedTemplateLiteral17(["weird"]))), $effect(_templateObject436 || (_templateObject436 = _taggedTemplateLiteral17(["Human-Weird Thing Hybrid"])))]]);
    phylaTonics = /* @__PURE__ */ new Map([[$phylum(_templateObject446 || (_templateObject446 = _taggedTemplateLiteral17(["beast"]))), $item(_templateObject456 || (_templateObject456 = _taggedTemplateLiteral17(["Gene Tonic: Beast"])))], [$phylum(_templateObject465 || (_templateObject465 = _taggedTemplateLiteral17(["bug"]))), $item(_templateObject475 || (_templateObject475 = _taggedTemplateLiteral17(["Gene Tonic: Insect"])))], [$phylum(_templateObject484 || (_templateObject484 = _taggedTemplateLiteral17(["constellation"]))), $item(_templateObject494 || (_templateObject494 = _taggedTemplateLiteral17(["Gene Tonic: Constellation"])))], [$phylum(_templateObject504 || (_templateObject504 = _taggedTemplateLiteral17(["construct"]))), $item(_templateObject518 || (_templateObject518 = _taggedTemplateLiteral17(["Gene Tonic: Construct"])))], [$phylum(_templateObject524 || (_templateObject524 = _taggedTemplateLiteral17(["demon"]))), $item(_templateObject534 || (_templateObject534 = _taggedTemplateLiteral17(["Gene Tonic: Demon"])))], [$phylum(_templateObject544 || (_templateObject544 = _taggedTemplateLiteral17(["dude"]))), $item(_templateObject554 || (_templateObject554 = _taggedTemplateLiteral17(["Gene Tonic: Humanoid"])))], [$phylum(_templateObject564 || (_templateObject564 = _taggedTemplateLiteral17(["elemental"]))), $item(_templateObject574 || (_templateObject574 = _taggedTemplateLiteral17(["Gene Tonic: Elemental"])))], [$phylum(_templateObject584 || (_templateObject584 = _taggedTemplateLiteral17(["elf"]))), $item(_templateObject593 || (_templateObject593 = _taggedTemplateLiteral17(["Gene Tonic: Elf"])))], [$phylum(_templateObject603 || (_templateObject603 = _taggedTemplateLiteral17(["fish"]))), $item(_templateObject615 || (_templateObject615 = _taggedTemplateLiteral17(["Gene Tonic: Fish"])))], [$phylum(_templateObject624 || (_templateObject624 = _taggedTemplateLiteral17(["goblin"]))), $item(_templateObject633 || (_templateObject633 = _taggedTemplateLiteral17(["Gene Tonic: Goblin"])))], [$phylum(_templateObject643 || (_templateObject643 = _taggedTemplateLiteral17(["hippy"]))), $item(_templateObject653 || (_templateObject653 = _taggedTemplateLiteral17(["Gene Tonic: Hobo"])))], [$phylum(_templateObject663 || (_templateObject663 = _taggedTemplateLiteral17(["horror"]))), $item(_templateObject673 || (_templateObject673 = _taggedTemplateLiteral17(["Gene Tonic: Horror"])))], [$phylum(_templateObject683 || (_templateObject683 = _taggedTemplateLiteral17(["humanoid"]))), $item(_templateObject693 || (_templateObject693 = _taggedTemplateLiteral17(["Gene Tonic: Humanoid"])))], [$phylum(_templateObject702 || (_templateObject702 = _taggedTemplateLiteral17(["mer-kin"]))), $item(_templateObject712 || (_templateObject712 = _taggedTemplateLiteral17(["Gene Tonic: Mer-kin"])))], [$phylum(_templateObject723 || (_templateObject723 = _taggedTemplateLiteral17(["orc"]))), $item(_templateObject733 || (_templateObject733 = _taggedTemplateLiteral17(["Gene Tonic: Orc"])))], [$phylum(_templateObject743 || (_templateObject743 = _taggedTemplateLiteral17(["penguin"]))), $item(_templateObject753 || (_templateObject753 = _taggedTemplateLiteral17(["Gene Tonic: Penguin"])))], [$phylum(_templateObject763 || (_templateObject763 = _taggedTemplateLiteral17(["pirate"]))), $item(_templateObject773 || (_templateObject773 = _taggedTemplateLiteral17(["Gene Tonic: Pirate"])))], [$phylum(_templateObject782 || (_templateObject782 = _taggedTemplateLiteral17(["plant"]))), $item(_templateObject792 || (_templateObject792 = _taggedTemplateLiteral17(["Gene Tonic: Plant"])))], [$phylum(_templateObject802 || (_templateObject802 = _taggedTemplateLiteral17(["slime"]))), $item(_templateObject812 || (_templateObject812 = _taggedTemplateLiteral17(["Gene Tonic: Slime"])))], [$phylum(_templateObject823 || (_templateObject823 = _taggedTemplateLiteral17(["undead"]))), $item(_templateObject833 || (_templateObject833 = _taggedTemplateLiteral17(["Gene Tonic: Undead"])))], [$phylum(_templateObject843 || (_templateObject843 = _taggedTemplateLiteral17(["weird"]))), $item(_templateObject853 || (_templateObject853 = _taggedTemplateLiteral17(["Gene Tonic: Weird"])))]]);
    tonicEffects = Array.from(phylaEffects.values());
  }
});

// ../../node_modules/libram/dist/resources/2014/WinterGarden.js
var WinterGarden_exports = {};
__export(WinterGarden_exports, {
  UnfinishedIceSculpture: function() {
    return UnfinishedIceSculpture;
  },
  couldUseUnfinishedIceSculpture: function() {
    return couldUseUnfinishedIceSculpture;
  },
  getUnfinishedIceSculptureMonster: function() {
    return getUnfinishedIceSculptureMonster;
  },
  have: function() {
    return have14;
  },
  haveUnfinishedIceSculpture: function() {
    return haveUnfinishedIceSculpture;
  },
  isUnfinishedIceSculptureUsed: function() {
    return isUnfinishedIceSculptureUsed;
  }
});
function _taggedTemplateLiteral18(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have14() {
  return haveInCampground($item(_templateObject120 || (_templateObject120 = _taggedTemplateLiteral18(["packet of winter seeds"]))));
}
function haveUnfinishedIceSculpture() {
  return have($item(_templateObject230 || (_templateObject230 = _taggedTemplateLiteral18(["unfinished ice sculpture"]))));
}
function isUnfinishedIceSculptureUsed() {
  return get("_iceSculptureUsed");
}
function couldUseUnfinishedIceSculpture() {
  return have($item(_templateObject330 || (_templateObject330 = _taggedTemplateLiteral18(["unfinished ice sculpture"])))) && !have($item(_templateObject429 || (_templateObject429 = _taggedTemplateLiteral18(["ice sculpture"]))));
}
function getUnfinishedIceSculptureMonster() {
  return get("iceSculptureMonster");
}
var _templateObject120, _templateObject230, _templateObject330, _templateObject429, UnfinishedIceSculpture;
var init_WinterGarden = __esm({
  "../../node_modules/libram/dist/resources/2014/WinterGarden.js": function() {
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    UnfinishedIceSculpture = new Copier(function() {
      return couldUseUnfinishedIceSculpture();
    }, null, function() {
      return couldUseUnfinishedIceSculpture();
    }, function() {
      return getUnfinishedIceSculptureMonster();
    });
  }
});

// ../../node_modules/libram/dist/resources/2015/BarrelShrine.js
var BarrelShrine_exports = {};
__export(BarrelShrine_exports, {
  have: function() {
    return have15;
  },
  smashParty: function() {
    return smashParty;
  }
});
function _taggedTemplateLiteral19(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have15() {
  return get("barrelShrineUnlocked");
}
function smashParty() {
  if (!have15())
    return;
  var total = sum(BARRELS, import_kolmafia26.availableAmount);
  if (total <= 0)
    return;
  (0, import_kolmafia26.visitUrl)("inv_use.php?pwd&whichitem=8568&choice=1");
  for (var i = 0; i < total / 100; i++) {
    (0, import_kolmafia26.runChoice)(2);
  }
}
var import_kolmafia26, _templateObject121, BARRELS;
var init_BarrelShrine = __esm({
  "../../node_modules/libram/dist/resources/2015/BarrelShrine.js": function() {
    import_kolmafia26 = require("kolmafia");
    init_property();
    init_template_string();
    init_utils();
    BARRELS = $items(_templateObject121 || (_templateObject121 = _taggedTemplateLiteral19(["little firkin, normal barrel, big tun, weathered barrel, dusty barrel, disintegrating barrel, moist barrel, rotting barrel, mouldering barrel, barnacled barrel"])));
  }
});

// ../../node_modules/libram/dist/resources/2015/ChateauMantegna.js
var ChateauMantegna_exports = {};
__export(ChateauMantegna_exports, {
  ceilings: function() {
    return ceilings;
  },
  changeCeiling: function() {
    return changeCeiling;
  },
  changeDesk: function() {
    return changeDesk;
  },
  changeNightstand: function() {
    return changeNightstand;
  },
  desks: function() {
    return desks;
  },
  fightPainting: function() {
    return fightPainting;
  },
  getCeiling: function() {
    return getCeiling;
  },
  getDesk: function() {
    return getDesk;
  },
  getNightstand: function() {
    return getNightstand;
  },
  have: function() {
    return have16;
  },
  nightstands: function() {
    return nightstands;
  },
  paintingFought: function() {
    return paintingFought;
  },
  paintingMonster: function() {
    return paintingMonster;
  }
});
function have16() {
  return get("chateauAvailable");
}
function paintingMonster() {
  return get("chateauMonster");
}
function paintingFought() {
  return get("_chateauMonsterFought");
}
function fightPainting() {
  (0, import_kolmafia27.visitUrl)("place.php?whichplace=chateau&action=chateau_painting", false);
  return (0, import_kolmafia27.runCombat)();
}
function getDesk() {
  var _desks$find;
  return (_desks$find = desks.find(function(desk) {
    return Object.keys((0, import_kolmafia27.getChateau)()).includes(desk);
  })) !== null && _desks$find !== void 0 ? _desks$find : null;
}
function getCeiling() {
  var _ceilings$find;
  return (_ceilings$find = ceilings.find(function(ceiling) {
    return Object.keys((0, import_kolmafia27.getChateau)()).includes(ceiling);
  })) !== null && _ceilings$find !== void 0 ? _ceilings$find : null;
}
function getNightstand() {
  var _nightstands$find;
  return (_nightstands$find = nightstands.find(function(nightstand) {
    return Object.keys((0, import_kolmafia27.getChateau)()).includes(nightstand);
  })) !== null && _nightstands$find !== void 0 ? _nightstands$find : null;
}
function changeDesk(desk) {
  if (getDesk() === desk)
    return true;
  if (!desks.includes(desk))
    return false;
  (0, import_kolmafia27.buy)(import_kolmafia27.Item.get(desk));
  return getDesk() === desk;
}
function changeCeiling(ceiling) {
  if (getCeiling() === ceiling)
    return true;
  if (!ceilings.includes(ceiling))
    return false;
  (0, import_kolmafia27.buy)(import_kolmafia27.Item.get(ceiling));
  return getCeiling() === ceiling;
}
function changeNightstand(nightstand) {
  if (getNightstand() === nightstand)
    return true;
  if (!nightstands.includes(nightstand))
    return false;
  (0, import_kolmafia27.buy)(import_kolmafia27.Item.get(nightstand));
  return getNightstand() === nightstand;
}
var import_kolmafia27, desks, ceilings, nightstands;
var init_ChateauMantegna = __esm({
  "../../node_modules/libram/dist/resources/2015/ChateauMantegna.js": function() {
    import_kolmafia27 = require("kolmafia");
    init_property();
    desks = ["fancy stationery set", "Swiss piggy bank", "continental juice bar"];
    ceilings = ["antler chandelier", "ceiling fan", "artificial skylight"];
    nightstands = ["foreign language tapes", "bowl of potpourri", "electric muscle stimulator"];
  }
});

// ../../node_modules/libram/dist/resources/2015/DeckOfEveryCard.js
var DeckOfEveryCard_exports = {};
__export(DeckOfEveryCard_exports, {
  cards: function() {
    return cards;
  },
  cheatCard: function() {
    return cheatCard;
  },
  getCardsDrawn: function() {
    return getCardsDrawn;
  },
  getCardsSeen: function() {
    return getCardsSeen;
  },
  getRemainingCheats: function() {
    return getRemainingCheats;
  },
  getRemainingDraws: function() {
    return getRemainingDraws;
  },
  have: function() {
    return have17;
  }
});
function _taggedTemplateLiteral20(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have17() {
  return have($item(_templateObject128 || (_templateObject128 = _taggedTemplateLiteral20(["Deck of Every Card"]))));
}
function getCardsDrawn() {
  return clamp(get("_deckCardsDrawn"), 0, 15);
}
function getRemainingDraws() {
  return 15 - getCardsDrawn();
}
function getRemainingCheats() {
  return Math.floor(getRemainingDraws() / 5);
}
function getCardsSeen() {
  return get("_deckCardsSeen") ? get("_deckCardsSeen").split("|") : [];
}
function cheatCard(card) {
  if (getCardsSeen().includes(card))
    return true;
  if (getRemainingDraws() < 5)
    return false;
  return (0, import_kolmafia28.cliExecute)("cheat ".concat(card));
}
var import_kolmafia28, _templateObject128, cards;
var init_DeckOfEveryCard = __esm({
  "../../node_modules/libram/dist/resources/2015/DeckOfEveryCard.js": function() {
    import_kolmafia28 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    cards = Object.freeze(["X of Clubs", "X of Diamonds", "X of Hearts", "X of Spades", "X of Papayas", "X of Kumquats", "X of Salads", "X of Cups", "X of Coins", "X of Swords", "X of Wands", "XVI - The Tower", "Professor Plum", "Spare Tire", "Extra Tank", "Sheep", "Year of Plenty", "Mine", "Laboratory", "Plains", "Swamp", "Mountain", "Forest", "Island", "Lead Pipe", "Rope", "Wrench", "Candlestick", "Knife", "Revolver", "Gift Card", "1952 Mickey Mantle", "XXI - The World", "III - The Empress", "VI - The Lovers", "Healing Salve", "Dark Ritual", "Lightning Bolt", "Giant Growth", "Ancestral Recall", "XI - Strength", "I - The Magician", "0 - The Fool", "X - The Wheel of Fortune", "The Race Card", "Green Card", "IV - The Emperor", "IX - The Hermit", "Werewolf", "The Hive", "XVII - The Star", "VII - The Chariot", "XV - The Devil", "V - The Hierophant", "Fire Elemental", "Christmas Card", "Go Fish", "Goblin Sapper", "II - The High Priestess", "XIV - Temperance", "XVIII - The Moon", "Hunky Fireman Card", "Aquarius Horoscope", "XII - The Hanged Man", "Suit Warehouse Discount Card", "Pirate Birthday Card", "Plantable Greeting Card", "Slimer Trading Card", "XIII - Death", "Unstable Portal"]);
  }
});

// ../../node_modules/libram/dist/resources/2015/Dinseylandfill.js
var Dinseylandfill_exports = {};
__export(Dinseylandfill_exports, {
  acceptQuest: function() {
    return acceptQuest;
  },
  activeQuest: function() {
    return activeQuest;
  },
  available: function() {
    return available;
  },
  canFightWartDinsey: function() {
    return canFightWartDinsey;
  },
  coasterNextTurn: function() {
    return coasterNextTurn;
  },
  disposeGarbage: function() {
    return disposeGarbage;
  },
  foughtWartDinseyThisLife: function() {
    return foughtWartDinseyThisLife;
  },
  hasActiveQuest: function() {
    return hasActiveQuest;
  },
  hasDisposedGarbage: function() {
    return hasDisposedGarbage;
  },
  hasQuest: function() {
    return hasQuest;
  },
  have: function() {
    return have18;
  },
  keyCardsLocations: function() {
    return keyCardsLocations;
  },
  questComplete: function() {
    return questComplete;
  },
  quests: function() {
    return quests;
  },
  turnInQuest: function() {
    return turnInQuest;
  }
});
function _createForOfIteratorHelper7(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray16(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray16(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray16(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray16(o, minLen);
}
function _arrayLikeToArray16(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral21(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck10(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties10(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey13(descriptor.key), descriptor);
  }
}
function _createClass10(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties10(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties10(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty12(obj, key, value) {
  key = _toPropertyKey13(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey13(arg) {
  var key = _toPrimitive13(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive13(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function have18() {
  return get("stenchAirportAlways");
}
function available() {
  return have18() || get("_stenchAirportToday");
}
function disposeGarbage() {
  if (hasDisposedGarbage()) {
    return false;
  }
  if (!hasDisposedGarbage() && have($item(_templateObject177 || (_templateObject177 = _taggedTemplateLiteral21(["bag of park garbage"]))))) {
    (0, import_kolmafia29.visitUrl)(maintUrl);
    (0, import_kolmafia29.runChoice)(6);
  }
  return hasDisposedGarbage();
}
function hasQuest() {
  return quests.some(function(q) {
    return q.currentQuest();
  });
}
function activeQuest() {
  return quests.find(function(q) {
    return q.currentQuest();
  }) || BLANK_QUEST;
}
function questComplete() {
  var quest = activeQuest();
  return quest !== BLANK_QUEST && get(quest.questStateProperty) === "finished";
}
function hasActiveQuest() {
  return hasQuest() && !questComplete();
}
function acceptQuest(priority) {
  var _quests$find$priority, _quests$find;
  if (hasQuest()) {
    return false;
  }
  var page = (0, import_kolmafia29.visitUrl)(kioskUrl);
  var choice = 6;
  var at = (0, import_kolmafia29.indexOf)(page, "Available Assignments");
  if (at == -1) {
    return false;
  }
  var jobs = [];
  quests.forEach(function(quest2) {
    jobs.push(quest2.name);
  });
  var priorityNum = typeof priority === "string" ? (_quests$find$priority = (_quests$find = quests.find(function(q) {
    return q.name === priority;
  })) === null || _quests$find === void 0 ? void 0 : _quests$find.priority) !== null && _quests$find$priority !== void 0 ? _quests$find$priority : 7 : priority;
  var availableJobs = [];
  var jobChoices = [["none", 999]];
  var _iterator = _createForOfIteratorHelper7(quests), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var quest = _step.value;
      var job = quest.name;
      var jobAt = (0, import_kolmafia29.indexOf)(page, job, at);
      if (jobAt != -1) {
        availableJobs.push(quest);
        jobChoices.push([job, jobAt]);
        break;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var bestJob = availableJobs.sort(function(a, b) {
    return a.priority - b.priority;
  })[0];
  var sortedChoices = jobChoices.sort(function(a, b) {
    return a[1] - b[1];
  });
  if (bestJob.priority <= priorityNum) {
    for (var index in sortedChoices) {
      var jobName = sortedChoices[index][0];
      if (jobName === bestJob.name) {
        choice = parseInt(index) + 1;
        break;
      }
    }
  }
  (0, import_kolmafia29.runChoice)(choice);
  return hasQuest();
}
function turnInQuest() {
  if (questComplete()) {
    if (activeQuest().name === "racism")
      _set("questEStSocialJusticeI", "unstarted");
    (0, import_kolmafia29.visitUrl)(kioskUrl);
    (0, import_kolmafia29.runChoice)(3);
  }
}
function canFightWartDinsey() {
  return Array.from(keyCardsLocations.keys()).every(function(keycard) {
    return have(keycard);
  }) && !foughtWartDinseyThisLife() && getRemainingLiver() >= 0 && (0, import_kolmafia29.myAdventures)() > 0;
}
function coasterNextTurn() {
  return get("dinseyRollercoasterNext");
}
function foughtWartDinseyThisLife() {
  return get("lastWartDinseyDefeated") === (0, import_kolmafia29.myAscensions)();
}
function hasDisposedGarbage() {
  return get("_dinseyGarbageDisposed");
}
var import_kolmafia29, _templateObject129, _templateObject231, _templateObject331, _templateObject430, _templateObject519, _templateObject616, _templateObject713, _templateObject813, _templateObject911, _templateObject1011, _templateObject1110, _templateObject1210, _templateObject138, _templateObject147, _templateObject157, _templateObject167, _templateObject177, _templateObject187, _templateObject197, _templateObject207, _templateObject2112, _templateObject2210, _templateObject237, _templateObject247, _templateObject257, _templateObject267, _templateObject277, QuestData, kioskUrl, maintUrl, quests, BLANK_QUEST, keyCardsLocations;
var init_Dinseylandfill = __esm({
  "../../node_modules/libram/dist/resources/2015/Dinseylandfill.js": function() {
    import_kolmafia29 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    QuestData = /* @__PURE__ */ function() {
      function QuestData2(name, priority, questNameKiosk, questNameQuestLog, questStateProperty, questProgressProperty, questProgressLimit, canUseWanderers, requiredItem, questLocation) {
        _classCallCheck10(this, QuestData2);
        _defineProperty12(this, "name", void 0);
        _defineProperty12(this, "priority", void 0);
        _defineProperty12(this, "questNameKiosk", void 0);
        _defineProperty12(this, "questNameQuestLog", void 0);
        _defineProperty12(this, "questStateProperty", void 0);
        _defineProperty12(this, "questProgressProperty", void 0);
        _defineProperty12(this, "questProgressLimit", void 0);
        _defineProperty12(this, "canUseWanderers", void 0);
        _defineProperty12(this, "requiredItem", void 0);
        _defineProperty12(this, "questLocation", void 0);
        this.name = name;
        this.priority = priority;
        this.questNameKiosk = questNameKiosk;
        this.questNameQuestLog = questNameQuestLog;
        this.questStateProperty = questStateProperty;
        this.questProgressProperty = questProgressProperty;
        this.questProgressLimit = questProgressLimit;
        this.canUseWanderers = canUseWanderers;
        this.requiredItem = requiredItem;
        this.questLocation = questLocation;
      }
      _createClass10(QuestData2, [{
        key: "currentQuest",
        value: function currentQuest() {
          return get(this.questStateProperty) !== "unstarted";
        }
      }]);
      return QuestData2;
    }();
    kioskUrl = "place.php?whichplace=airport_stench&action=airport3_kiosk";
    maintUrl = "place.php?whichplace=airport_stench&action=airport3_tunnels";
    quests = [new QuestData("lube", 1, "Track Maintenance", "Super Luber", "questEStSuperLuber", "", 0, false, $item(_templateObject129 || (_templateObject129 = _taggedTemplateLiteral21(["lube-shoes"]))), $location(_templateObject231 || (_templateObject231 = _taggedTemplateLiteral21(["Barf Mountain"])))), new QuestData("fuel", 0, "Electrical Maintenance", "Give Me Fuel", "questEStGiveMeFuel", "", 0, false, $item(_templateObject331 || (_templateObject331 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject430 || (_templateObject430 = _taggedTemplateLiteral21(["The Toxic Teacups"])))), new QuestData("sexism", 2, "Sexism Reduction", "Social Justice Adventurer I", "questEStSocialJusticeI", "dinseySocialJusticeIProgress", 15, true, $item(_templateObject519 || (_templateObject519 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject616 || (_templateObject616 = _taggedTemplateLiteral21(["Pirates of the Garbage Barges"])))), new QuestData("racism", 3, "Racism Reduction", "Social Justice Adventurer II", "questEStSocialJusticeII", "dinseySocialJusticeIIProgress", 15, true, $item(_templateObject713 || (_templateObject713 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject813 || (_templateObject813 = _taggedTemplateLiteral21(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))), new QuestData("fun", 4, "Compulsory Fun", "Whistling Zippity-Doo-Dah", "questEStZippityDooDah", "dinseyFunProgress", 15, true, $item(_templateObject911 || (_templateObject911 = _taggedTemplateLiteral21(["Dinsey mascot mask"]))), $location(_templateObject1011 || (_templateObject1011 = _taggedTemplateLiteral21(["The Toxic Teacups"])))), new QuestData("trash", 6, "Waterway Debris Removal", "Teach a Man to Fish Trash", "questEStFishTrash", "dinseyFilthLevel", 0, true, $item(_templateObject1110 || (_templateObject1110 = _taggedTemplateLiteral21(["trash net"]))), $location(_templateObject1210 || (_templateObject1210 = _taggedTemplateLiteral21(["Pirates of the Garbage Barges"])))), new QuestData("bear", 5, "Bear Removal", "Nasty, Nasty Bears", "questEStNastyBears", "dinseyNastyBearsDefeated", 8, false, $item(_templateObject138 || (_templateObject138 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject147 || (_templateObject147 = _taggedTemplateLiteral21(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))), new QuestData("food", 7, "Guest Sustenance Assurance", "Will Work With Food", "questEStWorkWithFood", "dinseyTouristsFed", 30, false, $item(_templateObject157 || (_templateObject157 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject167 || (_templateObject167 = _taggedTemplateLiteral21(["Barf Mountain"]))))];
    BLANK_QUEST = new QuestData("", -1, "", "", "", "", -1, false, $item(_templateObject187 || (_templateObject187 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject197 || (_templateObject197 = _taggedTemplateLiteral21(["none"]))));
    keyCardsLocations = /* @__PURE__ */ new Map([[$item(_templateObject207 || (_templateObject207 = _taggedTemplateLiteral21(["keycard \u03B1"]))), $location(_templateObject2112 || (_templateObject2112 = _taggedTemplateLiteral21(["Barf Mountain"])))], [$item(_templateObject2210 || (_templateObject2210 = _taggedTemplateLiteral21(["keycard \u03B2"]))), $location(_templateObject237 || (_templateObject237 = _taggedTemplateLiteral21(["Pirates of the Garbage Barges"])))], [$item(_templateObject247 || (_templateObject247 = _taggedTemplateLiteral21(["keycard \u03B3"]))), $location(_templateObject257 || (_templateObject257 = _taggedTemplateLiteral21(["The Toxic Teacups"])))], [$item(_templateObject267 || (_templateObject267 = _taggedTemplateLiteral21(["keycard \u03B4"]))), $location(_templateObject277 || (_templateObject277 = _taggedTemplateLiteral21(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))]]);
  }
});

// ../../node_modules/libram/dist/resources/2015/MayoClinic.js
var MayoClinic_exports = {};
__export(MayoClinic_exports, {
  Mayo: function() {
    return Mayo;
  },
  have: function() {
    return have19;
  },
  installed: function() {
    return installed3;
  },
  setMayoMinder: function() {
    return setMayoMinder;
  }
});
function _taggedTemplateLiteral22(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed3() {
  return (0, import_kolmafia30.getWorkshed)() === $item(_templateObject520 || (_templateObject520 = _taggedTemplateLiteral22(["portable Mayo Clinic"])));
}
function have19() {
  return have($item(_templateObject617 || (_templateObject617 = _taggedTemplateLiteral22(["portable Mayo Clinic"])))) || installed3();
}
function setMayoMinder(mayo) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if ((0, import_kolmafia30.getWorkshed)() !== $item(_templateObject714 || (_templateObject714 = _taggedTemplateLiteral22(["portable Mayo Clinic"]))))
    return false;
  if (!Object.values(Mayo).includes(mayo)) {
    logger_default.error("Invalid mayo selected");
    return false;
  }
  if (get("mayoInMouth") && get("mayoInMouth") !== mayo.name) {
    logger_default.error("Currently have incorrect mayo in mouth");
    return false;
  }
  (0, import_kolmafia30.retrieveItem)(quantity, mayo);
  if (!have($item(_templateObject814 || (_templateObject814 = _taggedTemplateLiteral22(["Mayo Minder\u2122"])))))
    (0, import_kolmafia30.buy)($item(_templateObject912 || (_templateObject912 = _taggedTemplateLiteral22(["Mayo Minder\u2122"]))));
  if (get("mayoMinderSetting") !== mayo.name) {
    withChoice(1076, mayo.id - 8260, function() {
      return (0, import_kolmafia30.use)($item(_templateObject1012 || (_templateObject1012 = _taggedTemplateLiteral22(["Mayo Minder\u2122"]))));
    });
  }
  return get("mayoMinderSetting") === mayo.name;
}
var import_kolmafia30, _templateObject130, _templateObject238, _templateObject337, _templateObject431, _templateObject520, _templateObject617, _templateObject714, _templateObject814, _templateObject912, _templateObject1012, Mayo;
var init_MayoClinic = __esm({
  "../../node_modules/libram/dist/resources/2015/MayoClinic.js": function() {
    import_kolmafia30 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    init_template_string();
    Mayo = {
      nex: $item(_templateObject130 || (_templateObject130 = _taggedTemplateLiteral22(["Mayonex"]))),
      diol: $item(_templateObject238 || (_templateObject238 = _taggedTemplateLiteral22(["Mayodiol"]))),
      zapine: $item(_templateObject337 || (_templateObject337 = _taggedTemplateLiteral22(["Mayozapine"]))),
      flex: $item(_templateObject431 || (_templateObject431 = _taggedTemplateLiteral22(["Mayoflex"])))
    };
  }
});

// ../../node_modules/libram/dist/resources/2016/SourceTerminal.js
var SourceTerminal_exports = {};
__export(SourceTerminal_exports, {
  Buffs: function() {
    return Buffs;
  },
  Digitize: function() {
    return Digitize;
  },
  Items: function() {
    return Items;
  },
  RolloverBuffs: function() {
    return RolloverBuffs;
  },
  Skills: function() {
    return Skills;
  },
  canDigitize: function() {
    return canDigitize;
  },
  couldDigitize: function() {
    return couldDigitize;
  },
  duplicateUsesRemaining: function() {
    return duplicateUsesRemaining;
  },
  educate: function() {
    return educate;
  },
  enhance: function() {
    return enhance;
  },
  enhanceBuffDuration: function() {
    return enhanceBuffDuration;
  },
  enhanceUsesRemaining: function() {
    return enhanceUsesRemaining;
  },
  enquiry: function() {
    return enquiry;
  },
  enquiryBuffDuration: function() {
    return enquiryBuffDuration;
  },
  extrude: function() {
    return extrude;
  },
  getChips: function() {
    return getChips;
  },
  getDigitizeMonster: function() {
    return getDigitizeMonster;
  },
  getDigitizeMonsterCount: function() {
    return getDigitizeMonsterCount;
  },
  getDigitizeUses: function() {
    return getDigitizeUses;
  },
  getDigitizeUsesRemaining: function() {
    return getDigitizeUsesRemaining;
  },
  getDuplicateUses: function() {
    return getDuplicateUses;
  },
  getEnhanceUses: function() {
    return getEnhanceUses;
  },
  getMaximumDigitizeUses: function() {
    return getMaximumDigitizeUses;
  },
  getPortscanUses: function() {
    return getPortscanUses;
  },
  getSkills: function() {
    return getSkills;
  },
  have: function() {
    return have20;
  },
  isCurrentSkill: function() {
    return isCurrentSkill;
  },
  maximumDuplicateUses: function() {
    return maximumDuplicateUses;
  },
  maximumEnhanceUses: function() {
    return maximumEnhanceUses;
  },
  prepareDigitize: function() {
    return prepareDigitize;
  }
});
function _createForOfIteratorHelper8(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray17(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray17(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray17(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray17(o, minLen);
}
function _arrayLikeToArray17(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral23(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have20() {
  return haveInCampground(item);
}
function enhance(buff) {
  if (!Object.values(Buffs).includes(buff)) {
    return false;
  }
  return (0, import_kolmafia31.cliExecute)("terminal enhance ".concat(buff.name));
}
function enquiry(rolloverBuff) {
  if (!Object.values(RolloverBuffs).includes(rolloverBuff)) {
    return false;
  }
  return (0, import_kolmafia31.cliExecute)("terminal enquiry ".concat(rolloverBuff.name));
}
function educate(skills3) {
  var skillsArray = Array.isArray(skills3) ? skills3.slice(0, 2) : [skills3];
  if (arrayEquals(skillsArray, getSkills()))
    return true;
  var _iterator = _createForOfIteratorHelper8(skillsArray), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var skill = _step.value;
      if (!Object.values(Skills).includes(skill))
        return false;
      (0, import_kolmafia31.cliExecute)("terminal educate ".concat(skill.name.toLowerCase(), ".edu"));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return true;
}
function getSkills() {
  return ["sourceTerminalEducate1", "sourceTerminalEducate2"].map(function(p) {
    return get(p);
  }).filter(function(s) {
    return s !== "";
  }).map(function(s) {
    return import_kolmafia31.Skill.get(s.slice(0, -4));
  });
}
function isCurrentSkill(skills3) {
  var currentSkills = getSkills();
  var skillsArray = Array.isArray(skills3) ? skills3.slice(0, 2) : [skills3];
  return skillsArray.every(function(skill) {
    return currentSkills.includes(skill);
  });
}
function extrude(item10) {
  var fileName = Items.get(item10);
  if (!fileName)
    return false;
  return (0, import_kolmafia31.cliExecute)("terminal extrude ".concat(fileName));
}
function getChips() {
  return get("sourceTerminalChips").split(",");
}
function getDigitizeUses() {
  return get("_sourceTerminalDigitizeUses");
}
function getDigitizeMonster() {
  return get("_sourceTerminalDigitizeMonster");
}
function getDigitizeMonsterCount() {
  return get("_sourceTerminalDigitizeMonsterCount");
}
function getMaximumDigitizeUses() {
  var chips = getChips();
  return 1 + (chips.includes("TRAM") ? 1 : 0) + (chips.includes("TRIGRAM") ? 1 : 0);
}
function getDigitizeUsesRemaining() {
  return getMaximumDigitizeUses() - getDigitizeUses();
}
function couldDigitize() {
  return getDigitizeUses() < getMaximumDigitizeUses();
}
function prepareDigitize() {
  if (!isCurrentSkill(Skills.Digitize)) {
    return educate(Skills.Digitize);
  }
  return true;
}
function canDigitize() {
  return couldDigitize() && getSkills().includes(Skills.Digitize);
}
function getDuplicateUses() {
  return get("_sourceTerminalDuplicateUses");
}
function getEnhanceUses() {
  return get("_sourceTerminalEnhanceUses");
}
function getPortscanUses() {
  return get("_sourceTerminalPortscanUses");
}
function maximumDuplicateUses() {
  return (0, import_kolmafia31.myPath)() === import_kolmafia31.Path.get("The Source") ? 5 : 1;
}
function duplicateUsesRemaining() {
  return maximumDuplicateUses() - getDuplicateUses();
}
function maximumEnhanceUses() {
  return 1 + getChips().filter(function(chip) {
    return ["CRAM", "SCRAM"].includes(chip);
  }).length;
}
function enhanceUsesRemaining() {
  return maximumEnhanceUses() - getEnhanceUses();
}
function enhanceBuffDuration() {
  return 25 + get("sourceTerminalPram") * 5 + (getChips().includes("INGRAM") ? 25 : 0);
}
function enquiryBuffDuration() {
  return 50 + 10 * get("sourceTerminalGram") + (getChips().includes("DIAGRAM") ? 50 : 0);
}
var import_kolmafia31, _templateObject131, _templateObject239, _templateObject338, _templateObject437, _templateObject521, _templateObject618, _templateObject715, _templateObject815, _templateObject913, _templateObject1013, _templateObject1111, _templateObject1211, _templateObject139, _templateObject148, _templateObject158, _templateObject168, _templateObject178, _templateObject188, _templateObject198, _templateObject208, _templateObject2113, _templateObject2211, _templateObject2310, _templateObject248, _templateObject258, _templateObject268, _templateObject278, item, Buffs, RolloverBuffs, Skills, Items, Digitize;
var init_SourceTerminal = __esm({
  "../../node_modules/libram/dist/resources/2016/SourceTerminal.js": function() {
    import_kolmafia31 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item = $item(_templateObject131 || (_templateObject131 = _taggedTemplateLiteral23(["Source terminal"])));
    Buffs = {
      Items: $effect(_templateObject239 || (_templateObject239 = _taggedTemplateLiteral23(["items.enh"]))),
      Meat: $effect(_templateObject338 || (_templateObject338 = _taggedTemplateLiteral23(["meat.enh"]))),
      Init: $effect(_templateObject437 || (_templateObject437 = _taggedTemplateLiteral23(["init.enh"]))),
      Critical: $effect(_templateObject521 || (_templateObject521 = _taggedTemplateLiteral23(["critical.enh"]))),
      Damage: $effect(_templateObject618 || (_templateObject618 = _taggedTemplateLiteral23(["damage.enh"]))),
      Substats: $effect(_templateObject715 || (_templateObject715 = _taggedTemplateLiteral23(["substats.enh"])))
    };
    RolloverBuffs = {
      /** +5 Familiar Weight */
      Familiar: $effect(_templateObject815 || (_templateObject815 = _taggedTemplateLiteral23(["familiar.enq"]))),
      /** +25 ML */
      Monsters: $effect(_templateObject913 || (_templateObject913 = _taggedTemplateLiteral23(["monsters.enq"]))),
      /** +5 Prismatic Resistance */
      Protect: $effect(_templateObject1013 || (_templateObject1013 = _taggedTemplateLiteral23(["protect.enq"]))),
      /** +100% Muscle, +100% Mysticality, +100% Moxie */
      Stats: $effect(_templateObject1111 || (_templateObject1111 = _taggedTemplateLiteral23(["stats.enq"])))
    };
    Skills = {
      /** Collect Source essence from enemies once per combat */
      Extract: $skill(_templateObject1211 || (_templateObject1211 = _taggedTemplateLiteral23(["Extract"]))),
      /** Stagger and create a wandering monster 1-3 times per day */
      Digitize: $skill(_templateObject139 || (_templateObject139 = _taggedTemplateLiteral23(["Digitize"]))),
      /** Stagger and deal 25% of enemy HP in damage once per combat */
      Compress: $skill(_templateObject148 || (_templateObject148 = _taggedTemplateLiteral23(["Compress"]))),
      /** Double monster's HP, attack, defence, attacks per round and item drops once per fight and once per day (five in The Source) */
      Duplicate: $skill(_templateObject158 || (_templateObject158 = _taggedTemplateLiteral23(["Duplicate"]))),
      /** Causes government agent/Source Agent wanderer next turn once per combat and three times per day */
      Portscan: $skill(_templateObject168 || (_templateObject168 = _taggedTemplateLiteral23(["Portscan"]))),
      /** Increase Max MP by 100% and recover 1000 MP once per combat with a 30 turn cooldown */
      Turbo: $skill(_templateObject178 || (_templateObject178 = _taggedTemplateLiteral23(["Turbo"])))
    };
    Items = /* @__PURE__ */ new Map([[$item(_templateObject188 || (_templateObject188 = _taggedTemplateLiteral23(["browser cookie"]))), "food.ext"], [$item(_templateObject198 || (_templateObject198 = _taggedTemplateLiteral23(["hacked gibson"]))), "booze.ext"], [$item(_templateObject208 || (_templateObject208 = _taggedTemplateLiteral23(["Source shades"]))), "goggles.ext"], [$item(_templateObject2113 || (_templateObject2113 = _taggedTemplateLiteral23(["Source terminal GRAM chip"]))), "gram.ext"], [$item(_templateObject2211 || (_templateObject2211 = _taggedTemplateLiteral23(["Source terminal PRAM chip"]))), "pram.ext"], [$item(_templateObject2310 || (_templateObject2310 = _taggedTemplateLiteral23(["Source terminal SPAM chip"]))), "spam.ext"], [$item(_templateObject248 || (_templateObject248 = _taggedTemplateLiteral23(["Source terminal CRAM chip"]))), "cram.ext"], [$item(_templateObject258 || (_templateObject258 = _taggedTemplateLiteral23(["Source terminal DRAM chip"]))), "dram.ext"], [$item(_templateObject268 || (_templateObject268 = _taggedTemplateLiteral23(["Source terminal TRAM chip"]))), "tram.ext"], [$item(_templateObject278 || (_templateObject278 = _taggedTemplateLiteral23(["software bug"]))), "familiar.ext"]]);
    Digitize = new Copier(function() {
      return couldDigitize();
    }, function() {
      return prepareDigitize();
    }, function() {
      return canDigitize();
    }, function() {
      return getDigitizeMonster();
    });
  }
});

// ../../node_modules/libram/dist/resources/2016/Witchess.js
var Witchess_exports = {};
__export(Witchess_exports, {
  fightPiece: function() {
    return fightPiece;
  },
  fightsDone: function() {
    return fightsDone;
  },
  have: function() {
    return have21;
  },
  pieces: function() {
    return pieces;
  }
});
function _taggedTemplateLiteral24(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have21() {
  return haveInCampground(item2);
}
function fightsDone() {
  return get("_witchessFights");
}
function fightPiece(piece) {
  if (!pieces.includes(piece))
    throw new Error("That is not a valid piece.");
  if (!(0, import_kolmafia32.visitUrl)("campground.php?action=witchess").includes("whichchoice value=1181")) {
    throw new Error("Failed to open Witchess.");
  }
  if (!(0, import_kolmafia32.runChoice)(1).includes("whichchoice=1182")) {
    throw new Error("Failed to visit shrink ray.");
  }
  if (!(0, import_kolmafia32.visitUrl)("choice.php?option=1&pwd=".concat((0, import_kolmafia32.myHash)(), "&whichchoice=1182&piece=").concat(piece.id), false).includes(piece.name)) {
    throw new Error("Failed to start fight.");
  }
  return (0, import_kolmafia32.runCombat)();
}
var import_kolmafia32, _templateObject140, item2, pieces;
var init_Witchess = __esm({
  "../../node_modules/libram/dist/resources/2016/Witchess.js": function() {
    import_kolmafia32 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item2 = $item(_templateObject140 || (_templateObject140 = _taggedTemplateLiteral24(["Witchess Set"])));
    pieces = import_kolmafia32.Monster.get(["Witchess Pawn", "Witchess Knight", "Witchess Bishop", "Witchess Rook", "Witchess Queen", "Witchess King", "Witchess Witch", "Witchess Ox"]);
  }
});

// ../../node_modules/libram/dist/resources/2017/Horsery.js
var Horsery_exports = {};
__export(Horsery_exports, {
  changeHorse: function() {
    return changeHorse;
  },
  crazyHorseStats: function() {
    return crazyHorseStats;
  },
  current: function() {
    return current;
  },
  have: function() {
    return have22;
  }
});
function have22() {
  return get("horseryAvailable");
}
function current() {
  var horse = get("_horsery");
  return horse ? horse.split(" ")[0] : null;
}
function changeHorse(horse) {
  if (horse === current())
    return true;
  if (!have22())
    return false;
  (0, import_kolmafia33.cliExecute)("horsery ".concat(horse));
  return current() === horse;
}
function crazyHorseStats() {
  if (!have22())
    return {};
  if (!get("_horseryCrazyName")) {
    (0, import_kolmafia33.visitUrl)("place.php?whichplace=town_right&action=town_horsery");
  }
  return {
    "Mysticality Percent": Number(get("_horseryCrazyMys")),
    "Muscle Percent": Number(get("_horseryCrazyMus")),
    "Moxie Percent": Number(get("_horseryCrazyMox"))
  };
}
var import_kolmafia33;
var init_Horsery = __esm({
  "../../node_modules/libram/dist/resources/2017/Horsery.js": function() {
    import_kolmafia33 = require("kolmafia");
    init_property();
  }
});

// ../../node_modules/libram/dist/resources/2017/MummingTrunk.js
var MummingTrunk_exports = {};
__export(MummingTrunk_exports, {
  currentCostumes: function() {
    return currentCostumes;
  }
});
function _createForOfIteratorHelper9(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray18(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray18(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray18(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray18(o, minLen);
}
function _arrayLikeToArray18(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function toModifier(input) {
  var regExp = new RegExp(/Experience \((.*?)\)/);
  var matcher = input.match(regExp);
  return matcher ? "".concat(matcher[2], " Experience") : input;
}
function currentCostumes() {
  var entries = get("_mummeryMods").split(",");
  var returnValue = /* @__PURE__ */ new Map();
  var regExp = new RegExp(/([^:]+): \[(\d+)\*fam\(([^)]+)\)\]/);
  var _iterator = _createForOfIteratorHelper9(entries), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var entry = _step.value;
      var matcher = entry.match(regExp);
      if (matcher) {
        returnValue.set((0, import_kolmafia34.toFamiliar)(matcher[3]), [toModifier(matcher[1]), parseInt(matcher[2])]);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return returnValue;
}
var import_kolmafia34;
var init_MummingTrunk = __esm({
  "../../node_modules/libram/dist/resources/2017/MummingTrunk.js": function() {
    import_kolmafia34 = require("kolmafia");
    init_property();
  }
});

// ../../node_modules/libram/dist/resources/2017/Pantogram.js
var Pantogram_exports = {};
__export(Pantogram_exports, {
  findRequirements: function() {
    return findRequirements;
  },
  have: function() {
    return have23;
  },
  havePants: function() {
    return havePants;
  },
  makePants: function() {
    return makePants;
  },
  makePantsFromObject: function() {
    return makePantsFromObject;
  }
});
function _slicedToArray8(arr, i) {
  return _arrayWithHoles8(arr) || _iterableToArrayLimit8(arr, i) || _unsupportedIterableToArray19(arr, i) || _nonIterableRest8();
}
function _nonIterableRest8() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray19(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray19(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray19(o, minLen);
}
function _arrayLikeToArray19(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit8(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles8(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _defineProperty13(obj, key, value) {
  key = _toPropertyKey14(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey14(arg) {
  var key = _toPrimitive14(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive14(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral25(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have23() {
  return have(pantogram);
}
function havePants() {
  return have(pants);
}
function getLeftSacPair(mod) {
  return LeftSacrifice[mod];
}
function getMiddleSacPair(mod) {
  return MiddleSacrifice[mod];
}
function getRightSacPair(mod) {
  return RightSacrifice[mod];
}
function findRequirements(modifiers) {
  var leftSac = modifiers.leftSac, rightSac = modifiers.rightSac, middleSac = modifiers.middleSac;
  var returnValue = /* @__PURE__ */ new Map();
  if (leftSac) {
    var _getLeftSacPair = getLeftSacPair(leftSac), _getLeftSacPair2 = _slicedToArray8(_getLeftSacPair, 2), sacrifice = _getLeftSacPair2[0], quantity = _getLeftSacPair2[1];
    if (sacrifice instanceof import_kolmafia35.Item) {
      returnValue.set(sacrifice, quantity);
    }
  }
  if (rightSac) {
    var _getRightSacPair = getRightSacPair(rightSac), _getRightSacPair2 = _slicedToArray8(_getRightSacPair, 2), _sacrifice = _getRightSacPair2[0], _quantity = _getRightSacPair2[1];
    if (_sacrifice instanceof import_kolmafia35.Item) {
      returnValue.set(_sacrifice, _quantity);
    }
  }
  if (middleSac) {
    var _getMiddleSacPair = getMiddleSacPair(middleSac), _getMiddleSacPair2 = _slicedToArray8(_getMiddleSacPair, 2), _sacrifice2 = _getMiddleSacPair2[0], _quantity2 = _getMiddleSacPair2[1];
    if (_sacrifice2 instanceof import_kolmafia35.Item) {
      returnValue.set(_sacrifice2, _quantity2);
    }
  }
  return returnValue;
}
function sacrificePairToURL(pair) {
  var _pair = _slicedToArray8(pair, 2), rawSacrifice = _pair[0], quantity = _pair[1];
  var sacrifice = rawSacrifice instanceof import_kolmafia35.Item ? rawSacrifice.id : rawSacrifice;
  return "".concat(sacrifice, ",").concat(quantity);
}
function makePants(alignment, element, leftSac, middleSac, rightSac) {
  if (have(pants) || !have(pantogram))
    return false;
  var requirements = findRequirements({
    alignment: alignment,
    element: element,
    leftSac: leftSac,
    rightSac: rightSac,
    middleSac: middleSac
  });
  if (Array.from(requirements.entries()).some(function(_ref) {
    var _ref2 = _slicedToArray8(_ref, 2), item10 = _ref2[0], quantity = _ref2[1];
    return !have(item10, quantity);
  })) {
    return false;
  }
  var s1 = sacrificePairToURL(getLeftSacPair(leftSac));
  var s2 = sacrificePairToURL(getRightSacPair(rightSac));
  var s3 = sacrificePairToURL(getMiddleSacPair(middleSac));
  var url = "choice.php?whichchoice=1270&pwd&option=1&m=".concat(Alignment[alignment], "&e=").concat(Element3[element], "&s1=").concat(s1, "&s2=").concat(s2, "&s3=").concat(s3);
  directlyUse(pantogram);
  (0, import_kolmafia35.visitUrl)(url);
  return have(pants);
}
function makePantsFromObject(pants2) {
  return makePants(pants2.alignment, pants2.element, pants2.leftSac, pants2.middleSac, pants2.rightSac);
}
var import_kolmafia35, _templateObject141, _templateObject240, _Alignment, _Element, _templateObject339, _templateObject438, _templateObject525, _templateObject619, _templateObject716, _templateObject816, _templateObject914, _LeftSacrifice, _templateObject1014, _templateObject1112, _templateObject1212, _templateObject1310, _templateObject149, _templateObject159, _templateObject169, _templateObject179, _templateObject189, _MiddleSacrifice, _templateObject199, _templateObject209, _templateObject2114, _templateObject2212, _templateObject2311, _templateObject249, _templateObject259, _templateObject269, _templateObject279, _templateObject287, _RightSacrifice, pantogram, pants, Alignment, Element3, LeftSacrifice, MiddleSacrifice, RightSacrifice;
var init_Pantogram = __esm({
  "../../node_modules/libram/dist/resources/2017/Pantogram.js": function() {
    import_kolmafia35 = require("kolmafia");
    init_lib();
    init_template_string();
    pantogram = $item(_templateObject141 || (_templateObject141 = _taggedTemplateLiteral25(["portable pantogram"])));
    pants = $item(_templateObject240 || (_templateObject240 = _taggedTemplateLiteral25(["pantogram pants"])));
    Alignment = (_Alignment = {}, _defineProperty13(_Alignment, "Muscle", 1), _defineProperty13(_Alignment, "Mysticality", 2), _defineProperty13(_Alignment, "Moxie", 3), _Alignment);
    Element3 = (_Element = {}, _defineProperty13(_Element, "Hot Resistance: 2", 1), _defineProperty13(_Element, "Cold Resistance: 2", 2), _defineProperty13(_Element, "Spooky Resistance: 2", 3), _defineProperty13(_Element, "Sleaze Resistance: 2", 4), _defineProperty13(_Element, "Stench Resistance: 2", 5), _Element);
    LeftSacrifice = (_LeftSacrifice = {}, _defineProperty13(_LeftSacrifice, "Maximum HP: 40", [-1, 0]), _defineProperty13(_LeftSacrifice, "Maximum MP: 20", [-2, 0]), _defineProperty13(_LeftSacrifice, "HP Regen Max: 10", [$item(_templateObject339 || (_templateObject339 = _taggedTemplateLiteral25(["red pixel potion"]))), 1]), _defineProperty13(_LeftSacrifice, "HP Regen Max: 15", [$item(_templateObject438 || (_templateObject438 = _taggedTemplateLiteral25(["royal jelly"]))), 1]), _defineProperty13(_LeftSacrifice, "HP Regen Max: 20", [$item(_templateObject525 || (_templateObject525 = _taggedTemplateLiteral25(["scented massage oil"]))), 1]), _defineProperty13(_LeftSacrifice, "MP Regen Max: 10", [$item(_templateObject619 || (_templateObject619 = _taggedTemplateLiteral25(["Cherry Cloaca Cola"]))), 1]), _defineProperty13(_LeftSacrifice, "MP Regen Max: 15", [$item(_templateObject716 || (_templateObject716 = _taggedTemplateLiteral25(["bubblin' crude"]))), 1]), _defineProperty13(_LeftSacrifice, "MP Regen Max: 20", [$item(_templateObject816 || (_templateObject816 = _taggedTemplateLiteral25(["glowing New Age crystal"]))), 1]), _defineProperty13(_LeftSacrifice, "Mana Cost: -3", [$item(_templateObject914 || (_templateObject914 = _taggedTemplateLiteral25(["baconstone"]))), 1]), _LeftSacrifice);
    MiddleSacrifice = (_MiddleSacrifice = {}, _defineProperty13(_MiddleSacrifice, "Combat Rate: -5", [-1, 0]), _defineProperty13(_MiddleSacrifice, "Combat Rate: 5", [-2, 0]), _defineProperty13(_MiddleSacrifice, "Critical Hit Percent: 10", [$item(_templateObject1014 || (_templateObject1014 = _taggedTemplateLiteral25(["hamethyst"]))), 1]), _defineProperty13(_MiddleSacrifice, "Initiative: 50", [$item(_templateObject1112 || (_templateObject1112 = _taggedTemplateLiteral25(["bar skin"]))), 1]), _defineProperty13(_MiddleSacrifice, "Familiar Weight: 10", [$item(_templateObject1212 || (_templateObject1212 = _taggedTemplateLiteral25(["lead necklace"]))), 11]), _defineProperty13(_MiddleSacrifice, "Candy Drop: 100", [$item(_templateObject1310 || (_templateObject1310 = _taggedTemplateLiteral25(["huge bowl of candy"]))), 1]), _defineProperty13(_MiddleSacrifice, "Item Drop Penalty: -10", [$item(_templateObject149 || (_templateObject149 = _taggedTemplateLiteral25(["sea salt crystal"]))), 11]), _defineProperty13(_MiddleSacrifice, "Fishing Skill: 5", [$item(_templateObject159 || (_templateObject159 = _taggedTemplateLiteral25(["wriggling worm"]))), 1]), _defineProperty13(_MiddleSacrifice, "Pool Skill: 5", [$item(_templateObject169 || (_templateObject169 = _taggedTemplateLiteral25(["8-ball"]))), 15]), _defineProperty13(_MiddleSacrifice, "Avatar: Purple", [$item(_templateObject179 || (_templateObject179 = _taggedTemplateLiteral25(["moxie weed"]))), 99]), _defineProperty13(_MiddleSacrifice, "Drops Items: true", [$item(_templateObject189 || (_templateObject189 = _taggedTemplateLiteral25(["ten-leaf clover"]))), 1]), _MiddleSacrifice);
    RightSacrifice = (_RightSacrifice = {}, _defineProperty13(_RightSacrifice, "Weapon Damage: 20", [-1, 0]), _defineProperty13(_RightSacrifice, "Spell Damage Percent: 20", [-2, 0]), _defineProperty13(_RightSacrifice, "Meat Drop: 30", [$item(_templateObject199 || (_templateObject199 = _taggedTemplateLiteral25(["taco shell"]))), 1]), _defineProperty13(_RightSacrifice, "Meat Drop: 60", [$item(_templateObject209 || (_templateObject209 = _taggedTemplateLiteral25(["porquoise"]))), 1]), _defineProperty13(_RightSacrifice, "Item Drop: 15", [$item(_templateObject2114 || (_templateObject2114 = _taggedTemplateLiteral25(["fairy gravy boat"]))), 1]), _defineProperty13(_RightSacrifice, "Item Drop: 30", [$item(_templateObject2212 || (_templateObject2212 = _taggedTemplateLiteral25(["tiny dancer"]))), 1]), _defineProperty13(_RightSacrifice, "Muscle Experience: 3", [$item(_templateObject2311 || (_templateObject2311 = _taggedTemplateLiteral25(["Knob Goblin firecracker"]))), 3]), _defineProperty13(_RightSacrifice, "Mysticality Experience: 3", [$item(_templateObject249 || (_templateObject249 = _taggedTemplateLiteral25(["razor-sharp can lid"]))), 3]), _defineProperty13(_RightSacrifice, "Moxie Experience: 3", [$item(_templateObject259 || (_templateObject259 = _taggedTemplateLiteral25(["spider web"]))), 3]), _defineProperty13(_RightSacrifice, "Muscle Experience Percent: 25", [$item(_templateObject269 || (_templateObject269 = _taggedTemplateLiteral25(["synthetic marrow"]))), 5]), _defineProperty13(_RightSacrifice, "Mysticality Experience Percent: 25", [$item(_templateObject279 || (_templateObject279 = _taggedTemplateLiteral25(["haunted battery"]))), 5]), _defineProperty13(_RightSacrifice, "Moxie Experience Percent: 25", [$item(_templateObject287 || (_templateObject287 = _taggedTemplateLiteral25(["the funk"]))), 5]), _RightSacrifice);
  }
});

// ../../node_modules/libram/dist/resources/2017/Robortender.js
var Robortender_exports = {};
__export(Robortender_exports, {
  currentDrinks: function() {
    return currentDrinks;
  },
  drinks: function() {
    return drinks;
  },
  dropChance: function() {
    return dropChance;
  },
  dropFrom: function() {
    return dropFrom;
  },
  feed: function() {
    return feed;
  },
  have: function() {
    return have24;
  },
  majorDrinks: function() {
    return majorDrinks;
  },
  minorDrinks: function() {
    return minorDrinks;
  }
});
function _toConsumableArray9(arr) {
  return _arrayWithoutHoles9(arr) || _iterableToArray9(arr) || _unsupportedIterableToArray20(arr) || _nonIterableSpread9();
}
function _nonIterableSpread9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray20(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray20(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray20(o, minLen);
}
function _iterableToArray9(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles9(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray20(arr);
}
function _arrayLikeToArray20(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral26(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have24() {
  return (0, import_kolmafia36.haveFamiliar)(familiar5);
}
function dropFrom(target) {
  var _phylumDrops$get;
  var phylum = target instanceof import_kolmafia36.Monster ? target.phylum : target;
  return (_phylumDrops$get = phylumDrops.get(phylum)) !== null && _phylumDrops$get !== void 0 ? _phylumDrops$get : $item.none;
}
function dropChance() {
  var _dropNumber;
  var dropNumber = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_roboDrops");
  return (_dropNumber = [1, 0.5, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3][dropNumber]) !== null && _dropNumber !== void 0 ? _dropNumber : 0.2;
}
function currentDrinks() {
  var pref = get("_roboDrinks");
  if (!pref)
    return [];
  return pref.split(",").filter(function(x) {
    return x.trim();
  }).map(function(name) {
    return (0, import_kolmafia36.toItem)(name);
  }).filter(function(drink3) {
    return drinks.includes(drink3);
  });
}
function feed(beverage) {
  if (currentDrinks().includes(beverage))
    return true;
  if (currentDrinks().length >= 5)
    return false;
  if (!drinks.includes(beverage))
    return false;
  if (!(0, import_kolmafia36.itemAmount)(beverage))
    return false;
  if (!have24())
    return false;
  var priorFamiliar = (0, import_kolmafia36.myFamiliar)();
  (0, import_kolmafia36.useFamiliar)(familiar5);
  (0, import_kolmafia36.visitUrl)("inventory.php?action=robooze&which=1&whichitem=".concat(beverage.id));
  (0, import_kolmafia36.useFamiliar)(priorFamiliar);
  return currentDrinks().includes(beverage);
}
var import_kolmafia36, _templateObject150, _templateObject241, _templateObject340, _templateObject439, _templateObject526, _templateObject620, _templateObject717, _templateObject817, _templateObject915, _templateObject1015, _templateObject1113, _templateObject1213, _templateObject1311, _templateObject1410, _templateObject1510, _templateObject1610, _templateObject1710, _templateObject1810, _templateObject1910, _templateObject2010, _templateObject2115, _templateObject2213, _templateObject2312, _templateObject2410, _templateObject2510, _templateObject2610, _templateObject2710, _templateObject288, _templateObject297, _templateObject307, _templateObject3112, _templateObject3210, _templateObject3310, _templateObject347, _templateObject357, _templateObject367, _templateObject377, familiar5, phylumDrops, minorDrinks, majorDrinks, drinks;
var init_Robortender = __esm({
  "../../node_modules/libram/dist/resources/2017/Robortender.js": function() {
    import_kolmafia36 = require("kolmafia");
    init_property();
    init_template_string();
    familiar5 = $familiar(_templateObject150 || (_templateObject150 = _taggedTemplateLiteral26(["Robortender"])));
    phylumDrops = /* @__PURE__ */ new Map([
      [$phylum(_templateObject241 || (_templateObject241 = _taggedTemplateLiteral26(["Bug"]))), $item(_templateObject340 || (_templateObject340 = _taggedTemplateLiteral26(["pickled grasshopper"])))],
      // bottle of anís
      [$phylum(_templateObject439 || (_templateObject439 = _taggedTemplateLiteral26(["Constellation"]))), import_kolmafia36.Item.get(9348)],
      [$phylum(_templateObject526 || (_templateObject526 = _taggedTemplateLiteral26(["Demon"]))), $item(_templateObject620 || (_templateObject620 = _taggedTemplateLiteral26(["bottle of novelty hot sauce"])))],
      [$phylum(_templateObject717 || (_templateObject717 = _taggedTemplateLiteral26(["Elemental"]))), $item(_templateObject817 || (_templateObject817 = _taggedTemplateLiteral26(["elemental sugarcube"])))],
      [$phylum(_templateObject915 || (_templateObject915 = _taggedTemplateLiteral26(["Elf"]))), $item(_templateObject1015 || (_templateObject1015 = _taggedTemplateLiteral26(["peppermint sprig"])))],
      [$phylum(_templateObject1113 || (_templateObject1113 = _taggedTemplateLiteral26(["Fish"]))), $item(_templateObject1213 || (_templateObject1213 = _taggedTemplateLiteral26(["bottle of clam juice"])))],
      [$phylum(_templateObject1311 || (_templateObject1311 = _taggedTemplateLiteral26(["Goblin"]))), $item(_templateObject1410 || (_templateObject1410 = _taggedTemplateLiteral26(["cocktail mushroom"])))],
      [$phylum(_templateObject1510 || (_templateObject1510 = _taggedTemplateLiteral26(["Hippy"]))), $item(_templateObject1610 || (_templateObject1610 = _taggedTemplateLiteral26(["shot of granola liqueur"])))],
      [$phylum(_templateObject1710 || (_templateObject1710 = _taggedTemplateLiteral26(["Hobo"]))), $item(_templateObject1810 || (_templateObject1810 = _taggedTemplateLiteral26(["can of cherry-flavored sterno"])))],
      [$phylum(_templateObject1910 || (_templateObject1910 = _taggedTemplateLiteral26(["Horror"]))), $item(_templateObject2010 || (_templateObject2010 = _taggedTemplateLiteral26(["lump of black ichor"])))],
      [$phylum(_templateObject2115 || (_templateObject2115 = _taggedTemplateLiteral26(["Humanoid"]))), $item(_templateObject2213 || (_templateObject2213 = _taggedTemplateLiteral26(["bottle of gregnadigne"])))],
      // bottle of Crème de Fugu
      [$phylum(_templateObject2312 || (_templateObject2312 = _taggedTemplateLiteral26(["Mer-kin"]))), import_kolmafia36.Item.get(9358)],
      [$phylum(_templateObject2410 || (_templateObject2410 = _taggedTemplateLiteral26(["Orc"]))), $item(_templateObject2510 || (_templateObject2510 = _taggedTemplateLiteral26(["baby oil shooter"])))],
      [$phylum(_templateObject2610 || (_templateObject2610 = _taggedTemplateLiteral26(["Penguin"]))), $item(_templateObject2710 || (_templateObject2710 = _taggedTemplateLiteral26(["fish head"])))],
      [$phylum(_templateObject288 || (_templateObject288 = _taggedTemplateLiteral26(["Pirate"]))), $item(_templateObject297 || (_templateObject297 = _taggedTemplateLiteral26(["limepatch"])))],
      [$phylum(_templateObject307 || (_templateObject307 = _taggedTemplateLiteral26(["Plant"]))), $item(_templateObject3112 || (_templateObject3112 = _taggedTemplateLiteral26(["pile of dirt"])))],
      [$phylum(_templateObject3210 || (_templateObject3210 = _taggedTemplateLiteral26(["Slime"]))), $item(_templateObject3310 || (_templateObject3310 = _taggedTemplateLiteral26(["slime shooter"])))],
      [$phylum(_templateObject347 || (_templateObject347 = _taggedTemplateLiteral26(["Weird"]))), $item(_templateObject357 || (_templateObject357 = _taggedTemplateLiteral26(["imaginary lemon"])))]
    ]);
    minorDrinks = $items(_templateObject367 || (_templateObject367 = _taggedTemplateLiteral26(["literal grasshopper, double entendre, Phlegethon, Siberian sunrise, mentholated wine, low tide martini, shroomtini, morning dew, whiskey squeeze, great old fashioned, Gnomish sagngria, vodka stinger, extremely slippery nipple, piscatini, Churchill, soilzerac, London frog, nothingtini"])));
    majorDrinks = $items(_templateObject377 || (_templateObject377 = _taggedTemplateLiteral26(["eighth plague, single entendre, reverse Tantalus, elemental caipiroska, Feliz Navidad, Bloody Nora, moreltini, hell in a bucket, Newark, R'lyeh, Gnollish sangria, vodka barracuda, Mysterious Island iced tea, drive-by shooting, gunner's daughter, dirt julep, Simepore slime, Phil Collins"])));
    drinks = [].concat(_toConsumableArray9(minorDrinks), _toConsumableArray9(majorDrinks));
  }
});

// ../../node_modules/libram/dist/resources/2017/Spacegate.js
var Spacegate_exports = {};
__export(Spacegate_exports, {
  animalLife: function() {
    return animalLife;
  },
  dial: function() {
    return dial;
  },
  dialRandom: function() {
    return dialRandom;
  },
  dialled: function() {
    return dialled;
  },
  getHazardEquipment: function() {
    return getHazardEquipment;
  },
  getVaccine: function() {
    return getVaccine;
  },
  have: function() {
    return have25;
  },
  hazardEquipment: function() {
    return hazardEquipment;
  },
  hazards: function() {
    return hazards;
  },
  hostileLife: function() {
    return hostileLife;
  },
  intelligentLife: function() {
    return intelligentLife;
  },
  murderBots: function() {
    return murderBots;
  },
  planetCoords: function() {
    return planetCoords;
  },
  planetName: function() {
    return planetName;
  },
  plantLife: function() {
    return plantLife;
  },
  ruins: function() {
    return ruins;
  },
  spants: function() {
    return spants;
  },
  updateStatus: function() {
    return updateStatus;
  }
});
function _slicedToArray9(arr, i) {
  return _arrayWithHoles9(arr) || _iterableToArrayLimit9(arr, i) || _unsupportedIterableToArray21(arr, i) || _nonIterableRest9();
}
function _nonIterableRest9() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray21(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray21(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray21(o, minLen);
}
function _arrayLikeToArray21(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit9(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles9(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral27(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have25() {
  return get("spacegateAlways");
  "";
}
function updateStatus() {
  (0, import_kolmafia37.visitUrl)("place.php?whichplace=spacegate&action=sg_Terminal");
}
function dialled() {
  updateStatus();
  return get("_spacegateCoordinates") !== "" || get("_spacegateToday");
}
function hazards() {
  return get("_spacegateHazards");
}
function planetName() {
  return get("_spacegatePlanetName");
}
function planetCoords() {
  return get("_spacegateCoordinates");
}
function plantLife() {
  return get("_spacegatePlantLife");
}
function animalLife() {
  return get("_spacegateAnimalLife");
}
function intelligentLife() {
  return get("_spacegateIntelligentLife").includes("detected");
}
function hostileLife() {
  return get("_spacegateIntelligentLife").includes("hostile");
}
function ruins() {
  return get("_spacegateRuins");
}
function spants() {
  return get("_spacegateSpant");
}
function murderBots() {
  return get("_spacegateMurderbot");
}
function hazardEquipment(hazards2) {
  var hazardEquipment2 = {
    "toxic atmosphere": $item(_templateObject151 || (_templateObject151 = _taggedTemplateLiteral27(["filter helmet"]))),
    "high gravity": $item(_templateObject250 || (_templateObject250 = _taggedTemplateLiteral27(["exo-servo leg braces"]))),
    irradiated: $item(_templateObject341 || (_templateObject341 = _taggedTemplateLiteral27(["rad cloak"]))),
    "magnetic storms": $item(_templateObject440 || (_templateObject440 = _taggedTemplateLiteral27(["gate transceiver"]))),
    "high winds": $item(_templateObject527 || (_templateObject527 = _taggedTemplateLiteral27(["high-friction boots"])))
  };
  return Object.entries(hazardEquipment2).filter(function(_ref) {
    var _ref2 = _slicedToArray9(_ref, 1), clue = _ref2[0];
    return hazards2.includes(clue);
  }).map(function(_ref3) {
    var _ref4 = _slicedToArray9(_ref3, 2), item10 = _ref4[1];
    return item10;
  });
}
function getHazardEquipment() {
  if (!have25()) {
    return false;
  }
  var equipment = hazardEquipment(hazards());
  equipment.forEach(function(equip14) {
    var num = equip14.id - 9404;
    (0, import_kolmafia37.visitUrl)("place.php?whichplace=spacegate&action=sg_requisition");
    (0, import_kolmafia37.visitUrl)("choice.php?whichchoice=1233&option=".concat(num));
  });
  equipment.forEach(function(equip14) {
    if ((0, import_kolmafia37.availableAmount)(equip14) !== 1) {
      return false;
    }
  });
  return true;
}
function getVaccine(choice) {
  if (get("_spacegateVaccine")) {
    return false;
  }
  var nums = {
    Rainbow: 1,
    "Elemental Resistance": 1,
    "Broad-Spectrum": 2,
    Stats: 2,
    Emotional: 3,
    "Monster Level": 3
  };
  var num = nums[choice];
  if (!get("spacegateVaccine".concat(num))) {
    throw "You don't appear to have that Vaccine Unlocked!";
  }
  (0, import_kolmafia37.cliExecute)("spacegate vaccine ".concat(num));
  return get("_spacegateVaccine");
}
function dial(address) {
  if (!have25() || dialled()) {
    return false;
  }
  if (!address.match("^[[alpha]]+$") || address.length !== 7) {
    throw "Invalid Spacegate Address - must be exactly 7 alphabetic characters";
  } else {
    (0, import_kolmafia37.cliExecute)("spacegate destination ".concat(address));
  }
  return dialled() && planetCoords() === address;
}
function dialRandom() {
  if (!have25() || dialled()) {
    return false;
  }
  (0, import_kolmafia37.cliExecute)("spacegate destination random");
  return dialled();
}
var import_kolmafia37, _templateObject151, _templateObject250, _templateObject341, _templateObject440, _templateObject527;
var init_Spacegate = __esm({
  "../../node_modules/libram/dist/resources/2017/Spacegate.js": function() {
    import_kolmafia37 = require("kolmafia");
    init_property();
    init_template_string();
  }
});

// ../../node_modules/libram/dist/resources/2017/TunnelOfLove.js
var TunnelOfLove_exports = {};
__export(TunnelOfLove_exports, {
  LovEnamorang: function() {
    return LovEnamorang;
  },
  couldUseLoveEnamorang: function() {
    return couldUseLoveEnamorang;
  },
  fightAll: function() {
    return fightAll;
  },
  getLovEnamorangMonster: function() {
    return getLovEnamorangMonster;
  },
  getLovEnamorangUses: function() {
    return getLovEnamorangUses;
  },
  have: function() {
    return have26;
  },
  haveLovEnamorang: function() {
    return haveLovEnamorang;
  },
  isUsed: function() {
    return isUsed;
  }
});
function _taggedTemplateLiteral28(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have26() {
  return get("loveTunnelAvailable");
}
function isUsed() {
  return get("_loveTunnelUsed");
}
function haveLovEnamorang() {
  return have($item(_templateObject160 || (_templateObject160 = _taggedTemplateLiteral28(["LOV Enamorang"]))));
}
function getLovEnamorangUses() {
  return get("_enamorangs");
}
function couldUseLoveEnamorang() {
  return !haveWandererCounter(Wanderer.Enamorang) && getLovEnamorangUses() < 3 && haveLovEnamorang();
}
function getLovEnamorangMonster() {
  return get("enamorangMonster");
}
function equipmentChoice(equipment) {
  switch (equipment) {
    case "LOV Eardigan":
      return 1;
    case "LOV Epaulettes":
      return 2;
    case "LOV Earring":
      return 3;
  }
}
function effectChoice(effect2) {
  switch (effect2) {
    case "Lovebotamy":
      return 1;
    case "Open Heart Surgery":
      return 2;
    case "Wandering Eye Surgery":
      return 3;
  }
}
function extraChoice(extra) {
  switch (extra) {
    case "LOV Enamorang":
      return 1;
    case "LOV Emotionizer":
      return 2;
    case "LOV Extraterrestrial Chocolate":
      return 3;
    case "LOV Echinacea Bouquet":
      return 4;
    case "LOV Elephant":
      return 5;
    case "toast":
      return 6;
    case null:
      return 7;
  }
}
function fightAll(equipment, effect2, extra) {
  withChoices({
    1222: 1,
    1223: 1,
    1224: equipmentChoice(equipment),
    1225: 1,
    1226: effectChoice(effect2),
    1227: 1,
    1228: extraChoice(extra)
  }, function() {
    (0, import_kolmafia38.adv1)($location(_templateObject251 || (_templateObject251 = _taggedTemplateLiteral28(["The Tunnel of L.O.V.E."]))), 0, "");
  });
}
var import_kolmafia38, _templateObject160, _templateObject251, LovEnamorang;
var init_TunnelOfLove = __esm({
  "../../node_modules/libram/dist/resources/2017/TunnelOfLove.js": function() {
    import_kolmafia38 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    LovEnamorang = new Copier(function() {
      return couldUseLoveEnamorang();
    }, null, function() {
      return couldUseLoveEnamorang();
    }, function() {
      return getLovEnamorangMonster();
    });
  }
});

// ../../node_modules/libram/dist/counter.js
var counter_exports = {};
__export(counter_exports, {
  exists: function() {
    return exists;
  },
  get: function() {
    return get3;
  },
  set: function() {
    return set;
  }
});
function get3(counter) {
  var value = (0, import_kolmafia39.getCounter)(counter);
  if (value === -1) {
    return (0, import_kolmafia39.getCounters)(counter, -1, -1).trim() === "" ? Infinity : -1;
  }
  return value;
}
function exists(counter) {
  return (0, import_kolmafia39.getCounter)(counter) !== -1 || (0, import_kolmafia39.getCounters)(counter, -1, -1).trim() !== "";
}
function set(counter, duration) {
  (0, import_kolmafia39.cliExecute)("counters add ".concat(duration, " ").concat(counter));
  return get3(counter) !== null;
}
var import_kolmafia39;
var init_counter = __esm({
  "../../node_modules/libram/dist/counter.js": function() {
    import_kolmafia39 = require("kolmafia");
  }
});

// ../../node_modules/libram/dist/resources/2018/LatteLoversMembersMug.js
var LatteLoversMembersMug_exports = {};
__export(LatteLoversMembersMug_exports, {
  currentIngredients: function() {
    return currentIngredients;
  },
  fill: function() {
    return fill;
  },
  have: function() {
    return have27;
  },
  ingredientsUnlocked: function() {
    return ingredientsUnlocked;
  },
  locationOf: function() {
    return locationOf;
  },
  modifierOf: function() {
    return modifierOf;
  },
  refillsRemaining: function() {
    return refillsRemaining;
  },
  sniffedMonster: function() {
    return sniffedMonster;
  }
});
function _taggedTemplateLiteral29(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have27() {
  return have($item(_templateObject161 || (_templateObject161 = _taggedTemplateLiteral29(["latte lovers member's mug"]))));
}
function sniffedMonster() {
  return exists("Latte Monster") ? get("_latteMonster") : null;
}
function refillsRemaining() {
  return clamp(3 - get("_latteRefillsUsed"), 0, 3);
}
function ingredientsUnlocked() {
  return get("latteUnlocks").split(",");
}
function fill() {
  if (refillsRemaining() <= 0)
    return false;
  for (var _len = arguments.length, ingredients = new Array(_len), _key = 0; _key < _len; _key++) {
    ingredients[_key] = arguments[_key];
  }
  if (new Set(ingredients).size < 3)
    return false;
  if (ingredients.some(function(i) {
    return !ingredientsUnlocked().includes(i);
  }))
    return false;
  return (0, import_kolmafia40.cliExecute)("latte refill ".concat(ingredients.join(" ")));
}
function modifierOf(ingredient) {
  return INGREDIENTS[ingredient].modifier;
}
function locationOf(ingredient) {
  return INGREDIENTS[ingredient].location;
}
function currentIngredients() {
  return (0, import_kolmafia40.getProperty)("latteIngredients").split(",");
}
var import_kolmafia40, _templateObject161, _templateObject260, _templateObject348, _templateObject441, _templateObject528, _templateObject621, _templateObject718, _templateObject818, _templateObject916, _templateObject1016, _templateObject1114, _templateObject1214, _templateObject1312, _templateObject1411, _templateObject1511, _templateObject1611, _templateObject1711, _templateObject1811, _templateObject1911, _templateObject2011, _templateObject2116, _templateObject2214, _templateObject2313, _templateObject2411, _templateObject2511, _templateObject2611, _templateObject2711, _templateObject289, _templateObject298, _templateObject308, _templateObject3113, _templateObject3211, _templateObject3311, _templateObject349, _templateObject358, _templateObject368, _templateObject378, _templateObject387, _templateObject397, _templateObject407, _templateObject4111, _templateObject4210, _templateObject4310, _templateObject447, _templateObject457, _templateObject466, _templateObject476, _templateObject485, _templateObject495, _templateObject505, _templateObject5110, _templateObject529, _templateObject535, INGREDIENTS;
var init_LatteLoversMembersMug = __esm({
  "../../node_modules/libram/dist/resources/2018/LatteLoversMembersMug.js": function() {
    import_kolmafia40 = require("kolmafia");
    init_counter();
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    INGREDIENTS = {
      ancient: {
        modifier: {
          "Spooky Damage": 50
        },
        location: $location(_templateObject260 || (_templateObject260 = _taggedTemplateLiteral29(["The Mouldering Mansion"])))
      },
      asp: {
        modifier: {
          "Weapon Damage": 25
        },
        location: $location(_templateObject348 || (_templateObject348 = _taggedTemplateLiteral29(["The Middle Chamber"])))
      },
      basil: {
        modifier: {
          "HP Regen Min": 5,
          "HP Regen Max": 5
        },
        location: $location(_templateObject441 || (_templateObject441 = _taggedTemplateLiteral29(["The Overgrown Lot"])))
      },
      belgian: {
        modifier: {
          "Moxie Percent": 20,
          "Mysticality Percent": 20,
          "Muscle Percent": 20
        },
        location: $location(_templateObject528 || (_templateObject528 = _taggedTemplateLiteral29(["Whitey's Grove"])))
      },
      chalk: {
        modifier: {
          "Cold Damage": 25
        },
        location: $location(_templateObject621 || (_templateObject621 = _taggedTemplateLiteral29(["The Haunted Billiards Room"])))
      },
      "bug-thistle": {
        modifier: {
          Mysticality: 20
        },
        location: $location(_templateObject718 || (_templateObject718 = _taggedTemplateLiteral29(["The Bugbear Pen"])))
      },
      butternut: {
        modifier: {
          "Spell Damage": 10
        },
        location: $location(_templateObject818 || (_templateObject818 = _taggedTemplateLiteral29(["Madness Bakery"])))
      },
      cajun: {
        modifier: {
          "Meat Drop": 40
        },
        location: $location(_templateObject916 || (_templateObject916 = _taggedTemplateLiteral29(["The Black Forest"])))
      },
      carrot: {
        modifier: {
          "Item Drop": 20
        },
        location: $location(_templateObject1016 || (_templateObject1016 = _taggedTemplateLiteral29(["The Dire Warren"])))
      },
      carrrdamom: {
        modifier: {
          "MP Regen Min": 4,
          "MP Regen Max": 6
        },
        location: $location(_templateObject1114 || (_templateObject1114 = _taggedTemplateLiteral29(["Barrrney's Barrr"])))
      },
      chili: {
        modifier: {
          "Hot Resistance": 3
        },
        location: $location(_templateObject1214 || (_templateObject1214 = _taggedTemplateLiteral29(["The Haunted Kitchen"])))
      },
      clove: {
        modifier: {
          "Stench Resistance": 3
        },
        location: $location(_templateObject1312 || (_templateObject1312 = _taggedTemplateLiteral29(["The Sleazy Back Alley"])))
      },
      coal: {
        modifier: {
          "Hot Damage": 25
        },
        location: $location(_templateObject1411 || (_templateObject1411 = _taggedTemplateLiteral29(["The Haunted Boiler Room"])))
      },
      cocoa: {
        modifier: {
          "Cold Resistance": 3
        },
        location: $location(_templateObject1511 || (_templateObject1511 = _taggedTemplateLiteral29(["The Icy Peak"])))
      },
      diet: {
        modifier: {
          Initiative: 50
        },
        location: $location(_templateObject1611 || (_templateObject1611 = _taggedTemplateLiteral29(["Battlefield (No Uniform)"])))
      },
      dwarf: {
        modifier: {
          Muscle: 30
        },
        location: $location(_templateObject1711 || (_templateObject1711 = _taggedTemplateLiteral29(["Itznotyerzitz Mine"])))
      },
      dyspepsi: {
        modifier: {
          Initiative: 25
        },
        location: $location(_templateObject1811 || (_templateObject1811 = _taggedTemplateLiteral29(["Battlefield (Dyspepsi Uniform)"])))
      },
      filth: {
        modifier: {
          "Damage Reduction": 20
        },
        location: $location(_templateObject1911 || (_templateObject1911 = _taggedTemplateLiteral29(["The Feeding Chamber"])))
      },
      grass: {
        modifier: {
          Experience: 3
        },
        location: $location(_templateObject2011 || (_templateObject2011 = _taggedTemplateLiteral29(["The Hidden Park"])))
      },
      fungus: {
        modifier: {
          "Maximum MP": 30
        },
        location: $location(_templateObject2116 || (_templateObject2116 = _taggedTemplateLiteral29(["The Fungal Nethers"])))
      },
      mold: {
        modifier: {
          "Spooky Damage": 20
        },
        location: $location(_templateObject2214 || (_templateObject2214 = _taggedTemplateLiteral29(["The Unquiet Garves"])))
      },
      greek: {
        modifier: {
          "Sleaze Damage": 25
        },
        location: $location(_templateObject2313 || (_templateObject2313 = _taggedTemplateLiteral29(["Wartime Frat House"])))
      },
      grobold: {
        modifier: {
          "Sleaze Damage": 25
        },
        location: $location(_templateObject2411 || (_templateObject2411 = _taggedTemplateLiteral29(["The Old Rubee Mine"])))
      },
      guarna: {
        modifier: {
          Adventures: 4
        },
        location: $location(_templateObject2511 || (_templateObject2511 = _taggedTemplateLiteral29(["The Bat Hole Entrance"])))
      },
      gunpowder: {
        modifier: {
          "Weapon Damage": 50
        },
        location: $location(_templateObject2611 || (_templateObject2611 = _taggedTemplateLiteral29(["1st Floor, Shiawase-Mitsuhama Building"])))
      },
      healing: {
        modifier: {
          "HP Regen Min": 10,
          "HP Regen Max": 20
        },
        location: $location(_templateObject2711 || (_templateObject2711 = _taggedTemplateLiteral29(["The Daily Dungeon"])))
      },
      hellion: {
        modifier: {
          "PvP Fights": 6
        },
        location: $location(_templateObject289 || (_templateObject289 = _taggedTemplateLiteral29(["The Dark Neck of the Woods"])))
      },
      hobo: {
        modifier: {
          "Damage Absorption": 50
        },
        location: $location(_templateObject298 || (_templateObject298 = _taggedTemplateLiteral29(["Hobopolis Town Square"])))
      },
      greasy: {
        modifier: {
          "Muscle Percent": 50
        },
        location: $location(_templateObject308 || (_templateObject308 = _taggedTemplateLiteral29(["Cobb's Knob Barracks"])))
      },
      wing: {
        modifier: {
          "Combat Rate": 10
        },
        location: $location(_templateObject3113 || (_templateObject3113 = _taggedTemplateLiteral29(["The Dark Heart of the Woods"])))
      },
      ink: {
        modifier: {
          "Combat Rate": -10
        },
        location: $location(_templateObject3211 || (_templateObject3211 = _taggedTemplateLiteral29(["The Haunted Library"])))
      },
      kombucha: {
        modifier: {
          "Stench Damage": 25
        },
        location: $location(_templateObject3311 || (_templateObject3311 = _taggedTemplateLiteral29(["Wartime Hippy Camp"])))
      },
      lihc: {
        modifier: {
          "Spooky Damage": 25
        },
        location: $location(_templateObject349 || (_templateObject349 = _taggedTemplateLiteral29(["The Defiled Niche"])))
      },
      lizard: {
        modifier: {
          "MP Regen Min": 5,
          "MP Regen Max": 15
        },
        location: $location(_templateObject358 || (_templateObject358 = _taggedTemplateLiteral29(["The Arid, Extra-Dry Desert"])))
      },
      macaroni: {
        modifier: {
          "Maximum HP": 20
        },
        location: $location(_templateObject368 || (_templateObject368 = _taggedTemplateLiteral29(["The Haunted Pantry"])))
      },
      mega: {
        modifier: {
          "Moxie Percent": 50
        },
        location: $location(_templateObject378 || (_templateObject378 = _taggedTemplateLiteral29(["Cobb's Knob Laboratory"])))
      },
      oil: {
        modifier: {
          "Sleaze Damage": 20
        },
        location: $location(_templateObject387 || (_templateObject387 = _taggedTemplateLiteral29(["The Old Landfill"])))
      },
      msg: {
        modifier: {
          "Critical Hit Percent": 15
        },
        location: $location(_templateObject397 || (_templateObject397 = _taggedTemplateLiteral29(["The Briniest Deepests"])))
      },
      norwhal: {
        modifier: {
          "Maximum HP Percent": 200
        },
        location: $location(_templateObject407 || (_templateObject407 = _taggedTemplateLiteral29(["The Ice Hole"])))
      },
      paint: {
        modifier: {
          "Prismatic Damage": 5
        },
        location: $location(_templateObject4111 || (_templateObject4111 = _taggedTemplateLiteral29(["The Haunted Gallery"])))
      },
      paradise: {
        modifier: {
          Moxie: 20,
          Muscle: 20,
          Mysticality: 20
        },
        location: $location(_templateObject4210 || (_templateObject4210 = _taggedTemplateLiteral29(["The Stately Pleasure Dome"])))
      },
      rawhide: {
        modifier: {
          "Familiar Weight": 5
        },
        location: $location(_templateObject4310 || (_templateObject4310 = _taggedTemplateLiteral29(["The Spooky Forest"])))
      },
      rock: {
        modifier: {
          "Critical Hit Percent": 10
        },
        location: $location(_templateObject447 || (_templateObject447 = _taggedTemplateLiteral29(["The Brinier Deepers"])))
      },
      salt: {
        modifier: {
          "Critical Hit Percent": 5
        },
        location: $location(_templateObject457 || (_templateObject457 = _taggedTemplateLiteral29(["The Briny Deeps"])))
      },
      sandalwood: {
        modifier: {
          Moxie: 5,
          Muscle: 5,
          Mysticality: 5
        },
        location: $location(_templateObject466 || (_templateObject466 = _taggedTemplateLiteral29(["Noob Cave"])))
      },
      sausage: {
        modifier: {
          "Mysticality Percent": 50
        },
        location: $location(_templateObject476 || (_templateObject476 = _taggedTemplateLiteral29(["Cobb's Knob Kitchens"])))
      },
      space: {
        modifier: {
          Moxie: 10,
          Muscle: 10,
          Mysticality: 10
        },
        location: $location(_templateObject485 || (_templateObject485 = _taggedTemplateLiteral29(["The Hole in the Sky"])))
      },
      squash: {
        modifier: {
          "Spell Damage": 10
        },
        location: $location(_templateObject495 || (_templateObject495 = _taggedTemplateLiteral29(["The Copperhead Club"])))
      },
      teeth: {
        modifier: {
          "Spooky Damage": 25,
          "Weapon Damage": 25
        },
        location: $location(_templateObject505 || (_templateObject505 = _taggedTemplateLiteral29(["The VERY Unquiet Garves"])))
      },
      vitamin: {
        modifier: {
          "Familiar Experience": 3
        },
        location: $location(_templateObject5110 || (_templateObject5110 = _taggedTemplateLiteral29(["The Dark Elbow of the Woods"])))
      },
      flour: {
        modifier: {
          "Sleaze Resistance": 3
        },
        location: $location(_templateObject529 || (_templateObject529 = _taggedTemplateLiteral29(["The Road to the White Citadel"])))
      },
      squamous: {
        modifier: {
          "Spooky Resistance": 3
        },
        location: $location(_templateObject535 || (_templateObject535 = _taggedTemplateLiteral29(["The Caliginous Abyss"])))
      },
      pumpkin: {
        modifier: {
          "Mysticality Experience": 1,
          "Spell Damage": 5,
          "Mysticality Percent": 5
        },
        location: null
      },
      cinnamon: {
        modifier: {
          "Moxie Experience": 1,
          "Pickpocket Rate": 5,
          "Moxie Percent": 5
        },
        location: null
      },
      vanilla: {
        modifier: {
          "Muscle Experience": 1,
          "Weapon Damage Percent": 5,
          "Muscle Percent": 5
        },
        location: null
      }
    };
  }
});

// ../../node_modules/libram/dist/resources/2018/SongBoom.js
var SongBoom_exports = {};
__export(SongBoom_exports, {
  dropProgress: function() {
    return dropProgress;
  },
  have: function() {
    return have28;
  },
  setSong: function() {
    return setSong;
  },
  song: function() {
    return song;
  },
  songBoomSongs: function() {
    return songBoomSongs;
  },
  songChangesLeft: function() {
    return songChangesLeft;
  }
});
function _taggedTemplateLiteral30(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have28() {
  return have(item3);
}
function song() {
  var stored = get("boomBoxSong");
  return songBoomSongs.has(stored) ? stored : null;
}
function songChangesLeft() {
  return get("_boomBoxSongsLeft");
}
function setSong(newSong) {
  if (song() !== newSong) {
    if (songChangesLeft() === 0)
      throw new Error("Out of song changes!");
    (0, import_kolmafia41.cliExecute)("boombox ".concat(newSong ? keywords[newSong] : "none"));
    return true;
  } else {
    return false;
  }
}
function dropProgress() {
  return get("_boomBoxFights");
}
var import_kolmafia41, _templateObject170, item3, keywords, songBoomSongs;
var init_SongBoom = __esm({
  "../../node_modules/libram/dist/resources/2018/SongBoom.js": function() {
    import_kolmafia41 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item3 = $item(_templateObject170 || (_templateObject170 = _taggedTemplateLiteral30(["SongBoom\u2122 BoomBox"])));
    keywords = {
      "Eye of the Giger": "spooky",
      "Food Vibrations": "food",
      "Remainin' Alive": "dr",
      "These Fists Were Made for Punchin'": "damage",
      "Total Eclipse of Your Meat": "meat"
    };
    songBoomSongs = new Set(Object.keys(keywords));
  }
});

// ../../node_modules/libram/dist/resources/2019/BeachComb.js
var BeachComb_exports = {};
__export(BeachComb_exports, {
  available: function() {
    return available2;
  },
  canComb: function() {
    return canComb;
  },
  comb: function() {
    return comb;
  },
  freeCombs: function() {
    return freeCombs;
  },
  have: function() {
    return have29;
  },
  head: function() {
    return head;
  },
  headAvailable: function() {
    return headAvailable;
  },
  headBuffs: function() {
    return headBuffs;
  },
  tideLevel: function() {
    return tideLevel;
  },
  tryHead: function() {
    return tryHead;
  }
});
function _taggedTemplateLiteral31(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have29() {
  return have(import_kolmafia42.Item.get("Beach Comb"));
}
function available2() {
  return have29() || have(import_kolmafia42.Item.get("driftwood beach comb"));
}
function tideLevel() {
  var day = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia42.gamedayToInt)();
  var dayOfMonth = 1 + day % 8;
  return 4 - Math.abs(4 - dayOfMonth);
}
function canComb(tile) {
  return tile.row > tideLevel();
}
function freeCombs() {
  return available2() ? clamp(11 - get("_freeBeachWalksUsed"), 0, 11) : 0;
}
function comb() {
  for (var _len = arguments.length, tiles = new Array(_len), _key = 0; _key < _len; _key++) {
    tiles[_key] = arguments[_key];
  }
  if (!available2() || !tiles.length)
    return;
  for (var _i = 0, _tiles = tiles; _i < _tiles.length; _i++) {
    var tile = _tiles[_i];
    if (canComb(tile)) {
      var minute = tile.minute, row = tile.row, column = tile.column;
      (0, import_kolmafia42.cliExecute)("beach wander ".concat(minute));
      (0, import_kolmafia42.cliExecute)("beach comb ".concat(row, " ").concat(column));
    }
  }
  if ((0, import_kolmafia42.handlingChoice)())
    (0, import_kolmafia42.runChoice)(5);
}
function headAvailable(target) {
  var effect2 = target instanceof import_kolmafia42.Effect ? target : head[target];
  var headNumber = 1 + headBuffs.indexOf(effect2);
  return (0, import_kolmafia42.getProperty)("beachHeadsUnlocked").split(",").includes(headNumber.toString()) && !(0, import_kolmafia42.getProperty)("_beachHeadsUsed").split(",").includes(headNumber.toString());
}
function tryHead(target) {
  var effect2 = target instanceof import_kolmafia42.Effect ? target : head[target];
  if (!headBuffs.includes(effect2))
    return false;
  if (!headAvailable(target))
    return false;
  (0, import_kolmafia42.cliExecute)(effect2.default);
  return have(effect2);
}
var import_kolmafia42, _templateObject171, _templateObject261, _templateObject350, _templateObject448, _templateObject530, _templateObject625, _templateObject719, _templateObject819, _templateObject917, _templateObject1017, _templateObject1115, _templateObject1215, _templateObject1313, _templateObject1412, _templateObject1512, _templateObject1612, _templateObject1712, _templateObject1812, _templateObject1912, _templateObject2012, _templateObject2117, headBuffs, head;
var init_BeachComb = __esm({
  "../../node_modules/libram/dist/resources/2019/BeachComb.js": function() {
    import_kolmafia42 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    headBuffs = [$effect(_templateObject171 || (_templateObject171 = _taggedTemplateLiteral31(["Hot-Headed"]))), $effect(_templateObject261 || (_templateObject261 = _taggedTemplateLiteral31(["Cold as Nice"]))), $effect(_templateObject350 || (_templateObject350 = _taggedTemplateLiteral31(["A Brush with Grossness"]))), $effect(_templateObject448 || (_templateObject448 = _taggedTemplateLiteral31(["Does It Have a Skull In There??"]))), $effect(_templateObject530 || (_templateObject530 = _taggedTemplateLiteral31(["Oiled, Slick"]))), $effect(_templateObject625 || (_templateObject625 = _taggedTemplateLiteral31(["Lack of Body-Building"]))), $effect(_templateObject719 || (_templateObject719 = _taggedTemplateLiteral31(["We're All Made of Starfish"]))), $effect(_templateObject819 || (_templateObject819 = _taggedTemplateLiteral31(["Pomp & Circumsands"]))), $effect(_templateObject917 || (_templateObject917 = _taggedTemplateLiteral31(["Resting Beach Face"]))), $effect(_templateObject1017 || (_templateObject1017 = _taggedTemplateLiteral31(["Do I Know You From Somewhere?"]))), $effect(_templateObject1115 || (_templateObject1115 = _taggedTemplateLiteral31(["You Learned Something Maybe!"])))];
    head = {
      HOT: $effect(_templateObject1215 || (_templateObject1215 = _taggedTemplateLiteral31(["Hot-Headed"]))),
      COLD: $effect(_templateObject1313 || (_templateObject1313 = _taggedTemplateLiteral31(["Cold as Nice"]))),
      STENCH: $effect(_templateObject1412 || (_templateObject1412 = _taggedTemplateLiteral31(["A Brush with Grossness"]))),
      SPOOKY: $effect(_templateObject1512 || (_templateObject1512 = _taggedTemplateLiteral31(["Does It Have a Skull In There??"]))),
      SLEAZE: $effect(_templateObject1612 || (_templateObject1612 = _taggedTemplateLiteral31(["Oiled, Slick"]))),
      MUSCLE: $effect(_templateObject1712 || (_templateObject1712 = _taggedTemplateLiteral31(["Lack of Body-Building"]))),
      MYSTICALITY: $effect(_templateObject1812 || (_templateObject1812 = _taggedTemplateLiteral31(["We're All Made of Starfish"]))),
      INITIATIVE: $effect(_templateObject1912 || (_templateObject1912 = _taggedTemplateLiteral31(["Resting Beach Face"]))),
      FAMILIAR: $effect(_templateObject2012 || (_templateObject2012 = _taggedTemplateLiteral31(["Do I Know You From Somewhere?"]))),
      EXPERIENCE: $effect(_templateObject2117 || (_templateObject2117 = _taggedTemplateLiteral31(["You Learned Something Maybe!"])))
    };
  }
});

// ../../node_modules/libram/dist/resources/2019/CampAway.js
var CampAway_exports = {};
__export(CampAway_exports, {
  blowSmoke: function() {
    return blowSmoke;
  },
  canGaze: function() {
    return canGaze;
  },
  gaze: function() {
    return gaze;
  },
  getBuffsToday: function() {
    return getBuffsToday;
  },
  getCloudBuffsToday: function() {
    return getCloudBuffsToday;
  },
  getGazeBuff: function() {
    return getGazeBuff;
  },
  getSmileBuffsToday: function() {
    return getSmileBuffsToday;
  },
  have: function() {
    return have30;
  }
});
function _taggedTemplateLiteral32(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have30() {
  return get("getawayCampsiteUnlocked");
}
function getCloudBuffsToday() {
  return get("_campAwayCloudBuffs");
}
function getSmileBuffsToday() {
  return get("_campAwaySmileBuffs");
}
function getBuffsToday() {
  return getCloudBuffsToday() + getSmileBuffsToday();
}
function canGaze() {
  return getBuffsToday() < 4;
}
function gaze() {
  if (!canGaze())
    return;
  (0, import_kolmafia43.visitUrl)("place.php?whichplace=campaway&action=campaway_sky");
}
function getGazeBuff() {
  var daycountToCheck = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia43.daycount)();
  var buffSign = signIdToName((daycountToCheck + (0, import_kolmafia43.myPath)().id) % 9 + 1);
  var effectName = [];
  if (buffSign === (0, import_kolmafia43.mySign)())
    effectName.push("Big");
  effectName.push("Smile of the", buffSign);
  return import_kolmafia43.Effect.get(effectName.join(" "));
}
function blowSmoke(messages) {
  var times = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var smoke = $item(_templateObject180 || (_templateObject180 = _taggedTemplateLiteral32(["campfire smoke"])));
  (0, import_kolmafia43.retrieveItem)(smoke, times);
  for (var i = 0; i < times; i++) {
    withChoice(1394, "1&message=".concat(random(messages)), function() {
      (0, import_kolmafia43.use)(smoke);
    });
  }
}
var import_kolmafia43, _templateObject180;
var init_CampAway = __esm({
  "../../node_modules/libram/dist/resources/2019/CampAway.js": function() {
    import_kolmafia43 = require("kolmafia");
    init_ascend();
    init_property();
    init_template_string();
    init_utils();
  }
});

// ../../node_modules/libram/dist/resources/2019/Snapper.js
var Snapper_exports = {};
__export(Snapper_exports, {
  getProgress: function() {
    return getProgress;
  },
  getTrackedPhylum: function() {
    return getTrackedPhylum;
  },
  have: function() {
    return have31;
  },
  itemPhylum: function() {
    return itemPhylum;
  },
  phylumItem: function() {
    return phylumItem;
  },
  trackPhylum: function() {
    return trackPhylum;
  }
});
function _slicedToArray10(arr, i) {
  return _arrayWithHoles10(arr) || _iterableToArrayLimit10(arr, i) || _unsupportedIterableToArray22(arr, i) || _nonIterableRest10();
}
function _nonIterableRest10() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit10(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles10(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray10(arr) {
  return _arrayWithoutHoles10(arr) || _iterableToArray10(arr) || _unsupportedIterableToArray22(arr) || _nonIterableSpread10();
}
function _nonIterableSpread10() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray22(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray22(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray22(o, minLen);
}
function _iterableToArray10(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles10(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray22(arr);
}
function _arrayLikeToArray22(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function have31() {
  return (0, import_kolmafia44.haveFamiliar)(familiar6);
}
function getTrackedPhylum() {
  return get("redSnapperPhylum");
}
function trackPhylum(phylum) {
  var currentFamiliar = (0, import_kolmafia44.myFamiliar)();
  try {
    (0, import_kolmafia44.useFamiliar)(familiar6);
    (0, import_kolmafia44.cliExecute)("snapper ".concat(phylum));
  } finally {
    (0, import_kolmafia44.useFamiliar)(currentFamiliar);
  }
}
function getProgress() {
  return get("redSnapperProgress");
}
var import_kolmafia44, familiar6, phylumItem, itemPhylum;
var init_Snapper = __esm({
  "../../node_modules/libram/dist/resources/2019/Snapper.js": function() {
    import_kolmafia44 = require("kolmafia");
    init_property();
    familiar6 = import_kolmafia44.Familiar.get("Red-Nosed Snapper");
    phylumItem = /* @__PURE__ */ new Map([[import_kolmafia44.Phylum.get("beast"), import_kolmafia44.Item.get("patch of extra-warm fur")], [import_kolmafia44.Phylum.get("bug"), import_kolmafia44.Item.get("a bug's lymph")], [import_kolmafia44.Phylum.get("constellation"), import_kolmafia44.Item.get("micronova")], [import_kolmafia44.Phylum.get("construct"), import_kolmafia44.Item.get("industrial lubricant")], [import_kolmafia44.Phylum.get("demon"), import_kolmafia44.Item.get("infernal snowball")], [import_kolmafia44.Phylum.get("dude"), import_kolmafia44.Item.get("human musk")], [import_kolmafia44.Phylum.get("elemental"), import_kolmafia44.Item.get("livid energy")], [import_kolmafia44.Phylum.get("elf"), import_kolmafia44.Item.get("peppermint syrup")], [import_kolmafia44.Phylum.get("fish"), import_kolmafia44.Item.get("fish sauce")], [import_kolmafia44.Phylum.get("goblin"), import_kolmafia44.Item.get("guffin")], [import_kolmafia44.Phylum.get("hippy"), import_kolmafia44.Item.get("organic potpourri")], [import_kolmafia44.Phylum.get("hobo"), import_kolmafia44.Item.get("beggin' cologne")], [import_kolmafia44.Phylum.get("horror"), import_kolmafia44.Item.get("powdered madness")], [import_kolmafia44.Phylum.get("humanoid"), import_kolmafia44.Item.get("vial of humanoid growth hormone")], [import_kolmafia44.Phylum.get("mer-kin"), import_kolmafia44.Item.get("Mer-kin eyedrops")], [import_kolmafia44.Phylum.get("orc"), import_kolmafia44.Item.get("boot flask")], [import_kolmafia44.Phylum.get("penguin"), import_kolmafia44.Item.get("envelope full of Meat")], [import_kolmafia44.Phylum.get("pirate"), import_kolmafia44.Item.get("Shantix\u2122")], [import_kolmafia44.Phylum.get("plant"), import_kolmafia44.Item.get("goodberry")], [import_kolmafia44.Phylum.get("slime"), import_kolmafia44.Item.get("extra-strength goo")], [import_kolmafia44.Phylum.get("undead"), import_kolmafia44.Item.get("unfinished pleasure")], [import_kolmafia44.Phylum.get("weird"), import_kolmafia44.Item.get("non-Euclidean angle")]]);
    itemPhylum = new Map(_toConsumableArray10(phylumItem).map(function(_ref) {
      var _ref2 = _slicedToArray10(_ref, 2), phylum = _ref2[0], item10 = _ref2[1];
      return [item10, phylum];
    }));
  }
});

// ../../node_modules/libram/dist/resources/2020/Cartography.js
var Cartography_exports = {};
__export(Cartography_exports, {
  have: function() {
    return have32;
  },
  mapMonster: function() {
    return mapMonster;
  }
});
function _taggedTemplateLiteral33(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have32() {
  return have(passive);
}
function mapMonster(location, monster) {
  if (!have32())
    return false;
  if (get("_monstersMapped") >= 3)
    return false;
  if (!(0, import_kolmafia45.canAdventure)(location))
    return false;
  (0, import_kolmafia45.useSkill)($skill(_templateObject270 || (_templateObject270 = _taggedTemplateLiteral33(["Map the Monsters"]))));
  if (!get("mappingMonsters"))
    return false;
  var turns = (0, import_kolmafia45.myTurncount)();
  while ((0, import_kolmafia45.currentRound)() < 1) {
    if ((0, import_kolmafia45.myTurncount)() > turns) {
      throw new Error("Map the Monsters unsuccessful?");
    }
    (0, import_kolmafia45.visitUrl)((0, import_kolmafia45.toUrl)(location));
    if ((0, import_kolmafia45.handlingChoice)() && (0, import_kolmafia45.lastChoice)() === 1435) {
      (0, import_kolmafia45.runChoice)(1, "heyscriptswhatsupwinkwink=".concat(monster.id));
      return true;
    } else {
      (0, import_kolmafia45.runChoice)(-1, false);
    }
  }
  return false;
}
var import_kolmafia45, _templateObject181, _templateObject270, passive;
var init_Cartography = __esm({
  "../../node_modules/libram/dist/resources/2020/Cartography.js": function() {
    import_kolmafia45 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    passive = $skill(_templateObject181 || (_templateObject181 = _taggedTemplateLiteral33(["Comprehensive Cartography"])));
  }
});

// ../../node_modules/libram/dist/resources/2020/Guzzlr.js
var Guzzlr_exports = {};
__export(Guzzlr_exports, {
  Cocktails: function() {
    return Cocktails;
  },
  abandon: function() {
    return abandon;
  },
  acceptBronze: function() {
    return acceptBronze;
  },
  acceptGold: function() {
    return acceptGold;
  },
  acceptPlatinum: function() {
    return acceptPlatinum;
  },
  canAbandon: function() {
    return canAbandon;
  },
  canGold: function() {
    return canGold;
  },
  canPlatinum: function() {
    return canPlatinum;
  },
  expectedReward: function() {
    return expectedReward;
  },
  getBooze: function() {
    return getBooze;
  },
  getBronze: function() {
    return getBronze;
  },
  getCheapestPlatinumCocktail: function() {
    return getCheapestPlatinumCocktail;
  },
  getGold: function() {
    return getGold;
  },
  getGoldToday: function() {
    return getGoldToday;
  },
  getLocation: function() {
    return getLocation2;
  },
  getPlatinum: function() {
    return getPlatinum;
  },
  getPlatinumToday: function() {
    return getPlatinumToday;
  },
  getTier: function() {
    return getTier;
  },
  have: function() {
    return have33;
  },
  haveBooze: function() {
    return haveBooze;
  },
  haveFullBronzeBonus: function() {
    return haveFullBronzeBonus;
  },
  haveFullGoldBonus: function() {
    return haveFullGoldBonus;
  },
  haveFullPlatinumBonus: function() {
    return haveFullPlatinumBonus;
  },
  havePlatinumBooze: function() {
    return havePlatinumBooze;
  },
  ingredientToPlatinumCocktail: function() {
    return ingredientToPlatinumCocktail;
  },
  isQuestActive: function() {
    return isQuestActive;
  },
  platinumCocktailToIngredient: function() {
    return platinumCocktailToIngredient;
  },
  turnsLeftOnQuest: function() {
    return turnsLeftOnQuest;
  }
});
function _slicedToArray11(arr, i) {
  return _arrayWithHoles11(arr) || _iterableToArrayLimit11(arr, i) || _unsupportedIterableToArray23(arr, i) || _nonIterableRest11();
}
function _nonIterableRest11() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit11(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles11(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray11(arr) {
  return _arrayWithoutHoles11(arr) || _iterableToArray11(arr) || _unsupportedIterableToArray23(arr) || _nonIterableSpread11();
}
function _nonIterableSpread11() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray23(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray23(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray23(o, minLen);
}
function _iterableToArray11(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles11(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray23(arr);
}
function _arrayLikeToArray23(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral34(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have33() {
  return have(item4);
}
function useTabletWithChoice(option) {
  withChoice(1412, option, function() {
    return (0, import_kolmafia46.use)(1, item4);
  });
}
function isQuestActive() {
  return get("questGuzzlr") !== "unstarted";
}
function getPlatinum() {
  return get("guzzlrPlatinumDeliveries");
}
function getPlatinumToday() {
  return get("_guzzlrPlatinumDeliveries");
}
function canPlatinum() {
  return !isQuestActive() && getGold() >= 5 && getPlatinumToday() < 1;
}
function haveFullPlatinumBonus() {
  return getPlatinum() >= 30;
}
function acceptPlatinum() {
  if (!canPlatinum())
    return false;
  useTabletWithChoice(4);
  return true;
}
function getGold() {
  return get("guzzlrGoldDeliveries");
}
function getGoldToday() {
  return get("_guzzlrGoldDeliveries");
}
function canGold() {
  return !isQuestActive() && getBronze() >= 5 && getGoldToday() < 3;
}
function haveFullGoldBonus() {
  return getGold() >= 150;
}
function acceptGold() {
  if (!canGold())
    return false;
  useTabletWithChoice(3);
  return true;
}
function getBronze() {
  return get("guzzlrBronzeDeliveries");
}
function haveFullBronzeBonus() {
  return getBronze() >= 196;
}
function acceptBronze() {
  if (isQuestActive())
    return false;
  useTabletWithChoice(2);
  return true;
}
function canAbandon() {
  return isQuestActive() && !get("_guzzlrQuestAbandoned");
}
function abandon() {
  if (!canAbandon())
    return false;
  (0, import_kolmafia46.visitUrl)("inventory.php?tap=guzzlr", false);
  (0, import_kolmafia46.runChoice)(1);
  (0, import_kolmafia46.runChoice)(5);
  return true;
}
function getLocation2() {
  return get("guzzlrQuestLocation");
}
function getTier() {
  var tier = get("guzzlrQuestTier");
  return tier === "" ? null : tier;
}
function getBooze() {
  var booze = get("guzzlrQuestBooze");
  if (booze === "")
    return null;
  return import_kolmafia46.Item.get(booze);
}
function havePlatinumBooze() {
  return Cocktails.some(function(cock) {
    return (0, import_kolmafia46.itemAmount)(cock) > 0;
  });
}
function haveBooze() {
  var booze = getBooze();
  switch (booze) {
    case null:
      return false;
    case $item(_templateObject351 || (_templateObject351 = _taggedTemplateLiteral34(["Guzzlr cocktail set"]))):
      return havePlatinumBooze();
    default:
      return (0, import_kolmafia46.itemAmount)(booze) > 0;
  }
}
function getCheapestPlatinumCocktail() {
  var freeCraft = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  if (freeCraft) {
    return maxBy(Array.from(ingredientToPlatinumCocktail), function(ingredientAndCocktail) {
      return Math.min.apply(Math, _toConsumableArray11(ingredientAndCocktail.map(function(item10) {
        return (0, import_kolmafia46.mallPrice)(item10);
      })));
    }, true)[1];
  } else {
    return maxBy(Array.from(ingredientToPlatinumCocktail), function(_ref) {
      var _ref2 = _slicedToArray11(_ref, 2), cocktail = _ref2[1];
      return (0, import_kolmafia46.mallPrice)(cocktail);
    })[1];
  }
}
function turnsLeftOnQuest() {
  var useShoes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var progressPerTurn = useShoes ? Math.floor((10 - get("_guzzlrDeliveries")) * 1.5) : 10 - get("_guzzlrDeliveries");
  return Math.ceil((100 - get("guzzlrDeliveryProgress")) / progressPerTurn);
}
function expectedReward() {
  var usePants = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  switch (getTier()) {
    case "platinum":
      return 22.5 + (usePants ? 5 : 0);
    case "gold":
      return 6 + (usePants ? 3 : 0);
    case "bronze":
      return 3 + (usePants ? 3 : 0);
    default:
      return 0;
  }
}
var import_kolmafia46, _templateObject190, _templateObject271, _templateObject351, _templateObject449, _templateObject531, _templateObject626, _templateObject720, _templateObject820, _templateObject918, _templateObject1018, _templateObject1116, _templateObject1216, _templateObject1314, item4, Cocktails, ingredientToPlatinumCocktail, platinumCocktailToIngredient;
var init_Guzzlr = __esm({
  "../../node_modules/libram/dist/resources/2020/Guzzlr.js": function() {
    import_kolmafia46 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item4 = $item(_templateObject190 || (_templateObject190 = _taggedTemplateLiteral34(["Guzzlr tablet"])));
    Cocktails = $items(_templateObject271 || (_templateObject271 = _taggedTemplateLiteral34(["Buttery Boy, Steamboat, Ghiaccio Colada, Nog-on-the-Cob, Sourfinger"])));
    ingredientToPlatinumCocktail = /* @__PURE__ */ new Map([[$item(_templateObject449 || (_templateObject449 = _taggedTemplateLiteral34(["miniature boiler"]))), $item(_templateObject531 || (_templateObject531 = _taggedTemplateLiteral34(["Steamboat"])))], [$item(_templateObject626 || (_templateObject626 = _taggedTemplateLiteral34(["cold wad"]))), $item(_templateObject720 || (_templateObject720 = _taggedTemplateLiteral34(["Ghiaccio Colada"])))], [$item(_templateObject820 || (_templateObject820 = _taggedTemplateLiteral34(["robin's egg"]))), $item(_templateObject918 || (_templateObject918 = _taggedTemplateLiteral34(["Nog-on-the-Cob"])))], [$item(_templateObject1018 || (_templateObject1018 = _taggedTemplateLiteral34(["mangled finger"]))), $item(_templateObject1116 || (_templateObject1116 = _taggedTemplateLiteral34(["Sourfinger"])))], [$item(_templateObject1216 || (_templateObject1216 = _taggedTemplateLiteral34(["Dish of Clarified Butter"]))), $item(_templateObject1314 || (_templateObject1314 = _taggedTemplateLiteral34(["Buttery Boy"])))]]);
    platinumCocktailToIngredient = invertMap(ingredientToPlatinumCocktail);
  }
});

// ../../node_modules/libram/dist/resources/2020/RetroCape.js
var RetroCape_exports = {};
__export(RetroCape_exports, {
  currentHero: function() {
    return currentHero;
  },
  currentMode: function() {
    return currentMode;
  },
  getModifier: function() {
    return getModifier2;
  },
  have: function() {
    return have34;
  },
  set: function() {
    return set2;
  },
  tuneToSkill: function() {
    return tuneToSkill;
  }
});
function _toConsumableArray12(arr) {
  return _arrayWithoutHoles12(arr) || _iterableToArray12(arr) || _unsupportedIterableToArray24(arr) || _nonIterableSpread12();
}
function _nonIterableSpread12() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray24(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray24(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray24(o, minLen);
}
function _iterableToArray12(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles12(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray24(arr);
}
function _arrayLikeToArray24(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys6(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread6(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys6(Object(t), true).forEach(function(r2) {
      _defineProperty14(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys6(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty14(obj, key, value) {
  key = _toPropertyKey15(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey15(arg) {
  var key = _toPrimitive15(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive15(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral35(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have34() {
  return have(item5);
}
function set2(hero, mode) {
  if (!have34())
    return false;
  if (currentHero() === hero && currentMode() === mode)
    return true;
  (0, import_kolmafia47.cliExecute)("retrocape ".concat(hero, " ").concat(mode));
  return currentHero() === hero && currentMode() === mode;
}
function getModifier2() {
  var _modeMap$get;
  var hero = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentHero();
  var mode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : currentMode();
  return _objectSpread6(_objectSpread6({}, Heroes[hero]), (_modeMap$get = modeMap.get([hero, mode])) !== null && _modeMap$get !== void 0 ? _modeMap$get : {});
}
function tuneToSkill(skill) {
  var setting = skills.get(skill);
  if (!setting || !have34())
    return false;
  set2.apply(void 0, _toConsumableArray12(setting));
  return [currentHero(), currentMode()].every(function(element, index) {
    return element === setting[index];
  });
}
var import_kolmafia47, _templateObject191, _templateObject280, _templateObject359, _templateObject450, _templateObject536, _templateObject627, _templateObject721, _templateObject821, _templateObject919, _templateObject1019, _templateObject1117, _templateObject1217, _templateObject1315, item5, Heroes, currentHero, currentMode, modeMap, skills;
var init_RetroCape = __esm({
  "../../node_modules/libram/dist/resources/2020/RetroCape.js": function() {
    import_kolmafia47 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item5 = $item(_templateObject191 || (_templateObject191 = _taggedTemplateLiteral35(["unwrapped knock-off retro superhero cape"])));
    Heroes = {
      vampire: {
        "Muscle Percent": 30,
        "Maximum HP": 50
      },
      heck: {
        "Mysticality Percent": 30,
        "Maximum MP": 50
      },
      robot: {
        "Moxie Percent": 30,
        "Maximum HP": 25,
        "Maximum MP": 25
      }
    };
    currentHero = function() {
      return get("retroCapeSuperhero");
    };
    currentMode = function() {
      return get("retroCapeWashingInstructions");
    };
    modeMap = /* @__PURE__ */ new Map([[["vampire", "hold"], {
      "Hot Resistance": 3,
      "Cold Resistance": 3,
      "Stench Resistance": 3,
      "Spooky Resistance": 3,
      "Sleaze Resistance": 3
    }], [["vampire", "thrill"], {
      "Muscle Experience": 3
    }], [["vampire", "kiss"], {
      Skill: $skill(_templateObject280 || (_templateObject280 = _taggedTemplateLiteral35(["Smooch of the Daywalker"])))
    }], [["vampire", "kill"], {
      Skill: $skill(_templateObject359 || (_templateObject359 = _taggedTemplateLiteral35(["Slay the Dead"])))
    }], [["heck", "thrill"], {
      "Mysticality Experience": 3
    }], [["heck", "kiss"], {
      Skill: $skill(_templateObject450 || (_templateObject450 = _taggedTemplateLiteral35(["Unleash the Devil's Kiss"])))
    }], [["robot", "hold"], {
      Skill: $skill(_templateObject536 || (_templateObject536 = _taggedTemplateLiteral35(["Deploy Robo-Handcuffs"])))
    }], [["robot", "thrill"], {
      "Moxie Experience": 3
    }], [["robot", "kiss"], {
      Skill: $skill(_templateObject627 || (_templateObject627 = _taggedTemplateLiteral35(["Blow a Robo-Kiss"])))
    }], [["robot", "kill"], {
      Skill: $skill(_templateObject721 || (_templateObject721 = _taggedTemplateLiteral35(["Precision Shot"])))
    }]]);
    skills = /* @__PURE__ */ new Map([[$skill(_templateObject821 || (_templateObject821 = _taggedTemplateLiteral35(["Smooch of the Daywalker"]))), ["vampire", "kiss"]], [$skill(_templateObject919 || (_templateObject919 = _taggedTemplateLiteral35(["Slay the Dead"]))), ["vampire", "kill"]], [$skill(_templateObject1019 || (_templateObject1019 = _taggedTemplateLiteral35(["Unleash the Devil's Kiss"]))), ["heck", "kiss"]], [$skill(_templateObject1117 || (_templateObject1117 = _taggedTemplateLiteral35(["Deploy Robo-Handcuffs"]))), ["robot", "hold"]], [$skill(_templateObject1217 || (_templateObject1217 = _taggedTemplateLiteral35(["Blow a Robo-Kiss"]))), ["robot", "kiss"]], [$skill(_templateObject1315 || (_templateObject1315 = _taggedTemplateLiteral35(["Precision Shot"]))), ["robot", "kill"]]]);
  }
});

// ../../node_modules/libram/dist/resources/2021/CrystalBall.js
var CrystalBall_exports = {};
__export(CrystalBall_exports, {
  have: function() {
    return have35;
  },
  orb: function() {
    return orb;
  },
  ponder: function() {
    return ponder;
  }
});
function _slicedToArray12(arr, i) {
  return _arrayWithHoles12(arr) || _iterableToArrayLimit12(arr, i) || _unsupportedIterableToArray25(arr, i) || _nonIterableRest12();
}
function _nonIterableRest12() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray25(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray25(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray25(o, minLen);
}
function _arrayLikeToArray25(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit12(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles12(arr) {
  if (Array.isArray(arr))
    return arr;
}
function have35() {
  return (0, import_kolmafia48.availableAmount)(orb) > 0;
}
function ponder() {
  if (!have35())
    return /* @__PURE__ */ new Map();
  if (canVisitUrl()) {
    logger_default.debug("Now pondering Crystal Ball.");
    (0, import_kolmafia48.visitUrl)("inventory.php?ponder=1", false);
  } else {
    logger_default.debug("Failed to ponder Crystall Ball.");
  }
  return new Map(parsedProp());
}
var import_kolmafia48, orb, parsedProp;
var init_CrystalBall = __esm({
  "../../node_modules/libram/dist/resources/2021/CrystalBall.js": function() {
    import_kolmafia48 = require("kolmafia");
    init_dist();
    init_lib();
    init_property();
    orb = import_kolmafia48.Item.get("miniature crystal ball");
    parsedProp = function() {
      return get("crystalBallPredictions").split("|").map(function(element) {
        return element.split(":");
      }).map(function(_ref) {
        var _ref2 = _slicedToArray12(_ref, 3), location = _ref2[1], monster = _ref2[2];
        return [(0, import_kolmafia48.toLocation)(location), (0, import_kolmafia48.toMonster)(monster)];
      });
    };
  }
});

// ../../node_modules/libram/dist/resources/2021/DaylightShavings.js
var DaylightShavings_exports = {};
__export(DaylightShavings_exports, {
  buffAvailable: function() {
    return buffAvailable;
  },
  buffCycle: function() {
    return buffCycle;
  },
  buffs: function() {
    return buffs;
  },
  buffsUntil: function() {
    return buffsUntil;
  },
  hasBuff: function() {
    return hasBuff;
  },
  have: function() {
    return have36;
  },
  nextBuff: function() {
    return nextBuff;
  }
});
function _taggedTemplateLiteral36(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have36() {
  return have(helmet);
}
function hasBuff() {
  return buffs.some(function(buff) {
    return have(buff);
  });
}
function buffAvailable() {
  return !buffs.some(function(buff) {
    return have(buff, 2);
  });
}
function buffCycle() {
  var playerclass = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia49.myClass)();
  if (playerclass.id <= 0)
    return [];
  var returnValue = [];
  var id = playerclass.id;
  var seed = id > 6 ? id % 6 + 1 : id;
  for (var i = 1; i < 12; i++) {
    var index = i * seed % 11;
    returnValue.push(buffs[index]);
  }
  return returnValue;
}
function nextBuff() {
  var currentBuff = (0, import_kolmafia49.toEffect)(get("lastBeardBuff").toFixed(0));
  var cycle2 = buffCycle();
  var index = cycle2.indexOf(currentBuff);
  var newIndex = (1 + index) % 11;
  return cycle2[newIndex];
}
function buffsUntil(buff) {
  if (!buffs.includes(buff))
    return null;
  var currentIndex = buffs.indexOf(nextBuff()) - 1;
  var newIndex = buffs.indexOf(buff);
  var diff = (newIndex - currentIndex) % 11;
  return diff === 0 ? 11 : diff;
}
var import_kolmafia49, _templateObject200, _templateObject281, helmet, buffs;
var init_DaylightShavings = __esm({
  "../../node_modules/libram/dist/resources/2021/DaylightShavings.js": function() {
    import_kolmafia49 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    helmet = $item(_templateObject200 || (_templateObject200 = _taggedTemplateLiteral36(["Daylight Shavings Helmet"])));
    buffs = $effects(_templateObject281 || (_templateObject281 = _taggedTemplateLiteral36(["Spectacle Moustache, Toiletbrush Moustache, Barbell Moustache, Grizzly Beard, Surrealist's Moustache, Musician's Musician's Moustache, Gull-Wing Moustache, Space Warlord's Beard, Pointy Wizard Beard, Cowboy Stache, Friendly Chops"])));
  }
});

// ../../node_modules/libram/dist/resources/2022/AutumnAton.js
var AutumnAton_exports = {};
__export(AutumnAton_exports, {
  available: function() {
    return available3;
  },
  availableLocations: function() {
    return availableLocations;
  },
  currentUpgrades: function() {
    return currentUpgrades;
  },
  currentlyIn: function() {
    return currentlyIn;
  },
  getUniques: function() {
    return getUniques;
  },
  have: function() {
    return have37;
  },
  legs: function() {
    return legs;
  },
  possibleUpgrades: function() {
    return possibleUpgrades;
  },
  seasonalItems: function() {
    return seasonalItems;
  },
  sendTo: function() {
    return sendTo;
  },
  turnsForQuest: function() {
    return turnsForQuest;
  },
  turnsLeft: function() {
    return turnsLeft;
  },
  upgrade: function() {
    return upgrade;
  },
  visualAcuity: function() {
    return visualAcuity;
  },
  zoneItems: function() {
    return zoneItems;
  }
});
function _taggedTemplateLiteral37(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function available3() {
  return (0, import_kolmafia50.availableAmount)(item6) > 0;
}
function have37() {
  return get("hasAutumnaton") || available3();
}
function checkLocations(html) {
  return (0, import_kolmafia50.xpath)(html, '//select[@name="heythereprogrammer"]//option[position()>1]/text()').map(function(name) {
    return (0, import_kolmafia50.toLocation)(name);
  });
}
function currentlyIn() {
  return get("autumnatonQuestLocation");
}
function sendTo(target) {
  var upgrade2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  if (!available3())
    return null;
  var pageHtml = directlyUse(item6);
  if (upgrade2 && (0, import_kolmafia50.availableChoiceOptions)()[1])
    (0, import_kolmafia50.runChoice)(1);
  var locationsAvailable = checkLocations(pageHtml);
  var location = target instanceof import_kolmafia50.Location ? target : Array.isArray(target) ? target.find(function(l) {
    return locationsAvailable.includes(l);
  }) : target(locationsAvailable);
  if (!location)
    return null;
  if (!locationsAvailable.includes(location))
    return null;
  if (!(0, import_kolmafia50.handlingChoice)())
    directlyUse(item6);
  (0, import_kolmafia50.runChoice)(2, "heythereprogrammer=".concat(location.id));
  if ((0, import_kolmafia50.handlingChoice)())
    (0, import_kolmafia50.visitUrl)("main.php");
  return location;
}
function upgrade() {
  directlyUse(item6);
  var canUpgrade = (0, import_kolmafia50.availableChoiceOptions)()[1] !== void 0;
  if (canUpgrade)
    (0, import_kolmafia50.runChoice)(1);
  (0, import_kolmafia50.visitUrl)("main.php");
  return canUpgrade;
}
function availableLocations() {
  if (!available3())
    return [];
  var pageHtml = directlyUse(item6);
  (0, import_kolmafia50.visitUrl)("main.php");
  return checkLocations(pageHtml);
}
function currentUpgrades() {
  return get("autumnatonUpgrades").split(",");
}
function turnsLeft() {
  return get("autumnatonQuestTurn") - (0, import_kolmafia50.totalTurnsPlayed)();
}
function legs() {
  return currentUpgrades().filter(function(u) {
    return u.includes("leg");
  }).length;
}
function turnsForQuest() {
  return 11 * Math.max(1, get("_autumnatonQuests") - legs());
}
function visualAcuity() {
  var visualUpgrades = ["periscope", "radardish"];
  return 1 + currentUpgrades().filter(function(u) {
    return visualUpgrades.includes(u);
  }).length;
}
function zoneItems() {
  return 3 + currentUpgrades().filter(function(u) {
    return u.includes("arm");
  }).length;
}
function seasonalItems() {
  return currentUpgrades().includes("cowcatcher") ? 2 : 1;
}
function getUniques(location) {
  var env = location.environment;
  var difficulty = location.difficultyLevel;
  if (arrayContains(env, ["outdoor", "indoor", "underground"]) && arrayContains(difficulty, difficulties)) {
    var _UNIQUES$env$difficul = UNIQUES[env][difficulty], index = _UNIQUES$env$difficul.index, _item = _UNIQUES$env$difficul.item;
    return {
      upgrade: possibleUpgrades[index],
      item: _item
    };
  }
  return null;
}
var import_kolmafia50, _templateObject201, _templateObject290, _templateObject360, _templateObject451, _templateObject537, _templateObject628, _templateObject724, _templateObject824, _templateObject920, item6, possibleUpgrades, difficulties, UNIQUES;
var init_AutumnAton = __esm({
  "../../node_modules/libram/dist/resources/2022/AutumnAton.js": function() {
    import_kolmafia50 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item6 = import_kolmafia50.Item.get("autumn-aton");
    possibleUpgrades = ["leftarm1", "leftleg1", "rightarm1", "rightleg1", "base_blackhat", "cowcatcher", "periscope", "radardish", "dualexhaust"];
    difficulties = ["low", "mid", "high"];
    UNIQUES = {
      outdoor: {
        low: {
          index: 4,
          item: $item(_templateObject201 || (_templateObject201 = _taggedTemplateLiteral37(["autumn leaf"])))
        },
        mid: {
          index: 2,
          item: $item(_templateObject290 || (_templateObject290 = _taggedTemplateLiteral37(["autumn debris shield"])))
        },
        high: {
          index: 6,
          item: $item(_templateObject360 || (_templateObject360 = _taggedTemplateLiteral37(["autumn leaf pendant"])))
        }
      },
      indoor: {
        low: {
          index: 0,
          item: $item(_templateObject451 || (_templateObject451 = _taggedTemplateLiteral37(["AutumnFest ale"])))
        },
        mid: {
          index: 3,
          item: $item(_templateObject537 || (_templateObject537 = _taggedTemplateLiteral37(["autumn-spice donut"])))
        },
        high: {
          index: 7,
          item: $item(_templateObject628 || (_templateObject628 = _taggedTemplateLiteral37(["autumn breeze"])))
        }
      },
      underground: {
        low: {
          index: 1,
          item: $item(_templateObject724 || (_templateObject724 = _taggedTemplateLiteral37(["autumn sweater-weather sweater"])))
        },
        mid: {
          index: 5,
          item: $item(_templateObject824 || (_templateObject824 = _taggedTemplateLiteral37(["autumn dollar"])))
        },
        high: {
          index: 8,
          item: $item(_templateObject920 || (_templateObject920 = _taggedTemplateLiteral37(["autumn years wisdom"])))
        }
      }
    };
  }
});

// ../../node_modules/libram/dist/resources/2022/CombatLoversLocket.js
var CombatLoversLocket_exports = {};
__export(CombatLoversLocket_exports, {
  availableLocketMonsters: function() {
    return availableLocketMonsters;
  },
  findMonster: function() {
    return findMonster;
  },
  have: function() {
    return have38;
  },
  monstersReminisced: function() {
    return monstersReminisced;
  },
  reminisce: function() {
    return reminisce;
  },
  reminiscesLeft: function() {
    return reminiscesLeft;
  },
  unlockedLocketMonsters: function() {
    return unlockedLocketMonsters;
  }
});
function _slicedToArray13(arr, i) {
  return _arrayWithHoles13(arr) || _iterableToArrayLimit13(arr, i) || _unsupportedIterableToArray26(arr, i) || _nonIterableRest13();
}
function _nonIterableRest13() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray26(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray26(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray26(o, minLen);
}
function _arrayLikeToArray26(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit13(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles13(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral38(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have38() {
  return have(locket);
}
function availableLocketMonsters() {
  if (reminiscesLeft() === 0)
    return [];
  return Object.entries((0, import_kolmafia51.getLocketMonsters)()).filter(function(_ref) {
    var _ref2 = _slicedToArray13(_ref, 2), unused = _ref2[1];
    return unused;
  }).map(function(_ref3) {
    var _ref4 = _slicedToArray13(_ref3, 1), name = _ref4[0];
    return (0, import_kolmafia51.toMonster)(name);
  });
}
function unlockedLocketMonsters() {
  return Object.entries((0, import_kolmafia51.getLocketMonsters)()).map(function(_ref5) {
    var _ref6 = _slicedToArray13(_ref5, 1), name = _ref6[0];
    return (0, import_kolmafia51.toMonster)(name);
  });
}
function parseLocketProperty() {
  return get("_locketMonstersFought").split(",").filter(function(id) {
    return id.trim().length > 0;
  });
}
function reminiscesLeft() {
  return have38() ? clamp(3 - parseLocketProperty().length, 0, 3) : 0;
}
function monstersReminisced() {
  return parseLocketProperty().map(function(id) {
    return (0, import_kolmafia51.toMonster)(id);
  });
}
function reminisce(monster) {
  if (!have38() || reminiscesLeft() === 0 || !(0, import_kolmafia51.getLocketMonsters)()[monster.name]) {
    return false;
  }
  (0, import_kolmafia51.cliExecute)("reminisce ".concat(monster));
  (0, import_kolmafia51.runCombat)();
  return monstersReminisced().includes(monster);
}
function findMonster(criteria) {
  var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
    return 1;
  };
  if (!have38() || reminiscesLeft() === 0)
    return null;
  var options = availableLocketMonsters().filter(criteria);
  if (!options.length)
    return null;
  return options.reduce(function(a, b) {
    return value(a) > value(b) ? a : b;
  });
}
var import_kolmafia51, _templateObject291, locket;
var init_CombatLoversLocket = __esm({
  "../../node_modules/libram/dist/resources/2022/CombatLoversLocket.js": function() {
    import_kolmafia51 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    locket = $item(_templateObject291 || (_templateObject291 = _taggedTemplateLiteral38(["combat lover's locket"])));
  }
});

// ../../node_modules/libram/dist/resources/2022/GreyGoose.js
var GreyGoose_exports = {};
__export(GreyGoose_exports, {
  currentDrones: function() {
    return currentDrones;
  },
  currentExperience: function() {
    return currentExperience;
  },
  currentWeight: function() {
    return currentWeight;
  },
  expectedDrones: function() {
    return expectedDrones;
  },
  expectedExperience: function() {
    return expectedExperience;
  },
  expectedMeat: function() {
    return expectedMeat;
  },
  fightsUntil: function() {
    return fightsUntil;
  },
  hasMeatified: function() {
    return hasMeatified;
  },
  have: function() {
    return have39;
  }
});
function _taggedTemplateLiteral39(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have39() {
  return have(goose);
}
function currentExperience() {
  var postAscensionBaseExperience = have($familiar(_templateObject2100 || (_templateObject2100 = _taggedTemplateLiteral39(["Shorter-Order Cook"])))) && !get("gooseReprocessed") ? 81 + (have($item(_templateObject361 || (_templateObject361 = _taggedTemplateLiteral39(["blue plate"])))) ? 19 : 0) : 0;
  return goose.experience || postAscensionBaseExperience;
}
function currentWeight() {
  return Math.min(Math.floor(Math.sqrt(currentExperience())), 20);
}
function expectedDrones() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.max(0, weight - 5);
}
function expectedExperience() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.pow(Math.max(weight - 5, 0), (0, import_kolmafia52.myClass)().id === 27 ? 2 : 3);
}
function expectedMeat() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.pow(Math.max(weight - 5, 0), 4);
}
function hasMeatified() {
  return get("_meatifyMatterUsed");
}
function fightsUntil(target) {
  var bonusExperience = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : get2("Familiar Experience");
  var diff = Math.pow(target, 2) - currentExperience();
  if (diff <= 0)
    return 0;
  return Math.ceil(diff / (1 + bonusExperience + (have($skill(_templateObject458 || (_templateObject458 = _taggedTemplateLiteral39(["Testudinal Teachings"])))) ? 1 / 6 : 0)));
}
function currentDrones() {
  return get("gooseDronesRemaining");
}
var import_kolmafia52, _templateObject299, _templateObject2100, _templateObject361, _templateObject458, goose;
var init_GreyGoose = __esm({
  "../../node_modules/libram/dist/resources/2022/GreyGoose.js": function() {
    import_kolmafia52 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_template_string();
    goose = $familiar(_templateObject299 || (_templateObject299 = _taggedTemplateLiteral39(["Grey Goose"])));
  }
});

// ../../node_modules/libram/dist/resources/2022/JuneCleaver.js
var JuneCleaver_exports = {};
__export(JuneCleaver_exports, {
  choices: function() {
    return choices;
  },
  choicesAvailable: function() {
    return choicesAvailable;
  },
  cleaver: function() {
    return cleaver;
  },
  damage: function() {
    return damage;
  },
  getInterval: function() {
    return getInterval;
  },
  getSkippedInterval: function() {
    return getSkippedInterval;
  },
  have: function() {
    return have40;
  },
  queue: function() {
    return queue;
  },
  skipsRemaining: function() {
    return skipsRemaining;
  }
});
function have40() {
  return (0, import_kolmafia53.availableAmount)(cleaver) > 0;
}
function getInterval() {
  var _encounters;
  var encounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_juneCleaverEncounters");
  return (_encounters = [1, 6, 10, 12, 15, 20][encounters]) !== null && _encounters !== void 0 ? _encounters : 30;
}
function getSkippedInterval() {
  var _encounters2;
  var encounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_juneCleaverEncounters");
  return (_encounters2 = [1, 2, 3, 3, 4, 5][encounters]) !== null && _encounters2 !== void 0 ? _encounters2 : 8;
}
function damage(element) {
  return get("_juneCleaver".concat(element));
}
function skipsRemaining() {
  return 5 - get("_juneCleaverSkips");
}
function queue() {
  return get("juneCleaverQueue").split(",").filter(function(x) {
    return x.trim().length > 0;
  }).map(function(x) {
    return parseInt(x);
  });
}
function choicesAvailable() {
  var currentQueue = queue();
  return choices.filter(function(choice) {
    return !currentQueue.includes(choice);
  });
}
var import_kolmafia53, cleaver, choices;
var init_JuneCleaver = __esm({
  "../../node_modules/libram/dist/resources/2022/JuneCleaver.js": function() {
    import_kolmafia53 = require("kolmafia");
    init_property();
    cleaver = (0, import_kolmafia53.toItem)("June cleaver");
    choices = [1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475];
  }
});

// ../../node_modules/libram/dist/resources/2022/TrainSet.js
var TrainSet_exports = {};
__export(TrainSet_exports, {
  Station: function() {
    return Station;
  },
  canConfigure: function() {
    return canConfigure;
  },
  cycle: function() {
    return cycle;
  },
  doubledEffect: function() {
    return doubledEffect;
  },
  effect: function() {
    return effect;
  },
  have: function() {
    return have41;
  },
  installed: function() {
    return installed4;
  },
  next: function() {
    return next;
  },
  nextConfigurable: function() {
    return nextConfigurable;
  },
  setConfiguration: function() {
    return setConfiguration;
  }
});
function _taggedTemplateLiteral40(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed4() {
  return (0, import_kolmafia54.getWorkshed)() === item7;
}
function have41() {
  return installed4() || have(item7);
}
function effect(station) {
  var _trainsetEffects$get;
  return (_trainsetEffects$get = trainsetEffects.get(station)) !== null && _trainsetEffects$get !== void 0 ? _trainsetEffects$get : null;
}
function doubledEffect(station) {
  var _trainsetEffectsDoubl;
  return (_trainsetEffectsDoubl = trainsetEffectsDoubled.get(station)) !== null && _trainsetEffectsDoubl !== void 0 ? _trainsetEffectsDoubl : null;
}
function cycle() {
  return get("trainsetConfiguration").split(",");
}
function nextConfigurable() {
  return clamp(get("lastTrainsetConfiguration") + 40 - get("trainsetPosition"), 0, 40);
}
function canConfigure() {
  return installed4() && !nextConfigurable();
}
function stationToInt(station) {
  return pieces2.indexOf(station);
}
function setConfiguration(configuration) {
  if (!canConfigure())
    return false;
  (0, import_kolmafia54.visitUrl)("campground.php?action=workshed");
  (0, import_kolmafia54.runChoice)(1, "forceoption=0".concat(configuration.map(function(station, index) {
    return "&slot[".concat(index, "]=").concat(stationToInt(station));
  }).join("")));
  (0, import_kolmafia54.visitUrl)("main.php");
  var currentConfiguration = cycle();
  return configuration.every(function(station, index) {
    return station === currentConfiguration[index];
  });
}
function next() {
  return cycle()[get("trainsetPosition") % 8];
}
var import_kolmafia54, _templateObject300, item7, Station, trainsetEffects, trainsetEffectsDoubled, pieces2;
var init_TrainSet = __esm({
  "../../node_modules/libram/dist/resources/2022/TrainSet.js": function() {
    import_kolmafia54 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item7 = $item(_templateObject300 || (_templateObject300 = _taggedTemplateLiteral40(["model train set"])));
    (function(Station2) {
      Station2["UNKNOWN"] = "";
      Station2["EMPTY"] = "empty";
      Station2["GAIN_MEAT"] = "meat_mine";
      Station2["TOWER_FIZZY"] = "tower_fizzy";
      Station2["VIEWING_PLATFORM"] = "viewing_platform";
      Station2["TOWER_FROZEN"] = "tower_frozen";
      Station2["SPOOKY_GRAVEYARD"] = "spooky_graveyard";
      Station2["LOGGING_MILL"] = "logging_mill";
      Station2["CANDY_FACTORY"] = "candy_factory";
      Station2["COAL_HOPPER"] = "coal_hopper";
      Station2["TOWER_SEWAGE"] = "tower_sewage";
      Station2["OIL_REFINERY"] = "oil_refinery";
      Station2["OIL_BRIDGE"] = "oil_bridge";
      Station2["WATER_BRIDGE"] = "water_bridge";
      Station2["GROIN_SILO"] = "groin_silo";
      Station2["GRAIN_SILO"] = "grain_silo";
      Station2["BRAIN_SILO"] = "brain_silo";
      Station2["BRAWN_SILO"] = "brawn_silo";
      Station2["PRAWN_SILO"] = "prawn_silo";
      Station2["TRACKSIDE_DINER"] = "trackside_diner";
      Station2["ORE_HOPPER"] = "ore_hopper";
    })(Station || (Station = {}));
    trainsetEffects = /* @__PURE__ */ new Map([[Station.TOWER_FIZZY, import_kolmafia54.Effect.get("Carbonated")], [Station.TOWER_FROZEN, import_kolmafia54.Effect.get("Frozen")], [Station.SPOOKY_GRAVEYARD, import_kolmafia54.Effect.get("Shivering Spine")], [Station.TOWER_SEWAGE, import_kolmafia54.Effect.get("Hot Soupy Garbage")], [Station.OIL_BRIDGE, import_kolmafia54.Effect.get("Burningly Oiled")], [Station.OIL_REFINERY, import_kolmafia54.Effect.get("Spookily Greasy")], [Station.WATER_BRIDGE, import_kolmafia54.Effect.get("Troubled Waters")], [Station.PRAWN_SILO, import_kolmafia54.Effect.get("Craving Prawns")]]);
    trainsetEffectsDoubled = /* @__PURE__ */ new Map([[Station.TOWER_FIZZY, import_kolmafia54.Effect.get("Double Carbonated")], [Station.TOWER_FROZEN, import_kolmafia54.Effect.get("Double Frozen")], [Station.SPOOKY_GRAVEYARD, import_kolmafia54.Effect.get("Doubly Shivering Spine")], [Station.TOWER_SEWAGE, import_kolmafia54.Effect.get("Double Hot Soupy Garbage")], [Station.OIL_BRIDGE, import_kolmafia54.Effect.get("Doubly Burningly Oiled")], [Station.OIL_REFINERY, import_kolmafia54.Effect.get("Doubly Spookily Greasy")], [Station.WATER_BRIDGE, import_kolmafia54.Effect.get("Doubly Troubled Waters")], [Station.PRAWN_SILO, import_kolmafia54.Effect.get("Doubly Craving Prawns")]]);
    pieces2 = [Station.EMPTY, Station.GAIN_MEAT, Station.TOWER_FIZZY, Station.VIEWING_PLATFORM, Station.TOWER_FROZEN, Station.SPOOKY_GRAVEYARD, Station.LOGGING_MILL, Station.CANDY_FACTORY, Station.COAL_HOPPER, Station.TOWER_SEWAGE, Station.UNKNOWN, Station.OIL_REFINERY, Station.OIL_BRIDGE, Station.WATER_BRIDGE, Station.GROIN_SILO, Station.GRAIN_SILO, Station.BRAIN_SILO, Station.BRAWN_SILO, Station.PRAWN_SILO, Station.TRACKSIDE_DINER, Station.ORE_HOPPER];
  }
});

// ../../node_modules/libram/dist/resources/2023/AugustScepter.js
var AugustScepter_exports = {};
__export(AugustScepter_exports, {
  SKILLS: function() {
    return SKILLS;
  },
  canCast: function() {
    return canCast;
  },
  getAugustCast: function() {
    return getAugustCast;
  },
  getTodayCast: function() {
    return getTodayCast;
  },
  have: function() {
    return have42;
  },
  todaysSkill: function() {
    return todaysSkill;
  }
});
function _taggedTemplateLiteral41(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have42() {
  return have($item(_templateObject301 || (_templateObject301 = _taggedTemplateLiteral41(["august scepter"]))));
}
function todaysSkill() {
  return (0, import_kolmafia55.toSkill)((gameDay().getDate() + 7451).toFixed(0));
}
function getAugustCast(skillNum) {
  return get("_aug".concat(skillNum, "Cast"));
}
function getTodayCast() {
  return get("_augTodayCast");
}
function canCast(skillNum) {
  return have42() && !get("_aug".concat(skillNum, "Cast")) && (gameDay().getDate() === skillNum && !getTodayCast() || get("_augSkillsCast") < 5);
}
var import_kolmafia55, _templateObject301, _templateObject2101, SKILLS;
var init_AugustScepter = __esm({
  "../../node_modules/libram/dist/resources/2023/AugustScepter.js": function() {
    import_kolmafia55 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    SKILLS = Object.freeze($skills(_templateObject2101 || (_templateObject2101 = _taggedTemplateLiteral41(["Aug. 1st: Mountain Climbing Day!, Aug. 2nd: Find an Eleven-Leaf Clover Day, Aug. 3rd: Watermelon Day!, Aug. 4th: Water Balloon Day!, Aug. 5th: Oyster Day!, Aug. 6th: Fresh Breath Day!, Aug. 7th: Lighthouse Day!, Aug. 8th: Cat Day!, Aug. 9th: Hand Holding Day!, Aug. 10th: World Lion Day!, Aug. 11th: Presidential Joke Day!, Aug. 12th: Elephant Day!, Aug. 13th: Left/Off Hander's Day!, Aug. 14th: Financial Awareness  Day!, Aug. 15th: Relaxation Day!, Aug. 16th: Roller Coaster Day!, Aug. 17th: Thriftshop Day!, Aug. 18th: Serendipity Day!, Aug. 19th: Honey Bee Awareness Day!, Aug. 20th: Mosquito Day!, Aug. 21st: Spumoni Day!, Aug. 22nd: Tooth Fairy Day!, Aug. 23rd: Ride the Wind Day!, Aug. 24th: Waffle Day!, Aug. 25th: Banana Split Day!, Aug. 26th: Toilet Paper Day!, Aug. 27th: Just Because Day!, Aug. 28th: Race Your Mouse Day!, Aug. 29th: More Herbs, Less Salt  Day!, Aug. 30th: Beach Day!, Aug. 31st: Cabernet Sauvignon  Day!"], ["Aug. 1st: Mountain Climbing Day!, Aug. 2nd: Find an Eleven-Leaf Clover Day, Aug. 3rd: Watermelon Day!, Aug. 4th: Water Balloon Day!, Aug. 5th: Oyster Day!, Aug. 6th: Fresh Breath Day!, Aug. 7th: Lighthouse Day!, Aug. 8th: Cat Day!, Aug. 9th: Hand Holding Day!, Aug. 10th: World Lion Day!, Aug. 11th: Presidential Joke Day!, Aug. 12th: Elephant Day!, Aug. 13th: Left/Off Hander's Day!, Aug. 14th: Financial Awareness  Day!, Aug. 15th: Relaxation Day!, Aug. 16th: Roller Coaster Day!, Aug. 17th: Thriftshop Day!, Aug. 18th: Serendipity Day!, Aug. 19th: Honey Bee Awareness Day!, Aug. 20th: Mosquito Day!, Aug. 21st: Spumoni Day!, Aug. 22nd: Tooth Fairy Day!, Aug. 23rd: Ride the Wind Day!, Aug. 24th: Waffle Day!, Aug. 25th: Banana Split Day!, Aug. 26th: Toilet Paper Day!, Aug. 27th: Just Because Day!, Aug. 28th: Race Your Mouse Day!, Aug. 29th: More Herbs\\, Less Salt  Day!, Aug. 30th: Beach Day!, Aug. 31st: Cabernet Sauvignon  Day!"]))));
  }
});

// ../../node_modules/libram/dist/resources/2023/CinchoDeMayo.js
var CinchoDeMayo_exports = {};
__export(CinchoDeMayo_exports, {
  cinchRestoredBy: function() {
    return cinchRestoredBy;
  },
  currentCinch: function() {
    return currentCinch;
  },
  have: function() {
    return have43;
  },
  skills: function() {
    return skills2;
  },
  totalAvailableCinch: function() {
    return totalAvailableCinch;
  }
});
function _taggedTemplateLiteral42(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have43() {
  return have(cincho);
}
function currentCinch() {
  return have43() ? clamp(100 - get("_cinchUsed"), 0, 100) : 0;
}
function cinchRestoredBy() {
  var currentRests = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_cinchoRests");
  return have43() ? clamp(50 - currentRests * 5, 5, 30) : 0;
}
function totalAvailableCinch() {
  var remainingRests = Math.max(0, (0, import_kolmafia56.totalFreeRests)() - get("timesRested"));
  return have43() ? currentCinch() + sum(new Array(remainingRests).fill(null).map(function(_, i) {
    return i + get("_cinchoRests");
  }), function(restNumber) {
    return cinchRestoredBy(restNumber);
  }) : 0;
}
var import_kolmafia56, _templateObject309, _templateObject2102, _templateObject369, _templateObject459, _templateObject538, _templateObject629, _templateObject725, cincho, skills2;
var init_CinchoDeMayo = __esm({
  "../../node_modules/libram/dist/resources/2023/CinchoDeMayo.js": function() {
    import_kolmafia56 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    cincho = $item(_templateObject309 || (_templateObject309 = _taggedTemplateLiteral42(["Cincho de Mayo"])));
    skills2 = {
      SaltAndLime: $skill(_templateObject2102 || (_templateObject2102 = _taggedTemplateLiteral42(["Cincho: Dispense Salt and Lime"]))),
      PartySoundtrack: $skill(_templateObject369 || (_templateObject369 = _taggedTemplateLiteral42(["Cincho: Party Soundtrack"]))),
      FiestaExit: $skill(_templateObject459 || (_templateObject459 = _taggedTemplateLiteral42(["Cincho: Fiesta Exit"]))),
      ProjectilePi\u00F1ata: $skill(_templateObject538 || (_templateObject538 = _taggedTemplateLiteral42(["Cincho: Projectile Pi\xF1ata"]))),
      PartyFoul: $skill(_templateObject629 || (_templateObject629 = _taggedTemplateLiteral42(["Cincho: Party Foul"]))),
      ConfettiExtrava: $skill(_templateObject725 || (_templateObject725 = _taggedTemplateLiteral42(["Cincho: Confetti Extravaganza"])))
    };
  }
});

// ../../node_modules/libram/dist/resources/2023/ClosedCircuitPayphone.js
var ClosedCircuitPayphone_exports = {};
__export(ClosedCircuitPayphone_exports, {
  byIngress: function() {
    return byIngress;
  },
  chooseQuest: function() {
    return chooseQuest;
  },
  chooseRift: function() {
    return chooseRift;
  },
  currentIngress: function() {
    return currentIngress;
  },
  currentRift: function() {
    return currentRift;
  },
  have: function() {
    return have44;
  },
  rifts: function() {
    return rifts;
  },
  rufusTarget: function() {
    return rufusTarget;
  },
  submitQuest: function() {
    return submitQuest;
  }
});
function _taggedTemplateLiteral43(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have44() {
  return have(item8);
}
function rufusTarget() {
  var target = get("rufusQuestTarget");
  switch (get("rufusQuestType")) {
    case "entity":
      return import_kolmafia57.Monster.get(target);
    case "artifact":
    case "items":
      return import_kolmafia57.Item.get(target);
    default:
      return null;
  }
}
function currentIngress() {
  return get("shadowRiftIngress");
}
function currentRift() {
  var ingress = currentIngress();
  return ingress ? INGRESS_RIFTS[ingress] : null;
}
function chooseRift(options) {
  var filterFunction = function(l) {
    var _options$monsters, _options$drops, _options$otherFilter, _options$otherFilter2;
    var monsters = (0, import_kolmafia57.getMonsters)(l);
    if (options.canAdventure && !(0, import_kolmafia57.canAdventure)(l))
      return false;
    if ((_options$monsters = options.monsters) !== null && _options$monsters !== void 0 && _options$monsters.some(function(m) {
      return !monsters.includes(m);
    }))
      return false;
    if ((_options$drops = options.drops) !== null && _options$drops !== void 0 && _options$drops.every(function(i) {
      return !monsters.some(function(m) {
        return i.name in (0, import_kolmafia57.itemDrops)(m);
      });
    }))
      return false;
    return (_options$otherFilter = (_options$otherFilter2 = options.otherFilter) === null || _options$otherFilter2 === void 0 ? void 0 : _options$otherFilter2.call(options, l)) !== null && _options$otherFilter !== void 0 ? _options$otherFilter : true;
  };
  var validRifts = [].concat(RIFTS).filter(filterFunction);
  if (!validRifts.length)
    return null;
  return options.sortBy ? maxBy(validRifts, options.sortBy) : validRifts[0];
}
function chooseQuest(chooser) {
  if (get("questRufus") !== "unstarted")
    return false;
  if (!have44())
    return false;
  withChoice(1497, "", function() {
    var _get3;
    directlyUse(item8);
    (0, import_kolmafia57.runChoice)(chooser({
      artifact: (0, import_kolmafia57.toItem)(get("rufusDesiredArtifact")),
      entity: (_get3 = get("rufusDesiredEntity")) !== null && _get3 !== void 0 ? _get3 : $monster.none,
      items: (0, import_kolmafia57.toItem)(get("rufusDesiredItems"))
    }));
  });
  return get("questRufus") !== "unstarted";
}
function rifts() {
  return [].concat(RIFTS);
}
function submitQuest() {
  if (questStep("questRufus") === 1) {
    withChoice(1498, 1, function() {
      return (0, import_kolmafia57.use)(item8);
    });
    return questStep("questRufus") === -1;
  }
  return false;
}
var import_kolmafia57, _templateObject370, _templateObject2103, _templateObject371, _templateObject460, _templateObject539, _templateObject630, _templateObject726, _templateObject825, _templateObject921, _templateObject1020, _templateObject1118, _templateObject1218, _templateObject1316, _templateObject1413, item8, INGRESS_RIFTS, RIFTS, byIngress;
var init_ClosedCircuitPayphone = __esm({
  "../../node_modules/libram/dist/resources/2023/ClosedCircuitPayphone.js": function() {
    import_kolmafia57 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item8 = $item(_templateObject370 || (_templateObject370 = _taggedTemplateLiteral43(["closed-circuit pay phone"])));
    INGRESS_RIFTS = {
      desertbeach: $location(_templateObject2103 || (_templateObject2103 = _taggedTemplateLiteral43(["Shadow Rift (Desert Beach)"]))),
      forestvillage: $location(_templateObject371 || (_templateObject371 = _taggedTemplateLiteral43(["Shadow Rift (Forest Village)"]))),
      mclargehuge: $location(_templateObject460 || (_templateObject460 = _taggedTemplateLiteral43(["Shadow Rift (Mt. McLargeHuge)"]))),
      beanstalk: $location(_templateObject539 || (_templateObject539 = _taggedTemplateLiteral43(["Shadow Rift (Somewhere Over the Beanstalk)"]))),
      manor3: $location(_templateObject630 || (_templateObject630 = _taggedTemplateLiteral43(["Shadow Rift (Spookyraven Manor Third Floor)"]))),
      "8bit": $location(_templateObject726 || (_templateObject726 = _taggedTemplateLiteral43(["Shadow Rift (The 8-Bit Realm)"]))),
      pyramid: $location(_templateObject825 || (_templateObject825 = _taggedTemplateLiteral43(["Shadow Rift (The Ancient Buried Pyramid)"]))),
      giantcastle: $location(_templateObject921 || (_templateObject921 = _taggedTemplateLiteral43(["Shadow Rift (The Castle in the Clouds in the Sky)"]))),
      woods: $location(_templateObject1020 || (_templateObject1020 = _taggedTemplateLiteral43(["Shadow Rift (The Distant Woods)"]))),
      hiddencity: $location(_templateObject1118 || (_templateObject1118 = _taggedTemplateLiteral43(["Shadow Rift (The Hidden City)"]))),
      cemetery: $location(_templateObject1218 || (_templateObject1218 = _taggedTemplateLiteral43(["Shadow Rift (The Misspelled Cemetary)"]))),
      plains: $location(_templateObject1316 || (_templateObject1316 = _taggedTemplateLiteral43(["Shadow Rift (The Nearby Plains)"]))),
      town_right: $location(_templateObject1413 || (_templateObject1413 = _taggedTemplateLiteral43(["Shadow Rift (The Right Side of the Tracks)"])))
    };
    RIFTS = Array.from(Object.values(INGRESS_RIFTS));
    byIngress = makeByXFunction(currentIngress);
  }
});

// ../../node_modules/libram/dist/resources/2023/CursedMonkeyPaw.js
var CursedMonkeyPaw_exports = {};
__export(CursedMonkeyPaw_exports, {
  getUnwishableEffects: function() {
    return getUnwishableEffects;
  },
  have: function() {
    return have45;
  },
  isWishable: function() {
    return isWishable;
  },
  wishFor: function() {
    return wishFor;
  },
  wishableItems: function() {
    return wishableItems;
  },
  wishes: function() {
    return wishes;
  }
});
function _taggedTemplateLiteral44(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have45() {
  return have(item9);
}
function wishes() {
  return clamp(5 - get("_monkeyPawWishesUsed"), 0, 5);
}
function wishableItems() {
  var filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return new Set(flat(import_kolmafia58.Location.all().filter(function(l) {
    var _filters$location, _filters$location2;
    return (0, import_kolmafia58.canAdventure)(l) && ((_filters$location = (_filters$location2 = filters.location) === null || _filters$location2 === void 0 ? void 0 : _filters$location2.call(filters, l)) !== null && _filters$location !== void 0 ? _filters$location : true);
  }).map(function(l) {
    return (0, import_kolmafia58.getMonsters)(l).filter(function(m) {
      var _filters$monster, _filters$monster2;
      return m.copyable && ((_filters$monster = (_filters$monster2 = filters.monster) === null || _filters$monster2 === void 0 ? void 0 : _filters$monster2.call(filters, m)) !== null && _filters$monster !== void 0 ? _filters$monster : true);
    }).map(function(m) {
      return (0, import_kolmafia58.itemDropsArray)(m).filter(function(_ref) {
        var _filters$drop, _filters$drop2;
        var type = _ref.type, rate = _ref.rate, drop = _ref.drop;
        return !drop.quest && (type !== "c" || rate >= 1) && // Remove random roll drops
        ((_filters$drop = (_filters$drop2 = filters.drop) === null || _filters$drop2 === void 0 ? void 0 : _filters$drop2.call(filters, {
          type: type,
          rate: rate,
          drop: drop
        })) !== null && _filters$drop !== void 0 ? _filters$drop : true);
      }).map(function(_ref2) {
        var drop = _ref2.drop;
        return drop;
      });
    });
  })));
}
function unwishableEffects() {
  var names = import_kolmafia58.Effect.all().filter(function(e) {
    return !e.attributes.includes("nohookah");
  }).map(function(e) {
    var name = e.name.toLowerCase();
    return {
      name: name,
      splitName: name.split(INVALID_CHARACTERS)
    };
  });
  return names.filter(function(_ref3) {
    var name = _ref3.name, splitName = _ref3.splitName;
    return (
      // Any effect that doesn't contain an INVALID_CHARACTER is fine
      splitName.length > 1 && // To be unwishable, there can't be any substrings that uniquely match a genie-wishable effect
      splitName.every(function(s) {
        return (
          // So we check every maximal substring against every one of our genie-wishable effects, excluding the effect we're currently looking at
          // if one of the substrings matches a substring associated with another effect, we're screwed.
          names.some(function(_ref4) {
            var n = _ref4.name;
            return n !== name && n.includes(s);
          })
        );
      })
    );
  }).map(function(_ref5) {
    var name = _ref5.name;
    return (0, import_kolmafia58.toEffect)(name);
  });
}
function getUnwishableEffects() {
  var _unwishableEffects2;
  return (_unwishableEffects2 = _unwishableEffects) !== null && _unwishableEffects2 !== void 0 ? _unwishableEffects2 : _unwishableEffects = unwishableEffects();
}
function isWishable(wish) {
  if (wish instanceof import_kolmafia58.Item) {
    return wishableItems().has(wish);
  } else {
    if (wish.attributes.includes("nohookah"))
      return false;
    if (!wish.name.match(/[.,']/))
      return true;
    return !getUnwishableEffects().includes(wish);
  }
}
function wishFor(wish) {
  if (wishes() <= 0)
    return false;
  if (wish instanceof import_kolmafia58.Effect)
    return (0, import_kolmafia58.monkeyPaw)(wish);
  var locations = import_kolmafia58.Location.all().filter(function(l) {
    return (0, import_kolmafia58.canAdventure)(l) && (0, import_kolmafia58.getMonsters)(l).some(function(m) {
      return m.copyable && (0, import_kolmafia58.itemDropsArray)(m).some(function(_ref6) {
        var drop = _ref6.drop;
        return drop === wish;
      });
    });
  });
  try {
    if (locations.length) {
      (0, import_kolmafia58.cliExecute)("checkpoint");
      (0, import_kolmafia58.prepareForAdventure)(locations[0]);
    }
    var result = (0, import_kolmafia58.monkeyPaw)(wish);
    if (!result) {
      logger_default.debug("Failed to monkeyPaw wish for ".concat(wish, "; assumed it was available in locations ").concat(locations.join(", ")));
    }
    return result;
  } finally {
    if (locations.length)
      (0, import_kolmafia58.cliExecute)("outfit checkpoint");
  }
}
var import_kolmafia58, _templateObject379, item9, INVALID_CHARACTERS, _unwishableEffects;
var init_CursedMonkeyPaw = __esm({
  "../../node_modules/libram/dist/resources/2023/CursedMonkeyPaw.js": function() {
    import_kolmafia58 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    init_template_string();
    init_utils();
    item9 = $item(_templateObject379 || (_templateObject379 = _taggedTemplateLiteral44(["cursed monkey's paw"])));
    INVALID_CHARACTERS = /[^a-z\d -]/g;
  }
});

// ../../node_modules/libram/dist/resources/putty-likes.js
function getTotalPuttyLikeCopiesMade() {
  return getSpookyPuttySheetCopiesMade() + getRainDohBlackBoxCopiesMade();
}
function couldUseRainDohBlackBox() {
  return have8() && getRainDohBlackBoxCopiesMade() < 5 && getTotalPuttyLikeCopiesMade() < 6;
}
function couldUseSpookyPuttySheet() {
  return have6() && getSpookyPuttySheetCopiesMade() < 5 && getTotalPuttyLikeCopiesMade() < 6;
}
var RainDohBlackBox, SpookyPuttySheet;
var init_putty_likes = __esm({
  "../../node_modules/libram/dist/resources/putty-likes.js": function() {
    init_Copier();
    init_SpookyPutty();
    init_RainDoh();
    RainDohBlackBox = new Copier(function() {
      return couldUseRainDohBlackBox();
    }, null, function() {
      return couldUseRainDohBlackBox();
    }, function() {
      return getRainDohBlackBoxMonster();
    }, function() {
      return useRainDohBlackBox();
    });
    SpookyPuttySheet = new Copier(function() {
      return couldUseSpookyPuttySheet();
    }, function() {
      return prepareSpookyPuttySheet();
    }, function() {
      return couldUseSpookyPuttySheet();
    }, function() {
      return getSpookyPuttySheetMonster();
    }, function() {
      return useSpookyPuttySheet();
    });
  }
});

// ../../node_modules/libram/dist/resources/2007/CandyHearts.js
function _taggedTemplateLiteral45(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have46() {
  return have(summonSkill);
}
function expected() {
  return libramExpected;
}
var _templateObject380, _templateObject2104, _templateObject381, _templateObject461, _templateObject540, _templateObject631, _templateObject727, summonSkill, libramChance, libramExpected;
var init_CandyHearts = __esm({
  "../../node_modules/libram/dist/resources/2007/CandyHearts.js": function() {
    init_lib();
    init_template_string();
    summonSkill = $skill(_templateObject380 || (_templateObject380 = _taggedTemplateLiteral45(["Summon Candy Heart"])));
    libramChance = 1 / 6;
    libramExpected = /* @__PURE__ */ new Map([[$item(_templateObject2104 || (_templateObject2104 = _taggedTemplateLiteral45(["green candy heart"]))), libramChance], [$item(_templateObject381 || (_templateObject381 = _taggedTemplateLiteral45(["lavender candy heart"]))), libramChance], [$item(_templateObject461 || (_templateObject461 = _taggedTemplateLiteral45(["orange candy heart"]))), libramChance], [$item(_templateObject540 || (_templateObject540 = _taggedTemplateLiteral45(["pink candy heart"]))), libramChance], [$item(_templateObject631 || (_templateObject631 = _taggedTemplateLiteral45(["white candy heart"]))), libramChance], [$item(_templateObject727 || (_templateObject727 = _taggedTemplateLiteral45(["yellow candy heart"]))), libramChance]]);
  }
});

// ../../node_modules/libram/dist/resources/2008/DivineFavors.js
function _taggedTemplateLiteral46(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have47() {
  return have(summonSkill2);
}
function expected2() {
  var rareSummons = get("_favorRareSummons");
  var totalRareChance = 1 / Math.pow(2, rareSummons + 1);
  var commonChance2 = (1 - totalRareChance) / 3;
  var rareChance2 = totalRareChance / 3;
  return /* @__PURE__ */ new Map([[$item(_templateObject2105 || (_templateObject2105 = _taggedTemplateLiteral46(["divine blowout"]))), commonChance2], [$item(_templateObject389 || (_templateObject389 = _taggedTemplateLiteral46(["divine can of silly string"]))), commonChance2], [$item(_templateObject467 || (_templateObject467 = _taggedTemplateLiteral46(["divine noisemaker"]))), commonChance2], [$item(_templateObject541 || (_templateObject541 = _taggedTemplateLiteral46(["divine champagne flute"]))), rareChance2], [$item(_templateObject634 || (_templateObject634 = _taggedTemplateLiteral46(["divine champagne popper"]))), rareChance2], [$item(_templateObject728 || (_templateObject728 = _taggedTemplateLiteral46(["divine cracker"]))), rareChance2]]);
}
var _templateObject388, _templateObject2105, _templateObject389, _templateObject467, _templateObject541, _templateObject634, _templateObject728, summonSkill2;
var init_DivineFavors = __esm({
  "../../node_modules/libram/dist/resources/2008/DivineFavors.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill2 = $skill(_templateObject388 || (_templateObject388 = _taggedTemplateLiteral46(["Summon Party Favor"])));
  }
});

// ../../node_modules/libram/dist/resources/2009/LoveSongs.js
function _taggedTemplateLiteral47(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have48() {
  return have(summonSkill3);
}
function expected3() {
  return libramExpected2;
}
var _templateObject390, _templateObject2106, _templateObject391, _templateObject468, _templateObject545, _templateObject635, _templateObject729, summonSkill3, libramChance2, libramExpected2;
var init_LoveSongs = __esm({
  "../../node_modules/libram/dist/resources/2009/LoveSongs.js": function() {
    init_lib();
    init_template_string();
    summonSkill3 = $skill(_templateObject390 || (_templateObject390 = _taggedTemplateLiteral47(["Summon Love Song"])));
    libramChance2 = 1 / 6;
    libramExpected2 = /* @__PURE__ */ new Map([[$item(_templateObject2106 || (_templateObject2106 = _taggedTemplateLiteral47(["love song of disturbing obsession"]))), libramChance2], [$item(_templateObject391 || (_templateObject391 = _taggedTemplateLiteral47(["love song of icy revenge"]))), libramChance2], [$item(_templateObject468 || (_templateObject468 = _taggedTemplateLiteral47(["love song of naughty innuendo"]))), libramChance2], [$item(_templateObject545 || (_templateObject545 = _taggedTemplateLiteral47(["love song of smoldering passion"]))), libramChance2], [$item(_templateObject635 || (_templateObject635 = _taggedTemplateLiteral47(["love song of sugary cuteness"]))), libramChance2], [$item(_templateObject729 || (_templateObject729 = _taggedTemplateLiteral47(["love song of vague ambiguity"]))), libramChance2]]);
  }
});

// ../../node_modules/libram/dist/resources/2010/Brickos.js
function _taggedTemplateLiteral48(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have49() {
  return have(summonSkill4);
}
function expected4() {
  var eyeSummons = get("_brickoEyeSummons");
  var eyeChance = eyeSummons === 3 ? 0 : eyeSummons === 0 ? 0.5 : 1 / 3;
  return /* @__PURE__ */ new Map([[$item(_templateObject2107 || (_templateObject2107 = _taggedTemplateLiteral48(["BRICKO eye brick"]))), eyeChance], [$item(_templateObject399 || (_templateObject399 = _taggedTemplateLiteral48(["BRICKO brick"]))), 3 - eyeChance]]);
}
var _templateObject398, _templateObject2107, _templateObject399, summonSkill4;
var init_Brickos = __esm({
  "../../node_modules/libram/dist/resources/2010/Brickos.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill4 = $skill(_templateObject398 || (_templateObject398 = _taggedTemplateLiteral48(["Summon BRICKOs"])));
  }
});

// ../../node_modules/libram/dist/resources/2011/Gygaxian.js
function _taggedTemplateLiteral49(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have50() {
  return have(summonSkill5);
}
function expected5() {
  return libramExpected3;
}
var _templateObject400, _templateObject2108, _templateObject3100, _templateObject469, _templateObject546, _templateObject636, _templateObject730, summonSkill5, libramChance3, libramExpected3;
var init_Gygaxian = __esm({
  "../../node_modules/libram/dist/resources/2011/Gygaxian.js": function() {
    init_lib();
    init_template_string();
    summonSkill5 = $skill(_templateObject400 || (_templateObject400 = _taggedTemplateLiteral49(["Summon Dice"])));
    libramChance3 = 1 / 6;
    libramExpected3 = /* @__PURE__ */ new Map([[$item(_templateObject2108 || (_templateObject2108 = _taggedTemplateLiteral49(["d4"]))), libramChance3], [$item(_templateObject3100 || (_templateObject3100 = _taggedTemplateLiteral49(["d6"]))), libramChance3], [$item(_templateObject469 || (_templateObject469 = _taggedTemplateLiteral49(["d8"]))), libramChance3], [$item(_templateObject546 || (_templateObject546 = _taggedTemplateLiteral49(["d10"]))), libramChance3], [$item(_templateObject636 || (_templateObject636 = _taggedTemplateLiteral49(["d12"]))), libramChance3], [$item(_templateObject730 || (_templateObject730 = _taggedTemplateLiteral49(["d20"]))), libramChance3]]);
  }
});

// ../../node_modules/libram/dist/resources/2012/Resolutions.js
function _taggedTemplateLiteral50(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have51() {
  return have(summonSkill6);
}
function expected6() {
  return libramExpected4;
}
var _templateObject401, _templateObject2109, _templateObject3101, _templateObject470, _templateObject547, _templateObject637, _templateObject731, _templateObject826, _templateObject923, _templateObject1021, summonSkill6, commonChance, rareChance, libramExpected4;
var init_Resolutions = __esm({
  "../../node_modules/libram/dist/resources/2012/Resolutions.js": function() {
    init_lib();
    init_template_string();
    summonSkill6 = $skill(_templateObject401 || (_templateObject401 = _taggedTemplateLiteral50(["Summon Resolutions"])));
    commonChance = 0.98 / 6;
    rareChance = 0.02 / 3;
    libramExpected4 = /* @__PURE__ */ new Map([[$item(_templateObject2109 || (_templateObject2109 = _taggedTemplateLiteral50(["resolution: be feistier"]))), commonChance], [$item(_templateObject3101 || (_templateObject3101 = _taggedTemplateLiteral50(["resolution: be happier"]))), commonChance], [$item(_templateObject470 || (_templateObject470 = _taggedTemplateLiteral50(["resolution: be sexier"]))), commonChance], [$item(_templateObject547 || (_templateObject547 = _taggedTemplateLiteral50(["resolution: be smarter"]))), commonChance], [$item(_templateObject637 || (_templateObject637 = _taggedTemplateLiteral50(["resolution: be stronger"]))), commonChance], [$item(_templateObject731 || (_templateObject731 = _taggedTemplateLiteral50(["resolution: be wealthier"]))), commonChance], [$item(_templateObject826 || (_templateObject826 = _taggedTemplateLiteral50(["resolution: be kinder"]))), rareChance], [$item(_templateObject923 || (_templateObject923 = _taggedTemplateLiteral50(["resolution: be luckier"]))), rareChance], [$item(_templateObject1021 || (_templateObject1021 = _taggedTemplateLiteral50(["resolution: be more adventurous"]))), rareChance]]);
  }
});

// ../../node_modules/libram/dist/resources/2013/PulledTaffy.js
function _taggedTemplateLiteral51(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have52() {
  return have(summonSkill7);
}
function expected7() {
  var rareSummons = get("_taffyRareSummons");
  var yellowSummons = get("_taffyYellowSummons");
  var onlyYellow = yellowSummons === 0 && rareSummons === 3;
  var totalRareChance = rareSummons < 4 ? 1 / Math.pow(2, rareSummons + 1) : 0;
  var commonChance2 = (1 - totalRareChance) / 4;
  var rareChance2 = onlyYellow ? 0 : totalRareChance / (3 - get("_taffyYellowSummons"));
  var yellowChance = yellowSummons === 1 ? 0 : onlyYellow ? totalRareChance : rareChance2;
  return /* @__PURE__ */ new Map([[$item(_templateObject2118 || (_templateObject2118 = _taggedTemplateLiteral51(["pulled blue taffy"]))), commonChance2], [$item(_templateObject3102 || (_templateObject3102 = _taggedTemplateLiteral51(["pulled orange taffy"]))), commonChance2], [$item(_templateObject471 || (_templateObject471 = _taggedTemplateLiteral51(["pulled violet taffy"]))), commonChance2], [$item(_templateObject548 || (_templateObject548 = _taggedTemplateLiteral51(["pulled red taffy"]))), commonChance2], [$item(_templateObject638 || (_templateObject638 = _taggedTemplateLiteral51(["pulled indigo taffy"]))), rareChance2], [$item(_templateObject734 || (_templateObject734 = _taggedTemplateLiteral51(["pulled green taffy"]))), rareChance2], [$item(_templateObject827 || (_templateObject827 = _taggedTemplateLiteral51(["pulled yellow taffy"]))), yellowChance]]);
}
var _templateObject408, _templateObject2118, _templateObject3102, _templateObject471, _templateObject548, _templateObject638, _templateObject734, _templateObject827, summonSkill7;
var init_PulledTaffy = __esm({
  "../../node_modules/libram/dist/resources/2013/PulledTaffy.js": function() {
    init_lib();
    init_property();
    init_template_string();
    summonSkill7 = $skill(_templateObject408 || (_templateObject408 = _taggedTemplateLiteral51(["Summon Taffy"])));
  }
});

// ../../node_modules/libram/dist/resources/LibramSummon.js
function _slicedToArray14(arr, i) {
  return _arrayWithHoles14(arr) || _iterableToArrayLimit14(arr, i) || _unsupportedIterableToArray27(arr, i) || _nonIterableRest14();
}
function _nonIterableRest14() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray27(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray27(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray27(o, minLen);
}
function _arrayLikeToArray27(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit14(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles14(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral52(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function expectedLibramSummon(summonSkill8) {
  switch (summonSkill8) {
    case $skill(_templateObject409 || (_templateObject409 = _taggedTemplateLiteral52(["Summon Candy Heart"]))):
      return expected();
    case $skill(_templateObject2119 || (_templateObject2119 = _taggedTemplateLiteral52(["Summon Party Favor"]))):
      return expected2();
    case $skill(_templateObject3103 || (_templateObject3103 = _taggedTemplateLiteral52(["Summon Love Song"]))):
      return expected3();
    case $skill(_templateObject477 || (_templateObject477 = _taggedTemplateLiteral52(["Summon BRICKOs"]))):
      return expected4();
    case $skill(_templateObject549 || (_templateObject549 = _taggedTemplateLiteral52(["Summon Dice"]))):
      return expected5();
    case $skill(_templateObject639 || (_templateObject639 = _taggedTemplateLiteral52(["Summon Resolutions"]))):
      return expected6();
    case $skill(_templateObject735 || (_templateObject735 = _taggedTemplateLiteral52(["Summon Taffy"]))):
      return expected7();
  }
  return /* @__PURE__ */ new Map();
}
function possibleLibramSummons() {
  var results = /* @__PURE__ */ new Map();
  if (have46()) {
    results.set($skill(_templateObject828 || (_templateObject828 = _taggedTemplateLiteral52(["Summon Candy Heart"]))), expected());
  }
  if (have47()) {
    results.set($skill(_templateObject924 || (_templateObject924 = _taggedTemplateLiteral52(["Summon Party Favor"]))), expected2());
  }
  if (have48()) {
    results.set($skill(_templateObject1022 || (_templateObject1022 = _taggedTemplateLiteral52(["Summon Love Song"]))), expected3());
  }
  if (have49()) {
    results.set($skill(_templateObject1119 || (_templateObject1119 = _taggedTemplateLiteral52(["Summon BRICKOs"]))), expected4());
  }
  if (have50()) {
    results.set($skill(_templateObject1219 || (_templateObject1219 = _taggedTemplateLiteral52(["Summon Dice"]))), expected5());
  }
  if (have51()) {
    results.set($skill(_templateObject1317 || (_templateObject1317 = _taggedTemplateLiteral52(["Summon Resolutions"]))), expected6());
  }
  if (have52()) {
    results.set($skill(_templateObject1414 || (_templateObject1414 = _taggedTemplateLiteral52(["Summon Taffy"]))), expected7());
  }
  return results;
}
function bestLibramToCast() {
  var arr = Array.from(possibleLibramSummons().entries());
  if (!arr.length)
    return null;
  return maxBy(arr, function(_ref) {
    var _ref2 = _slicedToArray14(_ref, 2), itemMap = _ref2[1];
    return sum(Array.from(itemMap.entries()), function(_ref3) {
      var _ref4 = _slicedToArray14(_ref3, 2), item10 = _ref4[0], weight = _ref4[1];
      return weight * getSaleValue(item10);
    });
  })[0];
}
var _templateObject409, _templateObject2119, _templateObject3103, _templateObject477, _templateObject549, _templateObject639, _templateObject735, _templateObject828, _templateObject924, _templateObject1022, _templateObject1119, _templateObject1219, _templateObject1317, _templateObject1414;
var init_LibramSummon = __esm({
  "../../node_modules/libram/dist/resources/LibramSummon.js": function() {
    init_lib();
    init_template_string();
    init_utils();
    init_CandyHearts();
    init_DivineFavors();
    init_LoveSongs();
    init_Brickos();
    init_Gygaxian();
    init_Resolutions();
    init_PulledTaffy();
  }
});

// ../../node_modules/libram/dist/resources/index.js
var init_resources = __esm({
  "../../node_modules/libram/dist/resources/index.js": function() {
    init_Stickers();
    init_Bandersnatch();
    init_SpookyPutty();
    init_CrownOfThrones();
    init_LookingGlass();
    init_ObtuseAngel();
    init_StompingBoots();
    init_RainDoh();
    init_ReagnimatedGnome();
    init_Florist();
    init_JungMan();
    init_CrimboShrub();
    init_DNALab();
    init_WinterGarden();
    init_BarrelShrine();
    init_ChateauMantegna();
    init_DeckOfEveryCard();
    init_Dinseylandfill();
    init_MayoClinic();
    init_SourceTerminal();
    init_Witchess();
    init_AsdonMartin();
    init_Horsery();
    init_MummingTrunk();
    init_Pantogram();
    init_Robortender();
    init_Spacegate();
    init_TunnelOfLove();
    init_LatteLoversMembersMug();
    init_SongBoom();
    init_BeachComb();
    init_CampAway();
    init_Snapper();
    init_Cartography();
    init_Guzzlr();
    init_RetroCape();
    init_CrystalBall();
    init_DaylightShavings();
    init_AutumnAton();
    init_CombatLoversLocket();
    init_GreyGoose();
    init_JuneCleaver();
    init_TrainSet();
    init_AugustScepter();
    init_CinchoDeMayo();
    init_ClosedCircuitPayphone();
    init_CursedMonkeyPaw();
    init_putty_likes();
    init_LibramSummon();
  }
});

// ../../node_modules/libram/dist/ascend.js
function _createForOfIteratorHelper10(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray28(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function ownKeys7(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread7(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys7(Object(t), true).forEach(function(r2) {
      _defineProperty15(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys7(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _taggedTemplateLiteral53(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _defineProperties11(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey16(descriptor.key), descriptor);
  }
}
function _createClass11(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties11(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties11(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck11(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf3(subClass, superClass);
}
function _createSuper3(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct3();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf3(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf3(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn3(this, result);
  };
}
function _possibleConstructorReturn3(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized3(self2);
}
function _assertThisInitialized3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _wrapNativeSuper3(Class6) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper3 = function _wrapNativeSuper5(Class7) {
    if (Class7 === null || !_isNativeFunction3(Class7))
      return Class7;
    if (typeof Class7 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class7))
        return _cache.get(Class7);
      _cache.set(Class7, Wrapper);
    }
    function Wrapper() {
      return _construct3(Class7, arguments, _getPrototypeOf3(this).constructor);
    }
    Wrapper.prototype = Object.create(Class7.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf3(Wrapper, Class7);
  };
  return _wrapNativeSuper3(Class6);
}
function _construct3(Parent, args, Class6) {
  if (_isNativeReflectConstruct3()) {
    _construct3 = Reflect.construct.bind();
  } else {
    _construct3 = function _construct5(Parent2, args2, Class7) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class7)
        _setPrototypeOf3(instance, Class7.prototype);
      return instance;
    };
  }
  return _construct3.apply(null, arguments);
}
function _isNativeReflectConstruct3() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _isNativeFunction3(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf3(o, p) {
  _setPrototypeOf3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf3(o, p);
}
function _getPrototypeOf3(o) {
  _getPrototypeOf3 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf3(o);
}
function _defineProperty15(obj, key, value) {
  key = _toPropertyKey16(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey16(arg) {
  var key = _toPrimitive16(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive16(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _slicedToArray15(arr, i) {
  return _arrayWithHoles15(arr) || _iterableToArrayLimit15(arr, i) || _unsupportedIterableToArray28(arr, i) || _nonIterableRest15();
}
function _nonIterableRest15() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray28(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray28(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray28(o, minLen);
}
function _arrayLikeToArray28(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit15(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles15(arr) {
  if (Array.isArray(arr))
    return arr;
}
function permedSkills() {
  return new Map(Array.from(Object.entries((0, import_kolmafia59.getPermedSkills)())).map(function(_ref) {
    var _ref2 = _slicedToArray15(_ref, 2), skillName = _ref2[0], isHardcore = _ref2[1];
    return [(0, import_kolmafia59.toSkill)(skillName), isHardcore ? Lifestyle.hardcore : Lifestyle.softcore];
  }));
}
function signNameToId(moon) {
  return MoonSigns.indexOf(moon) + 1;
}
function signIdToName(id) {
  return MoonSigns[id - 1] || "None";
}
function inputToMoonId(moon, playerClass) {
  if (typeof moon === "number")
    return moon;
  var offset = function() {
    switch (playerClass.primestat) {
      case $stat(_templateObject478 || (_templateObject478 = _taggedTemplateLiteral53(["Muscle"]))):
        return 0;
      case $stat(_templateObject2120 || (_templateObject2120 = _taggedTemplateLiteral53(["Mysticality"]))):
        return 1;
      case $stat(_templateObject3104 || (_templateObject3104 = _taggedTemplateLiteral53(["Moxie"]))):
        return 2;
      default:
        throw new AscendError("unknown prime stat for ".concat(playerClass));
    }
  };
  var fromNormalInput = signNameToId(tc(moon));
  if (fromNormalInput > 0)
    return fromNormalInput;
  switch (moon.toLowerCase()) {
    case "degrassi":
    case "degrassi knoll":
    case "friendly degrassi knoll":
    case "knoll":
      return 1 + offset();
    case "canada":
    case "canadia":
    case "little canadia":
      return 4 + offset();
    case "gnomads":
    case "gnomish":
    case "gnomish gnomads camp":
      return 7 + offset();
    default:
      throw new AscendError("Invalid moon sign!");
  }
}
function isInValhalla() {
  var charPaneText = (0, import_kolmafia59.visitUrl)("charpane.php");
  var matches = charPaneText.match(/<img src="[^"]*\/otherimages\/inf_\w+\.gif">/);
  return matches !== null;
}
function ascend(options) {
  var DEFAULT_OPTIONS = {
    kolGender: get("defaultGenderOverride", "female") === "male" ? KolGender.male : KolGender.female,
    consumable: $item(_templateObject479 || (_templateObject479 = _taggedTemplateLiteral53(["astral six-pack"]))),
    pet: $item(_templateObject550 || (_templateObject550 = _taggedTemplateLiteral53(["none"])))
  };
  var _DEFAULT_OPTIONS$opti = _objectSpread7(_objectSpread7({}, DEFAULT_OPTIONS), options), path3 = _DEFAULT_OPTIONS$opti.path, playerClass = _DEFAULT_OPTIONS$opti.playerClass, lifestyle = _DEFAULT_OPTIONS$opti.lifestyle, kolGender = _DEFAULT_OPTIONS$opti.kolGender, moon = _DEFAULT_OPTIONS$opti.moon, consumable = _DEFAULT_OPTIONS$opti.consumable, pet = _DEFAULT_OPTIONS$opti.pet, permOptions = _DEFAULT_OPTIONS$opti.permOptions;
  if (playerClass.path !== (path3.avatar ? path3 : import_kolmafia59.Path.none)) {
    throw new AscendError(playerClass);
  }
  if (path3.id < 0)
    throw new AscendError(path3);
  var moonId = inputToMoonId(moon, playerClass);
  if (moonId < 1 || moonId > 9)
    throw new Error("Invalid moon ".concat(moon));
  if (!$items(_templateObject640 || (_templateObject640 = _taggedTemplateLiteral53(["none, astral six-pack, astral hot dog dinner, [10882]carton of astral energy drinks"]))).includes(consumable)) {
    throw new AscendError(consumable);
  }
  if (!$items(_templateObject736 || (_templateObject736 = _taggedTemplateLiteral53(["none, astral bludgeon, astral shield, astral chapeau, astral bracer, astral longbow, astral shorts, astral mace, astral trousers, astral ring, astral statuette, astral pistol, astral mask, astral pet sweater, astral shirt, astral belt"]))).includes(pet)) {
    throw new AscendError(pet);
  }
  var illegalSkill = permOptions ? Array.from(permOptions.permSkills.keys()).find(function(skill2) {
    return !skill2.permable || !(0, import_kolmafia59.haveSkill)(skill2);
  }) : void 0;
  if (illegalSkill) {
    throw new AscendError(illegalSkill);
  }
  if (!isInValhalla()) {
    (0, import_kolmafia59.visitUrl)("ascend.php?action=ascend&confirm=on&confirm2=on");
  }
  if (!isInValhalla()) {
    throw new AscendError();
  }
  (0, import_kolmafia59.visitUrl)("afterlife.php?action=pearlygates");
  if (consumable !== $item(_templateObject829 || (_templateObject829 = _taggedTemplateLiteral53(["none"])))) {
    (0, import_kolmafia59.visitUrl)("afterlife.php?action=buydeli&whichitem=".concat(consumable.id));
  }
  if (pet !== $item(_templateObject925 || (_templateObject925 = _taggedTemplateLiteral53(["none"])))) {
    (0, import_kolmafia59.visitUrl)("afterlife.php?action=buyarmory&whichitem=".concat(pet.id));
  }
  if (permOptions) {
    var currentPerms = permedSkills();
    var karma = get("bankedKarma");
    var _iterator = _createForOfIteratorHelper10(permOptions.permSkills.entries()), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var _currentPerms$get;
        var _step$value = _slicedToArray15(_step.value, 2), skill = _step$value[0], prospectivePermLevel = _step$value[1];
        var currentPermLevel = (_currentPerms$get = currentPerms.get(skill)) !== null && _currentPerms$get !== void 0 ? _currentPerms$get : Lifestyle.casual;
        if (prospectivePermLevel > currentPermLevel) {
          var expectedKarma = 100 * (prospectivePermLevel - currentPermLevel);
          if (karma < expectedKarma) {
            if (!permOptions.neverAbort)
              throw new AscendError(skill);
            continue;
          }
          karma -= expectedKarma;
          var permText = prospectivePermLevel === Lifestyle.hardcore ? "hcperm" : "scperm";
          (0, import_kolmafia59.visitUrl)("afterlife.php?action=".concat(permText, "&whichskill=").concat(skill.id));
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  (0, import_kolmafia59.visitUrl)("afterlife.php?action=ascend&confirmascend=1&whichsign=".concat(moonId, "&gender=").concat(kolGender, "&whichclass=").concat(playerClass.id, "&whichpath=").concat(path3.id, "&asctype=").concat(lifestyle, "&nopetok=1&noskillsok=1&lamepathok=1&lamesignok=1&pwd"), true);
}
function prepareAscension() {
  var _throwOnFail;
  var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, garden = _ref3.garden, eudora = _ref3.eudora, chateau = _ref3.chateau, throwOnFail = _ref3.throwOnFail;
  throwOnFail = (_throwOnFail = throwOnFail) !== null && _throwOnFail !== void 0 ? _throwOnFail : true;
  if (garden && !Object.getOwnPropertyNames((0, import_kolmafia59.getCampground)()).includes(garden)) {
    (0, import_kolmafia59.use)(import_kolmafia59.Item.get(garden));
    var gardenName = Object.getOwnPropertyNames((0, import_kolmafia59.getCampground)()).find(isGarden);
    if (gardenName !== garden && throwOnFail) {
      throw new AscensionPrepError(garden, gardenName);
    }
  }
  if (eudora && (0, import_kolmafia59.eudoraItem)().name !== eudora) {
    var eudoraNumber = 1 + eudorae.indexOf(eudora);
    if (!(0, import_kolmafia59.xpath)((0, import_kolmafia59.visitUrl)("account.php?tab=correspondence"), '//select[@name="whichpenpal"]/option/@value').includes(eudoraNumber.toString()) && throwOnFail) {
      throw new AscensionPrepError("Unable to swap eudora to ".concat(eudora, " because you are not subscribed to it."));
    } else {
      (0, import_kolmafia59.visitUrl)("account.php?actions[]=whichpenpal&whichpenpal=".concat(eudoraNumber, "&action=Update"), true);
    }
    if ((0, import_kolmafia59.eudoraItem)() !== import_kolmafia59.Item.get(eudora) && throwOnFail) {
      throw new AscensionPrepError(eudora, (0, import_kolmafia59.eudoraItem)());
    }
  }
  if (chateau && ChateauMantegna_exports.have()) {
    var desk = chateau.desk, ceiling = chateau.ceiling, nightstand = chateau.nightstand;
    if (ceiling && ChateauMantegna_exports.getCeiling() !== ceiling) {
      if (!ChateauMantegna_exports.changeCeiling(ceiling) && throwOnFail) {
        var _ChateauMantegna$getC;
        throw new AscensionPrepError(ceiling, (_ChateauMantegna$getC = ChateauMantegna_exports.getCeiling()) !== null && _ChateauMantegna$getC !== void 0 ? _ChateauMantegna$getC : "unknown");
      }
    }
    if (desk && ChateauMantegna_exports.getDesk() !== desk) {
      if (!ChateauMantegna_exports.changeDesk(desk) && throwOnFail) {
        var _ChateauMantegna$getD;
        throw new AscensionPrepError(desk, (_ChateauMantegna$getD = ChateauMantegna_exports.getDesk()) !== null && _ChateauMantegna$getD !== void 0 ? _ChateauMantegna$getD : "unknown");
      }
    }
    if (nightstand && ChateauMantegna_exports.getNightstand() !== nightstand) {
      if (!ChateauMantegna_exports.changeNightstand(nightstand) && throwOnFail) {
        var _ChateauMantegna$getN;
        throw new AscensionPrepError(nightstand, (_ChateauMantegna$getN = ChateauMantegna_exports.getNightstand()) !== null && _ChateauMantegna$getN !== void 0 ? _ChateauMantegna$getN : "unknown");
      }
    }
  }
}
var import_kolmafia59, _templateObject478, _templateObject2120, _templateObject3104, _templateObject479, _templateObject550, _templateObject640, _templateObject736, _templateObject829, _templateObject925, Lifestyle, KolGender, AscendError, gardens, eudorae, isGarden, isEudora, isDesk, isNightstand, isCeiling, AscensionPrepError, MoonSigns;
var init_ascend = __esm({
  "../../node_modules/libram/dist/ascend.js": function() {
    import_kolmafia59 = require("kolmafia");
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    (function(Lifestyle2) {
      Lifestyle2[Lifestyle2["casual"] = 1] = "casual";
      Lifestyle2[Lifestyle2["softcore"] = 2] = "softcore";
      Lifestyle2[Lifestyle2["normal"] = 2] = "normal";
      Lifestyle2[Lifestyle2["hardcore"] = 3] = "hardcore";
    })(Lifestyle || (Lifestyle = {}));
    (function(KolGender2) {
      KolGender2[KolGender2["male"] = 1] = "male";
      KolGender2[KolGender2["female"] = 2] = "female";
    })(KolGender || (KolGender = {}));
    AscendError = /* @__PURE__ */ function(_Error) {
      _inherits3(AscendError2, _Error);
      var _super = _createSuper3(AscendError2);
      function AscendError2(cause) {
        var _this;
        _classCallCheck11(this, AscendError2);
        if (!cause) {
          _this = _super.call(this, "Failed to ascend--do you have a pending trade offer?");
          _defineProperty15(_assertThisInitialized3(_this), "cause", void 0);
        } else if (cause instanceof import_kolmafia59.Skill) {
          var reason = cause.permable ? (0, import_kolmafia59.haveSkill)(cause) ? "too karmaically expensive" : "not a skill you currently know" : "unpermable";
          _this = _super.call(this, "Skill ".concat(cause, " is ").concat(reason, "!"));
          _defineProperty15(_assertThisInitialized3(_this), "cause", void 0);
        } else if (cause instanceof import_kolmafia59.Item) {
          _this = _super.call(this, "Invalid astral item: ".concat(cause, "!"));
          _defineProperty15(_assertThisInitialized3(_this), "cause", void 0);
        } else if (cause instanceof import_kolmafia59.Class) {
          _this = _super.call(this, "Invalid class ".concat(cause, " for this path!"));
          _defineProperty15(_assertThisInitialized3(_this), "cause", void 0);
        } else if (cause instanceof import_kolmafia59.Path) {
          _this = _super.call(this, "Invalid path ".concat(cause, "!"));
          _defineProperty15(_assertThisInitialized3(_this), "cause", void 0);
        } else {
          _this = _super.call(this, cause);
          _defineProperty15(_assertThisInitialized3(_this), "cause", void 0);
        }
        _this.cause = cause;
        return _possibleConstructorReturn3(_this);
      }
      return _createClass11(AscendError2);
    }(/* @__PURE__ */ _wrapNativeSuper3(Error));
    gardens = ["packet of pumpkin seeds", "Peppermint Pip Packet", "packet of dragon's teeth", "packet of beer seeds", "packet of winter seeds", "packet of thanksgarden seeds", "packet of tall grass seeds", "packet of mushroom spores", "packet of rock seeds"];
    eudorae = ["My Own Pen Pal kit", "GameInformPowerDailyPro subscription card", "Xi Receiver Unit", "New-You Club Membership Form", "Our Daily Candles\u2122 order form"];
    isGarden = function(x) {
      return arrayContains(x, gardens);
    };
    isEudora = function(x) {
      return arrayContains(x, eudorae);
    };
    isDesk = function(x) {
      return arrayContains(x, ChateauMantegna_exports.desks);
    };
    isNightstand = function(x) {
      return arrayContains(x, ChateauMantegna_exports.nightstands);
    };
    isCeiling = function(x) {
      return arrayContains(x, ChateauMantegna_exports.ceilings);
    };
    AscensionPrepError = /* @__PURE__ */ function(_Error2) {
      _inherits3(AscensionPrepError2, _Error2);
      var _super2 = _createSuper3(AscensionPrepError2);
      function AscensionPrepError2(cause, original) {
        var _this2;
        _classCallCheck11(this, AscensionPrepError2);
        if (isGarden(cause)) {
          _this2 = _super2.call(this, "Unable to swap garden to ".concat(cause, "; garden is currently ").concat(original, "."));
          _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0);
        } else if (isEudora(cause)) {
          _this2 = _super2.call(this, "Unable to swap eudora to ".concat(cause, "; eudora is currently ").concat(original, "."));
          _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0);
        } else if (isDesk(cause)) {
          _this2 = _super2.call(this, "Unable to swap chateau desk to ".concat(cause, "; desk is currently ").concat(original, "."));
          _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0);
        } else if (isNightstand(cause)) {
          _this2 = _super2.call(this, "Unable to swap chateau nightstand to ".concat(cause, "; nightstand is currently ").concat(original, "."));
          _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0);
        } else if (isCeiling(cause)) {
          _this2 = _super2.call(this, "Unable to swap chateau ceiling to ".concat(cause, "; ceiling is currently ").concat(original, "."));
          _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0);
        } else {
          _this2 = _super2.call(this, cause);
          _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0);
        }
        _this2.cause = cause;
        return _possibleConstructorReturn3(_this2);
      }
      return _createClass11(AscensionPrepError2);
    }(/* @__PURE__ */ _wrapNativeSuper3(Error));
    MoonSigns = ["Mongoose", "Wallaby", "Vole", "Platypus", "Opossum", "Marmot", "Wombat", "Blender", "Packrat"];
  }
});

// ../../node_modules/html-entities/lib/named-references.js
var require_named_references = __commonJS({
  "../../node_modules/html-entities/lib/named-references.js": function(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.bodyRegExps = {
      xml: /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
      html4: /&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
      html5: /&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g
    };
    exports.namedReferences = {
      xml: {
        entities: {
          "&lt;": "<",
          "&gt;": ">",
          "&quot;": '"',
          "&apos;": "'",
          "&amp;": "&"
        },
        characters: {
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&apos;",
          "&": "&amp;"
        }
      },
      html4: {
        entities: {
          "&apos;": "'",
          "&nbsp": "\xA0",
          "&nbsp;": "\xA0",
          "&iexcl": "\xA1",
          "&iexcl;": "\xA1",
          "&cent": "\xA2",
          "&cent;": "\xA2",
          "&pound": "\xA3",
          "&pound;": "\xA3",
          "&curren": "\xA4",
          "&curren;": "\xA4",
          "&yen": "\xA5",
          "&yen;": "\xA5",
          "&brvbar": "\xA6",
          "&brvbar;": "\xA6",
          "&sect": "\xA7",
          "&sect;": "\xA7",
          "&uml": "\xA8",
          "&uml;": "\xA8",
          "&copy": "\xA9",
          "&copy;": "\xA9",
          "&ordf": "\xAA",
          "&ordf;": "\xAA",
          "&laquo": "\xAB",
          "&laquo;": "\xAB",
          "&not": "\xAC",
          "&not;": "\xAC",
          "&shy": "\xAD",
          "&shy;": "\xAD",
          "&reg": "\xAE",
          "&reg;": "\xAE",
          "&macr": "\xAF",
          "&macr;": "\xAF",
          "&deg": "\xB0",
          "&deg;": "\xB0",
          "&plusmn": "\xB1",
          "&plusmn;": "\xB1",
          "&sup2": "\xB2",
          "&sup2;": "\xB2",
          "&sup3": "\xB3",
          "&sup3;": "\xB3",
          "&acute": "\xB4",
          "&acute;": "\xB4",
          "&micro": "\xB5",
          "&micro;": "\xB5",
          "&para": "\xB6",
          "&para;": "\xB6",
          "&middot": "\xB7",
          "&middot;": "\xB7",
          "&cedil": "\xB8",
          "&cedil;": "\xB8",
          "&sup1": "\xB9",
          "&sup1;": "\xB9",
          "&ordm": "\xBA",
          "&ordm;": "\xBA",
          "&raquo": "\xBB",
          "&raquo;": "\xBB",
          "&frac14": "\xBC",
          "&frac14;": "\xBC",
          "&frac12": "\xBD",
          "&frac12;": "\xBD",
          "&frac34": "\xBE",
          "&frac34;": "\xBE",
          "&iquest": "\xBF",
          "&iquest;": "\xBF",
          "&Agrave": "\xC0",
          "&Agrave;": "\xC0",
          "&Aacute": "\xC1",
          "&Aacute;": "\xC1",
          "&Acirc": "\xC2",
          "&Acirc;": "\xC2",
          "&Atilde": "\xC3",
          "&Atilde;": "\xC3",
          "&Auml": "\xC4",
          "&Auml;": "\xC4",
          "&Aring": "\xC5",
          "&Aring;": "\xC5",
          "&AElig": "\xC6",
          "&AElig;": "\xC6",
          "&Ccedil": "\xC7",
          "&Ccedil;": "\xC7",
          "&Egrave": "\xC8",
          "&Egrave;": "\xC8",
          "&Eacute": "\xC9",
          "&Eacute;": "\xC9",
          "&Ecirc": "\xCA",
          "&Ecirc;": "\xCA",
          "&Euml": "\xCB",
          "&Euml;": "\xCB",
          "&Igrave": "\xCC",
          "&Igrave;": "\xCC",
          "&Iacute": "\xCD",
          "&Iacute;": "\xCD",
          "&Icirc": "\xCE",
          "&Icirc;": "\xCE",
          "&Iuml": "\xCF",
          "&Iuml;": "\xCF",
          "&ETH": "\xD0",
          "&ETH;": "\xD0",
          "&Ntilde": "\xD1",
          "&Ntilde;": "\xD1",
          "&Ograve": "\xD2",
          "&Ograve;": "\xD2",
          "&Oacute": "\xD3",
          "&Oacute;": "\xD3",
          "&Ocirc": "\xD4",
          "&Ocirc;": "\xD4",
          "&Otilde": "\xD5",
          "&Otilde;": "\xD5",
          "&Ouml": "\xD6",
          "&Ouml;": "\xD6",
          "&times": "\xD7",
          "&times;": "\xD7",
          "&Oslash": "\xD8",
          "&Oslash;": "\xD8",
          "&Ugrave": "\xD9",
          "&Ugrave;": "\xD9",
          "&Uacute": "\xDA",
          "&Uacute;": "\xDA",
          "&Ucirc": "\xDB",
          "&Ucirc;": "\xDB",
          "&Uuml": "\xDC",
          "&Uuml;": "\xDC",
          "&Yacute": "\xDD",
          "&Yacute;": "\xDD",
          "&THORN": "\xDE",
          "&THORN;": "\xDE",
          "&szlig": "\xDF",
          "&szlig;": "\xDF",
          "&agrave": "\xE0",
          "&agrave;": "\xE0",
          "&aacute": "\xE1",
          "&aacute;": "\xE1",
          "&acirc": "\xE2",
          "&acirc;": "\xE2",
          "&atilde": "\xE3",
          "&atilde;": "\xE3",
          "&auml": "\xE4",
          "&auml;": "\xE4",
          "&aring": "\xE5",
          "&aring;": "\xE5",
          "&aelig": "\xE6",
          "&aelig;": "\xE6",
          "&ccedil": "\xE7",
          "&ccedil;": "\xE7",
          "&egrave": "\xE8",
          "&egrave;": "\xE8",
          "&eacute": "\xE9",
          "&eacute;": "\xE9",
          "&ecirc": "\xEA",
          "&ecirc;": "\xEA",
          "&euml": "\xEB",
          "&euml;": "\xEB",
          "&igrave": "\xEC",
          "&igrave;": "\xEC",
          "&iacute": "\xED",
          "&iacute;": "\xED",
          "&icirc": "\xEE",
          "&icirc;": "\xEE",
          "&iuml": "\xEF",
          "&iuml;": "\xEF",
          "&eth": "\xF0",
          "&eth;": "\xF0",
          "&ntilde": "\xF1",
          "&ntilde;": "\xF1",
          "&ograve": "\xF2",
          "&ograve;": "\xF2",
          "&oacute": "\xF3",
          "&oacute;": "\xF3",
          "&ocirc": "\xF4",
          "&ocirc;": "\xF4",
          "&otilde": "\xF5",
          "&otilde;": "\xF5",
          "&ouml": "\xF6",
          "&ouml;": "\xF6",
          "&divide": "\xF7",
          "&divide;": "\xF7",
          "&oslash": "\xF8",
          "&oslash;": "\xF8",
          "&ugrave": "\xF9",
          "&ugrave;": "\xF9",
          "&uacute": "\xFA",
          "&uacute;": "\xFA",
          "&ucirc": "\xFB",
          "&ucirc;": "\xFB",
          "&uuml": "\xFC",
          "&uuml;": "\xFC",
          "&yacute": "\xFD",
          "&yacute;": "\xFD",
          "&thorn": "\xFE",
          "&thorn;": "\xFE",
          "&yuml": "\xFF",
          "&yuml;": "\xFF",
          "&quot": '"',
          "&quot;": '"',
          "&amp": "&",
          "&amp;": "&",
          "&lt": "<",
          "&lt;": "<",
          "&gt": ">",
          "&gt;": ">",
          "&OElig;": "\u0152",
          "&oelig;": "\u0153",
          "&Scaron;": "\u0160",
          "&scaron;": "\u0161",
          "&Yuml;": "\u0178",
          "&circ;": "\u02C6",
          "&tilde;": "\u02DC",
          "&ensp;": "\u2002",
          "&emsp;": "\u2003",
          "&thinsp;": "\u2009",
          "&zwnj;": "\u200C",
          "&zwj;": "\u200D",
          "&lrm;": "\u200E",
          "&rlm;": "\u200F",
          "&ndash;": "\u2013",
          "&mdash;": "\u2014",
          "&lsquo;": "\u2018",
          "&rsquo;": "\u2019",
          "&sbquo;": "\u201A",
          "&ldquo;": "\u201C",
          "&rdquo;": "\u201D",
          "&bdquo;": "\u201E",
          "&dagger;": "\u2020",
          "&Dagger;": "\u2021",
          "&permil;": "\u2030",
          "&lsaquo;": "\u2039",
          "&rsaquo;": "\u203A",
          "&euro;": "\u20AC",
          "&fnof;": "\u0192",
          "&Alpha;": "\u0391",
          "&Beta;": "\u0392",
          "&Gamma;": "\u0393",
          "&Delta;": "\u0394",
          "&Epsilon;": "\u0395",
          "&Zeta;": "\u0396",
          "&Eta;": "\u0397",
          "&Theta;": "\u0398",
          "&Iota;": "\u0399",
          "&Kappa;": "\u039A",
          "&Lambda;": "\u039B",
          "&Mu;": "\u039C",
          "&Nu;": "\u039D",
          "&Xi;": "\u039E",
          "&Omicron;": "\u039F",
          "&Pi;": "\u03A0",
          "&Rho;": "\u03A1",
          "&Sigma;": "\u03A3",
          "&Tau;": "\u03A4",
          "&Upsilon;": "\u03A5",
          "&Phi;": "\u03A6",
          "&Chi;": "\u03A7",
          "&Psi;": "\u03A8",
          "&Omega;": "\u03A9",
          "&alpha;": "\u03B1",
          "&beta;": "\u03B2",
          "&gamma;": "\u03B3",
          "&delta;": "\u03B4",
          "&epsilon;": "\u03B5",
          "&zeta;": "\u03B6",
          "&eta;": "\u03B7",
          "&theta;": "\u03B8",
          "&iota;": "\u03B9",
          "&kappa;": "\u03BA",
          "&lambda;": "\u03BB",
          "&mu;": "\u03BC",
          "&nu;": "\u03BD",
          "&xi;": "\u03BE",
          "&omicron;": "\u03BF",
          "&pi;": "\u03C0",
          "&rho;": "\u03C1",
          "&sigmaf;": "\u03C2",
          "&sigma;": "\u03C3",
          "&tau;": "\u03C4",
          "&upsilon;": "\u03C5",
          "&phi;": "\u03C6",
          "&chi;": "\u03C7",
          "&psi;": "\u03C8",
          "&omega;": "\u03C9",
          "&thetasym;": "\u03D1",
          "&upsih;": "\u03D2",
          "&piv;": "\u03D6",
          "&bull;": "\u2022",
          "&hellip;": "\u2026",
          "&prime;": "\u2032",
          "&Prime;": "\u2033",
          "&oline;": "\u203E",
          "&frasl;": "\u2044",
          "&weierp;": "\u2118",
          "&image;": "\u2111",
          "&real;": "\u211C",
          "&trade;": "\u2122",
          "&alefsym;": "\u2135",
          "&larr;": "\u2190",
          "&uarr;": "\u2191",
          "&rarr;": "\u2192",
          "&darr;": "\u2193",
          "&harr;": "\u2194",
          "&crarr;": "\u21B5",
          "&lArr;": "\u21D0",
          "&uArr;": "\u21D1",
          "&rArr;": "\u21D2",
          "&dArr;": "\u21D3",
          "&hArr;": "\u21D4",
          "&forall;": "\u2200",
          "&part;": "\u2202",
          "&exist;": "\u2203",
          "&empty;": "\u2205",
          "&nabla;": "\u2207",
          "&isin;": "\u2208",
          "&notin;": "\u2209",
          "&ni;": "\u220B",
          "&prod;": "\u220F",
          "&sum;": "\u2211",
          "&minus;": "\u2212",
          "&lowast;": "\u2217",
          "&radic;": "\u221A",
          "&prop;": "\u221D",
          "&infin;": "\u221E",
          "&ang;": "\u2220",
          "&and;": "\u2227",
          "&or;": "\u2228",
          "&cap;": "\u2229",
          "&cup;": "\u222A",
          "&int;": "\u222B",
          "&there4;": "\u2234",
          "&sim;": "\u223C",
          "&cong;": "\u2245",
          "&asymp;": "\u2248",
          "&ne;": "\u2260",
          "&equiv;": "\u2261",
          "&le;": "\u2264",
          "&ge;": "\u2265",
          "&sub;": "\u2282",
          "&sup;": "\u2283",
          "&nsub;": "\u2284",
          "&sube;": "\u2286",
          "&supe;": "\u2287",
          "&oplus;": "\u2295",
          "&otimes;": "\u2297",
          "&perp;": "\u22A5",
          "&sdot;": "\u22C5",
          "&lceil;": "\u2308",
          "&rceil;": "\u2309",
          "&lfloor;": "\u230A",
          "&rfloor;": "\u230B",
          "&lang;": "\u2329",
          "&rang;": "\u232A",
          "&loz;": "\u25CA",
          "&spades;": "\u2660",
          "&clubs;": "\u2663",
          "&hearts;": "\u2665",
          "&diams;": "\u2666"
        },
        characters: {
          "'": "&apos;",
          "\xA0": "&nbsp;",
          "\xA1": "&iexcl;",
          "\xA2": "&cent;",
          "\xA3": "&pound;",
          "\xA4": "&curren;",
          "\xA5": "&yen;",
          "\xA6": "&brvbar;",
          "\xA7": "&sect;",
          "\xA8": "&uml;",
          "\xA9": "&copy;",
          "\xAA": "&ordf;",
          "\xAB": "&laquo;",
          "\xAC": "&not;",
          "\xAD": "&shy;",
          "\xAE": "&reg;",
          "\xAF": "&macr;",
          "\xB0": "&deg;",
          "\xB1": "&plusmn;",
          "\xB2": "&sup2;",
          "\xB3": "&sup3;",
          "\xB4": "&acute;",
          "\xB5": "&micro;",
          "\xB6": "&para;",
          "\xB7": "&middot;",
          "\xB8": "&cedil;",
          "\xB9": "&sup1;",
          "\xBA": "&ordm;",
          "\xBB": "&raquo;",
          "\xBC": "&frac14;",
          "\xBD": "&frac12;",
          "\xBE": "&frac34;",
          "\xBF": "&iquest;",
          "\xC0": "&Agrave;",
          "\xC1": "&Aacute;",
          "\xC2": "&Acirc;",
          "\xC3": "&Atilde;",
          "\xC4": "&Auml;",
          "\xC5": "&Aring;",
          "\xC6": "&AElig;",
          "\xC7": "&Ccedil;",
          "\xC8": "&Egrave;",
          "\xC9": "&Eacute;",
          "\xCA": "&Ecirc;",
          "\xCB": "&Euml;",
          "\xCC": "&Igrave;",
          "\xCD": "&Iacute;",
          "\xCE": "&Icirc;",
          "\xCF": "&Iuml;",
          "\xD0": "&ETH;",
          "\xD1": "&Ntilde;",
          "\xD2": "&Ograve;",
          "\xD3": "&Oacute;",
          "\xD4": "&Ocirc;",
          "\xD5": "&Otilde;",
          "\xD6": "&Ouml;",
          "\xD7": "&times;",
          "\xD8": "&Oslash;",
          "\xD9": "&Ugrave;",
          "\xDA": "&Uacute;",
          "\xDB": "&Ucirc;",
          "\xDC": "&Uuml;",
          "\xDD": "&Yacute;",
          "\xDE": "&THORN;",
          "\xDF": "&szlig;",
          "\xE0": "&agrave;",
          "\xE1": "&aacute;",
          "\xE2": "&acirc;",
          "\xE3": "&atilde;",
          "\xE4": "&auml;",
          "\xE5": "&aring;",
          "\xE6": "&aelig;",
          "\xE7": "&ccedil;",
          "\xE8": "&egrave;",
          "\xE9": "&eacute;",
          "\xEA": "&ecirc;",
          "\xEB": "&euml;",
          "\xEC": "&igrave;",
          "\xED": "&iacute;",
          "\xEE": "&icirc;",
          "\xEF": "&iuml;",
          "\xF0": "&eth;",
          "\xF1": "&ntilde;",
          "\xF2": "&ograve;",
          "\xF3": "&oacute;",
          "\xF4": "&ocirc;",
          "\xF5": "&otilde;",
          "\xF6": "&ouml;",
          "\xF7": "&divide;",
          "\xF8": "&oslash;",
          "\xF9": "&ugrave;",
          "\xFA": "&uacute;",
          "\xFB": "&ucirc;",
          "\xFC": "&uuml;",
          "\xFD": "&yacute;",
          "\xFE": "&thorn;",
          "\xFF": "&yuml;",
          '"': "&quot;",
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          "\u0152": "&OElig;",
          "\u0153": "&oelig;",
          "\u0160": "&Scaron;",
          "\u0161": "&scaron;",
          "\u0178": "&Yuml;",
          "\u02C6": "&circ;",
          "\u02DC": "&tilde;",
          "\u2002": "&ensp;",
          "\u2003": "&emsp;",
          "\u2009": "&thinsp;",
          "\u200C": "&zwnj;",
          "\u200D": "&zwj;",
          "\u200E": "&lrm;",
          "\u200F": "&rlm;",
          "\u2013": "&ndash;",
          "\u2014": "&mdash;",
          "\u2018": "&lsquo;",
          "\u2019": "&rsquo;",
          "\u201A": "&sbquo;",
          "\u201C": "&ldquo;",
          "\u201D": "&rdquo;",
          "\u201E": "&bdquo;",
          "\u2020": "&dagger;",
          "\u2021": "&Dagger;",
          "\u2030": "&permil;",
          "\u2039": "&lsaquo;",
          "\u203A": "&rsaquo;",
          "\u20AC": "&euro;",
          "\u0192": "&fnof;",
          "\u0391": "&Alpha;",
          "\u0392": "&Beta;",
          "\u0393": "&Gamma;",
          "\u0394": "&Delta;",
          "\u0395": "&Epsilon;",
          "\u0396": "&Zeta;",
          "\u0397": "&Eta;",
          "\u0398": "&Theta;",
          "\u0399": "&Iota;",
          "\u039A": "&Kappa;",
          "\u039B": "&Lambda;",
          "\u039C": "&Mu;",
          "\u039D": "&Nu;",
          "\u039E": "&Xi;",
          "\u039F": "&Omicron;",
          "\u03A0": "&Pi;",
          "\u03A1": "&Rho;",
          "\u03A3": "&Sigma;",
          "\u03A4": "&Tau;",
          "\u03A5": "&Upsilon;",
          "\u03A6": "&Phi;",
          "\u03A7": "&Chi;",
          "\u03A8": "&Psi;",
          "\u03A9": "&Omega;",
          "\u03B1": "&alpha;",
          "\u03B2": "&beta;",
          "\u03B3": "&gamma;",
          "\u03B4": "&delta;",
          "\u03B5": "&epsilon;",
          "\u03B6": "&zeta;",
          "\u03B7": "&eta;",
          "\u03B8": "&theta;",
          "\u03B9": "&iota;",
          "\u03BA": "&kappa;",
          "\u03BB": "&lambda;",
          "\u03BC": "&mu;",
          "\u03BD": "&nu;",
          "\u03BE": "&xi;",
          "\u03BF": "&omicron;",
          "\u03C0": "&pi;",
          "\u03C1": "&rho;",
          "\u03C2": "&sigmaf;",
          "\u03C3": "&sigma;",
          "\u03C4": "&tau;",
          "\u03C5": "&upsilon;",
          "\u03C6": "&phi;",
          "\u03C7": "&chi;",
          "\u03C8": "&psi;",
          "\u03C9": "&omega;",
          "\u03D1": "&thetasym;",
          "\u03D2": "&upsih;",
          "\u03D6": "&piv;",
          "\u2022": "&bull;",
          "\u2026": "&hellip;",
          "\u2032": "&prime;",
          "\u2033": "&Prime;",
          "\u203E": "&oline;",
          "\u2044": "&frasl;",
          "\u2118": "&weierp;",
          "\u2111": "&image;",
          "\u211C": "&real;",
          "\u2122": "&trade;",
          "\u2135": "&alefsym;",
          "\u2190": "&larr;",
          "\u2191": "&uarr;",
          "\u2192": "&rarr;",
          "\u2193": "&darr;",
          "\u2194": "&harr;",
          "\u21B5": "&crarr;",
          "\u21D0": "&lArr;",
          "\u21D1": "&uArr;",
          "\u21D2": "&rArr;",
          "\u21D3": "&dArr;",
          "\u21D4": "&hArr;",
          "\u2200": "&forall;",
          "\u2202": "&part;",
          "\u2203": "&exist;",
          "\u2205": "&empty;",
          "\u2207": "&nabla;",
          "\u2208": "&isin;",
          "\u2209": "&notin;",
          "\u220B": "&ni;",
          "\u220F": "&prod;",
          "\u2211": "&sum;",
          "\u2212": "&minus;",
          "\u2217": "&lowast;",
          "\u221A": "&radic;",
          "\u221D": "&prop;",
          "\u221E": "&infin;",
          "\u2220": "&ang;",
          "\u2227": "&and;",
          "\u2228": "&or;",
          "\u2229": "&cap;",
          "\u222A": "&cup;",
          "\u222B": "&int;",
          "\u2234": "&there4;",
          "\u223C": "&sim;",
          "\u2245": "&cong;",
          "\u2248": "&asymp;",
          "\u2260": "&ne;",
          "\u2261": "&equiv;",
          "\u2264": "&le;",
          "\u2265": "&ge;",
          "\u2282": "&sub;",
          "\u2283": "&sup;",
          "\u2284": "&nsub;",
          "\u2286": "&sube;",
          "\u2287": "&supe;",
          "\u2295": "&oplus;",
          "\u2297": "&otimes;",
          "\u22A5": "&perp;",
          "\u22C5": "&sdot;",
          "\u2308": "&lceil;",
          "\u2309": "&rceil;",
          "\u230A": "&lfloor;",
          "\u230B": "&rfloor;",
          "\u2329": "&lang;",
          "\u232A": "&rang;",
          "\u25CA": "&loz;",
          "\u2660": "&spades;",
          "\u2663": "&clubs;",
          "\u2665": "&hearts;",
          "\u2666": "&diams;"
        }
      },
      html5: {
        entities: {
          "&AElig": "\xC6",
          "&AElig;": "\xC6",
          "&AMP": "&",
          "&AMP;": "&",
          "&Aacute": "\xC1",
          "&Aacute;": "\xC1",
          "&Abreve;": "\u0102",
          "&Acirc": "\xC2",
          "&Acirc;": "\xC2",
          "&Acy;": "\u0410",
          "&Afr;": "\uD835\uDD04",
          "&Agrave": "\xC0",
          "&Agrave;": "\xC0",
          "&Alpha;": "\u0391",
          "&Amacr;": "\u0100",
          "&And;": "\u2A53",
          "&Aogon;": "\u0104",
          "&Aopf;": "\uD835\uDD38",
          "&ApplyFunction;": "\u2061",
          "&Aring": "\xC5",
          "&Aring;": "\xC5",
          "&Ascr;": "\uD835\uDC9C",
          "&Assign;": "\u2254",
          "&Atilde": "\xC3",
          "&Atilde;": "\xC3",
          "&Auml": "\xC4",
          "&Auml;": "\xC4",
          "&Backslash;": "\u2216",
          "&Barv;": "\u2AE7",
          "&Barwed;": "\u2306",
          "&Bcy;": "\u0411",
          "&Because;": "\u2235",
          "&Bernoullis;": "\u212C",
          "&Beta;": "\u0392",
          "&Bfr;": "\uD835\uDD05",
          "&Bopf;": "\uD835\uDD39",
          "&Breve;": "\u02D8",
          "&Bscr;": "\u212C",
          "&Bumpeq;": "\u224E",
          "&CHcy;": "\u0427",
          "&COPY": "\xA9",
          "&COPY;": "\xA9",
          "&Cacute;": "\u0106",
          "&Cap;": "\u22D2",
          "&CapitalDifferentialD;": "\u2145",
          "&Cayleys;": "\u212D",
          "&Ccaron;": "\u010C",
          "&Ccedil": "\xC7",
          "&Ccedil;": "\xC7",
          "&Ccirc;": "\u0108",
          "&Cconint;": "\u2230",
          "&Cdot;": "\u010A",
          "&Cedilla;": "\xB8",
          "&CenterDot;": "\xB7",
          "&Cfr;": "\u212D",
          "&Chi;": "\u03A7",
          "&CircleDot;": "\u2299",
          "&CircleMinus;": "\u2296",
          "&CirclePlus;": "\u2295",
          "&CircleTimes;": "\u2297",
          "&ClockwiseContourIntegral;": "\u2232",
          "&CloseCurlyDoubleQuote;": "\u201D",
          "&CloseCurlyQuote;": "\u2019",
          "&Colon;": "\u2237",
          "&Colone;": "\u2A74",
          "&Congruent;": "\u2261",
          "&Conint;": "\u222F",
          "&ContourIntegral;": "\u222E",
          "&Copf;": "\u2102",
          "&Coproduct;": "\u2210",
          "&CounterClockwiseContourIntegral;": "\u2233",
          "&Cross;": "\u2A2F",
          "&Cscr;": "\uD835\uDC9E",
          "&Cup;": "\u22D3",
          "&CupCap;": "\u224D",
          "&DD;": "\u2145",
          "&DDotrahd;": "\u2911",
          "&DJcy;": "\u0402",
          "&DScy;": "\u0405",
          "&DZcy;": "\u040F",
          "&Dagger;": "\u2021",
          "&Darr;": "\u21A1",
          "&Dashv;": "\u2AE4",
          "&Dcaron;": "\u010E",
          "&Dcy;": "\u0414",
          "&Del;": "\u2207",
          "&Delta;": "\u0394",
          "&Dfr;": "\uD835\uDD07",
          "&DiacriticalAcute;": "\xB4",
          "&DiacriticalDot;": "\u02D9",
          "&DiacriticalDoubleAcute;": "\u02DD",
          "&DiacriticalGrave;": "`",
          "&DiacriticalTilde;": "\u02DC",
          "&Diamond;": "\u22C4",
          "&DifferentialD;": "\u2146",
          "&Dopf;": "\uD835\uDD3B",
          "&Dot;": "\xA8",
          "&DotDot;": "\u20DC",
          "&DotEqual;": "\u2250",
          "&DoubleContourIntegral;": "\u222F",
          "&DoubleDot;": "\xA8",
          "&DoubleDownArrow;": "\u21D3",
          "&DoubleLeftArrow;": "\u21D0",
          "&DoubleLeftRightArrow;": "\u21D4",
          "&DoubleLeftTee;": "\u2AE4",
          "&DoubleLongLeftArrow;": "\u27F8",
          "&DoubleLongLeftRightArrow;": "\u27FA",
          "&DoubleLongRightArrow;": "\u27F9",
          "&DoubleRightArrow;": "\u21D2",
          "&DoubleRightTee;": "\u22A8",
          "&DoubleUpArrow;": "\u21D1",
          "&DoubleUpDownArrow;": "\u21D5",
          "&DoubleVerticalBar;": "\u2225",
          "&DownArrow;": "\u2193",
          "&DownArrowBar;": "\u2913",
          "&DownArrowUpArrow;": "\u21F5",
          "&DownBreve;": "\u0311",
          "&DownLeftRightVector;": "\u2950",
          "&DownLeftTeeVector;": "\u295E",
          "&DownLeftVector;": "\u21BD",
          "&DownLeftVectorBar;": "\u2956",
          "&DownRightTeeVector;": "\u295F",
          "&DownRightVector;": "\u21C1",
          "&DownRightVectorBar;": "\u2957",
          "&DownTee;": "\u22A4",
          "&DownTeeArrow;": "\u21A7",
          "&Downarrow;": "\u21D3",
          "&Dscr;": "\uD835\uDC9F",
          "&Dstrok;": "\u0110",
          "&ENG;": "\u014A",
          "&ETH": "\xD0",
          "&ETH;": "\xD0",
          "&Eacute": "\xC9",
          "&Eacute;": "\xC9",
          "&Ecaron;": "\u011A",
          "&Ecirc": "\xCA",
          "&Ecirc;": "\xCA",
          "&Ecy;": "\u042D",
          "&Edot;": "\u0116",
          "&Efr;": "\uD835\uDD08",
          "&Egrave": "\xC8",
          "&Egrave;": "\xC8",
          "&Element;": "\u2208",
          "&Emacr;": "\u0112",
          "&EmptySmallSquare;": "\u25FB",
          "&EmptyVerySmallSquare;": "\u25AB",
          "&Eogon;": "\u0118",
          "&Eopf;": "\uD835\uDD3C",
          "&Epsilon;": "\u0395",
          "&Equal;": "\u2A75",
          "&EqualTilde;": "\u2242",
          "&Equilibrium;": "\u21CC",
          "&Escr;": "\u2130",
          "&Esim;": "\u2A73",
          "&Eta;": "\u0397",
          "&Euml": "\xCB",
          "&Euml;": "\xCB",
          "&Exists;": "\u2203",
          "&ExponentialE;": "\u2147",
          "&Fcy;": "\u0424",
          "&Ffr;": "\uD835\uDD09",
          "&FilledSmallSquare;": "\u25FC",
          "&FilledVerySmallSquare;": "\u25AA",
          "&Fopf;": "\uD835\uDD3D",
          "&ForAll;": "\u2200",
          "&Fouriertrf;": "\u2131",
          "&Fscr;": "\u2131",
          "&GJcy;": "\u0403",
          "&GT": ">",
          "&GT;": ">",
          "&Gamma;": "\u0393",
          "&Gammad;": "\u03DC",
          "&Gbreve;": "\u011E",
          "&Gcedil;": "\u0122",
          "&Gcirc;": "\u011C",
          "&Gcy;": "\u0413",
          "&Gdot;": "\u0120",
          "&Gfr;": "\uD835\uDD0A",
          "&Gg;": "\u22D9",
          "&Gopf;": "\uD835\uDD3E",
          "&GreaterEqual;": "\u2265",
          "&GreaterEqualLess;": "\u22DB",
          "&GreaterFullEqual;": "\u2267",
          "&GreaterGreater;": "\u2AA2",
          "&GreaterLess;": "\u2277",
          "&GreaterSlantEqual;": "\u2A7E",
          "&GreaterTilde;": "\u2273",
          "&Gscr;": "\uD835\uDCA2",
          "&Gt;": "\u226B",
          "&HARDcy;": "\u042A",
          "&Hacek;": "\u02C7",
          "&Hat;": "^",
          "&Hcirc;": "\u0124",
          "&Hfr;": "\u210C",
          "&HilbertSpace;": "\u210B",
          "&Hopf;": "\u210D",
          "&HorizontalLine;": "\u2500",
          "&Hscr;": "\u210B",
          "&Hstrok;": "\u0126",
          "&HumpDownHump;": "\u224E",
          "&HumpEqual;": "\u224F",
          "&IEcy;": "\u0415",
          "&IJlig;": "\u0132",
          "&IOcy;": "\u0401",
          "&Iacute": "\xCD",
          "&Iacute;": "\xCD",
          "&Icirc": "\xCE",
          "&Icirc;": "\xCE",
          "&Icy;": "\u0418",
          "&Idot;": "\u0130",
          "&Ifr;": "\u2111",
          "&Igrave": "\xCC",
          "&Igrave;": "\xCC",
          "&Im;": "\u2111",
          "&Imacr;": "\u012A",
          "&ImaginaryI;": "\u2148",
          "&Implies;": "\u21D2",
          "&Int;": "\u222C",
          "&Integral;": "\u222B",
          "&Intersection;": "\u22C2",
          "&InvisibleComma;": "\u2063",
          "&InvisibleTimes;": "\u2062",
          "&Iogon;": "\u012E",
          "&Iopf;": "\uD835\uDD40",
          "&Iota;": "\u0399",
          "&Iscr;": "\u2110",
          "&Itilde;": "\u0128",
          "&Iukcy;": "\u0406",
          "&Iuml": "\xCF",
          "&Iuml;": "\xCF",
          "&Jcirc;": "\u0134",
          "&Jcy;": "\u0419",
          "&Jfr;": "\uD835\uDD0D",
          "&Jopf;": "\uD835\uDD41",
          "&Jscr;": "\uD835\uDCA5",
          "&Jsercy;": "\u0408",
          "&Jukcy;": "\u0404",
          "&KHcy;": "\u0425",
          "&KJcy;": "\u040C",
          "&Kappa;": "\u039A",
          "&Kcedil;": "\u0136",
          "&Kcy;": "\u041A",
          "&Kfr;": "\uD835\uDD0E",
          "&Kopf;": "\uD835\uDD42",
          "&Kscr;": "\uD835\uDCA6",
          "&LJcy;": "\u0409",
          "&LT": "<",
          "&LT;": "<",
          "&Lacute;": "\u0139",
          "&Lambda;": "\u039B",
          "&Lang;": "\u27EA",
          "&Laplacetrf;": "\u2112",
          "&Larr;": "\u219E",
          "&Lcaron;": "\u013D",
          "&Lcedil;": "\u013B",
          "&Lcy;": "\u041B",
          "&LeftAngleBracket;": "\u27E8",
          "&LeftArrow;": "\u2190",
          "&LeftArrowBar;": "\u21E4",
          "&LeftArrowRightArrow;": "\u21C6",
          "&LeftCeiling;": "\u2308",
          "&LeftDoubleBracket;": "\u27E6",
          "&LeftDownTeeVector;": "\u2961",
          "&LeftDownVector;": "\u21C3",
          "&LeftDownVectorBar;": "\u2959",
          "&LeftFloor;": "\u230A",
          "&LeftRightArrow;": "\u2194",
          "&LeftRightVector;": "\u294E",
          "&LeftTee;": "\u22A3",
          "&LeftTeeArrow;": "\u21A4",
          "&LeftTeeVector;": "\u295A",
          "&LeftTriangle;": "\u22B2",
          "&LeftTriangleBar;": "\u29CF",
          "&LeftTriangleEqual;": "\u22B4",
          "&LeftUpDownVector;": "\u2951",
          "&LeftUpTeeVector;": "\u2960",
          "&LeftUpVector;": "\u21BF",
          "&LeftUpVectorBar;": "\u2958",
          "&LeftVector;": "\u21BC",
          "&LeftVectorBar;": "\u2952",
          "&Leftarrow;": "\u21D0",
          "&Leftrightarrow;": "\u21D4",
          "&LessEqualGreater;": "\u22DA",
          "&LessFullEqual;": "\u2266",
          "&LessGreater;": "\u2276",
          "&LessLess;": "\u2AA1",
          "&LessSlantEqual;": "\u2A7D",
          "&LessTilde;": "\u2272",
          "&Lfr;": "\uD835\uDD0F",
          "&Ll;": "\u22D8",
          "&Lleftarrow;": "\u21DA",
          "&Lmidot;": "\u013F",
          "&LongLeftArrow;": "\u27F5",
          "&LongLeftRightArrow;": "\u27F7",
          "&LongRightArrow;": "\u27F6",
          "&Longleftarrow;": "\u27F8",
          "&Longleftrightarrow;": "\u27FA",
          "&Longrightarrow;": "\u27F9",
          "&Lopf;": "\uD835\uDD43",
          "&LowerLeftArrow;": "\u2199",
          "&LowerRightArrow;": "\u2198",
          "&Lscr;": "\u2112",
          "&Lsh;": "\u21B0",
          "&Lstrok;": "\u0141",
          "&Lt;": "\u226A",
          "&Map;": "\u2905",
          "&Mcy;": "\u041C",
          "&MediumSpace;": "\u205F",
          "&Mellintrf;": "\u2133",
          "&Mfr;": "\uD835\uDD10",
          "&MinusPlus;": "\u2213",
          "&Mopf;": "\uD835\uDD44",
          "&Mscr;": "\u2133",
          "&Mu;": "\u039C",
          "&NJcy;": "\u040A",
          "&Nacute;": "\u0143",
          "&Ncaron;": "\u0147",
          "&Ncedil;": "\u0145",
          "&Ncy;": "\u041D",
          "&NegativeMediumSpace;": "\u200B",
          "&NegativeThickSpace;": "\u200B",
          "&NegativeThinSpace;": "\u200B",
          "&NegativeVeryThinSpace;": "\u200B",
          "&NestedGreaterGreater;": "\u226B",
          "&NestedLessLess;": "\u226A",
          "&NewLine;": "\n",
          "&Nfr;": "\uD835\uDD11",
          "&NoBreak;": "\u2060",
          "&NonBreakingSpace;": "\xA0",
          "&Nopf;": "\u2115",
          "&Not;": "\u2AEC",
          "&NotCongruent;": "\u2262",
          "&NotCupCap;": "\u226D",
          "&NotDoubleVerticalBar;": "\u2226",
          "&NotElement;": "\u2209",
          "&NotEqual;": "\u2260",
          "&NotEqualTilde;": "\u2242\u0338",
          "&NotExists;": "\u2204",
          "&NotGreater;": "\u226F",
          "&NotGreaterEqual;": "\u2271",
          "&NotGreaterFullEqual;": "\u2267\u0338",
          "&NotGreaterGreater;": "\u226B\u0338",
          "&NotGreaterLess;": "\u2279",
          "&NotGreaterSlantEqual;": "\u2A7E\u0338",
          "&NotGreaterTilde;": "\u2275",
          "&NotHumpDownHump;": "\u224E\u0338",
          "&NotHumpEqual;": "\u224F\u0338",
          "&NotLeftTriangle;": "\u22EA",
          "&NotLeftTriangleBar;": "\u29CF\u0338",
          "&NotLeftTriangleEqual;": "\u22EC",
          "&NotLess;": "\u226E",
          "&NotLessEqual;": "\u2270",
          "&NotLessGreater;": "\u2278",
          "&NotLessLess;": "\u226A\u0338",
          "&NotLessSlantEqual;": "\u2A7D\u0338",
          "&NotLessTilde;": "\u2274",
          "&NotNestedGreaterGreater;": "\u2AA2\u0338",
          "&NotNestedLessLess;": "\u2AA1\u0338",
          "&NotPrecedes;": "\u2280",
          "&NotPrecedesEqual;": "\u2AAF\u0338",
          "&NotPrecedesSlantEqual;": "\u22E0",
          "&NotReverseElement;": "\u220C",
          "&NotRightTriangle;": "\u22EB",
          "&NotRightTriangleBar;": "\u29D0\u0338",
          "&NotRightTriangleEqual;": "\u22ED",
          "&NotSquareSubset;": "\u228F\u0338",
          "&NotSquareSubsetEqual;": "\u22E2",
          "&NotSquareSuperset;": "\u2290\u0338",
          "&NotSquareSupersetEqual;": "\u22E3",
          "&NotSubset;": "\u2282\u20D2",
          "&NotSubsetEqual;": "\u2288",
          "&NotSucceeds;": "\u2281",
          "&NotSucceedsEqual;": "\u2AB0\u0338",
          "&NotSucceedsSlantEqual;": "\u22E1",
          "&NotSucceedsTilde;": "\u227F\u0338",
          "&NotSuperset;": "\u2283\u20D2",
          "&NotSupersetEqual;": "\u2289",
          "&NotTilde;": "\u2241",
          "&NotTildeEqual;": "\u2244",
          "&NotTildeFullEqual;": "\u2247",
          "&NotTildeTilde;": "\u2249",
          "&NotVerticalBar;": "\u2224",
          "&Nscr;": "\uD835\uDCA9",
          "&Ntilde": "\xD1",
          "&Ntilde;": "\xD1",
          "&Nu;": "\u039D",
          "&OElig;": "\u0152",
          "&Oacute": "\xD3",
          "&Oacute;": "\xD3",
          "&Ocirc": "\xD4",
          "&Ocirc;": "\xD4",
          "&Ocy;": "\u041E",
          "&Odblac;": "\u0150",
          "&Ofr;": "\uD835\uDD12",
          "&Ograve": "\xD2",
          "&Ograve;": "\xD2",
          "&Omacr;": "\u014C",
          "&Omega;": "\u03A9",
          "&Omicron;": "\u039F",
          "&Oopf;": "\uD835\uDD46",
          "&OpenCurlyDoubleQuote;": "\u201C",
          "&OpenCurlyQuote;": "\u2018",
          "&Or;": "\u2A54",
          "&Oscr;": "\uD835\uDCAA",
          "&Oslash": "\xD8",
          "&Oslash;": "\xD8",
          "&Otilde": "\xD5",
          "&Otilde;": "\xD5",
          "&Otimes;": "\u2A37",
          "&Ouml": "\xD6",
          "&Ouml;": "\xD6",
          "&OverBar;": "\u203E",
          "&OverBrace;": "\u23DE",
          "&OverBracket;": "\u23B4",
          "&OverParenthesis;": "\u23DC",
          "&PartialD;": "\u2202",
          "&Pcy;": "\u041F",
          "&Pfr;": "\uD835\uDD13",
          "&Phi;": "\u03A6",
          "&Pi;": "\u03A0",
          "&PlusMinus;": "\xB1",
          "&Poincareplane;": "\u210C",
          "&Popf;": "\u2119",
          "&Pr;": "\u2ABB",
          "&Precedes;": "\u227A",
          "&PrecedesEqual;": "\u2AAF",
          "&PrecedesSlantEqual;": "\u227C",
          "&PrecedesTilde;": "\u227E",
          "&Prime;": "\u2033",
          "&Product;": "\u220F",
          "&Proportion;": "\u2237",
          "&Proportional;": "\u221D",
          "&Pscr;": "\uD835\uDCAB",
          "&Psi;": "\u03A8",
          "&QUOT": '"',
          "&QUOT;": '"',
          "&Qfr;": "\uD835\uDD14",
          "&Qopf;": "\u211A",
          "&Qscr;": "\uD835\uDCAC",
          "&RBarr;": "\u2910",
          "&REG": "\xAE",
          "&REG;": "\xAE",
          "&Racute;": "\u0154",
          "&Rang;": "\u27EB",
          "&Rarr;": "\u21A0",
          "&Rarrtl;": "\u2916",
          "&Rcaron;": "\u0158",
          "&Rcedil;": "\u0156",
          "&Rcy;": "\u0420",
          "&Re;": "\u211C",
          "&ReverseElement;": "\u220B",
          "&ReverseEquilibrium;": "\u21CB",
          "&ReverseUpEquilibrium;": "\u296F",
          "&Rfr;": "\u211C",
          "&Rho;": "\u03A1",
          "&RightAngleBracket;": "\u27E9",
          "&RightArrow;": "\u2192",
          "&RightArrowBar;": "\u21E5",
          "&RightArrowLeftArrow;": "\u21C4",
          "&RightCeiling;": "\u2309",
          "&RightDoubleBracket;": "\u27E7",
          "&RightDownTeeVector;": "\u295D",
          "&RightDownVector;": "\u21C2",
          "&RightDownVectorBar;": "\u2955",
          "&RightFloor;": "\u230B",
          "&RightTee;": "\u22A2",
          "&RightTeeArrow;": "\u21A6",
          "&RightTeeVector;": "\u295B",
          "&RightTriangle;": "\u22B3",
          "&RightTriangleBar;": "\u29D0",
          "&RightTriangleEqual;": "\u22B5",
          "&RightUpDownVector;": "\u294F",
          "&RightUpTeeVector;": "\u295C",
          "&RightUpVector;": "\u21BE",
          "&RightUpVectorBar;": "\u2954",
          "&RightVector;": "\u21C0",
          "&RightVectorBar;": "\u2953",
          "&Rightarrow;": "\u21D2",
          "&Ropf;": "\u211D",
          "&RoundImplies;": "\u2970",
          "&Rrightarrow;": "\u21DB",
          "&Rscr;": "\u211B",
          "&Rsh;": "\u21B1",
          "&RuleDelayed;": "\u29F4",
          "&SHCHcy;": "\u0429",
          "&SHcy;": "\u0428",
          "&SOFTcy;": "\u042C",
          "&Sacute;": "\u015A",
          "&Sc;": "\u2ABC",
          "&Scaron;": "\u0160",
          "&Scedil;": "\u015E",
          "&Scirc;": "\u015C",
          "&Scy;": "\u0421",
          "&Sfr;": "\uD835\uDD16",
          "&ShortDownArrow;": "\u2193",
          "&ShortLeftArrow;": "\u2190",
          "&ShortRightArrow;": "\u2192",
          "&ShortUpArrow;": "\u2191",
          "&Sigma;": "\u03A3",
          "&SmallCircle;": "\u2218",
          "&Sopf;": "\uD835\uDD4A",
          "&Sqrt;": "\u221A",
          "&Square;": "\u25A1",
          "&SquareIntersection;": "\u2293",
          "&SquareSubset;": "\u228F",
          "&SquareSubsetEqual;": "\u2291",
          "&SquareSuperset;": "\u2290",
          "&SquareSupersetEqual;": "\u2292",
          "&SquareUnion;": "\u2294",
          "&Sscr;": "\uD835\uDCAE",
          "&Star;": "\u22C6",
          "&Sub;": "\u22D0",
          "&Subset;": "\u22D0",
          "&SubsetEqual;": "\u2286",
          "&Succeeds;": "\u227B",
          "&SucceedsEqual;": "\u2AB0",
          "&SucceedsSlantEqual;": "\u227D",
          "&SucceedsTilde;": "\u227F",
          "&SuchThat;": "\u220B",
          "&Sum;": "\u2211",
          "&Sup;": "\u22D1",
          "&Superset;": "\u2283",
          "&SupersetEqual;": "\u2287",
          "&Supset;": "\u22D1",
          "&THORN": "\xDE",
          "&THORN;": "\xDE",
          "&TRADE;": "\u2122",
          "&TSHcy;": "\u040B",
          "&TScy;": "\u0426",
          "&Tab;": "	",
          "&Tau;": "\u03A4",
          "&Tcaron;": "\u0164",
          "&Tcedil;": "\u0162",
          "&Tcy;": "\u0422",
          "&Tfr;": "\uD835\uDD17",
          "&Therefore;": "\u2234",
          "&Theta;": "\u0398",
          "&ThickSpace;": "\u205F\u200A",
          "&ThinSpace;": "\u2009",
          "&Tilde;": "\u223C",
          "&TildeEqual;": "\u2243",
          "&TildeFullEqual;": "\u2245",
          "&TildeTilde;": "\u2248",
          "&Topf;": "\uD835\uDD4B",
          "&TripleDot;": "\u20DB",
          "&Tscr;": "\uD835\uDCAF",
          "&Tstrok;": "\u0166",
          "&Uacute": "\xDA",
          "&Uacute;": "\xDA",
          "&Uarr;": "\u219F",
          "&Uarrocir;": "\u2949",
          "&Ubrcy;": "\u040E",
          "&Ubreve;": "\u016C",
          "&Ucirc": "\xDB",
          "&Ucirc;": "\xDB",
          "&Ucy;": "\u0423",
          "&Udblac;": "\u0170",
          "&Ufr;": "\uD835\uDD18",
          "&Ugrave": "\xD9",
          "&Ugrave;": "\xD9",
          "&Umacr;": "\u016A",
          "&UnderBar;": "_",
          "&UnderBrace;": "\u23DF",
          "&UnderBracket;": "\u23B5",
          "&UnderParenthesis;": "\u23DD",
          "&Union;": "\u22C3",
          "&UnionPlus;": "\u228E",
          "&Uogon;": "\u0172",
          "&Uopf;": "\uD835\uDD4C",
          "&UpArrow;": "\u2191",
          "&UpArrowBar;": "\u2912",
          "&UpArrowDownArrow;": "\u21C5",
          "&UpDownArrow;": "\u2195",
          "&UpEquilibrium;": "\u296E",
          "&UpTee;": "\u22A5",
          "&UpTeeArrow;": "\u21A5",
          "&Uparrow;": "\u21D1",
          "&Updownarrow;": "\u21D5",
          "&UpperLeftArrow;": "\u2196",
          "&UpperRightArrow;": "\u2197",
          "&Upsi;": "\u03D2",
          "&Upsilon;": "\u03A5",
          "&Uring;": "\u016E",
          "&Uscr;": "\uD835\uDCB0",
          "&Utilde;": "\u0168",
          "&Uuml": "\xDC",
          "&Uuml;": "\xDC",
          "&VDash;": "\u22AB",
          "&Vbar;": "\u2AEB",
          "&Vcy;": "\u0412",
          "&Vdash;": "\u22A9",
          "&Vdashl;": "\u2AE6",
          "&Vee;": "\u22C1",
          "&Verbar;": "\u2016",
          "&Vert;": "\u2016",
          "&VerticalBar;": "\u2223",
          "&VerticalLine;": "|",
          "&VerticalSeparator;": "\u2758",
          "&VerticalTilde;": "\u2240",
          "&VeryThinSpace;": "\u200A",
          "&Vfr;": "\uD835\uDD19",
          "&Vopf;": "\uD835\uDD4D",
          "&Vscr;": "\uD835\uDCB1",
          "&Vvdash;": "\u22AA",
          "&Wcirc;": "\u0174",
          "&Wedge;": "\u22C0",
          "&Wfr;": "\uD835\uDD1A",
          "&Wopf;": "\uD835\uDD4E",
          "&Wscr;": "\uD835\uDCB2",
          "&Xfr;": "\uD835\uDD1B",
          "&Xi;": "\u039E",
          "&Xopf;": "\uD835\uDD4F",
          "&Xscr;": "\uD835\uDCB3",
          "&YAcy;": "\u042F",
          "&YIcy;": "\u0407",
          "&YUcy;": "\u042E",
          "&Yacute": "\xDD",
          "&Yacute;": "\xDD",
          "&Ycirc;": "\u0176",
          "&Ycy;": "\u042B",
          "&Yfr;": "\uD835\uDD1C",
          "&Yopf;": "\uD835\uDD50",
          "&Yscr;": "\uD835\uDCB4",
          "&Yuml;": "\u0178",
          "&ZHcy;": "\u0416",
          "&Zacute;": "\u0179",
          "&Zcaron;": "\u017D",
          "&Zcy;": "\u0417",
          "&Zdot;": "\u017B",
          "&ZeroWidthSpace;": "\u200B",
          "&Zeta;": "\u0396",
          "&Zfr;": "\u2128",
          "&Zopf;": "\u2124",
          "&Zscr;": "\uD835\uDCB5",
          "&aacute": "\xE1",
          "&aacute;": "\xE1",
          "&abreve;": "\u0103",
          "&ac;": "\u223E",
          "&acE;": "\u223E\u0333",
          "&acd;": "\u223F",
          "&acirc": "\xE2",
          "&acirc;": "\xE2",
          "&acute": "\xB4",
          "&acute;": "\xB4",
          "&acy;": "\u0430",
          "&aelig": "\xE6",
          "&aelig;": "\xE6",
          "&af;": "\u2061",
          "&afr;": "\uD835\uDD1E",
          "&agrave": "\xE0",
          "&agrave;": "\xE0",
          "&alefsym;": "\u2135",
          "&aleph;": "\u2135",
          "&alpha;": "\u03B1",
          "&amacr;": "\u0101",
          "&amalg;": "\u2A3F",
          "&amp": "&",
          "&amp;": "&",
          "&and;": "\u2227",
          "&andand;": "\u2A55",
          "&andd;": "\u2A5C",
          "&andslope;": "\u2A58",
          "&andv;": "\u2A5A",
          "&ang;": "\u2220",
          "&ange;": "\u29A4",
          "&angle;": "\u2220",
          "&angmsd;": "\u2221",
          "&angmsdaa;": "\u29A8",
          "&angmsdab;": "\u29A9",
          "&angmsdac;": "\u29AA",
          "&angmsdad;": "\u29AB",
          "&angmsdae;": "\u29AC",
          "&angmsdaf;": "\u29AD",
          "&angmsdag;": "\u29AE",
          "&angmsdah;": "\u29AF",
          "&angrt;": "\u221F",
          "&angrtvb;": "\u22BE",
          "&angrtvbd;": "\u299D",
          "&angsph;": "\u2222",
          "&angst;": "\xC5",
          "&angzarr;": "\u237C",
          "&aogon;": "\u0105",
          "&aopf;": "\uD835\uDD52",
          "&ap;": "\u2248",
          "&apE;": "\u2A70",
          "&apacir;": "\u2A6F",
          "&ape;": "\u224A",
          "&apid;": "\u224B",
          "&apos;": "'",
          "&approx;": "\u2248",
          "&approxeq;": "\u224A",
          "&aring": "\xE5",
          "&aring;": "\xE5",
          "&ascr;": "\uD835\uDCB6",
          "&ast;": "*",
          "&asymp;": "\u2248",
          "&asympeq;": "\u224D",
          "&atilde": "\xE3",
          "&atilde;": "\xE3",
          "&auml": "\xE4",
          "&auml;": "\xE4",
          "&awconint;": "\u2233",
          "&awint;": "\u2A11",
          "&bNot;": "\u2AED",
          "&backcong;": "\u224C",
          "&backepsilon;": "\u03F6",
          "&backprime;": "\u2035",
          "&backsim;": "\u223D",
          "&backsimeq;": "\u22CD",
          "&barvee;": "\u22BD",
          "&barwed;": "\u2305",
          "&barwedge;": "\u2305",
          "&bbrk;": "\u23B5",
          "&bbrktbrk;": "\u23B6",
          "&bcong;": "\u224C",
          "&bcy;": "\u0431",
          "&bdquo;": "\u201E",
          "&becaus;": "\u2235",
          "&because;": "\u2235",
          "&bemptyv;": "\u29B0",
          "&bepsi;": "\u03F6",
          "&bernou;": "\u212C",
          "&beta;": "\u03B2",
          "&beth;": "\u2136",
          "&between;": "\u226C",
          "&bfr;": "\uD835\uDD1F",
          "&bigcap;": "\u22C2",
          "&bigcirc;": "\u25EF",
          "&bigcup;": "\u22C3",
          "&bigodot;": "\u2A00",
          "&bigoplus;": "\u2A01",
          "&bigotimes;": "\u2A02",
          "&bigsqcup;": "\u2A06",
          "&bigstar;": "\u2605",
          "&bigtriangledown;": "\u25BD",
          "&bigtriangleup;": "\u25B3",
          "&biguplus;": "\u2A04",
          "&bigvee;": "\u22C1",
          "&bigwedge;": "\u22C0",
          "&bkarow;": "\u290D",
          "&blacklozenge;": "\u29EB",
          "&blacksquare;": "\u25AA",
          "&blacktriangle;": "\u25B4",
          "&blacktriangledown;": "\u25BE",
          "&blacktriangleleft;": "\u25C2",
          "&blacktriangleright;": "\u25B8",
          "&blank;": "\u2423",
          "&blk12;": "\u2592",
          "&blk14;": "\u2591",
          "&blk34;": "\u2593",
          "&block;": "\u2588",
          "&bne;": "=\u20E5",
          "&bnequiv;": "\u2261\u20E5",
          "&bnot;": "\u2310",
          "&bopf;": "\uD835\uDD53",
          "&bot;": "\u22A5",
          "&bottom;": "\u22A5",
          "&bowtie;": "\u22C8",
          "&boxDL;": "\u2557",
          "&boxDR;": "\u2554",
          "&boxDl;": "\u2556",
          "&boxDr;": "\u2553",
          "&boxH;": "\u2550",
          "&boxHD;": "\u2566",
          "&boxHU;": "\u2569",
          "&boxHd;": "\u2564",
          "&boxHu;": "\u2567",
          "&boxUL;": "\u255D",
          "&boxUR;": "\u255A",
          "&boxUl;": "\u255C",
          "&boxUr;": "\u2559",
          "&boxV;": "\u2551",
          "&boxVH;": "\u256C",
          "&boxVL;": "\u2563",
          "&boxVR;": "\u2560",
          "&boxVh;": "\u256B",
          "&boxVl;": "\u2562",
          "&boxVr;": "\u255F",
          "&boxbox;": "\u29C9",
          "&boxdL;": "\u2555",
          "&boxdR;": "\u2552",
          "&boxdl;": "\u2510",
          "&boxdr;": "\u250C",
          "&boxh;": "\u2500",
          "&boxhD;": "\u2565",
          "&boxhU;": "\u2568",
          "&boxhd;": "\u252C",
          "&boxhu;": "\u2534",
          "&boxminus;": "\u229F",
          "&boxplus;": "\u229E",
          "&boxtimes;": "\u22A0",
          "&boxuL;": "\u255B",
          "&boxuR;": "\u2558",
          "&boxul;": "\u2518",
          "&boxur;": "\u2514",
          "&boxv;": "\u2502",
          "&boxvH;": "\u256A",
          "&boxvL;": "\u2561",
          "&boxvR;": "\u255E",
          "&boxvh;": "\u253C",
          "&boxvl;": "\u2524",
          "&boxvr;": "\u251C",
          "&bprime;": "\u2035",
          "&breve;": "\u02D8",
          "&brvbar": "\xA6",
          "&brvbar;": "\xA6",
          "&bscr;": "\uD835\uDCB7",
          "&bsemi;": "\u204F",
          "&bsim;": "\u223D",
          "&bsime;": "\u22CD",
          "&bsol;": "\\",
          "&bsolb;": "\u29C5",
          "&bsolhsub;": "\u27C8",
          "&bull;": "\u2022",
          "&bullet;": "\u2022",
          "&bump;": "\u224E",
          "&bumpE;": "\u2AAE",
          "&bumpe;": "\u224F",
          "&bumpeq;": "\u224F",
          "&cacute;": "\u0107",
          "&cap;": "\u2229",
          "&capand;": "\u2A44",
          "&capbrcup;": "\u2A49",
          "&capcap;": "\u2A4B",
          "&capcup;": "\u2A47",
          "&capdot;": "\u2A40",
          "&caps;": "\u2229\uFE00",
          "&caret;": "\u2041",
          "&caron;": "\u02C7",
          "&ccaps;": "\u2A4D",
          "&ccaron;": "\u010D",
          "&ccedil": "\xE7",
          "&ccedil;": "\xE7",
          "&ccirc;": "\u0109",
          "&ccups;": "\u2A4C",
          "&ccupssm;": "\u2A50",
          "&cdot;": "\u010B",
          "&cedil": "\xB8",
          "&cedil;": "\xB8",
          "&cemptyv;": "\u29B2",
          "&cent": "\xA2",
          "&cent;": "\xA2",
          "&centerdot;": "\xB7",
          "&cfr;": "\uD835\uDD20",
          "&chcy;": "\u0447",
          "&check;": "\u2713",
          "&checkmark;": "\u2713",
          "&chi;": "\u03C7",
          "&cir;": "\u25CB",
          "&cirE;": "\u29C3",
          "&circ;": "\u02C6",
          "&circeq;": "\u2257",
          "&circlearrowleft;": "\u21BA",
          "&circlearrowright;": "\u21BB",
          "&circledR;": "\xAE",
          "&circledS;": "\u24C8",
          "&circledast;": "\u229B",
          "&circledcirc;": "\u229A",
          "&circleddash;": "\u229D",
          "&cire;": "\u2257",
          "&cirfnint;": "\u2A10",
          "&cirmid;": "\u2AEF",
          "&cirscir;": "\u29C2",
          "&clubs;": "\u2663",
          "&clubsuit;": "\u2663",
          "&colon;": ":",
          "&colone;": "\u2254",
          "&coloneq;": "\u2254",
          "&comma;": ",",
          "&commat;": "@",
          "&comp;": "\u2201",
          "&compfn;": "\u2218",
          "&complement;": "\u2201",
          "&complexes;": "\u2102",
          "&cong;": "\u2245",
          "&congdot;": "\u2A6D",
          "&conint;": "\u222E",
          "&copf;": "\uD835\uDD54",
          "&coprod;": "\u2210",
          "&copy": "\xA9",
          "&copy;": "\xA9",
          "&copysr;": "\u2117",
          "&crarr;": "\u21B5",
          "&cross;": "\u2717",
          "&cscr;": "\uD835\uDCB8",
          "&csub;": "\u2ACF",
          "&csube;": "\u2AD1",
          "&csup;": "\u2AD0",
          "&csupe;": "\u2AD2",
          "&ctdot;": "\u22EF",
          "&cudarrl;": "\u2938",
          "&cudarrr;": "\u2935",
          "&cuepr;": "\u22DE",
          "&cuesc;": "\u22DF",
          "&cularr;": "\u21B6",
          "&cularrp;": "\u293D",
          "&cup;": "\u222A",
          "&cupbrcap;": "\u2A48",
          "&cupcap;": "\u2A46",
          "&cupcup;": "\u2A4A",
          "&cupdot;": "\u228D",
          "&cupor;": "\u2A45",
          "&cups;": "\u222A\uFE00",
          "&curarr;": "\u21B7",
          "&curarrm;": "\u293C",
          "&curlyeqprec;": "\u22DE",
          "&curlyeqsucc;": "\u22DF",
          "&curlyvee;": "\u22CE",
          "&curlywedge;": "\u22CF",
          "&curren": "\xA4",
          "&curren;": "\xA4",
          "&curvearrowleft;": "\u21B6",
          "&curvearrowright;": "\u21B7",
          "&cuvee;": "\u22CE",
          "&cuwed;": "\u22CF",
          "&cwconint;": "\u2232",
          "&cwint;": "\u2231",
          "&cylcty;": "\u232D",
          "&dArr;": "\u21D3",
          "&dHar;": "\u2965",
          "&dagger;": "\u2020",
          "&daleth;": "\u2138",
          "&darr;": "\u2193",
          "&dash;": "\u2010",
          "&dashv;": "\u22A3",
          "&dbkarow;": "\u290F",
          "&dblac;": "\u02DD",
          "&dcaron;": "\u010F",
          "&dcy;": "\u0434",
          "&dd;": "\u2146",
          "&ddagger;": "\u2021",
          "&ddarr;": "\u21CA",
          "&ddotseq;": "\u2A77",
          "&deg": "\xB0",
          "&deg;": "\xB0",
          "&delta;": "\u03B4",
          "&demptyv;": "\u29B1",
          "&dfisht;": "\u297F",
          "&dfr;": "\uD835\uDD21",
          "&dharl;": "\u21C3",
          "&dharr;": "\u21C2",
          "&diam;": "\u22C4",
          "&diamond;": "\u22C4",
          "&diamondsuit;": "\u2666",
          "&diams;": "\u2666",
          "&die;": "\xA8",
          "&digamma;": "\u03DD",
          "&disin;": "\u22F2",
          "&div;": "\xF7",
          "&divide": "\xF7",
          "&divide;": "\xF7",
          "&divideontimes;": "\u22C7",
          "&divonx;": "\u22C7",
          "&djcy;": "\u0452",
          "&dlcorn;": "\u231E",
          "&dlcrop;": "\u230D",
          "&dollar;": "$",
          "&dopf;": "\uD835\uDD55",
          "&dot;": "\u02D9",
          "&doteq;": "\u2250",
          "&doteqdot;": "\u2251",
          "&dotminus;": "\u2238",
          "&dotplus;": "\u2214",
          "&dotsquare;": "\u22A1",
          "&doublebarwedge;": "\u2306",
          "&downarrow;": "\u2193",
          "&downdownarrows;": "\u21CA",
          "&downharpoonleft;": "\u21C3",
          "&downharpoonright;": "\u21C2",
          "&drbkarow;": "\u2910",
          "&drcorn;": "\u231F",
          "&drcrop;": "\u230C",
          "&dscr;": "\uD835\uDCB9",
          "&dscy;": "\u0455",
          "&dsol;": "\u29F6",
          "&dstrok;": "\u0111",
          "&dtdot;": "\u22F1",
          "&dtri;": "\u25BF",
          "&dtrif;": "\u25BE",
          "&duarr;": "\u21F5",
          "&duhar;": "\u296F",
          "&dwangle;": "\u29A6",
          "&dzcy;": "\u045F",
          "&dzigrarr;": "\u27FF",
          "&eDDot;": "\u2A77",
          "&eDot;": "\u2251",
          "&eacute": "\xE9",
          "&eacute;": "\xE9",
          "&easter;": "\u2A6E",
          "&ecaron;": "\u011B",
          "&ecir;": "\u2256",
          "&ecirc": "\xEA",
          "&ecirc;": "\xEA",
          "&ecolon;": "\u2255",
          "&ecy;": "\u044D",
          "&edot;": "\u0117",
          "&ee;": "\u2147",
          "&efDot;": "\u2252",
          "&efr;": "\uD835\uDD22",
          "&eg;": "\u2A9A",
          "&egrave": "\xE8",
          "&egrave;": "\xE8",
          "&egs;": "\u2A96",
          "&egsdot;": "\u2A98",
          "&el;": "\u2A99",
          "&elinters;": "\u23E7",
          "&ell;": "\u2113",
          "&els;": "\u2A95",
          "&elsdot;": "\u2A97",
          "&emacr;": "\u0113",
          "&empty;": "\u2205",
          "&emptyset;": "\u2205",
          "&emptyv;": "\u2205",
          "&emsp13;": "\u2004",
          "&emsp14;": "\u2005",
          "&emsp;": "\u2003",
          "&eng;": "\u014B",
          "&ensp;": "\u2002",
          "&eogon;": "\u0119",
          "&eopf;": "\uD835\uDD56",
          "&epar;": "\u22D5",
          "&eparsl;": "\u29E3",
          "&eplus;": "\u2A71",
          "&epsi;": "\u03B5",
          "&epsilon;": "\u03B5",
          "&epsiv;": "\u03F5",
          "&eqcirc;": "\u2256",
          "&eqcolon;": "\u2255",
          "&eqsim;": "\u2242",
          "&eqslantgtr;": "\u2A96",
          "&eqslantless;": "\u2A95",
          "&equals;": "=",
          "&equest;": "\u225F",
          "&equiv;": "\u2261",
          "&equivDD;": "\u2A78",
          "&eqvparsl;": "\u29E5",
          "&erDot;": "\u2253",
          "&erarr;": "\u2971",
          "&escr;": "\u212F",
          "&esdot;": "\u2250",
          "&esim;": "\u2242",
          "&eta;": "\u03B7",
          "&eth": "\xF0",
          "&eth;": "\xF0",
          "&euml": "\xEB",
          "&euml;": "\xEB",
          "&euro;": "\u20AC",
          "&excl;": "!",
          "&exist;": "\u2203",
          "&expectation;": "\u2130",
          "&exponentiale;": "\u2147",
          "&fallingdotseq;": "\u2252",
          "&fcy;": "\u0444",
          "&female;": "\u2640",
          "&ffilig;": "\uFB03",
          "&fflig;": "\uFB00",
          "&ffllig;": "\uFB04",
          "&ffr;": "\uD835\uDD23",
          "&filig;": "\uFB01",
          "&fjlig;": "fj",
          "&flat;": "\u266D",
          "&fllig;": "\uFB02",
          "&fltns;": "\u25B1",
          "&fnof;": "\u0192",
          "&fopf;": "\uD835\uDD57",
          "&forall;": "\u2200",
          "&fork;": "\u22D4",
          "&forkv;": "\u2AD9",
          "&fpartint;": "\u2A0D",
          "&frac12": "\xBD",
          "&frac12;": "\xBD",
          "&frac13;": "\u2153",
          "&frac14": "\xBC",
          "&frac14;": "\xBC",
          "&frac15;": "\u2155",
          "&frac16;": "\u2159",
          "&frac18;": "\u215B",
          "&frac23;": "\u2154",
          "&frac25;": "\u2156",
          "&frac34": "\xBE",
          "&frac34;": "\xBE",
          "&frac35;": "\u2157",
          "&frac38;": "\u215C",
          "&frac45;": "\u2158",
          "&frac56;": "\u215A",
          "&frac58;": "\u215D",
          "&frac78;": "\u215E",
          "&frasl;": "\u2044",
          "&frown;": "\u2322",
          "&fscr;": "\uD835\uDCBB",
          "&gE;": "\u2267",
          "&gEl;": "\u2A8C",
          "&gacute;": "\u01F5",
          "&gamma;": "\u03B3",
          "&gammad;": "\u03DD",
          "&gap;": "\u2A86",
          "&gbreve;": "\u011F",
          "&gcirc;": "\u011D",
          "&gcy;": "\u0433",
          "&gdot;": "\u0121",
          "&ge;": "\u2265",
          "&gel;": "\u22DB",
          "&geq;": "\u2265",
          "&geqq;": "\u2267",
          "&geqslant;": "\u2A7E",
          "&ges;": "\u2A7E",
          "&gescc;": "\u2AA9",
          "&gesdot;": "\u2A80",
          "&gesdoto;": "\u2A82",
          "&gesdotol;": "\u2A84",
          "&gesl;": "\u22DB\uFE00",
          "&gesles;": "\u2A94",
          "&gfr;": "\uD835\uDD24",
          "&gg;": "\u226B",
          "&ggg;": "\u22D9",
          "&gimel;": "\u2137",
          "&gjcy;": "\u0453",
          "&gl;": "\u2277",
          "&glE;": "\u2A92",
          "&gla;": "\u2AA5",
          "&glj;": "\u2AA4",
          "&gnE;": "\u2269",
          "&gnap;": "\u2A8A",
          "&gnapprox;": "\u2A8A",
          "&gne;": "\u2A88",
          "&gneq;": "\u2A88",
          "&gneqq;": "\u2269",
          "&gnsim;": "\u22E7",
          "&gopf;": "\uD835\uDD58",
          "&grave;": "`",
          "&gscr;": "\u210A",
          "&gsim;": "\u2273",
          "&gsime;": "\u2A8E",
          "&gsiml;": "\u2A90",
          "&gt": ">",
          "&gt;": ">",
          "&gtcc;": "\u2AA7",
          "&gtcir;": "\u2A7A",
          "&gtdot;": "\u22D7",
          "&gtlPar;": "\u2995",
          "&gtquest;": "\u2A7C",
          "&gtrapprox;": "\u2A86",
          "&gtrarr;": "\u2978",
          "&gtrdot;": "\u22D7",
          "&gtreqless;": "\u22DB",
          "&gtreqqless;": "\u2A8C",
          "&gtrless;": "\u2277",
          "&gtrsim;": "\u2273",
          "&gvertneqq;": "\u2269\uFE00",
          "&gvnE;": "\u2269\uFE00",
          "&hArr;": "\u21D4",
          "&hairsp;": "\u200A",
          "&half;": "\xBD",
          "&hamilt;": "\u210B",
          "&hardcy;": "\u044A",
          "&harr;": "\u2194",
          "&harrcir;": "\u2948",
          "&harrw;": "\u21AD",
          "&hbar;": "\u210F",
          "&hcirc;": "\u0125",
          "&hearts;": "\u2665",
          "&heartsuit;": "\u2665",
          "&hellip;": "\u2026",
          "&hercon;": "\u22B9",
          "&hfr;": "\uD835\uDD25",
          "&hksearow;": "\u2925",
          "&hkswarow;": "\u2926",
          "&hoarr;": "\u21FF",
          "&homtht;": "\u223B",
          "&hookleftarrow;": "\u21A9",
          "&hookrightarrow;": "\u21AA",
          "&hopf;": "\uD835\uDD59",
          "&horbar;": "\u2015",
          "&hscr;": "\uD835\uDCBD",
          "&hslash;": "\u210F",
          "&hstrok;": "\u0127",
          "&hybull;": "\u2043",
          "&hyphen;": "\u2010",
          "&iacute": "\xED",
          "&iacute;": "\xED",
          "&ic;": "\u2063",
          "&icirc": "\xEE",
          "&icirc;": "\xEE",
          "&icy;": "\u0438",
          "&iecy;": "\u0435",
          "&iexcl": "\xA1",
          "&iexcl;": "\xA1",
          "&iff;": "\u21D4",
          "&ifr;": "\uD835\uDD26",
          "&igrave": "\xEC",
          "&igrave;": "\xEC",
          "&ii;": "\u2148",
          "&iiiint;": "\u2A0C",
          "&iiint;": "\u222D",
          "&iinfin;": "\u29DC",
          "&iiota;": "\u2129",
          "&ijlig;": "\u0133",
          "&imacr;": "\u012B",
          "&image;": "\u2111",
          "&imagline;": "\u2110",
          "&imagpart;": "\u2111",
          "&imath;": "\u0131",
          "&imof;": "\u22B7",
          "&imped;": "\u01B5",
          "&in;": "\u2208",
          "&incare;": "\u2105",
          "&infin;": "\u221E",
          "&infintie;": "\u29DD",
          "&inodot;": "\u0131",
          "&int;": "\u222B",
          "&intcal;": "\u22BA",
          "&integers;": "\u2124",
          "&intercal;": "\u22BA",
          "&intlarhk;": "\u2A17",
          "&intprod;": "\u2A3C",
          "&iocy;": "\u0451",
          "&iogon;": "\u012F",
          "&iopf;": "\uD835\uDD5A",
          "&iota;": "\u03B9",
          "&iprod;": "\u2A3C",
          "&iquest": "\xBF",
          "&iquest;": "\xBF",
          "&iscr;": "\uD835\uDCBE",
          "&isin;": "\u2208",
          "&isinE;": "\u22F9",
          "&isindot;": "\u22F5",
          "&isins;": "\u22F4",
          "&isinsv;": "\u22F3",
          "&isinv;": "\u2208",
          "&it;": "\u2062",
          "&itilde;": "\u0129",
          "&iukcy;": "\u0456",
          "&iuml": "\xEF",
          "&iuml;": "\xEF",
          "&jcirc;": "\u0135",
          "&jcy;": "\u0439",
          "&jfr;": "\uD835\uDD27",
          "&jmath;": "\u0237",
          "&jopf;": "\uD835\uDD5B",
          "&jscr;": "\uD835\uDCBF",
          "&jsercy;": "\u0458",
          "&jukcy;": "\u0454",
          "&kappa;": "\u03BA",
          "&kappav;": "\u03F0",
          "&kcedil;": "\u0137",
          "&kcy;": "\u043A",
          "&kfr;": "\uD835\uDD28",
          "&kgreen;": "\u0138",
          "&khcy;": "\u0445",
          "&kjcy;": "\u045C",
          "&kopf;": "\uD835\uDD5C",
          "&kscr;": "\uD835\uDCC0",
          "&lAarr;": "\u21DA",
          "&lArr;": "\u21D0",
          "&lAtail;": "\u291B",
          "&lBarr;": "\u290E",
          "&lE;": "\u2266",
          "&lEg;": "\u2A8B",
          "&lHar;": "\u2962",
          "&lacute;": "\u013A",
          "&laemptyv;": "\u29B4",
          "&lagran;": "\u2112",
          "&lambda;": "\u03BB",
          "&lang;": "\u27E8",
          "&langd;": "\u2991",
          "&langle;": "\u27E8",
          "&lap;": "\u2A85",
          "&laquo": "\xAB",
          "&laquo;": "\xAB",
          "&larr;": "\u2190",
          "&larrb;": "\u21E4",
          "&larrbfs;": "\u291F",
          "&larrfs;": "\u291D",
          "&larrhk;": "\u21A9",
          "&larrlp;": "\u21AB",
          "&larrpl;": "\u2939",
          "&larrsim;": "\u2973",
          "&larrtl;": "\u21A2",
          "&lat;": "\u2AAB",
          "&latail;": "\u2919",
          "&late;": "\u2AAD",
          "&lates;": "\u2AAD\uFE00",
          "&lbarr;": "\u290C",
          "&lbbrk;": "\u2772",
          "&lbrace;": "{",
          "&lbrack;": "[",
          "&lbrke;": "\u298B",
          "&lbrksld;": "\u298F",
          "&lbrkslu;": "\u298D",
          "&lcaron;": "\u013E",
          "&lcedil;": "\u013C",
          "&lceil;": "\u2308",
          "&lcub;": "{",
          "&lcy;": "\u043B",
          "&ldca;": "\u2936",
          "&ldquo;": "\u201C",
          "&ldquor;": "\u201E",
          "&ldrdhar;": "\u2967",
          "&ldrushar;": "\u294B",
          "&ldsh;": "\u21B2",
          "&le;": "\u2264",
          "&leftarrow;": "\u2190",
          "&leftarrowtail;": "\u21A2",
          "&leftharpoondown;": "\u21BD",
          "&leftharpoonup;": "\u21BC",
          "&leftleftarrows;": "\u21C7",
          "&leftrightarrow;": "\u2194",
          "&leftrightarrows;": "\u21C6",
          "&leftrightharpoons;": "\u21CB",
          "&leftrightsquigarrow;": "\u21AD",
          "&leftthreetimes;": "\u22CB",
          "&leg;": "\u22DA",
          "&leq;": "\u2264",
          "&leqq;": "\u2266",
          "&leqslant;": "\u2A7D",
          "&les;": "\u2A7D",
          "&lescc;": "\u2AA8",
          "&lesdot;": "\u2A7F",
          "&lesdoto;": "\u2A81",
          "&lesdotor;": "\u2A83",
          "&lesg;": "\u22DA\uFE00",
          "&lesges;": "\u2A93",
          "&lessapprox;": "\u2A85",
          "&lessdot;": "\u22D6",
          "&lesseqgtr;": "\u22DA",
          "&lesseqqgtr;": "\u2A8B",
          "&lessgtr;": "\u2276",
          "&lesssim;": "\u2272",
          "&lfisht;": "\u297C",
          "&lfloor;": "\u230A",
          "&lfr;": "\uD835\uDD29",
          "&lg;": "\u2276",
          "&lgE;": "\u2A91",
          "&lhard;": "\u21BD",
          "&lharu;": "\u21BC",
          "&lharul;": "\u296A",
          "&lhblk;": "\u2584",
          "&ljcy;": "\u0459",
          "&ll;": "\u226A",
          "&llarr;": "\u21C7",
          "&llcorner;": "\u231E",
          "&llhard;": "\u296B",
          "&lltri;": "\u25FA",
          "&lmidot;": "\u0140",
          "&lmoust;": "\u23B0",
          "&lmoustache;": "\u23B0",
          "&lnE;": "\u2268",
          "&lnap;": "\u2A89",
          "&lnapprox;": "\u2A89",
          "&lne;": "\u2A87",
          "&lneq;": "\u2A87",
          "&lneqq;": "\u2268",
          "&lnsim;": "\u22E6",
          "&loang;": "\u27EC",
          "&loarr;": "\u21FD",
          "&lobrk;": "\u27E6",
          "&longleftarrow;": "\u27F5",
          "&longleftrightarrow;": "\u27F7",
          "&longmapsto;": "\u27FC",
          "&longrightarrow;": "\u27F6",
          "&looparrowleft;": "\u21AB",
          "&looparrowright;": "\u21AC",
          "&lopar;": "\u2985",
          "&lopf;": "\uD835\uDD5D",
          "&loplus;": "\u2A2D",
          "&lotimes;": "\u2A34",
          "&lowast;": "\u2217",
          "&lowbar;": "_",
          "&loz;": "\u25CA",
          "&lozenge;": "\u25CA",
          "&lozf;": "\u29EB",
          "&lpar;": "(",
          "&lparlt;": "\u2993",
          "&lrarr;": "\u21C6",
          "&lrcorner;": "\u231F",
          "&lrhar;": "\u21CB",
          "&lrhard;": "\u296D",
          "&lrm;": "\u200E",
          "&lrtri;": "\u22BF",
          "&lsaquo;": "\u2039",
          "&lscr;": "\uD835\uDCC1",
          "&lsh;": "\u21B0",
          "&lsim;": "\u2272",
          "&lsime;": "\u2A8D",
          "&lsimg;": "\u2A8F",
          "&lsqb;": "[",
          "&lsquo;": "\u2018",
          "&lsquor;": "\u201A",
          "&lstrok;": "\u0142",
          "&lt": "<",
          "&lt;": "<",
          "&ltcc;": "\u2AA6",
          "&ltcir;": "\u2A79",
          "&ltdot;": "\u22D6",
          "&lthree;": "\u22CB",
          "&ltimes;": "\u22C9",
          "&ltlarr;": "\u2976",
          "&ltquest;": "\u2A7B",
          "&ltrPar;": "\u2996",
          "&ltri;": "\u25C3",
          "&ltrie;": "\u22B4",
          "&ltrif;": "\u25C2",
          "&lurdshar;": "\u294A",
          "&luruhar;": "\u2966",
          "&lvertneqq;": "\u2268\uFE00",
          "&lvnE;": "\u2268\uFE00",
          "&mDDot;": "\u223A",
          "&macr": "\xAF",
          "&macr;": "\xAF",
          "&male;": "\u2642",
          "&malt;": "\u2720",
          "&maltese;": "\u2720",
          "&map;": "\u21A6",
          "&mapsto;": "\u21A6",
          "&mapstodown;": "\u21A7",
          "&mapstoleft;": "\u21A4",
          "&mapstoup;": "\u21A5",
          "&marker;": "\u25AE",
          "&mcomma;": "\u2A29",
          "&mcy;": "\u043C",
          "&mdash;": "\u2014",
          "&measuredangle;": "\u2221",
          "&mfr;": "\uD835\uDD2A",
          "&mho;": "\u2127",
          "&micro": "\xB5",
          "&micro;": "\xB5",
          "&mid;": "\u2223",
          "&midast;": "*",
          "&midcir;": "\u2AF0",
          "&middot": "\xB7",
          "&middot;": "\xB7",
          "&minus;": "\u2212",
          "&minusb;": "\u229F",
          "&minusd;": "\u2238",
          "&minusdu;": "\u2A2A",
          "&mlcp;": "\u2ADB",
          "&mldr;": "\u2026",
          "&mnplus;": "\u2213",
          "&models;": "\u22A7",
          "&mopf;": "\uD835\uDD5E",
          "&mp;": "\u2213",
          "&mscr;": "\uD835\uDCC2",
          "&mstpos;": "\u223E",
          "&mu;": "\u03BC",
          "&multimap;": "\u22B8",
          "&mumap;": "\u22B8",
          "&nGg;": "\u22D9\u0338",
          "&nGt;": "\u226B\u20D2",
          "&nGtv;": "\u226B\u0338",
          "&nLeftarrow;": "\u21CD",
          "&nLeftrightarrow;": "\u21CE",
          "&nLl;": "\u22D8\u0338",
          "&nLt;": "\u226A\u20D2",
          "&nLtv;": "\u226A\u0338",
          "&nRightarrow;": "\u21CF",
          "&nVDash;": "\u22AF",
          "&nVdash;": "\u22AE",
          "&nabla;": "\u2207",
          "&nacute;": "\u0144",
          "&nang;": "\u2220\u20D2",
          "&nap;": "\u2249",
          "&napE;": "\u2A70\u0338",
          "&napid;": "\u224B\u0338",
          "&napos;": "\u0149",
          "&napprox;": "\u2249",
          "&natur;": "\u266E",
          "&natural;": "\u266E",
          "&naturals;": "\u2115",
          "&nbsp": "\xA0",
          "&nbsp;": "\xA0",
          "&nbump;": "\u224E\u0338",
          "&nbumpe;": "\u224F\u0338",
          "&ncap;": "\u2A43",
          "&ncaron;": "\u0148",
          "&ncedil;": "\u0146",
          "&ncong;": "\u2247",
          "&ncongdot;": "\u2A6D\u0338",
          "&ncup;": "\u2A42",
          "&ncy;": "\u043D",
          "&ndash;": "\u2013",
          "&ne;": "\u2260",
          "&neArr;": "\u21D7",
          "&nearhk;": "\u2924",
          "&nearr;": "\u2197",
          "&nearrow;": "\u2197",
          "&nedot;": "\u2250\u0338",
          "&nequiv;": "\u2262",
          "&nesear;": "\u2928",
          "&nesim;": "\u2242\u0338",
          "&nexist;": "\u2204",
          "&nexists;": "\u2204",
          "&nfr;": "\uD835\uDD2B",
          "&ngE;": "\u2267\u0338",
          "&nge;": "\u2271",
          "&ngeq;": "\u2271",
          "&ngeqq;": "\u2267\u0338",
          "&ngeqslant;": "\u2A7E\u0338",
          "&nges;": "\u2A7E\u0338",
          "&ngsim;": "\u2275",
          "&ngt;": "\u226F",
          "&ngtr;": "\u226F",
          "&nhArr;": "\u21CE",
          "&nharr;": "\u21AE",
          "&nhpar;": "\u2AF2",
          "&ni;": "\u220B",
          "&nis;": "\u22FC",
          "&nisd;": "\u22FA",
          "&niv;": "\u220B",
          "&njcy;": "\u045A",
          "&nlArr;": "\u21CD",
          "&nlE;": "\u2266\u0338",
          "&nlarr;": "\u219A",
          "&nldr;": "\u2025",
          "&nle;": "\u2270",
          "&nleftarrow;": "\u219A",
          "&nleftrightarrow;": "\u21AE",
          "&nleq;": "\u2270",
          "&nleqq;": "\u2266\u0338",
          "&nleqslant;": "\u2A7D\u0338",
          "&nles;": "\u2A7D\u0338",
          "&nless;": "\u226E",
          "&nlsim;": "\u2274",
          "&nlt;": "\u226E",
          "&nltri;": "\u22EA",
          "&nltrie;": "\u22EC",
          "&nmid;": "\u2224",
          "&nopf;": "\uD835\uDD5F",
          "&not": "\xAC",
          "&not;": "\xAC",
          "&notin;": "\u2209",
          "&notinE;": "\u22F9\u0338",
          "&notindot;": "\u22F5\u0338",
          "&notinva;": "\u2209",
          "&notinvb;": "\u22F7",
          "&notinvc;": "\u22F6",
          "&notni;": "\u220C",
          "&notniva;": "\u220C",
          "&notnivb;": "\u22FE",
          "&notnivc;": "\u22FD",
          "&npar;": "\u2226",
          "&nparallel;": "\u2226",
          "&nparsl;": "\u2AFD\u20E5",
          "&npart;": "\u2202\u0338",
          "&npolint;": "\u2A14",
          "&npr;": "\u2280",
          "&nprcue;": "\u22E0",
          "&npre;": "\u2AAF\u0338",
          "&nprec;": "\u2280",
          "&npreceq;": "\u2AAF\u0338",
          "&nrArr;": "\u21CF",
          "&nrarr;": "\u219B",
          "&nrarrc;": "\u2933\u0338",
          "&nrarrw;": "\u219D\u0338",
          "&nrightarrow;": "\u219B",
          "&nrtri;": "\u22EB",
          "&nrtrie;": "\u22ED",
          "&nsc;": "\u2281",
          "&nsccue;": "\u22E1",
          "&nsce;": "\u2AB0\u0338",
          "&nscr;": "\uD835\uDCC3",
          "&nshortmid;": "\u2224",
          "&nshortparallel;": "\u2226",
          "&nsim;": "\u2241",
          "&nsime;": "\u2244",
          "&nsimeq;": "\u2244",
          "&nsmid;": "\u2224",
          "&nspar;": "\u2226",
          "&nsqsube;": "\u22E2",
          "&nsqsupe;": "\u22E3",
          "&nsub;": "\u2284",
          "&nsubE;": "\u2AC5\u0338",
          "&nsube;": "\u2288",
          "&nsubset;": "\u2282\u20D2",
          "&nsubseteq;": "\u2288",
          "&nsubseteqq;": "\u2AC5\u0338",
          "&nsucc;": "\u2281",
          "&nsucceq;": "\u2AB0\u0338",
          "&nsup;": "\u2285",
          "&nsupE;": "\u2AC6\u0338",
          "&nsupe;": "\u2289",
          "&nsupset;": "\u2283\u20D2",
          "&nsupseteq;": "\u2289",
          "&nsupseteqq;": "\u2AC6\u0338",
          "&ntgl;": "\u2279",
          "&ntilde": "\xF1",
          "&ntilde;": "\xF1",
          "&ntlg;": "\u2278",
          "&ntriangleleft;": "\u22EA",
          "&ntrianglelefteq;": "\u22EC",
          "&ntriangleright;": "\u22EB",
          "&ntrianglerighteq;": "\u22ED",
          "&nu;": "\u03BD",
          "&num;": "#",
          "&numero;": "\u2116",
          "&numsp;": "\u2007",
          "&nvDash;": "\u22AD",
          "&nvHarr;": "\u2904",
          "&nvap;": "\u224D\u20D2",
          "&nvdash;": "\u22AC",
          "&nvge;": "\u2265\u20D2",
          "&nvgt;": ">\u20D2",
          "&nvinfin;": "\u29DE",
          "&nvlArr;": "\u2902",
          "&nvle;": "\u2264\u20D2",
          "&nvlt;": "<\u20D2",
          "&nvltrie;": "\u22B4\u20D2",
          "&nvrArr;": "\u2903",
          "&nvrtrie;": "\u22B5\u20D2",
          "&nvsim;": "\u223C\u20D2",
          "&nwArr;": "\u21D6",
          "&nwarhk;": "\u2923",
          "&nwarr;": "\u2196",
          "&nwarrow;": "\u2196",
          "&nwnear;": "\u2927",
          "&oS;": "\u24C8",
          "&oacute": "\xF3",
          "&oacute;": "\xF3",
          "&oast;": "\u229B",
          "&ocir;": "\u229A",
          "&ocirc": "\xF4",
          "&ocirc;": "\xF4",
          "&ocy;": "\u043E",
          "&odash;": "\u229D",
          "&odblac;": "\u0151",
          "&odiv;": "\u2A38",
          "&odot;": "\u2299",
          "&odsold;": "\u29BC",
          "&oelig;": "\u0153",
          "&ofcir;": "\u29BF",
          "&ofr;": "\uD835\uDD2C",
          "&ogon;": "\u02DB",
          "&ograve": "\xF2",
          "&ograve;": "\xF2",
          "&ogt;": "\u29C1",
          "&ohbar;": "\u29B5",
          "&ohm;": "\u03A9",
          "&oint;": "\u222E",
          "&olarr;": "\u21BA",
          "&olcir;": "\u29BE",
          "&olcross;": "\u29BB",
          "&oline;": "\u203E",
          "&olt;": "\u29C0",
          "&omacr;": "\u014D",
          "&omega;": "\u03C9",
          "&omicron;": "\u03BF",
          "&omid;": "\u29B6",
          "&ominus;": "\u2296",
          "&oopf;": "\uD835\uDD60",
          "&opar;": "\u29B7",
          "&operp;": "\u29B9",
          "&oplus;": "\u2295",
          "&or;": "\u2228",
          "&orarr;": "\u21BB",
          "&ord;": "\u2A5D",
          "&order;": "\u2134",
          "&orderof;": "\u2134",
          "&ordf": "\xAA",
          "&ordf;": "\xAA",
          "&ordm": "\xBA",
          "&ordm;": "\xBA",
          "&origof;": "\u22B6",
          "&oror;": "\u2A56",
          "&orslope;": "\u2A57",
          "&orv;": "\u2A5B",
          "&oscr;": "\u2134",
          "&oslash": "\xF8",
          "&oslash;": "\xF8",
          "&osol;": "\u2298",
          "&otilde": "\xF5",
          "&otilde;": "\xF5",
          "&otimes;": "\u2297",
          "&otimesas;": "\u2A36",
          "&ouml": "\xF6",
          "&ouml;": "\xF6",
          "&ovbar;": "\u233D",
          "&par;": "\u2225",
          "&para": "\xB6",
          "&para;": "\xB6",
          "&parallel;": "\u2225",
          "&parsim;": "\u2AF3",
          "&parsl;": "\u2AFD",
          "&part;": "\u2202",
          "&pcy;": "\u043F",
          "&percnt;": "%",
          "&period;": ".",
          "&permil;": "\u2030",
          "&perp;": "\u22A5",
          "&pertenk;": "\u2031",
          "&pfr;": "\uD835\uDD2D",
          "&phi;": "\u03C6",
          "&phiv;": "\u03D5",
          "&phmmat;": "\u2133",
          "&phone;": "\u260E",
          "&pi;": "\u03C0",
          "&pitchfork;": "\u22D4",
          "&piv;": "\u03D6",
          "&planck;": "\u210F",
          "&planckh;": "\u210E",
          "&plankv;": "\u210F",
          "&plus;": "+",
          "&plusacir;": "\u2A23",
          "&plusb;": "\u229E",
          "&pluscir;": "\u2A22",
          "&plusdo;": "\u2214",
          "&plusdu;": "\u2A25",
          "&pluse;": "\u2A72",
          "&plusmn": "\xB1",
          "&plusmn;": "\xB1",
          "&plussim;": "\u2A26",
          "&plustwo;": "\u2A27",
          "&pm;": "\xB1",
          "&pointint;": "\u2A15",
          "&popf;": "\uD835\uDD61",
          "&pound": "\xA3",
          "&pound;": "\xA3",
          "&pr;": "\u227A",
          "&prE;": "\u2AB3",
          "&prap;": "\u2AB7",
          "&prcue;": "\u227C",
          "&pre;": "\u2AAF",
          "&prec;": "\u227A",
          "&precapprox;": "\u2AB7",
          "&preccurlyeq;": "\u227C",
          "&preceq;": "\u2AAF",
          "&precnapprox;": "\u2AB9",
          "&precneqq;": "\u2AB5",
          "&precnsim;": "\u22E8",
          "&precsim;": "\u227E",
          "&prime;": "\u2032",
          "&primes;": "\u2119",
          "&prnE;": "\u2AB5",
          "&prnap;": "\u2AB9",
          "&prnsim;": "\u22E8",
          "&prod;": "\u220F",
          "&profalar;": "\u232E",
          "&profline;": "\u2312",
          "&profsurf;": "\u2313",
          "&prop;": "\u221D",
          "&propto;": "\u221D",
          "&prsim;": "\u227E",
          "&prurel;": "\u22B0",
          "&pscr;": "\uD835\uDCC5",
          "&psi;": "\u03C8",
          "&puncsp;": "\u2008",
          "&qfr;": "\uD835\uDD2E",
          "&qint;": "\u2A0C",
          "&qopf;": "\uD835\uDD62",
          "&qprime;": "\u2057",
          "&qscr;": "\uD835\uDCC6",
          "&quaternions;": "\u210D",
          "&quatint;": "\u2A16",
          "&quest;": "?",
          "&questeq;": "\u225F",
          "&quot": '"',
          "&quot;": '"',
          "&rAarr;": "\u21DB",
          "&rArr;": "\u21D2",
          "&rAtail;": "\u291C",
          "&rBarr;": "\u290F",
          "&rHar;": "\u2964",
          "&race;": "\u223D\u0331",
          "&racute;": "\u0155",
          "&radic;": "\u221A",
          "&raemptyv;": "\u29B3",
          "&rang;": "\u27E9",
          "&rangd;": "\u2992",
          "&range;": "\u29A5",
          "&rangle;": "\u27E9",
          "&raquo": "\xBB",
          "&raquo;": "\xBB",
          "&rarr;": "\u2192",
          "&rarrap;": "\u2975",
          "&rarrb;": "\u21E5",
          "&rarrbfs;": "\u2920",
          "&rarrc;": "\u2933",
          "&rarrfs;": "\u291E",
          "&rarrhk;": "\u21AA",
          "&rarrlp;": "\u21AC",
          "&rarrpl;": "\u2945",
          "&rarrsim;": "\u2974",
          "&rarrtl;": "\u21A3",
          "&rarrw;": "\u219D",
          "&ratail;": "\u291A",
          "&ratio;": "\u2236",
          "&rationals;": "\u211A",
          "&rbarr;": "\u290D",
          "&rbbrk;": "\u2773",
          "&rbrace;": "}",
          "&rbrack;": "]",
          "&rbrke;": "\u298C",
          "&rbrksld;": "\u298E",
          "&rbrkslu;": "\u2990",
          "&rcaron;": "\u0159",
          "&rcedil;": "\u0157",
          "&rceil;": "\u2309",
          "&rcub;": "}",
          "&rcy;": "\u0440",
          "&rdca;": "\u2937",
          "&rdldhar;": "\u2969",
          "&rdquo;": "\u201D",
          "&rdquor;": "\u201D",
          "&rdsh;": "\u21B3",
          "&real;": "\u211C",
          "&realine;": "\u211B",
          "&realpart;": "\u211C",
          "&reals;": "\u211D",
          "&rect;": "\u25AD",
          "&reg": "\xAE",
          "&reg;": "\xAE",
          "&rfisht;": "\u297D",
          "&rfloor;": "\u230B",
          "&rfr;": "\uD835\uDD2F",
          "&rhard;": "\u21C1",
          "&rharu;": "\u21C0",
          "&rharul;": "\u296C",
          "&rho;": "\u03C1",
          "&rhov;": "\u03F1",
          "&rightarrow;": "\u2192",
          "&rightarrowtail;": "\u21A3",
          "&rightharpoondown;": "\u21C1",
          "&rightharpoonup;": "\u21C0",
          "&rightleftarrows;": "\u21C4",
          "&rightleftharpoons;": "\u21CC",
          "&rightrightarrows;": "\u21C9",
          "&rightsquigarrow;": "\u219D",
          "&rightthreetimes;": "\u22CC",
          "&ring;": "\u02DA",
          "&risingdotseq;": "\u2253",
          "&rlarr;": "\u21C4",
          "&rlhar;": "\u21CC",
          "&rlm;": "\u200F",
          "&rmoust;": "\u23B1",
          "&rmoustache;": "\u23B1",
          "&rnmid;": "\u2AEE",
          "&roang;": "\u27ED",
          "&roarr;": "\u21FE",
          "&robrk;": "\u27E7",
          "&ropar;": "\u2986",
          "&ropf;": "\uD835\uDD63",
          "&roplus;": "\u2A2E",
          "&rotimes;": "\u2A35",
          "&rpar;": ")",
          "&rpargt;": "\u2994",
          "&rppolint;": "\u2A12",
          "&rrarr;": "\u21C9",
          "&rsaquo;": "\u203A",
          "&rscr;": "\uD835\uDCC7",
          "&rsh;": "\u21B1",
          "&rsqb;": "]",
          "&rsquo;": "\u2019",
          "&rsquor;": "\u2019",
          "&rthree;": "\u22CC",
          "&rtimes;": "\u22CA",
          "&rtri;": "\u25B9",
          "&rtrie;": "\u22B5",
          "&rtrif;": "\u25B8",
          "&rtriltri;": "\u29CE",
          "&ruluhar;": "\u2968",
          "&rx;": "\u211E",
          "&sacute;": "\u015B",
          "&sbquo;": "\u201A",
          "&sc;": "\u227B",
          "&scE;": "\u2AB4",
          "&scap;": "\u2AB8",
          "&scaron;": "\u0161",
          "&sccue;": "\u227D",
          "&sce;": "\u2AB0",
          "&scedil;": "\u015F",
          "&scirc;": "\u015D",
          "&scnE;": "\u2AB6",
          "&scnap;": "\u2ABA",
          "&scnsim;": "\u22E9",
          "&scpolint;": "\u2A13",
          "&scsim;": "\u227F",
          "&scy;": "\u0441",
          "&sdot;": "\u22C5",
          "&sdotb;": "\u22A1",
          "&sdote;": "\u2A66",
          "&seArr;": "\u21D8",
          "&searhk;": "\u2925",
          "&searr;": "\u2198",
          "&searrow;": "\u2198",
          "&sect": "\xA7",
          "&sect;": "\xA7",
          "&semi;": ";",
          "&seswar;": "\u2929",
          "&setminus;": "\u2216",
          "&setmn;": "\u2216",
          "&sext;": "\u2736",
          "&sfr;": "\uD835\uDD30",
          "&sfrown;": "\u2322",
          "&sharp;": "\u266F",
          "&shchcy;": "\u0449",
          "&shcy;": "\u0448",
          "&shortmid;": "\u2223",
          "&shortparallel;": "\u2225",
          "&shy": "\xAD",
          "&shy;": "\xAD",
          "&sigma;": "\u03C3",
          "&sigmaf;": "\u03C2",
          "&sigmav;": "\u03C2",
          "&sim;": "\u223C",
          "&simdot;": "\u2A6A",
          "&sime;": "\u2243",
          "&simeq;": "\u2243",
          "&simg;": "\u2A9E",
          "&simgE;": "\u2AA0",
          "&siml;": "\u2A9D",
          "&simlE;": "\u2A9F",
          "&simne;": "\u2246",
          "&simplus;": "\u2A24",
          "&simrarr;": "\u2972",
          "&slarr;": "\u2190",
          "&smallsetminus;": "\u2216",
          "&smashp;": "\u2A33",
          "&smeparsl;": "\u29E4",
          "&smid;": "\u2223",
          "&smile;": "\u2323",
          "&smt;": "\u2AAA",
          "&smte;": "\u2AAC",
          "&smtes;": "\u2AAC\uFE00",
          "&softcy;": "\u044C",
          "&sol;": "/",
          "&solb;": "\u29C4",
          "&solbar;": "\u233F",
          "&sopf;": "\uD835\uDD64",
          "&spades;": "\u2660",
          "&spadesuit;": "\u2660",
          "&spar;": "\u2225",
          "&sqcap;": "\u2293",
          "&sqcaps;": "\u2293\uFE00",
          "&sqcup;": "\u2294",
          "&sqcups;": "\u2294\uFE00",
          "&sqsub;": "\u228F",
          "&sqsube;": "\u2291",
          "&sqsubset;": "\u228F",
          "&sqsubseteq;": "\u2291",
          "&sqsup;": "\u2290",
          "&sqsupe;": "\u2292",
          "&sqsupset;": "\u2290",
          "&sqsupseteq;": "\u2292",
          "&squ;": "\u25A1",
          "&square;": "\u25A1",
          "&squarf;": "\u25AA",
          "&squf;": "\u25AA",
          "&srarr;": "\u2192",
          "&sscr;": "\uD835\uDCC8",
          "&ssetmn;": "\u2216",
          "&ssmile;": "\u2323",
          "&sstarf;": "\u22C6",
          "&star;": "\u2606",
          "&starf;": "\u2605",
          "&straightepsilon;": "\u03F5",
          "&straightphi;": "\u03D5",
          "&strns;": "\xAF",
          "&sub;": "\u2282",
          "&subE;": "\u2AC5",
          "&subdot;": "\u2ABD",
          "&sube;": "\u2286",
          "&subedot;": "\u2AC3",
          "&submult;": "\u2AC1",
          "&subnE;": "\u2ACB",
          "&subne;": "\u228A",
          "&subplus;": "\u2ABF",
          "&subrarr;": "\u2979",
          "&subset;": "\u2282",
          "&subseteq;": "\u2286",
          "&subseteqq;": "\u2AC5",
          "&subsetneq;": "\u228A",
          "&subsetneqq;": "\u2ACB",
          "&subsim;": "\u2AC7",
          "&subsub;": "\u2AD5",
          "&subsup;": "\u2AD3",
          "&succ;": "\u227B",
          "&succapprox;": "\u2AB8",
          "&succcurlyeq;": "\u227D",
          "&succeq;": "\u2AB0",
          "&succnapprox;": "\u2ABA",
          "&succneqq;": "\u2AB6",
          "&succnsim;": "\u22E9",
          "&succsim;": "\u227F",
          "&sum;": "\u2211",
          "&sung;": "\u266A",
          "&sup1": "\xB9",
          "&sup1;": "\xB9",
          "&sup2": "\xB2",
          "&sup2;": "\xB2",
          "&sup3": "\xB3",
          "&sup3;": "\xB3",
          "&sup;": "\u2283",
          "&supE;": "\u2AC6",
          "&supdot;": "\u2ABE",
          "&supdsub;": "\u2AD8",
          "&supe;": "\u2287",
          "&supedot;": "\u2AC4",
          "&suphsol;": "\u27C9",
          "&suphsub;": "\u2AD7",
          "&suplarr;": "\u297B",
          "&supmult;": "\u2AC2",
          "&supnE;": "\u2ACC",
          "&supne;": "\u228B",
          "&supplus;": "\u2AC0",
          "&supset;": "\u2283",
          "&supseteq;": "\u2287",
          "&supseteqq;": "\u2AC6",
          "&supsetneq;": "\u228B",
          "&supsetneqq;": "\u2ACC",
          "&supsim;": "\u2AC8",
          "&supsub;": "\u2AD4",
          "&supsup;": "\u2AD6",
          "&swArr;": "\u21D9",
          "&swarhk;": "\u2926",
          "&swarr;": "\u2199",
          "&swarrow;": "\u2199",
          "&swnwar;": "\u292A",
          "&szlig": "\xDF",
          "&szlig;": "\xDF",
          "&target;": "\u2316",
          "&tau;": "\u03C4",
          "&tbrk;": "\u23B4",
          "&tcaron;": "\u0165",
          "&tcedil;": "\u0163",
          "&tcy;": "\u0442",
          "&tdot;": "\u20DB",
          "&telrec;": "\u2315",
          "&tfr;": "\uD835\uDD31",
          "&there4;": "\u2234",
          "&therefore;": "\u2234",
          "&theta;": "\u03B8",
          "&thetasym;": "\u03D1",
          "&thetav;": "\u03D1",
          "&thickapprox;": "\u2248",
          "&thicksim;": "\u223C",
          "&thinsp;": "\u2009",
          "&thkap;": "\u2248",
          "&thksim;": "\u223C",
          "&thorn": "\xFE",
          "&thorn;": "\xFE",
          "&tilde;": "\u02DC",
          "&times": "\xD7",
          "&times;": "\xD7",
          "&timesb;": "\u22A0",
          "&timesbar;": "\u2A31",
          "&timesd;": "\u2A30",
          "&tint;": "\u222D",
          "&toea;": "\u2928",
          "&top;": "\u22A4",
          "&topbot;": "\u2336",
          "&topcir;": "\u2AF1",
          "&topf;": "\uD835\uDD65",
          "&topfork;": "\u2ADA",
          "&tosa;": "\u2929",
          "&tprime;": "\u2034",
          "&trade;": "\u2122",
          "&triangle;": "\u25B5",
          "&triangledown;": "\u25BF",
          "&triangleleft;": "\u25C3",
          "&trianglelefteq;": "\u22B4",
          "&triangleq;": "\u225C",
          "&triangleright;": "\u25B9",
          "&trianglerighteq;": "\u22B5",
          "&tridot;": "\u25EC",
          "&trie;": "\u225C",
          "&triminus;": "\u2A3A",
          "&triplus;": "\u2A39",
          "&trisb;": "\u29CD",
          "&tritime;": "\u2A3B",
          "&trpezium;": "\u23E2",
          "&tscr;": "\uD835\uDCC9",
          "&tscy;": "\u0446",
          "&tshcy;": "\u045B",
          "&tstrok;": "\u0167",
          "&twixt;": "\u226C",
          "&twoheadleftarrow;": "\u219E",
          "&twoheadrightarrow;": "\u21A0",
          "&uArr;": "\u21D1",
          "&uHar;": "\u2963",
          "&uacute": "\xFA",
          "&uacute;": "\xFA",
          "&uarr;": "\u2191",
          "&ubrcy;": "\u045E",
          "&ubreve;": "\u016D",
          "&ucirc": "\xFB",
          "&ucirc;": "\xFB",
          "&ucy;": "\u0443",
          "&udarr;": "\u21C5",
          "&udblac;": "\u0171",
          "&udhar;": "\u296E",
          "&ufisht;": "\u297E",
          "&ufr;": "\uD835\uDD32",
          "&ugrave": "\xF9",
          "&ugrave;": "\xF9",
          "&uharl;": "\u21BF",
          "&uharr;": "\u21BE",
          "&uhblk;": "\u2580",
          "&ulcorn;": "\u231C",
          "&ulcorner;": "\u231C",
          "&ulcrop;": "\u230F",
          "&ultri;": "\u25F8",
          "&umacr;": "\u016B",
          "&uml": "\xA8",
          "&uml;": "\xA8",
          "&uogon;": "\u0173",
          "&uopf;": "\uD835\uDD66",
          "&uparrow;": "\u2191",
          "&updownarrow;": "\u2195",
          "&upharpoonleft;": "\u21BF",
          "&upharpoonright;": "\u21BE",
          "&uplus;": "\u228E",
          "&upsi;": "\u03C5",
          "&upsih;": "\u03D2",
          "&upsilon;": "\u03C5",
          "&upuparrows;": "\u21C8",
          "&urcorn;": "\u231D",
          "&urcorner;": "\u231D",
          "&urcrop;": "\u230E",
          "&uring;": "\u016F",
          "&urtri;": "\u25F9",
          "&uscr;": "\uD835\uDCCA",
          "&utdot;": "\u22F0",
          "&utilde;": "\u0169",
          "&utri;": "\u25B5",
          "&utrif;": "\u25B4",
          "&uuarr;": "\u21C8",
          "&uuml": "\xFC",
          "&uuml;": "\xFC",
          "&uwangle;": "\u29A7",
          "&vArr;": "\u21D5",
          "&vBar;": "\u2AE8",
          "&vBarv;": "\u2AE9",
          "&vDash;": "\u22A8",
          "&vangrt;": "\u299C",
          "&varepsilon;": "\u03F5",
          "&varkappa;": "\u03F0",
          "&varnothing;": "\u2205",
          "&varphi;": "\u03D5",
          "&varpi;": "\u03D6",
          "&varpropto;": "\u221D",
          "&varr;": "\u2195",
          "&varrho;": "\u03F1",
          "&varsigma;": "\u03C2",
          "&varsubsetneq;": "\u228A\uFE00",
          "&varsubsetneqq;": "\u2ACB\uFE00",
          "&varsupsetneq;": "\u228B\uFE00",
          "&varsupsetneqq;": "\u2ACC\uFE00",
          "&vartheta;": "\u03D1",
          "&vartriangleleft;": "\u22B2",
          "&vartriangleright;": "\u22B3",
          "&vcy;": "\u0432",
          "&vdash;": "\u22A2",
          "&vee;": "\u2228",
          "&veebar;": "\u22BB",
          "&veeeq;": "\u225A",
          "&vellip;": "\u22EE",
          "&verbar;": "|",
          "&vert;": "|",
          "&vfr;": "\uD835\uDD33",
          "&vltri;": "\u22B2",
          "&vnsub;": "\u2282\u20D2",
          "&vnsup;": "\u2283\u20D2",
          "&vopf;": "\uD835\uDD67",
          "&vprop;": "\u221D",
          "&vrtri;": "\u22B3",
          "&vscr;": "\uD835\uDCCB",
          "&vsubnE;": "\u2ACB\uFE00",
          "&vsubne;": "\u228A\uFE00",
          "&vsupnE;": "\u2ACC\uFE00",
          "&vsupne;": "\u228B\uFE00",
          "&vzigzag;": "\u299A",
          "&wcirc;": "\u0175",
          "&wedbar;": "\u2A5F",
          "&wedge;": "\u2227",
          "&wedgeq;": "\u2259",
          "&weierp;": "\u2118",
          "&wfr;": "\uD835\uDD34",
          "&wopf;": "\uD835\uDD68",
          "&wp;": "\u2118",
          "&wr;": "\u2240",
          "&wreath;": "\u2240",
          "&wscr;": "\uD835\uDCCC",
          "&xcap;": "\u22C2",
          "&xcirc;": "\u25EF",
          "&xcup;": "\u22C3",
          "&xdtri;": "\u25BD",
          "&xfr;": "\uD835\uDD35",
          "&xhArr;": "\u27FA",
          "&xharr;": "\u27F7",
          "&xi;": "\u03BE",
          "&xlArr;": "\u27F8",
          "&xlarr;": "\u27F5",
          "&xmap;": "\u27FC",
          "&xnis;": "\u22FB",
          "&xodot;": "\u2A00",
          "&xopf;": "\uD835\uDD69",
          "&xoplus;": "\u2A01",
          "&xotime;": "\u2A02",
          "&xrArr;": "\u27F9",
          "&xrarr;": "\u27F6",
          "&xscr;": "\uD835\uDCCD",
          "&xsqcup;": "\u2A06",
          "&xuplus;": "\u2A04",
          "&xutri;": "\u25B3",
          "&xvee;": "\u22C1",
          "&xwedge;": "\u22C0",
          "&yacute": "\xFD",
          "&yacute;": "\xFD",
          "&yacy;": "\u044F",
          "&ycirc;": "\u0177",
          "&ycy;": "\u044B",
          "&yen": "\xA5",
          "&yen;": "\xA5",
          "&yfr;": "\uD835\uDD36",
          "&yicy;": "\u0457",
          "&yopf;": "\uD835\uDD6A",
          "&yscr;": "\uD835\uDCCE",
          "&yucy;": "\u044E",
          "&yuml": "\xFF",
          "&yuml;": "\xFF",
          "&zacute;": "\u017A",
          "&zcaron;": "\u017E",
          "&zcy;": "\u0437",
          "&zdot;": "\u017C",
          "&zeetrf;": "\u2128",
          "&zeta;": "\u03B6",
          "&zfr;": "\uD835\uDD37",
          "&zhcy;": "\u0436",
          "&zigrarr;": "\u21DD",
          "&zopf;": "\uD835\uDD6B",
          "&zscr;": "\uD835\uDCCF",
          "&zwj;": "\u200D",
          "&zwnj;": "\u200C"
        },
        characters: {
          "\xC6": "&AElig;",
          "&": "&amp;",
          "\xC1": "&Aacute;",
          "\u0102": "&Abreve;",
          "\xC2": "&Acirc;",
          "\u0410": "&Acy;",
          "\uD835\uDD04": "&Afr;",
          "\xC0": "&Agrave;",
          "\u0391": "&Alpha;",
          "\u0100": "&Amacr;",
          "\u2A53": "&And;",
          "\u0104": "&Aogon;",
          "\uD835\uDD38": "&Aopf;",
          "\u2061": "&af;",
          "\xC5": "&angst;",
          "\uD835\uDC9C": "&Ascr;",
          "\u2254": "&coloneq;",
          "\xC3": "&Atilde;",
          "\xC4": "&Auml;",
          "\u2216": "&ssetmn;",
          "\u2AE7": "&Barv;",
          "\u2306": "&doublebarwedge;",
          "\u0411": "&Bcy;",
          "\u2235": "&because;",
          "\u212C": "&bernou;",
          "\u0392": "&Beta;",
          "\uD835\uDD05": "&Bfr;",
          "\uD835\uDD39": "&Bopf;",
          "\u02D8": "&breve;",
          "\u224E": "&bump;",
          "\u0427": "&CHcy;",
          "\xA9": "&copy;",
          "\u0106": "&Cacute;",
          "\u22D2": "&Cap;",
          "\u2145": "&DD;",
          "\u212D": "&Cfr;",
          "\u010C": "&Ccaron;",
          "\xC7": "&Ccedil;",
          "\u0108": "&Ccirc;",
          "\u2230": "&Cconint;",
          "\u010A": "&Cdot;",
          "\xB8": "&cedil;",
          "\xB7": "&middot;",
          "\u03A7": "&Chi;",
          "\u2299": "&odot;",
          "\u2296": "&ominus;",
          "\u2295": "&oplus;",
          "\u2297": "&otimes;",
          "\u2232": "&cwconint;",
          "\u201D": "&rdquor;",
          "\u2019": "&rsquor;",
          "\u2237": "&Proportion;",
          "\u2A74": "&Colone;",
          "\u2261": "&equiv;",
          "\u222F": "&DoubleContourIntegral;",
          "\u222E": "&oint;",
          "\u2102": "&complexes;",
          "\u2210": "&coprod;",
          "\u2233": "&awconint;",
          "\u2A2F": "&Cross;",
          "\uD835\uDC9E": "&Cscr;",
          "\u22D3": "&Cup;",
          "\u224D": "&asympeq;",
          "\u2911": "&DDotrahd;",
          "\u0402": "&DJcy;",
          "\u0405": "&DScy;",
          "\u040F": "&DZcy;",
          "\u2021": "&ddagger;",
          "\u21A1": "&Darr;",
          "\u2AE4": "&DoubleLeftTee;",
          "\u010E": "&Dcaron;",
          "\u0414": "&Dcy;",
          "\u2207": "&nabla;",
          "\u0394": "&Delta;",
          "\uD835\uDD07": "&Dfr;",
          "\xB4": "&acute;",
          "\u02D9": "&dot;",
          "\u02DD": "&dblac;",
          "`": "&grave;",
          "\u02DC": "&tilde;",
          "\u22C4": "&diamond;",
          "\u2146": "&dd;",
          "\uD835\uDD3B": "&Dopf;",
          "\xA8": "&uml;",
          "\u20DC": "&DotDot;",
          "\u2250": "&esdot;",
          "\u21D3": "&dArr;",
          "\u21D0": "&lArr;",
          "\u21D4": "&iff;",
          "\u27F8": "&xlArr;",
          "\u27FA": "&xhArr;",
          "\u27F9": "&xrArr;",
          "\u21D2": "&rArr;",
          "\u22A8": "&vDash;",
          "\u21D1": "&uArr;",
          "\u21D5": "&vArr;",
          "\u2225": "&spar;",
          "\u2193": "&downarrow;",
          "\u2913": "&DownArrowBar;",
          "\u21F5": "&duarr;",
          "\u0311": "&DownBreve;",
          "\u2950": "&DownLeftRightVector;",
          "\u295E": "&DownLeftTeeVector;",
          "\u21BD": "&lhard;",
          "\u2956": "&DownLeftVectorBar;",
          "\u295F": "&DownRightTeeVector;",
          "\u21C1": "&rightharpoondown;",
          "\u2957": "&DownRightVectorBar;",
          "\u22A4": "&top;",
          "\u21A7": "&mapstodown;",
          "\uD835\uDC9F": "&Dscr;",
          "\u0110": "&Dstrok;",
          "\u014A": "&ENG;",
          "\xD0": "&ETH;",
          "\xC9": "&Eacute;",
          "\u011A": "&Ecaron;",
          "\xCA": "&Ecirc;",
          "\u042D": "&Ecy;",
          "\u0116": "&Edot;",
          "\uD835\uDD08": "&Efr;",
          "\xC8": "&Egrave;",
          "\u2208": "&isinv;",
          "\u0112": "&Emacr;",
          "\u25FB": "&EmptySmallSquare;",
          "\u25AB": "&EmptyVerySmallSquare;",
          "\u0118": "&Eogon;",
          "\uD835\uDD3C": "&Eopf;",
          "\u0395": "&Epsilon;",
          "\u2A75": "&Equal;",
          "\u2242": "&esim;",
          "\u21CC": "&rlhar;",
          "\u2130": "&expectation;",
          "\u2A73": "&Esim;",
          "\u0397": "&Eta;",
          "\xCB": "&Euml;",
          "\u2203": "&exist;",
          "\u2147": "&exponentiale;",
          "\u0424": "&Fcy;",
          "\uD835\uDD09": "&Ffr;",
          "\u25FC": "&FilledSmallSquare;",
          "\u25AA": "&squf;",
          "\uD835\uDD3D": "&Fopf;",
          "\u2200": "&forall;",
          "\u2131": "&Fscr;",
          "\u0403": "&GJcy;",
          ">": "&gt;",
          "\u0393": "&Gamma;",
          "\u03DC": "&Gammad;",
          "\u011E": "&Gbreve;",
          "\u0122": "&Gcedil;",
          "\u011C": "&Gcirc;",
          "\u0413": "&Gcy;",
          "\u0120": "&Gdot;",
          "\uD835\uDD0A": "&Gfr;",
          "\u22D9": "&ggg;",
          "\uD835\uDD3E": "&Gopf;",
          "\u2265": "&geq;",
          "\u22DB": "&gtreqless;",
          "\u2267": "&geqq;",
          "\u2AA2": "&GreaterGreater;",
          "\u2277": "&gtrless;",
          "\u2A7E": "&ges;",
          "\u2273": "&gtrsim;",
          "\uD835\uDCA2": "&Gscr;",
          "\u226B": "&gg;",
          "\u042A": "&HARDcy;",
          "\u02C7": "&caron;",
          "^": "&Hat;",
          "\u0124": "&Hcirc;",
          "\u210C": "&Poincareplane;",
          "\u210B": "&hamilt;",
          "\u210D": "&quaternions;",
          "\u2500": "&boxh;",
          "\u0126": "&Hstrok;",
          "\u224F": "&bumpeq;",
          "\u0415": "&IEcy;",
          "\u0132": "&IJlig;",
          "\u0401": "&IOcy;",
          "\xCD": "&Iacute;",
          "\xCE": "&Icirc;",
          "\u0418": "&Icy;",
          "\u0130": "&Idot;",
          "\u2111": "&imagpart;",
          "\xCC": "&Igrave;",
          "\u012A": "&Imacr;",
          "\u2148": "&ii;",
          "\u222C": "&Int;",
          "\u222B": "&int;",
          "\u22C2": "&xcap;",
          "\u2063": "&ic;",
          "\u2062": "&it;",
          "\u012E": "&Iogon;",
          "\uD835\uDD40": "&Iopf;",
          "\u0399": "&Iota;",
          "\u2110": "&imagline;",
          "\u0128": "&Itilde;",
          "\u0406": "&Iukcy;",
          "\xCF": "&Iuml;",
          "\u0134": "&Jcirc;",
          "\u0419": "&Jcy;",
          "\uD835\uDD0D": "&Jfr;",
          "\uD835\uDD41": "&Jopf;",
          "\uD835\uDCA5": "&Jscr;",
          "\u0408": "&Jsercy;",
          "\u0404": "&Jukcy;",
          "\u0425": "&KHcy;",
          "\u040C": "&KJcy;",
          "\u039A": "&Kappa;",
          "\u0136": "&Kcedil;",
          "\u041A": "&Kcy;",
          "\uD835\uDD0E": "&Kfr;",
          "\uD835\uDD42": "&Kopf;",
          "\uD835\uDCA6": "&Kscr;",
          "\u0409": "&LJcy;",
          "<": "&lt;",
          "\u0139": "&Lacute;",
          "\u039B": "&Lambda;",
          "\u27EA": "&Lang;",
          "\u2112": "&lagran;",
          "\u219E": "&twoheadleftarrow;",
          "\u013D": "&Lcaron;",
          "\u013B": "&Lcedil;",
          "\u041B": "&Lcy;",
          "\u27E8": "&langle;",
          "\u2190": "&slarr;",
          "\u21E4": "&larrb;",
          "\u21C6": "&lrarr;",
          "\u2308": "&lceil;",
          "\u27E6": "&lobrk;",
          "\u2961": "&LeftDownTeeVector;",
          "\u21C3": "&downharpoonleft;",
          "\u2959": "&LeftDownVectorBar;",
          "\u230A": "&lfloor;",
          "\u2194": "&leftrightarrow;",
          "\u294E": "&LeftRightVector;",
          "\u22A3": "&dashv;",
          "\u21A4": "&mapstoleft;",
          "\u295A": "&LeftTeeVector;",
          "\u22B2": "&vltri;",
          "\u29CF": "&LeftTriangleBar;",
          "\u22B4": "&trianglelefteq;",
          "\u2951": "&LeftUpDownVector;",
          "\u2960": "&LeftUpTeeVector;",
          "\u21BF": "&upharpoonleft;",
          "\u2958": "&LeftUpVectorBar;",
          "\u21BC": "&lharu;",
          "\u2952": "&LeftVectorBar;",
          "\u22DA": "&lesseqgtr;",
          "\u2266": "&leqq;",
          "\u2276": "&lg;",
          "\u2AA1": "&LessLess;",
          "\u2A7D": "&les;",
          "\u2272": "&lsim;",
          "\uD835\uDD0F": "&Lfr;",
          "\u22D8": "&Ll;",
          "\u21DA": "&lAarr;",
          "\u013F": "&Lmidot;",
          "\u27F5": "&xlarr;",
          "\u27F7": "&xharr;",
          "\u27F6": "&xrarr;",
          "\uD835\uDD43": "&Lopf;",
          "\u2199": "&swarrow;",
          "\u2198": "&searrow;",
          "\u21B0": "&lsh;",
          "\u0141": "&Lstrok;",
          "\u226A": "&ll;",
          "\u2905": "&Map;",
          "\u041C": "&Mcy;",
          "\u205F": "&MediumSpace;",
          "\u2133": "&phmmat;",
          "\uD835\uDD10": "&Mfr;",
          "\u2213": "&mp;",
          "\uD835\uDD44": "&Mopf;",
          "\u039C": "&Mu;",
          "\u040A": "&NJcy;",
          "\u0143": "&Nacute;",
          "\u0147": "&Ncaron;",
          "\u0145": "&Ncedil;",
          "\u041D": "&Ncy;",
          "\u200B": "&ZeroWidthSpace;",
          "\n": "&NewLine;",
          "\uD835\uDD11": "&Nfr;",
          "\u2060": "&NoBreak;",
          "\xA0": "&nbsp;",
          "\u2115": "&naturals;",
          "\u2AEC": "&Not;",
          "\u2262": "&nequiv;",
          "\u226D": "&NotCupCap;",
          "\u2226": "&nspar;",
          "\u2209": "&notinva;",
          "\u2260": "&ne;",
          "\u2242\u0338": "&nesim;",
          "\u2204": "&nexists;",
          "\u226F": "&ngtr;",
          "\u2271": "&ngeq;",
          "\u2267\u0338": "&ngeqq;",
          "\u226B\u0338": "&nGtv;",
          "\u2279": "&ntgl;",
          "\u2A7E\u0338": "&nges;",
          "\u2275": "&ngsim;",
          "\u224E\u0338": "&nbump;",
          "\u224F\u0338": "&nbumpe;",
          "\u22EA": "&ntriangleleft;",
          "\u29CF\u0338": "&NotLeftTriangleBar;",
          "\u22EC": "&ntrianglelefteq;",
          "\u226E": "&nlt;",
          "\u2270": "&nleq;",
          "\u2278": "&ntlg;",
          "\u226A\u0338": "&nLtv;",
          "\u2A7D\u0338": "&nles;",
          "\u2274": "&nlsim;",
          "\u2AA2\u0338": "&NotNestedGreaterGreater;",
          "\u2AA1\u0338": "&NotNestedLessLess;",
          "\u2280": "&nprec;",
          "\u2AAF\u0338": "&npreceq;",
          "\u22E0": "&nprcue;",
          "\u220C": "&notniva;",
          "\u22EB": "&ntriangleright;",
          "\u29D0\u0338": "&NotRightTriangleBar;",
          "\u22ED": "&ntrianglerighteq;",
          "\u228F\u0338": "&NotSquareSubset;",
          "\u22E2": "&nsqsube;",
          "\u2290\u0338": "&NotSquareSuperset;",
          "\u22E3": "&nsqsupe;",
          "\u2282\u20D2": "&vnsub;",
          "\u2288": "&nsubseteq;",
          "\u2281": "&nsucc;",
          "\u2AB0\u0338": "&nsucceq;",
          "\u22E1": "&nsccue;",
          "\u227F\u0338": "&NotSucceedsTilde;",
          "\u2283\u20D2": "&vnsup;",
          "\u2289": "&nsupseteq;",
          "\u2241": "&nsim;",
          "\u2244": "&nsimeq;",
          "\u2247": "&ncong;",
          "\u2249": "&napprox;",
          "\u2224": "&nsmid;",
          "\uD835\uDCA9": "&Nscr;",
          "\xD1": "&Ntilde;",
          "\u039D": "&Nu;",
          "\u0152": "&OElig;",
          "\xD3": "&Oacute;",
          "\xD4": "&Ocirc;",
          "\u041E": "&Ocy;",
          "\u0150": "&Odblac;",
          "\uD835\uDD12": "&Ofr;",
          "\xD2": "&Ograve;",
          "\u014C": "&Omacr;",
          "\u03A9": "&ohm;",
          "\u039F": "&Omicron;",
          "\uD835\uDD46": "&Oopf;",
          "\u201C": "&ldquo;",
          "\u2018": "&lsquo;",
          "\u2A54": "&Or;",
          "\uD835\uDCAA": "&Oscr;",
          "\xD8": "&Oslash;",
          "\xD5": "&Otilde;",
          "\u2A37": "&Otimes;",
          "\xD6": "&Ouml;",
          "\u203E": "&oline;",
          "\u23DE": "&OverBrace;",
          "\u23B4": "&tbrk;",
          "\u23DC": "&OverParenthesis;",
          "\u2202": "&part;",
          "\u041F": "&Pcy;",
          "\uD835\uDD13": "&Pfr;",
          "\u03A6": "&Phi;",
          "\u03A0": "&Pi;",
          "\xB1": "&pm;",
          "\u2119": "&primes;",
          "\u2ABB": "&Pr;",
          "\u227A": "&prec;",
          "\u2AAF": "&preceq;",
          "\u227C": "&preccurlyeq;",
          "\u227E": "&prsim;",
          "\u2033": "&Prime;",
          "\u220F": "&prod;",
          "\u221D": "&vprop;",
          "\uD835\uDCAB": "&Pscr;",
          "\u03A8": "&Psi;",
          '"': "&quot;",
          "\uD835\uDD14": "&Qfr;",
          "\u211A": "&rationals;",
          "\uD835\uDCAC": "&Qscr;",
          "\u2910": "&drbkarow;",
          "\xAE": "&reg;",
          "\u0154": "&Racute;",
          "\u27EB": "&Rang;",
          "\u21A0": "&twoheadrightarrow;",
          "\u2916": "&Rarrtl;",
          "\u0158": "&Rcaron;",
          "\u0156": "&Rcedil;",
          "\u0420": "&Rcy;",
          "\u211C": "&realpart;",
          "\u220B": "&niv;",
          "\u21CB": "&lrhar;",
          "\u296F": "&duhar;",
          "\u03A1": "&Rho;",
          "\u27E9": "&rangle;",
          "\u2192": "&srarr;",
          "\u21E5": "&rarrb;",
          "\u21C4": "&rlarr;",
          "\u2309": "&rceil;",
          "\u27E7": "&robrk;",
          "\u295D": "&RightDownTeeVector;",
          "\u21C2": "&downharpoonright;",
          "\u2955": "&RightDownVectorBar;",
          "\u230B": "&rfloor;",
          "\u22A2": "&vdash;",
          "\u21A6": "&mapsto;",
          "\u295B": "&RightTeeVector;",
          "\u22B3": "&vrtri;",
          "\u29D0": "&RightTriangleBar;",
          "\u22B5": "&trianglerighteq;",
          "\u294F": "&RightUpDownVector;",
          "\u295C": "&RightUpTeeVector;",
          "\u21BE": "&upharpoonright;",
          "\u2954": "&RightUpVectorBar;",
          "\u21C0": "&rightharpoonup;",
          "\u2953": "&RightVectorBar;",
          "\u211D": "&reals;",
          "\u2970": "&RoundImplies;",
          "\u21DB": "&rAarr;",
          "\u211B": "&realine;",
          "\u21B1": "&rsh;",
          "\u29F4": "&RuleDelayed;",
          "\u0429": "&SHCHcy;",
          "\u0428": "&SHcy;",
          "\u042C": "&SOFTcy;",
          "\u015A": "&Sacute;",
          "\u2ABC": "&Sc;",
          "\u0160": "&Scaron;",
          "\u015E": "&Scedil;",
          "\u015C": "&Scirc;",
          "\u0421": "&Scy;",
          "\uD835\uDD16": "&Sfr;",
          "\u2191": "&uparrow;",
          "\u03A3": "&Sigma;",
          "\u2218": "&compfn;",
          "\uD835\uDD4A": "&Sopf;",
          "\u221A": "&radic;",
          "\u25A1": "&square;",
          "\u2293": "&sqcap;",
          "\u228F": "&sqsubset;",
          "\u2291": "&sqsubseteq;",
          "\u2290": "&sqsupset;",
          "\u2292": "&sqsupseteq;",
          "\u2294": "&sqcup;",
          "\uD835\uDCAE": "&Sscr;",
          "\u22C6": "&sstarf;",
          "\u22D0": "&Subset;",
          "\u2286": "&subseteq;",
          "\u227B": "&succ;",
          "\u2AB0": "&succeq;",
          "\u227D": "&succcurlyeq;",
          "\u227F": "&succsim;",
          "\u2211": "&sum;",
          "\u22D1": "&Supset;",
          "\u2283": "&supset;",
          "\u2287": "&supseteq;",
          "\xDE": "&THORN;",
          "\u2122": "&trade;",
          "\u040B": "&TSHcy;",
          "\u0426": "&TScy;",
          "	": "&Tab;",
          "\u03A4": "&Tau;",
          "\u0164": "&Tcaron;",
          "\u0162": "&Tcedil;",
          "\u0422": "&Tcy;",
          "\uD835\uDD17": "&Tfr;",
          "\u2234": "&therefore;",
          "\u0398": "&Theta;",
          "\u205F\u200A": "&ThickSpace;",
          "\u2009": "&thinsp;",
          "\u223C": "&thksim;",
          "\u2243": "&simeq;",
          "\u2245": "&cong;",
          "\u2248": "&thkap;",
          "\uD835\uDD4B": "&Topf;",
          "\u20DB": "&tdot;",
          "\uD835\uDCAF": "&Tscr;",
          "\u0166": "&Tstrok;",
          "\xDA": "&Uacute;",
          "\u219F": "&Uarr;",
          "\u2949": "&Uarrocir;",
          "\u040E": "&Ubrcy;",
          "\u016C": "&Ubreve;",
          "\xDB": "&Ucirc;",
          "\u0423": "&Ucy;",
          "\u0170": "&Udblac;",
          "\uD835\uDD18": "&Ufr;",
          "\xD9": "&Ugrave;",
          "\u016A": "&Umacr;",
          _: "&lowbar;",
          "\u23DF": "&UnderBrace;",
          "\u23B5": "&bbrk;",
          "\u23DD": "&UnderParenthesis;",
          "\u22C3": "&xcup;",
          "\u228E": "&uplus;",
          "\u0172": "&Uogon;",
          "\uD835\uDD4C": "&Uopf;",
          "\u2912": "&UpArrowBar;",
          "\u21C5": "&udarr;",
          "\u2195": "&varr;",
          "\u296E": "&udhar;",
          "\u22A5": "&perp;",
          "\u21A5": "&mapstoup;",
          "\u2196": "&nwarrow;",
          "\u2197": "&nearrow;",
          "\u03D2": "&upsih;",
          "\u03A5": "&Upsilon;",
          "\u016E": "&Uring;",
          "\uD835\uDCB0": "&Uscr;",
          "\u0168": "&Utilde;",
          "\xDC": "&Uuml;",
          "\u22AB": "&VDash;",
          "\u2AEB": "&Vbar;",
          "\u0412": "&Vcy;",
          "\u22A9": "&Vdash;",
          "\u2AE6": "&Vdashl;",
          "\u22C1": "&xvee;",
          "\u2016": "&Vert;",
          "\u2223": "&smid;",
          "|": "&vert;",
          "\u2758": "&VerticalSeparator;",
          "\u2240": "&wreath;",
          "\u200A": "&hairsp;",
          "\uD835\uDD19": "&Vfr;",
          "\uD835\uDD4D": "&Vopf;",
          "\uD835\uDCB1": "&Vscr;",
          "\u22AA": "&Vvdash;",
          "\u0174": "&Wcirc;",
          "\u22C0": "&xwedge;",
          "\uD835\uDD1A": "&Wfr;",
          "\uD835\uDD4E": "&Wopf;",
          "\uD835\uDCB2": "&Wscr;",
          "\uD835\uDD1B": "&Xfr;",
          "\u039E": "&Xi;",
          "\uD835\uDD4F": "&Xopf;",
          "\uD835\uDCB3": "&Xscr;",
          "\u042F": "&YAcy;",
          "\u0407": "&YIcy;",
          "\u042E": "&YUcy;",
          "\xDD": "&Yacute;",
          "\u0176": "&Ycirc;",
          "\u042B": "&Ycy;",
          "\uD835\uDD1C": "&Yfr;",
          "\uD835\uDD50": "&Yopf;",
          "\uD835\uDCB4": "&Yscr;",
          "\u0178": "&Yuml;",
          "\u0416": "&ZHcy;",
          "\u0179": "&Zacute;",
          "\u017D": "&Zcaron;",
          "\u0417": "&Zcy;",
          "\u017B": "&Zdot;",
          "\u0396": "&Zeta;",
          "\u2128": "&zeetrf;",
          "\u2124": "&integers;",
          "\uD835\uDCB5": "&Zscr;",
          "\xE1": "&aacute;",
          "\u0103": "&abreve;",
          "\u223E": "&mstpos;",
          "\u223E\u0333": "&acE;",
          "\u223F": "&acd;",
          "\xE2": "&acirc;",
          "\u0430": "&acy;",
          "\xE6": "&aelig;",
          "\uD835\uDD1E": "&afr;",
          "\xE0": "&agrave;",
          "\u2135": "&aleph;",
          "\u03B1": "&alpha;",
          "\u0101": "&amacr;",
          "\u2A3F": "&amalg;",
          "\u2227": "&wedge;",
          "\u2A55": "&andand;",
          "\u2A5C": "&andd;",
          "\u2A58": "&andslope;",
          "\u2A5A": "&andv;",
          "\u2220": "&angle;",
          "\u29A4": "&ange;",
          "\u2221": "&measuredangle;",
          "\u29A8": "&angmsdaa;",
          "\u29A9": "&angmsdab;",
          "\u29AA": "&angmsdac;",
          "\u29AB": "&angmsdad;",
          "\u29AC": "&angmsdae;",
          "\u29AD": "&angmsdaf;",
          "\u29AE": "&angmsdag;",
          "\u29AF": "&angmsdah;",
          "\u221F": "&angrt;",
          "\u22BE": "&angrtvb;",
          "\u299D": "&angrtvbd;",
          "\u2222": "&angsph;",
          "\u237C": "&angzarr;",
          "\u0105": "&aogon;",
          "\uD835\uDD52": "&aopf;",
          "\u2A70": "&apE;",
          "\u2A6F": "&apacir;",
          "\u224A": "&approxeq;",
          "\u224B": "&apid;",
          "'": "&apos;",
          "\xE5": "&aring;",
          "\uD835\uDCB6": "&ascr;",
          "*": "&midast;",
          "\xE3": "&atilde;",
          "\xE4": "&auml;",
          "\u2A11": "&awint;",
          "\u2AED": "&bNot;",
          "\u224C": "&bcong;",
          "\u03F6": "&bepsi;",
          "\u2035": "&bprime;",
          "\u223D": "&bsim;",
          "\u22CD": "&bsime;",
          "\u22BD": "&barvee;",
          "\u2305": "&barwedge;",
          "\u23B6": "&bbrktbrk;",
          "\u0431": "&bcy;",
          "\u201E": "&ldquor;",
          "\u29B0": "&bemptyv;",
          "\u03B2": "&beta;",
          "\u2136": "&beth;",
          "\u226C": "&twixt;",
          "\uD835\uDD1F": "&bfr;",
          "\u25EF": "&xcirc;",
          "\u2A00": "&xodot;",
          "\u2A01": "&xoplus;",
          "\u2A02": "&xotime;",
          "\u2A06": "&xsqcup;",
          "\u2605": "&starf;",
          "\u25BD": "&xdtri;",
          "\u25B3": "&xutri;",
          "\u2A04": "&xuplus;",
          "\u290D": "&rbarr;",
          "\u29EB": "&lozf;",
          "\u25B4": "&utrif;",
          "\u25BE": "&dtrif;",
          "\u25C2": "&ltrif;",
          "\u25B8": "&rtrif;",
          "\u2423": "&blank;",
          "\u2592": "&blk12;",
          "\u2591": "&blk14;",
          "\u2593": "&blk34;",
          "\u2588": "&block;",
          "=\u20E5": "&bne;",
          "\u2261\u20E5": "&bnequiv;",
          "\u2310": "&bnot;",
          "\uD835\uDD53": "&bopf;",
          "\u22C8": "&bowtie;",
          "\u2557": "&boxDL;",
          "\u2554": "&boxDR;",
          "\u2556": "&boxDl;",
          "\u2553": "&boxDr;",
          "\u2550": "&boxH;",
          "\u2566": "&boxHD;",
          "\u2569": "&boxHU;",
          "\u2564": "&boxHd;",
          "\u2567": "&boxHu;",
          "\u255D": "&boxUL;",
          "\u255A": "&boxUR;",
          "\u255C": "&boxUl;",
          "\u2559": "&boxUr;",
          "\u2551": "&boxV;",
          "\u256C": "&boxVH;",
          "\u2563": "&boxVL;",
          "\u2560": "&boxVR;",
          "\u256B": "&boxVh;",
          "\u2562": "&boxVl;",
          "\u255F": "&boxVr;",
          "\u29C9": "&boxbox;",
          "\u2555": "&boxdL;",
          "\u2552": "&boxdR;",
          "\u2510": "&boxdl;",
          "\u250C": "&boxdr;",
          "\u2565": "&boxhD;",
          "\u2568": "&boxhU;",
          "\u252C": "&boxhd;",
          "\u2534": "&boxhu;",
          "\u229F": "&minusb;",
          "\u229E": "&plusb;",
          "\u22A0": "&timesb;",
          "\u255B": "&boxuL;",
          "\u2558": "&boxuR;",
          "\u2518": "&boxul;",
          "\u2514": "&boxur;",
          "\u2502": "&boxv;",
          "\u256A": "&boxvH;",
          "\u2561": "&boxvL;",
          "\u255E": "&boxvR;",
          "\u253C": "&boxvh;",
          "\u2524": "&boxvl;",
          "\u251C": "&boxvr;",
          "\xA6": "&brvbar;",
          "\uD835\uDCB7": "&bscr;",
          "\u204F": "&bsemi;",
          "\\": "&bsol;",
          "\u29C5": "&bsolb;",
          "\u27C8": "&bsolhsub;",
          "\u2022": "&bullet;",
          "\u2AAE": "&bumpE;",
          "\u0107": "&cacute;",
          "\u2229": "&cap;",
          "\u2A44": "&capand;",
          "\u2A49": "&capbrcup;",
          "\u2A4B": "&capcap;",
          "\u2A47": "&capcup;",
          "\u2A40": "&capdot;",
          "\u2229\uFE00": "&caps;",
          "\u2041": "&caret;",
          "\u2A4D": "&ccaps;",
          "\u010D": "&ccaron;",
          "\xE7": "&ccedil;",
          "\u0109": "&ccirc;",
          "\u2A4C": "&ccups;",
          "\u2A50": "&ccupssm;",
          "\u010B": "&cdot;",
          "\u29B2": "&cemptyv;",
          "\xA2": "&cent;",
          "\uD835\uDD20": "&cfr;",
          "\u0447": "&chcy;",
          "\u2713": "&checkmark;",
          "\u03C7": "&chi;",
          "\u25CB": "&cir;",
          "\u29C3": "&cirE;",
          "\u02C6": "&circ;",
          "\u2257": "&cire;",
          "\u21BA": "&olarr;",
          "\u21BB": "&orarr;",
          "\u24C8": "&oS;",
          "\u229B": "&oast;",
          "\u229A": "&ocir;",
          "\u229D": "&odash;",
          "\u2A10": "&cirfnint;",
          "\u2AEF": "&cirmid;",
          "\u29C2": "&cirscir;",
          "\u2663": "&clubsuit;",
          ":": "&colon;",
          ",": "&comma;",
          "@": "&commat;",
          "\u2201": "&complement;",
          "\u2A6D": "&congdot;",
          "\uD835\uDD54": "&copf;",
          "\u2117": "&copysr;",
          "\u21B5": "&crarr;",
          "\u2717": "&cross;",
          "\uD835\uDCB8": "&cscr;",
          "\u2ACF": "&csub;",
          "\u2AD1": "&csube;",
          "\u2AD0": "&csup;",
          "\u2AD2": "&csupe;",
          "\u22EF": "&ctdot;",
          "\u2938": "&cudarrl;",
          "\u2935": "&cudarrr;",
          "\u22DE": "&curlyeqprec;",
          "\u22DF": "&curlyeqsucc;",
          "\u21B6": "&curvearrowleft;",
          "\u293D": "&cularrp;",
          "\u222A": "&cup;",
          "\u2A48": "&cupbrcap;",
          "\u2A46": "&cupcap;",
          "\u2A4A": "&cupcup;",
          "\u228D": "&cupdot;",
          "\u2A45": "&cupor;",
          "\u222A\uFE00": "&cups;",
          "\u21B7": "&curvearrowright;",
          "\u293C": "&curarrm;",
          "\u22CE": "&cuvee;",
          "\u22CF": "&cuwed;",
          "\xA4": "&curren;",
          "\u2231": "&cwint;",
          "\u232D": "&cylcty;",
          "\u2965": "&dHar;",
          "\u2020": "&dagger;",
          "\u2138": "&daleth;",
          "\u2010": "&hyphen;",
          "\u290F": "&rBarr;",
          "\u010F": "&dcaron;",
          "\u0434": "&dcy;",
          "\u21CA": "&downdownarrows;",
          "\u2A77": "&eDDot;",
          "\xB0": "&deg;",
          "\u03B4": "&delta;",
          "\u29B1": "&demptyv;",
          "\u297F": "&dfisht;",
          "\uD835\uDD21": "&dfr;",
          "\u2666": "&diams;",
          "\u03DD": "&gammad;",
          "\u22F2": "&disin;",
          "\xF7": "&divide;",
          "\u22C7": "&divonx;",
          "\u0452": "&djcy;",
          "\u231E": "&llcorner;",
          "\u230D": "&dlcrop;",
          $: "&dollar;",
          "\uD835\uDD55": "&dopf;",
          "\u2251": "&eDot;",
          "\u2238": "&minusd;",
          "\u2214": "&plusdo;",
          "\u22A1": "&sdotb;",
          "\u231F": "&lrcorner;",
          "\u230C": "&drcrop;",
          "\uD835\uDCB9": "&dscr;",
          "\u0455": "&dscy;",
          "\u29F6": "&dsol;",
          "\u0111": "&dstrok;",
          "\u22F1": "&dtdot;",
          "\u25BF": "&triangledown;",
          "\u29A6": "&dwangle;",
          "\u045F": "&dzcy;",
          "\u27FF": "&dzigrarr;",
          "\xE9": "&eacute;",
          "\u2A6E": "&easter;",
          "\u011B": "&ecaron;",
          "\u2256": "&eqcirc;",
          "\xEA": "&ecirc;",
          "\u2255": "&eqcolon;",
          "\u044D": "&ecy;",
          "\u0117": "&edot;",
          "\u2252": "&fallingdotseq;",
          "\uD835\uDD22": "&efr;",
          "\u2A9A": "&eg;",
          "\xE8": "&egrave;",
          "\u2A96": "&eqslantgtr;",
          "\u2A98": "&egsdot;",
          "\u2A99": "&el;",
          "\u23E7": "&elinters;",
          "\u2113": "&ell;",
          "\u2A95": "&eqslantless;",
          "\u2A97": "&elsdot;",
          "\u0113": "&emacr;",
          "\u2205": "&varnothing;",
          "\u2004": "&emsp13;",
          "\u2005": "&emsp14;",
          "\u2003": "&emsp;",
          "\u014B": "&eng;",
          "\u2002": "&ensp;",
          "\u0119": "&eogon;",
          "\uD835\uDD56": "&eopf;",
          "\u22D5": "&epar;",
          "\u29E3": "&eparsl;",
          "\u2A71": "&eplus;",
          "\u03B5": "&epsilon;",
          "\u03F5": "&varepsilon;",
          "=": "&equals;",
          "\u225F": "&questeq;",
          "\u2A78": "&equivDD;",
          "\u29E5": "&eqvparsl;",
          "\u2253": "&risingdotseq;",
          "\u2971": "&erarr;",
          "\u212F": "&escr;",
          "\u03B7": "&eta;",
          "\xF0": "&eth;",
          "\xEB": "&euml;",
          "\u20AC": "&euro;",
          "!": "&excl;",
          "\u0444": "&fcy;",
          "\u2640": "&female;",
          "\uFB03": "&ffilig;",
          "\uFB00": "&fflig;",
          "\uFB04": "&ffllig;",
          "\uD835\uDD23": "&ffr;",
          "\uFB01": "&filig;",
          fj: "&fjlig;",
          "\u266D": "&flat;",
          "\uFB02": "&fllig;",
          "\u25B1": "&fltns;",
          "\u0192": "&fnof;",
          "\uD835\uDD57": "&fopf;",
          "\u22D4": "&pitchfork;",
          "\u2AD9": "&forkv;",
          "\u2A0D": "&fpartint;",
          "\xBD": "&half;",
          "\u2153": "&frac13;",
          "\xBC": "&frac14;",
          "\u2155": "&frac15;",
          "\u2159": "&frac16;",
          "\u215B": "&frac18;",
          "\u2154": "&frac23;",
          "\u2156": "&frac25;",
          "\xBE": "&frac34;",
          "\u2157": "&frac35;",
          "\u215C": "&frac38;",
          "\u2158": "&frac45;",
          "\u215A": "&frac56;",
          "\u215D": "&frac58;",
          "\u215E": "&frac78;",
          "\u2044": "&frasl;",
          "\u2322": "&sfrown;",
          "\uD835\uDCBB": "&fscr;",
          "\u2A8C": "&gtreqqless;",
          "\u01F5": "&gacute;",
          "\u03B3": "&gamma;",
          "\u2A86": "&gtrapprox;",
          "\u011F": "&gbreve;",
          "\u011D": "&gcirc;",
          "\u0433": "&gcy;",
          "\u0121": "&gdot;",
          "\u2AA9": "&gescc;",
          "\u2A80": "&gesdot;",
          "\u2A82": "&gesdoto;",
          "\u2A84": "&gesdotol;",
          "\u22DB\uFE00": "&gesl;",
          "\u2A94": "&gesles;",
          "\uD835\uDD24": "&gfr;",
          "\u2137": "&gimel;",
          "\u0453": "&gjcy;",
          "\u2A92": "&glE;",
          "\u2AA5": "&gla;",
          "\u2AA4": "&glj;",
          "\u2269": "&gneqq;",
          "\u2A8A": "&gnapprox;",
          "\u2A88": "&gneq;",
          "\u22E7": "&gnsim;",
          "\uD835\uDD58": "&gopf;",
          "\u210A": "&gscr;",
          "\u2A8E": "&gsime;",
          "\u2A90": "&gsiml;",
          "\u2AA7": "&gtcc;",
          "\u2A7A": "&gtcir;",
          "\u22D7": "&gtrdot;",
          "\u2995": "&gtlPar;",
          "\u2A7C": "&gtquest;",
          "\u2978": "&gtrarr;",
          "\u2269\uFE00": "&gvnE;",
          "\u044A": "&hardcy;",
          "\u2948": "&harrcir;",
          "\u21AD": "&leftrightsquigarrow;",
          "\u210F": "&plankv;",
          "\u0125": "&hcirc;",
          "\u2665": "&heartsuit;",
          "\u2026": "&mldr;",
          "\u22B9": "&hercon;",
          "\uD835\uDD25": "&hfr;",
          "\u2925": "&searhk;",
          "\u2926": "&swarhk;",
          "\u21FF": "&hoarr;",
          "\u223B": "&homtht;",
          "\u21A9": "&larrhk;",
          "\u21AA": "&rarrhk;",
          "\uD835\uDD59": "&hopf;",
          "\u2015": "&horbar;",
          "\uD835\uDCBD": "&hscr;",
          "\u0127": "&hstrok;",
          "\u2043": "&hybull;",
          "\xED": "&iacute;",
          "\xEE": "&icirc;",
          "\u0438": "&icy;",
          "\u0435": "&iecy;",
          "\xA1": "&iexcl;",
          "\uD835\uDD26": "&ifr;",
          "\xEC": "&igrave;",
          "\u2A0C": "&qint;",
          "\u222D": "&tint;",
          "\u29DC": "&iinfin;",
          "\u2129": "&iiota;",
          "\u0133": "&ijlig;",
          "\u012B": "&imacr;",
          "\u0131": "&inodot;",
          "\u22B7": "&imof;",
          "\u01B5": "&imped;",
          "\u2105": "&incare;",
          "\u221E": "&infin;",
          "\u29DD": "&infintie;",
          "\u22BA": "&intercal;",
          "\u2A17": "&intlarhk;",
          "\u2A3C": "&iprod;",
          "\u0451": "&iocy;",
          "\u012F": "&iogon;",
          "\uD835\uDD5A": "&iopf;",
          "\u03B9": "&iota;",
          "\xBF": "&iquest;",
          "\uD835\uDCBE": "&iscr;",
          "\u22F9": "&isinE;",
          "\u22F5": "&isindot;",
          "\u22F4": "&isins;",
          "\u22F3": "&isinsv;",
          "\u0129": "&itilde;",
          "\u0456": "&iukcy;",
          "\xEF": "&iuml;",
          "\u0135": "&jcirc;",
          "\u0439": "&jcy;",
          "\uD835\uDD27": "&jfr;",
          "\u0237": "&jmath;",
          "\uD835\uDD5B": "&jopf;",
          "\uD835\uDCBF": "&jscr;",
          "\u0458": "&jsercy;",
          "\u0454": "&jukcy;",
          "\u03BA": "&kappa;",
          "\u03F0": "&varkappa;",
          "\u0137": "&kcedil;",
          "\u043A": "&kcy;",
          "\uD835\uDD28": "&kfr;",
          "\u0138": "&kgreen;",
          "\u0445": "&khcy;",
          "\u045C": "&kjcy;",
          "\uD835\uDD5C": "&kopf;",
          "\uD835\uDCC0": "&kscr;",
          "\u291B": "&lAtail;",
          "\u290E": "&lBarr;",
          "\u2A8B": "&lesseqqgtr;",
          "\u2962": "&lHar;",
          "\u013A": "&lacute;",
          "\u29B4": "&laemptyv;",
          "\u03BB": "&lambda;",
          "\u2991": "&langd;",
          "\u2A85": "&lessapprox;",
          "\xAB": "&laquo;",
          "\u291F": "&larrbfs;",
          "\u291D": "&larrfs;",
          "\u21AB": "&looparrowleft;",
          "\u2939": "&larrpl;",
          "\u2973": "&larrsim;",
          "\u21A2": "&leftarrowtail;",
          "\u2AAB": "&lat;",
          "\u2919": "&latail;",
          "\u2AAD": "&late;",
          "\u2AAD\uFE00": "&lates;",
          "\u290C": "&lbarr;",
          "\u2772": "&lbbrk;",
          "{": "&lcub;",
          "[": "&lsqb;",
          "\u298B": "&lbrke;",
          "\u298F": "&lbrksld;",
          "\u298D": "&lbrkslu;",
          "\u013E": "&lcaron;",
          "\u013C": "&lcedil;",
          "\u043B": "&lcy;",
          "\u2936": "&ldca;",
          "\u2967": "&ldrdhar;",
          "\u294B": "&ldrushar;",
          "\u21B2": "&ldsh;",
          "\u2264": "&leq;",
          "\u21C7": "&llarr;",
          "\u22CB": "&lthree;",
          "\u2AA8": "&lescc;",
          "\u2A7F": "&lesdot;",
          "\u2A81": "&lesdoto;",
          "\u2A83": "&lesdotor;",
          "\u22DA\uFE00": "&lesg;",
          "\u2A93": "&lesges;",
          "\u22D6": "&ltdot;",
          "\u297C": "&lfisht;",
          "\uD835\uDD29": "&lfr;",
          "\u2A91": "&lgE;",
          "\u296A": "&lharul;",
          "\u2584": "&lhblk;",
          "\u0459": "&ljcy;",
          "\u296B": "&llhard;",
          "\u25FA": "&lltri;",
          "\u0140": "&lmidot;",
          "\u23B0": "&lmoustache;",
          "\u2268": "&lneqq;",
          "\u2A89": "&lnapprox;",
          "\u2A87": "&lneq;",
          "\u22E6": "&lnsim;",
          "\u27EC": "&loang;",
          "\u21FD": "&loarr;",
          "\u27FC": "&xmap;",
          "\u21AC": "&rarrlp;",
          "\u2985": "&lopar;",
          "\uD835\uDD5D": "&lopf;",
          "\u2A2D": "&loplus;",
          "\u2A34": "&lotimes;",
          "\u2217": "&lowast;",
          "\u25CA": "&lozenge;",
          "(": "&lpar;",
          "\u2993": "&lparlt;",
          "\u296D": "&lrhard;",
          "\u200E": "&lrm;",
          "\u22BF": "&lrtri;",
          "\u2039": "&lsaquo;",
          "\uD835\uDCC1": "&lscr;",
          "\u2A8D": "&lsime;",
          "\u2A8F": "&lsimg;",
          "\u201A": "&sbquo;",
          "\u0142": "&lstrok;",
          "\u2AA6": "&ltcc;",
          "\u2A79": "&ltcir;",
          "\u22C9": "&ltimes;",
          "\u2976": "&ltlarr;",
          "\u2A7B": "&ltquest;",
          "\u2996": "&ltrPar;",
          "\u25C3": "&triangleleft;",
          "\u294A": "&lurdshar;",
          "\u2966": "&luruhar;",
          "\u2268\uFE00": "&lvnE;",
          "\u223A": "&mDDot;",
          "\xAF": "&strns;",
          "\u2642": "&male;",
          "\u2720": "&maltese;",
          "\u25AE": "&marker;",
          "\u2A29": "&mcomma;",
          "\u043C": "&mcy;",
          "\u2014": "&mdash;",
          "\uD835\uDD2A": "&mfr;",
          "\u2127": "&mho;",
          "\xB5": "&micro;",
          "\u2AF0": "&midcir;",
          "\u2212": "&minus;",
          "\u2A2A": "&minusdu;",
          "\u2ADB": "&mlcp;",
          "\u22A7": "&models;",
          "\uD835\uDD5E": "&mopf;",
          "\uD835\uDCC2": "&mscr;",
          "\u03BC": "&mu;",
          "\u22B8": "&mumap;",
          "\u22D9\u0338": "&nGg;",
          "\u226B\u20D2": "&nGt;",
          "\u21CD": "&nlArr;",
          "\u21CE": "&nhArr;",
          "\u22D8\u0338": "&nLl;",
          "\u226A\u20D2": "&nLt;",
          "\u21CF": "&nrArr;",
          "\u22AF": "&nVDash;",
          "\u22AE": "&nVdash;",
          "\u0144": "&nacute;",
          "\u2220\u20D2": "&nang;",
          "\u2A70\u0338": "&napE;",
          "\u224B\u0338": "&napid;",
          "\u0149": "&napos;",
          "\u266E": "&natural;",
          "\u2A43": "&ncap;",
          "\u0148": "&ncaron;",
          "\u0146": "&ncedil;",
          "\u2A6D\u0338": "&ncongdot;",
          "\u2A42": "&ncup;",
          "\u043D": "&ncy;",
          "\u2013": "&ndash;",
          "\u21D7": "&neArr;",
          "\u2924": "&nearhk;",
          "\u2250\u0338": "&nedot;",
          "\u2928": "&toea;",
          "\uD835\uDD2B": "&nfr;",
          "\u21AE": "&nleftrightarrow;",
          "\u2AF2": "&nhpar;",
          "\u22FC": "&nis;",
          "\u22FA": "&nisd;",
          "\u045A": "&njcy;",
          "\u2266\u0338": "&nleqq;",
          "\u219A": "&nleftarrow;",
          "\u2025": "&nldr;",
          "\uD835\uDD5F": "&nopf;",
          "\xAC": "&not;",
          "\u22F9\u0338": "&notinE;",
          "\u22F5\u0338": "&notindot;",
          "\u22F7": "&notinvb;",
          "\u22F6": "&notinvc;",
          "\u22FE": "&notnivb;",
          "\u22FD": "&notnivc;",
          "\u2AFD\u20E5": "&nparsl;",
          "\u2202\u0338": "&npart;",
          "\u2A14": "&npolint;",
          "\u219B": "&nrightarrow;",
          "\u2933\u0338": "&nrarrc;",
          "\u219D\u0338": "&nrarrw;",
          "\uD835\uDCC3": "&nscr;",
          "\u2284": "&nsub;",
          "\u2AC5\u0338": "&nsubseteqq;",
          "\u2285": "&nsup;",
          "\u2AC6\u0338": "&nsupseteqq;",
          "\xF1": "&ntilde;",
          "\u03BD": "&nu;",
          "#": "&num;",
          "\u2116": "&numero;",
          "\u2007": "&numsp;",
          "\u22AD": "&nvDash;",
          "\u2904": "&nvHarr;",
          "\u224D\u20D2": "&nvap;",
          "\u22AC": "&nvdash;",
          "\u2265\u20D2": "&nvge;",
          ">\u20D2": "&nvgt;",
          "\u29DE": "&nvinfin;",
          "\u2902": "&nvlArr;",
          "\u2264\u20D2": "&nvle;",
          "<\u20D2": "&nvlt;",
          "\u22B4\u20D2": "&nvltrie;",
          "\u2903": "&nvrArr;",
          "\u22B5\u20D2": "&nvrtrie;",
          "\u223C\u20D2": "&nvsim;",
          "\u21D6": "&nwArr;",
          "\u2923": "&nwarhk;",
          "\u2927": "&nwnear;",
          "\xF3": "&oacute;",
          "\xF4": "&ocirc;",
          "\u043E": "&ocy;",
          "\u0151": "&odblac;",
          "\u2A38": "&odiv;",
          "\u29BC": "&odsold;",
          "\u0153": "&oelig;",
          "\u29BF": "&ofcir;",
          "\uD835\uDD2C": "&ofr;",
          "\u02DB": "&ogon;",
          "\xF2": "&ograve;",
          "\u29C1": "&ogt;",
          "\u29B5": "&ohbar;",
          "\u29BE": "&olcir;",
          "\u29BB": "&olcross;",
          "\u29C0": "&olt;",
          "\u014D": "&omacr;",
          "\u03C9": "&omega;",
          "\u03BF": "&omicron;",
          "\u29B6": "&omid;",
          "\uD835\uDD60": "&oopf;",
          "\u29B7": "&opar;",
          "\u29B9": "&operp;",
          "\u2228": "&vee;",
          "\u2A5D": "&ord;",
          "\u2134": "&oscr;",
          "\xAA": "&ordf;",
          "\xBA": "&ordm;",
          "\u22B6": "&origof;",
          "\u2A56": "&oror;",
          "\u2A57": "&orslope;",
          "\u2A5B": "&orv;",
          "\xF8": "&oslash;",
          "\u2298": "&osol;",
          "\xF5": "&otilde;",
          "\u2A36": "&otimesas;",
          "\xF6": "&ouml;",
          "\u233D": "&ovbar;",
          "\xB6": "&para;",
          "\u2AF3": "&parsim;",
          "\u2AFD": "&parsl;",
          "\u043F": "&pcy;",
          "%": "&percnt;",
          ".": "&period;",
          "\u2030": "&permil;",
          "\u2031": "&pertenk;",
          "\uD835\uDD2D": "&pfr;",
          "\u03C6": "&phi;",
          "\u03D5": "&varphi;",
          "\u260E": "&phone;",
          "\u03C0": "&pi;",
          "\u03D6": "&varpi;",
          "\u210E": "&planckh;",
          "+": "&plus;",
          "\u2A23": "&plusacir;",
          "\u2A22": "&pluscir;",
          "\u2A25": "&plusdu;",
          "\u2A72": "&pluse;",
          "\u2A26": "&plussim;",
          "\u2A27": "&plustwo;",
          "\u2A15": "&pointint;",
          "\uD835\uDD61": "&popf;",
          "\xA3": "&pound;",
          "\u2AB3": "&prE;",
          "\u2AB7": "&precapprox;",
          "\u2AB9": "&prnap;",
          "\u2AB5": "&prnE;",
          "\u22E8": "&prnsim;",
          "\u2032": "&prime;",
          "\u232E": "&profalar;",
          "\u2312": "&profline;",
          "\u2313": "&profsurf;",
          "\u22B0": "&prurel;",
          "\uD835\uDCC5": "&pscr;",
          "\u03C8": "&psi;",
          "\u2008": "&puncsp;",
          "\uD835\uDD2E": "&qfr;",
          "\uD835\uDD62": "&qopf;",
          "\u2057": "&qprime;",
          "\uD835\uDCC6": "&qscr;",
          "\u2A16": "&quatint;",
          "?": "&quest;",
          "\u291C": "&rAtail;",
          "\u2964": "&rHar;",
          "\u223D\u0331": "&race;",
          "\u0155": "&racute;",
          "\u29B3": "&raemptyv;",
          "\u2992": "&rangd;",
          "\u29A5": "&range;",
          "\xBB": "&raquo;",
          "\u2975": "&rarrap;",
          "\u2920": "&rarrbfs;",
          "\u2933": "&rarrc;",
          "\u291E": "&rarrfs;",
          "\u2945": "&rarrpl;",
          "\u2974": "&rarrsim;",
          "\u21A3": "&rightarrowtail;",
          "\u219D": "&rightsquigarrow;",
          "\u291A": "&ratail;",
          "\u2236": "&ratio;",
          "\u2773": "&rbbrk;",
          "}": "&rcub;",
          "]": "&rsqb;",
          "\u298C": "&rbrke;",
          "\u298E": "&rbrksld;",
          "\u2990": "&rbrkslu;",
          "\u0159": "&rcaron;",
          "\u0157": "&rcedil;",
          "\u0440": "&rcy;",
          "\u2937": "&rdca;",
          "\u2969": "&rdldhar;",
          "\u21B3": "&rdsh;",
          "\u25AD": "&rect;",
          "\u297D": "&rfisht;",
          "\uD835\uDD2F": "&rfr;",
          "\u296C": "&rharul;",
          "\u03C1": "&rho;",
          "\u03F1": "&varrho;",
          "\u21C9": "&rrarr;",
          "\u22CC": "&rthree;",
          "\u02DA": "&ring;",
          "\u200F": "&rlm;",
          "\u23B1": "&rmoustache;",
          "\u2AEE": "&rnmid;",
          "\u27ED": "&roang;",
          "\u21FE": "&roarr;",
          "\u2986": "&ropar;",
          "\uD835\uDD63": "&ropf;",
          "\u2A2E": "&roplus;",
          "\u2A35": "&rotimes;",
          ")": "&rpar;",
          "\u2994": "&rpargt;",
          "\u2A12": "&rppolint;",
          "\u203A": "&rsaquo;",
          "\uD835\uDCC7": "&rscr;",
          "\u22CA": "&rtimes;",
          "\u25B9": "&triangleright;",
          "\u29CE": "&rtriltri;",
          "\u2968": "&ruluhar;",
          "\u211E": "&rx;",
          "\u015B": "&sacute;",
          "\u2AB4": "&scE;",
          "\u2AB8": "&succapprox;",
          "\u0161": "&scaron;",
          "\u015F": "&scedil;",
          "\u015D": "&scirc;",
          "\u2AB6": "&succneqq;",
          "\u2ABA": "&succnapprox;",
          "\u22E9": "&succnsim;",
          "\u2A13": "&scpolint;",
          "\u0441": "&scy;",
          "\u22C5": "&sdot;",
          "\u2A66": "&sdote;",
          "\u21D8": "&seArr;",
          "\xA7": "&sect;",
          ";": "&semi;",
          "\u2929": "&tosa;",
          "\u2736": "&sext;",
          "\uD835\uDD30": "&sfr;",
          "\u266F": "&sharp;",
          "\u0449": "&shchcy;",
          "\u0448": "&shcy;",
          "\xAD": "&shy;",
          "\u03C3": "&sigma;",
          "\u03C2": "&varsigma;",
          "\u2A6A": "&simdot;",
          "\u2A9E": "&simg;",
          "\u2AA0": "&simgE;",
          "\u2A9D": "&siml;",
          "\u2A9F": "&simlE;",
          "\u2246": "&simne;",
          "\u2A24": "&simplus;",
          "\u2972": "&simrarr;",
          "\u2A33": "&smashp;",
          "\u29E4": "&smeparsl;",
          "\u2323": "&ssmile;",
          "\u2AAA": "&smt;",
          "\u2AAC": "&smte;",
          "\u2AAC\uFE00": "&smtes;",
          "\u044C": "&softcy;",
          "/": "&sol;",
          "\u29C4": "&solb;",
          "\u233F": "&solbar;",
          "\uD835\uDD64": "&sopf;",
          "\u2660": "&spadesuit;",
          "\u2293\uFE00": "&sqcaps;",
          "\u2294\uFE00": "&sqcups;",
          "\uD835\uDCC8": "&sscr;",
          "\u2606": "&star;",
          "\u2282": "&subset;",
          "\u2AC5": "&subseteqq;",
          "\u2ABD": "&subdot;",
          "\u2AC3": "&subedot;",
          "\u2AC1": "&submult;",
          "\u2ACB": "&subsetneqq;",
          "\u228A": "&subsetneq;",
          "\u2ABF": "&subplus;",
          "\u2979": "&subrarr;",
          "\u2AC7": "&subsim;",
          "\u2AD5": "&subsub;",
          "\u2AD3": "&subsup;",
          "\u266A": "&sung;",
          "\xB9": "&sup1;",
          "\xB2": "&sup2;",
          "\xB3": "&sup3;",
          "\u2AC6": "&supseteqq;",
          "\u2ABE": "&supdot;",
          "\u2AD8": "&supdsub;",
          "\u2AC4": "&supedot;",
          "\u27C9": "&suphsol;",
          "\u2AD7": "&suphsub;",
          "\u297B": "&suplarr;",
          "\u2AC2": "&supmult;",
          "\u2ACC": "&supsetneqq;",
          "\u228B": "&supsetneq;",
          "\u2AC0": "&supplus;",
          "\u2AC8": "&supsim;",
          "\u2AD4": "&supsub;",
          "\u2AD6": "&supsup;",
          "\u21D9": "&swArr;",
          "\u292A": "&swnwar;",
          "\xDF": "&szlig;",
          "\u2316": "&target;",
          "\u03C4": "&tau;",
          "\u0165": "&tcaron;",
          "\u0163": "&tcedil;",
          "\u0442": "&tcy;",
          "\u2315": "&telrec;",
          "\uD835\uDD31": "&tfr;",
          "\u03B8": "&theta;",
          "\u03D1": "&vartheta;",
          "\xFE": "&thorn;",
          "\xD7": "&times;",
          "\u2A31": "&timesbar;",
          "\u2A30": "&timesd;",
          "\u2336": "&topbot;",
          "\u2AF1": "&topcir;",
          "\uD835\uDD65": "&topf;",
          "\u2ADA": "&topfork;",
          "\u2034": "&tprime;",
          "\u25B5": "&utri;",
          "\u225C": "&trie;",
          "\u25EC": "&tridot;",
          "\u2A3A": "&triminus;",
          "\u2A39": "&triplus;",
          "\u29CD": "&trisb;",
          "\u2A3B": "&tritime;",
          "\u23E2": "&trpezium;",
          "\uD835\uDCC9": "&tscr;",
          "\u0446": "&tscy;",
          "\u045B": "&tshcy;",
          "\u0167": "&tstrok;",
          "\u2963": "&uHar;",
          "\xFA": "&uacute;",
          "\u045E": "&ubrcy;",
          "\u016D": "&ubreve;",
          "\xFB": "&ucirc;",
          "\u0443": "&ucy;",
          "\u0171": "&udblac;",
          "\u297E": "&ufisht;",
          "\uD835\uDD32": "&ufr;",
          "\xF9": "&ugrave;",
          "\u2580": "&uhblk;",
          "\u231C": "&ulcorner;",
          "\u230F": "&ulcrop;",
          "\u25F8": "&ultri;",
          "\u016B": "&umacr;",
          "\u0173": "&uogon;",
          "\uD835\uDD66": "&uopf;",
          "\u03C5": "&upsilon;",
          "\u21C8": "&uuarr;",
          "\u231D": "&urcorner;",
          "\u230E": "&urcrop;",
          "\u016F": "&uring;",
          "\u25F9": "&urtri;",
          "\uD835\uDCCA": "&uscr;",
          "\u22F0": "&utdot;",
          "\u0169": "&utilde;",
          "\xFC": "&uuml;",
          "\u29A7": "&uwangle;",
          "\u2AE8": "&vBar;",
          "\u2AE9": "&vBarv;",
          "\u299C": "&vangrt;",
          "\u228A\uFE00": "&vsubne;",
          "\u2ACB\uFE00": "&vsubnE;",
          "\u228B\uFE00": "&vsupne;",
          "\u2ACC\uFE00": "&vsupnE;",
          "\u0432": "&vcy;",
          "\u22BB": "&veebar;",
          "\u225A": "&veeeq;",
          "\u22EE": "&vellip;",
          "\uD835\uDD33": "&vfr;",
          "\uD835\uDD67": "&vopf;",
          "\uD835\uDCCB": "&vscr;",
          "\u299A": "&vzigzag;",
          "\u0175": "&wcirc;",
          "\u2A5F": "&wedbar;",
          "\u2259": "&wedgeq;",
          "\u2118": "&wp;",
          "\uD835\uDD34": "&wfr;",
          "\uD835\uDD68": "&wopf;",
          "\uD835\uDCCC": "&wscr;",
          "\uD835\uDD35": "&xfr;",
          "\u03BE": "&xi;",
          "\u22FB": "&xnis;",
          "\uD835\uDD69": "&xopf;",
          "\uD835\uDCCD": "&xscr;",
          "\xFD": "&yacute;",
          "\u044F": "&yacy;",
          "\u0177": "&ycirc;",
          "\u044B": "&ycy;",
          "\xA5": "&yen;",
          "\uD835\uDD36": "&yfr;",
          "\u0457": "&yicy;",
          "\uD835\uDD6A": "&yopf;",
          "\uD835\uDCCE": "&yscr;",
          "\u044E": "&yucy;",
          "\xFF": "&yuml;",
          "\u017A": "&zacute;",
          "\u017E": "&zcaron;",
          "\u0437": "&zcy;",
          "\u017C": "&zdot;",
          "\u03B6": "&zeta;",
          "\uD835\uDD37": "&zfr;",
          "\u0436": "&zhcy;",
          "\u21DD": "&zigrarr;",
          "\uD835\uDD6B": "&zopf;",
          "\uD835\uDCCF": "&zscr;",
          "\u200D": "&zwj;",
          "\u200C": "&zwnj;"
        }
      }
    };
  }
});

// ../../node_modules/html-entities/lib/numeric-unicode-map.js
var require_numeric_unicode_map = __commonJS({
  "../../node_modules/html-entities/lib/numeric-unicode-map.js": function(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.numericUnicodeMap = {
      0: 65533,
      128: 8364,
      130: 8218,
      131: 402,
      132: 8222,
      133: 8230,
      134: 8224,
      135: 8225,
      136: 710,
      137: 8240,
      138: 352,
      139: 8249,
      140: 338,
      142: 381,
      145: 8216,
      146: 8217,
      147: 8220,
      148: 8221,
      149: 8226,
      150: 8211,
      151: 8212,
      152: 732,
      153: 8482,
      154: 353,
      155: 8250,
      156: 339,
      158: 382,
      159: 376
    };
  }
});

// ../../node_modules/html-entities/lib/surrogate-pairs.js
var require_surrogate_pairs = __commonJS({
  "../../node_modules/html-entities/lib/surrogate-pairs.js": function(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.fromCodePoint = String.fromCodePoint || function(astralCodePoint) {
      return String.fromCharCode(Math.floor((astralCodePoint - 65536) / 1024) + 55296, (astralCodePoint - 65536) % 1024 + 56320);
    };
    exports.getCodePoint = String.prototype.codePointAt ? function(input, position) {
      return input.codePointAt(position);
    } : function(input, position) {
      return (input.charCodeAt(position) - 55296) * 1024 + input.charCodeAt(position + 1) - 56320 + 65536;
    };
    exports.highSurrogateFrom = 55296;
    exports.highSurrogateTo = 56319;
  }
});

// ../../node_modules/html-entities/lib/index.js
var require_lib = __commonJS({
  "../../node_modules/html-entities/lib/index.js": function(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var named_references_1 = require_named_references();
    var numeric_unicode_map_1 = require_numeric_unicode_map();
    var surrogate_pairs_1 = require_surrogate_pairs();
    var allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), {
      all: named_references_1.namedReferences.html5
    });
    var encodeRegExps = {
      specialChars: /[<>'"&]/g,
      nonAscii: /[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      nonAsciiPrintable: /[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      nonAsciiPrintableOnly: /[\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      extensive: /[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g
    };
    var defaultEncodeOptions = {
      mode: "specialChars",
      level: "all",
      numeric: "decimal"
    };
    function encode(text, _a) {
      var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? "specialChars" : _c, _d = _b.numeric, numeric = _d === void 0 ? "decimal" : _d, _e = _b.level, level = _e === void 0 ? "all" : _e;
      if (!text) {
        return "";
      }
      var encodeRegExp = encodeRegExps[mode];
      var references = allNamedReferences[level].characters;
      var isHex = numeric === "hexadecimal";
      encodeRegExp.lastIndex = 0;
      var _b = encodeRegExp.exec(text);
      var _c;
      if (_b) {
        _c = "";
        var _d = 0;
        do {
          if (_d !== _b.index) {
            _c += text.substring(_d, _b.index);
          }
          var _e = _b[0];
          var result_1 = references[_e];
          if (!result_1) {
            var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);
            result_1 = (isHex ? "&#x" + code_1.toString(16) : "&#" + code_1) + ";";
          }
          _c += result_1;
          _d = _b.index + _e.length;
        } while (_b = encodeRegExp.exec(text));
        if (_d !== text.length) {
          _c += text.substring(_d);
        }
      } else {
        _c = text;
      }
      return _c;
    }
    exports.encode = encode;
    var defaultDecodeOptions = {
      scope: "body",
      level: "all"
    };
    var strict = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g;
    var attribute = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;
    var baseDecodeRegExps = {
      xml: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.xml
      },
      html4: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html4
      },
      html5: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html5
      }
    };
    var decodeRegExps = __assign(__assign({}, baseDecodeRegExps), {
      all: baseDecodeRegExps.html5
    });
    var fromCharCode = String.fromCharCode;
    var outOfBoundsChar = fromCharCode(65533);
    var defaultDecodeEntityOptions = {
      level: "all"
    };
    function decodeEntity(entity, _a) {
      var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? "all" : _b;
      if (!entity) {
        return "";
      }
      var _b = entity;
      var decodeEntityLastChar_1 = entity[entity.length - 1];
      if (false) {
        _b = entity;
      } else if (false) {
        _b = entity;
      } else {
        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];
        if (decodeResultByReference_1) {
          _b = decodeResultByReference_1;
        } else if (entity[0] === "&" && entity[1] === "#") {
          var decodeSecondChar_1 = entity[2];
          var decodeCode_1 = decodeSecondChar_1 == "x" || decodeSecondChar_1 == "X" ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));
          _b = decodeCode_1 >= 1114111 ? outOfBoundsChar : decodeCode_1 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_1) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);
        }
      }
      return _b;
    }
    exports.decodeEntity = decodeEntity;
    function decode(text, _a) {
      var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? "all" : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === "xml" ? "strict" : "body" : _b;
      if (!text) {
        return "";
      }
      var decodeRegExp = decodeRegExps[level][scope];
      var references = allNamedReferences[level].entities;
      var isAttribute = scope === "attribute";
      var isStrict = scope === "strict";
      decodeRegExp.lastIndex = 0;
      var replaceMatch_1 = decodeRegExp.exec(text);
      var replaceResult_1;
      if (replaceMatch_1) {
        replaceResult_1 = "";
        var replaceLastIndex_1 = 0;
        do {
          if (replaceLastIndex_1 !== replaceMatch_1.index) {
            replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);
          }
          var replaceInput_1 = replaceMatch_1[0];
          var decodeResult_1 = replaceInput_1;
          var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];
          if (isAttribute && decodeEntityLastChar_2 === "=") {
            decodeResult_1 = replaceInput_1;
          } else if (isStrict && decodeEntityLastChar_2 !== ";") {
            decodeResult_1 = replaceInput_1;
          } else {
            var decodeResultByReference_2 = references[replaceInput_1];
            if (decodeResultByReference_2) {
              decodeResult_1 = decodeResultByReference_2;
            } else if (replaceInput_1[0] === "&" && replaceInput_1[1] === "#") {
              var decodeSecondChar_2 = replaceInput_1[2];
              var decodeCode_2 = decodeSecondChar_2 == "x" || decodeSecondChar_2 == "X" ? parseInt(replaceInput_1.substr(3), 16) : parseInt(replaceInput_1.substr(2));
              decodeResult_1 = decodeCode_2 >= 1114111 ? outOfBoundsChar : decodeCode_2 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_2) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);
            }
          }
          replaceResult_1 += decodeResult_1;
          replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;
        } while (replaceMatch_1 = decodeRegExp.exec(text));
        if (replaceLastIndex_1 !== text.length) {
          replaceResult_1 += text.substring(replaceLastIndex_1);
        }
      } else {
        replaceResult_1 = text;
      }
      return replaceResult_1;
    }
    exports.decode = decode;
  }
});

// ../../node_modules/libram/dist/Clan.js
function _toConsumableArray13(arr) {
  return _arrayWithoutHoles13(arr) || _iterableToArray13(arr) || _unsupportedIterableToArray29(arr) || _nonIterableSpread13();
}
function _nonIterableSpread13() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray13(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles13(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray29(arr);
}
function _createForOfIteratorHelper11(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray29(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray16(arr, i) {
  return _arrayWithHoles16(arr) || _iterableToArrayLimit16(arr, i) || _unsupportedIterableToArray29(arr, i) || _nonIterableRest16();
}
function _nonIterableRest16() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray29(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray29(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray29(o, minLen);
}
function _arrayLikeToArray29(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit16(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles16(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck12(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties12(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey17(descriptor.key), descriptor);
  }
}
function _createClass12(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties12(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties12(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty16(obj, key, value) {
  key = _toPropertyKey17(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey17(arg) {
  var key = _toPrimitive17(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive17(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _wrapRegExp() {
  _wrapRegExp = function _wrapRegExp2(e2, r2) {
    return new BabelRegExp(e2, void 0, r2);
  };
  var e = RegExp.prototype, r = /* @__PURE__ */ new WeakMap();
  function BabelRegExp(e2, t, p) {
    var o = new RegExp(e2, t);
    return r.set(o, p || r.get(e2)), _setPrototypeOf4(o, BabelRegExp.prototype);
  }
  function buildGroups(e2, t) {
    var p = r.get(t);
    return Object.keys(p).reduce(function(r2, t2) {
      var o = p[t2];
      if ("number" == typeof o)
        r2[t2] = e2[o];
      else {
        for (var i = 0; void 0 === e2[o[i]] && i + 1 < o.length; )
          i++;
        r2[t2] = e2[o[i]];
      }
      return r2;
    }, /* @__PURE__ */ Object.create(null));
  }
  return _inherits4(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function(r2) {
    var t = e.exec.call(this, r2);
    if (t) {
      t.groups = buildGroups(t, this);
      var p = t.indices;
      p && (p.groups = buildGroups(p, this));
    }
    return t;
  }, BabelRegExp.prototype[Symbol.replace] = function(t, p) {
    if ("string" == typeof p) {
      var o = r.get(this);
      return e[Symbol.replace].call(this, t, p.replace(/\$<([^>]+)>/g, function(e2, r2) {
        var t2 = o[r2];
        return "$" + (Array.isArray(t2) ? t2.join("$") : t2);
      }));
    }
    if ("function" == typeof p) {
      var i = this;
      return e[Symbol.replace].call(this, t, function() {
        var e2 = arguments;
        return "object" != typeof e2[e2.length - 1] && (e2 = [].slice.call(e2)).push(buildGroups(e2, i)), p.apply(this, e2);
      });
    }
    return e[Symbol.replace].call(this, t, p);
  }, _wrapRegExp.apply(this, arguments);
}
function _inherits4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf4(subClass, superClass);
}
function _setPrototypeOf4(o, p) {
  _setPrototypeOf4 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf4(o, p);
}
var import_html_entities, import_kolmafia60, clanIdCache, toPlayerId, LOG_FAX_PATTERN, WHITELIST_DEGREE_PATTERN, Clan;
var init_Clan = __esm({
  "../../node_modules/libram/dist/Clan.js": function() {
    import_html_entities = __toESM(require_lib());
    import_kolmafia60 = require("kolmafia");
    init_lib();
    init_logger();
    init_utils();
    clanIdCache = {};
    toPlayerId = function(player) {
      return typeof player === "string" ? (0, import_kolmafia60.getPlayerId)(player) : player;
    };
    LOG_FAX_PATTERN = /* @__PURE__ */ _wrapRegExp(/(\d{2}\/\d{2}\/\d{2}, \d{2}:\d{2}(?:AM|PM): )<a [^>]+>([^<]+)<\/a>(?: faxed in a (.*?))<br>/, {
      monster: 3
    });
    WHITELIST_DEGREE_PATTERN = /* @__PURE__ */ _wrapRegExp(/(.*?) \(\xB0(\d+)\)/, {
      name: 1,
      degree: 2
    });
    Clan = /* @__PURE__ */ function() {
      function Clan2(id, name) {
        _classCallCheck12(this, Clan2);
        _defineProperty16(this, "id", void 0);
        _defineProperty16(this, "name", void 0);
        this.id = id;
        this.name = name;
      }
      _createClass12(Clan2, [{
        key: "_check",
        value: function _check() {
          if (this.id !== (0, import_kolmafia60.getClanId)()) {
            throw new Error("You are no longer a member of this clan");
          }
        }
        /**
         * Join clan
         *
         * @returns Joined clan
         */
      }, {
        key: "join",
        value: function join() {
          return Clan2.join(this.id);
        }
        /**
         * Check that this clan is the player's current clan
         *
         * @returns Whether this is the current clan
         */
      }, {
        key: "check",
        value: function check() {
          return (0, import_kolmafia60.visitUrl)("clan_hall.php").includes("<b>".concat(this.name, "</b>"));
        }
        /**
         * Determine the monster that is currently in the current clan's fax machine if any
         *
         * @returns The current fax monster
         */
      }, {
        key: "getCurrentFax",
        value: function getCurrentFax() {
          this._check();
          var logs = (0, import_kolmafia60.visitUrl)("clan_log.php");
          var lastFax = logs.match(LOG_FAX_PATTERN);
          if (!lastFax)
            return null;
          var _lastFax = _slicedToArray16(lastFax, 4), monsterName = _lastFax[3];
          if (!monsterName)
            return null;
          return import_kolmafia60.Monster.get(monsterName);
        }
        /**
         * List available ranks (name, degree and id) from the current clan
         *
         * @returns List of ranks
         */
      }, {
        key: "getRanks",
        value: function getRanks() {
          this._check();
          var page = (0, import_kolmafia60.visitUrl)("clan_whitelist.php");
          return (0, import_kolmafia60.xpath)(page, '//select[@name="level"]//option').map(function(option) {
            var validHtml = "<select>".concat(option, "</select>");
            var match = (0, import_kolmafia60.xpath)(validHtml, "//text()")[0].match(WHITELIST_DEGREE_PATTERN);
            var id = (0, import_kolmafia60.xpath)(validHtml, "//@value")[0];
            if (!match || !id)
              return null;
            var _match = _slicedToArray16(match, 3), encodedName = _match[1], degree = _match[2];
            return {
              name: (0, import_html_entities.decode)(encodedName),
              degree: Number.parseInt(degree),
              id: Number.parseInt(id)
            };
          }).filter(notNull);
        }
        /**
         * Add a player to the current clan's whitelist.
         * If the player is already in the whitelist this will change their rank or title.
         *
         * @param player Player id or name
         * @param rankName Rank to give the player. If not provided they will be given the lowest rank
         * @param title Title to give the player. If not provided, will be blank
         * @returns Success
         */
      }, {
        key: "addPlayerToWhitelist",
        value: function addPlayerToWhitelist(player, rankName) {
          var title = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
          this._check();
          var playerId = toPlayerId(player);
          var ranks = this.getRanks();
          var rank = rankName ? ranks.find(function(r) {
            return r.name === rankName;
          }) : ranks.sort(function(a, b) {
            return a.degree - b.degree;
          })[0];
          if (!rank)
            return false;
          var result = (0, import_kolmafia60.visitUrl)("clan_whitelist.php?action=add&pwd&addwho=".concat(playerId, "&level=").concat(rank.id, "&title=").concat(title));
          return result.includes("added to whitelist.") || result.includes("That player is already on the whitelist");
        }
        /**
         * Remove a player from the current clan's whitelist
         *
         * @param player Player id or name
         * @returns Success
         */
      }, {
        key: "removePlayerFromWhitelist",
        value: function removePlayerFromWhitelist(player) {
          this._check();
          var playerId = toPlayerId(player);
          var result = (0, import_kolmafia60.visitUrl)("clan_whitelist.php?action=updatewl&pwd&who=".concat(playerId, "&remove=Remove"));
          return result.includes("Whitelist updated.");
        }
        /**
         * Return the amount of meat in the current clan's coffer
         *
         * @returns Amount of meat
         */
      }, {
        key: "getMeatInCoffer",
        value: function getMeatInCoffer() {
          this._check();
          var page = (0, import_kolmafia60.visitUrl)("clan_stash.php");
          var _ref = page.match(/Your <b>Clan Coffer<\/b> contains ([\d,]+) Meat./) || ["0", "0"], _ref2 = _slicedToArray16(_ref, 2), meat = _ref2[1];
          return parseNumber(meat);
        }
        /**
         * Add the given amount of meat to the current clan's coffer.
         *
         * @param amount Amount of meat to put in coffer
         * @returns Success
         */
      }, {
        key: "putMeatInCoffer",
        value: function putMeatInCoffer(amount) {
          this._check();
          var result = (0, import_kolmafia60.visitUrl)("clan_stash.php?pwd&action=contribute&howmuch=".concat(amount));
          return result.includes("You contributed");
        }
      }, {
        key: "take",
        value: function take(items) {
          this._check();
          var map = arrayToCountedMap(items);
          map.forEach(function(quantity, item10) {
            var needed = Math.max(0, quantity - (0, import_kolmafia60.availableAmount)(item10));
            if (needed === 0) {
              return map.set(item10, 0);
            }
            var foldGroup = getFoldGroup(item10);
            var _iterator = _createForOfIteratorHelper11(foldGroup), _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var foldable = _step.value;
                var quantityToFold = Math.min(needed, (0, import_kolmafia60.availableAmount)(foldable));
                for (var _i2 = 0; _i2 < quantityToFold; _i2++) {
                  (0, import_kolmafia60.cliExecute)("fold ".concat(item10.name));
                  needed--;
                }
                return map.set(item10, needed);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            (0, import_kolmafia60.refreshStash)();
            for (var _i = 0, _arr = [item10].concat(_toConsumableArray13(foldGroup)); _i < _arr.length; _i++) {
              var matchingItem = _arr[_i];
              var quantityToTake = Math.min(needed, (0, import_kolmafia60.stashAmount)(matchingItem));
              if (quantityToTake === 0)
                continue;
              if (!(0, import_kolmafia60.takeStash)(quantityToTake, matchingItem))
                return;
              if (matchingItem === item10) {
                needed -= quantityToTake;
              } else {
                for (var i = 0; i < quantityToTake; i++) {
                  (0, import_kolmafia60.cliExecute)("fold ".concat(matchingItem.name));
                  needed--;
                }
              }
            }
          });
          return Array.isArray(items) ? countedMapToArray(map) : map;
        }
      }, {
        key: "put",
        value: function put(items) {
          this._check();
          var map = arrayToCountedMap(items);
          if (!this.check())
            throw new Error("Wanted to return ".concat(countedMapToString(map), " to ").concat(this.name, " but KoLmafia's clan data is out of sync"));
          map.forEach(function(quantity, item10) {
            (0, import_kolmafia60.retrieveItem)(quantity, item10);
            var returned = Math.min(quantity, (0, import_kolmafia60.availableAmount)(item10));
            (0, import_kolmafia60.putStash)(returned, item10);
            map.set(item10, quantity - returned);
          });
          return Array.isArray(items) ? countedMapToArray(map) : map;
        }
      }, {
        key: "withStash",
        value: function withStash2(items, callback) {
          var _this = this;
          this._check();
          var map = arrayToCountedMap(items);
          return Clan2._withStash(function() {
            return _this.take(map);
          }, function(borrowed) {
            return _this.put(borrowed);
          }, callback);
        }
      }], [{
        key: "_join",
        value: function _join(id) {
          var result = (0, import_kolmafia60.visitUrl)("showclan.php?recruiter=1&whichclan=".concat(id, "&pwd&whichclan=").concat(id, "&action=joinclan&apply=Apply+to+this+Clan&confirm=on"));
          if (!result.includes("clanhalltop.gif")) {
            throw new Error("Could not join clan");
          }
          return Clan2.get();
        }
      }, {
        key: "_withStash",
        value: function _withStash(borrowFn, returnFn, callback) {
          var borrowed = borrowFn();
          var map = arrayToCountedMap(borrowed);
          try {
            return callback(borrowed);
          } finally {
            if (map.size > 0) {
              var returned = arrayToCountedMap(returnFn(borrowed));
              map.forEach(function(quantity, item10) {
                var remaining = quantity - (returned.get(item10) || 0);
                if (remaining > 0) {
                  map.set(item10, remaining);
                } else {
                  map.delete(item10);
                }
              });
              if (map.size > 0) {
                logger_default.error("Failed to return <b>".concat(countedMapToString(map), "</b> to <b>").concat(this.name, "</b> stash"));
              }
            }
          }
        }
        /**
         * Join a clan
         *
         * @param clanIdOrName Clan id or name
         * @returns Instance of joined clan
         */
      }, {
        key: "join",
        value: function join(clanIdOrName) {
          var clanId;
          if (typeof clanIdOrName === "string") {
            var clanName = clanIdOrName.toLowerCase();
            if (clanName === (0, import_kolmafia60.getClanName)().toLowerCase()) {
              return Clan2.get();
            }
            if (!(clanName in clanIdCache)) {
              var clan = Clan2.getWhitelisted().find(function(c) {
                return c.name.toLowerCase() === clanName;
              });
              if (!clan) {
                throw new Error("Player is not whitelisted to clan");
              }
              clanIdCache[clanName] = clan.id;
            }
            clanId = clanIdCache[clanName];
          } else {
            clanId = clanIdOrName;
            if (clanId === (0, import_kolmafia60.getClanId)()) {
              return Clan2.get();
            }
          }
          return Clan2._join(clanId);
        }
        /**
         * Execute callback as a member of a clan and then restore prior membership
         *
         * @param clanIdOrName Clan id or name
         * @param callback Actions to carry out while member of specified can
         * @returns Return value from callback
         */
      }, {
        key: "with",
        value: function _with(clanIdOrName, callback) {
          var startingClan = Clan2.get();
          var clan = Clan2.join(clanIdOrName);
          try {
            return callback(clan);
          } finally {
            startingClan.join();
          }
        }
      }, {
        key: "withStash",
        value: function withStash2(clanIdOrName, items, callback) {
          return Clan2._withStash(function() {
            return Clan2.with(clanIdOrName, function(clan) {
              return clan.take(items);
            });
          }, function(borrowed) {
            return Clan2.with(clanIdOrName, function(clan) {
              return clan.put(borrowed);
            });
          }, callback);
        }
        /**
         * Get the player's current clan
         *
         * @returns Player's clan
         */
      }, {
        key: "get",
        value: function get4() {
          return new Clan2((0, import_kolmafia60.getClanId)(), (0, import_kolmafia60.getClanName)());
        }
        /**
         * Get list of clans to which the player is whitelisted
         *
         * @returns List of clans
         */
      }, {
        key: "getWhitelisted",
        value: function getWhitelisted() {
          var page = (0, import_kolmafia60.visitUrl)("clan_signup.php");
          return (0, import_kolmafia60.xpath)(page, '//select[@name="whichclan"]//option').map(function(option) {
            var validHtml = "<select>".concat(option, "</select>");
            var id = Number.parseInt((0, import_kolmafia60.xpath)(validHtml, "//@value")[0]);
            var name = (0, import_html_entities.decode)((0, import_kolmafia60.xpath)(validHtml, "//text()")[0]);
            return new Clan2(id, name);
          });
        }
      }]);
      return Clan2;
    }();
  }
});

// ../../node_modules/libram/dist/challengePaths/2014/HeavyRains.js
var HeavyRains_exports = {};
__export(HeavyRains_exports, {
  RAIN_MONSTER_WINDOW_BEGIN: function() {
    return RAIN_MONSTER_WINDOW_BEGIN;
  },
  RAIN_MONSTER_WINDOW_END: function() {
    return RAIN_MONSTER_WINDOW_END;
  },
  canRainMan: function() {
    return canRainMan;
  },
  expectedWanderer: function() {
    return expectedWanderer;
  },
  path: function() {
    return path;
  },
  rainMan: function() {
    return rainMan;
  },
  wanderers: function() {
    return wanderers;
  }
});
function _taggedTemplateLiteral54(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function rainMan(target) {
  if (canRainMan(target)) {
    withChoice(970, "1&whichmonster=".concat(target.id), function() {
      return (0, import_kolmafia61.useSkill)($skill(_templateObject480 || (_templateObject480 = _taggedTemplateLiteral54(["Rain Man"]))));
    });
  }
}
function canRainMan(target) {
  if (!have($skill(_templateObject2121 || (_templateObject2121 = _taggedTemplateLiteral54(["Rain Man"])))) || // having the skill implies you are in heavy rains path
  (0, import_kolmafia61.myRain)() < 50 || !target.copyable || target.id < 0) {
    return false;
  }
  if ((0, import_kolmafia61.monsterFactoidsAvailable)(target, false) > 0) {
    return true;
  }
  var page = withChoice(970, 2, function() {
    return (0, import_kolmafia61.visitUrl)("runskillz.php?pwd&action=Skillz&whichskill=".concat($skill(_templateObject3105 || (_templateObject3105 = _taggedTemplateLiteral54(["Rain Man"]))).id, "&quantity=1"));
  });
  return page.indexOf("<option value=".concat(target.id, ">")) > 0;
}
function expectedWanderer(location) {
  var difficultyWaterLevel = location.difficultyLevel === "low" ? 1 : 2;
  var environmentWaterLevel = location.environment === "underground" ? 4 : location.environment === "indoor" ? 2 : 1;
  var waterLevel = (0, import_kolmafia61.numericModifier)(import_kolmafia61.Modifier.get("Water Level")) + difficultyWaterLevel + environmentWaterLevel;
  if (waterLevel > 1 && waterLevel < 6) {
    return wanderers[waterLevel - 1];
  } else if (waterLevel === 6 && location.environment === "underground") {
    return $monster(_templateObject481 || (_templateObject481 = _taggedTemplateLiteral54(["giant tardigrade"])));
  } else if (waterLevel === 6 && location.environment === "indoor") {
    return $monster(_templateObject551 || (_templateObject551 = _taggedTemplateLiteral54(["aquaconda"])));
  } else if (waterLevel === 6 && location.environment === "outdoor") {
    return $monster(_templateObject641 || (_templateObject641 = _taggedTemplateLiteral54(["storm cow"])));
  } else {
    return $monster(_templateObject737 || (_templateObject737 = _taggedTemplateLiteral54(["giant isopod"])));
  }
}
var import_kolmafia61, _templateObject480, _templateObject2121, _templateObject3105, _templateObject481, _templateObject551, _templateObject641, _templateObject737, _templateObject830, RAIN_MONSTER_WINDOW_BEGIN, RAIN_MONSTER_WINDOW_END, wanderers, path;
var init_HeavyRains = __esm({
  "../../node_modules/libram/dist/challengePaths/2014/HeavyRains.js": function() {
    import_kolmafia61 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    RAIN_MONSTER_WINDOW_BEGIN = "Rain Monster window begin";
    RAIN_MONSTER_WINDOW_END = "Rain Monster window end";
    wanderers = Object.freeze(import_kolmafia61.Monster.get(["giant isopod", "gourmet gourami", "freshwater bonefish", "alley catfish", "piranhadon", "giant tardigrade", "aquaconda", "storm cow"]));
    path = $path(_templateObject830 || (_templateObject830 = _taggedTemplateLiteral54(["Heavy Rains"])));
  }
});

// ../../node_modules/libram/dist/challengePaths/2015/CommunityService.js
function _slicedToArray17(arr, i) {
  return _arrayWithHoles17(arr) || _iterableToArrayLimit17(arr, i) || _unsupportedIterableToArray30(arr, i) || _nonIterableRest17();
}
function _nonIterableRest17() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray30(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray30(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray30(o, minLen);
}
function _arrayLikeToArray30(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit17(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles17(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck13(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties13(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey18(descriptor.key), descriptor);
  }
}
function _createClass13(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties13(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties13(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty17(obj, key, value) {
  key = _toPropertyKey18(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey18(arg) {
  var key = _toPrimitive18(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive18(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral55(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var import_kolmafia62, _templateObject486, _templateObject2122, _templateObject3106, _templateObject487, _templateObject555, _templateObject644, _templateObject738, _templateObject831, _templateObject926, _templateObject1023, _templateObject1120, _templateObject1220, _templateObject1318, _templateObject1415, _templateObject1513, _templateObject1613, _templateObject1713, _templateObject1813, _templateObject1913, _templateObject2013, _templateObject2123, _templateObject2215, _templateObject2314, _templateObject2412, _templateObject2512, _templateObject2612, _templateObject2712, _templateObject2810, thralls, statCommunityServicePredictor, visitCouncil, baseWeight, CommunityService;
var init_CommunityService = __esm({
  "../../node_modules/libram/dist/challengePaths/2015/CommunityService.js": function() {
    import_kolmafia62 = require("kolmafia");
    init_lib();
    init_maximize();
    init_modifier();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    thralls = /* @__PURE__ */ new Map([[$stat(_templateObject486 || (_templateObject486 = _taggedTemplateLiteral55(["muscle"]))), $thrall(_templateObject2122 || (_templateObject2122 = _taggedTemplateLiteral55(["Elbow Macaroni"])))], [$stat(_templateObject3106 || (_templateObject3106 = _taggedTemplateLiteral55(["moxie"]))), $thrall(_templateObject487 || (_templateObject487 = _taggedTemplateLiteral55(["Penne Dreadful"])))]]);
    statCommunityServicePredictor = function(stat) {
      return function() {
        return 60 - Math.floor(1 / 30 * ((0, import_kolmafia62.myBuffedstat)(stat) - (0, import_kolmafia62.myBasestat)(thralls.get(stat) === (0, import_kolmafia62.myThrall)() && !have($effect(_templateObject555 || (_templateObject555 = _taggedTemplateLiteral55(["Expert Oiliness"])))) ? $stat(_templateObject644 || (_templateObject644 = _taggedTemplateLiteral55(["mysticality"]))) : stat)));
      };
    };
    visitCouncil = function() {
      return (0, import_kolmafia62.visitUrl)("council.php");
    };
    baseWeight = function() {
      return have($effect(_templateObject738 || (_templateObject738 = _taggedTemplateLiteral55(["Fidoxene"])))) ? 20 : (0, import_kolmafia62.familiarWeight)((0, import_kolmafia62.myFamiliar)());
    };
    CommunityService = /* @__PURE__ */ function() {
      function CommunityService2(id, stat, property, predictor, maximizeRequirements) {
        _classCallCheck13(this, CommunityService2);
        _defineProperty17(this, "choice", void 0);
        _defineProperty17(this, "stat", void 0);
        _defineProperty17(this, "property", void 0);
        _defineProperty17(this, "predictor", void 0);
        _defineProperty17(this, "maximizeRequirements", void 0);
        _defineProperty17(this, "timer", null);
        this.choice = id;
        this.stat = stat;
        this.property = property;
        this.predictor = predictor;
        this.maximizeRequirements = maximizeRequirements;
      }
      _createClass13(CommunityService2, [{
        key: "id",
        get: function get4() {
          return this.choice;
        }
        /**
         * @returns The primary stat the test measures, used primarily as memorable shorthand in place of test names.
         */
      }, {
        key: "statName",
        get: function get4() {
          return this.stat;
        }
        /**
         * @returns The name of the test, used primarily as part of the string property "csServicesPerformed"
         */
      }, {
        key: "name",
        get: function get4() {
          return this.property;
        }
        /**
         *  @returns The predicted number of turns this test will take given your character's current state.
         */
      }, {
        key: "prediction",
        get: function get4() {
          return this.predictor();
        }
        /**
         * @returns A Requirement object, if applicable, that aligns with the things needed to maximize for this particular test.
         */
      }, {
        key: "requirement",
        get: function get4() {
          return this.maximizeRequirements;
        }
        /**
         * Start the time & turn counter for the Test in question.
         */
      }, {
        key: "startTimer",
        value: function startTimer() {
          var _this$timer;
          (_this$timer = this.timer) !== null && _this$timer !== void 0 ? _this$timer : this.timer = {
            time: Date.now(),
            turns: (0, import_kolmafia62.myTurncount)()
          };
        }
      }, {
        key: "isDone",
        value: (
          /**
           * Checks the "csServicesPerformed" property to see whether mafia currently believes this test is complete.
           *
           * @returns Whether mafia currently believes this test is complete.
           */
          function isDone() {
            return get("csServicesPerformed").includes(this.property);
          }
        )
        /**
         * Maximizes based on the Requirement associated with this particular test.
         */
      }, {
        key: "maximize",
        value: function maximize7() {
          if (this.maximizeRequirements)
            this.maximizeRequirements.maximize();
        }
        /**
         * Attempts to turn in the test to the Council of Loathing.
         *
         * @returns Whether mafia believes the test is complete at the end of this function.
         */
      }, {
        key: "do",
        value: function _do() {
          if (get("csServicesPerformed").trim().length === 0)
            visitCouncil();
          visitCouncil();
          var councilText = (0, import_kolmafia62.runChoice)(this.choice);
          return this._verifyIsDone(councilText);
        }
        /**
         * Wrapper function that prepares for a test and then completes it, adding time and turn details to the log.
         *
         * @param prepare A function that does all necessary preparations for this CS test, including choosing your outfit. Optionally returns the number of turns you expect to spend preparing for the test.
         * @param maxTurns We will run the test iff the predicted/actual turns is less than or equal to this parameter.
         * @returns "completed", "failed", or "already completed".
         */
      }, {
        key: "run",
        value: function run(prepare) {
          var _this$timer2;
          var maxTurns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
          if (this.isDone())
            return "already completed";
          var _ref = (_this$timer2 = this.timer) !== null && _this$timer2 !== void 0 ? _this$timer2 : {
            time: Date.now(),
            turns: (0, import_kolmafia62.myTurncount)()
          }, time = _ref.time, turns = _ref.turns;
          var additionalTurns;
          try {
            var result = prepare();
            additionalTurns = typeof result === "number" ? result : 0;
          } catch (e) {
            (0, import_kolmafia62.print)("".concat(e), "red");
            return "failed";
          }
          var prediction = this.predictor();
          var council = visitCouncil();
          var turnCost = this._actualCost(council);
          if (!turnCost)
            return "already completed";
          if (turnCost > Math.min(maxTurns, (0, import_kolmafia62.myAdventures)())) {
            return "failed";
          }
          if (!this.do())
            return "failed";
          CommunityService2.log[this.property] = {
            predictedTurns: prediction + additionalTurns,
            turnCost: (0, import_kolmafia62.myTurncount)() - turns,
            seconds: (Date.now() - time) / 1e3,
            type: "test"
          };
          return "completed";
        }
      }, {
        key: "_verifyIsDone",
        value: function _verifyIsDone(councilText) {
          return !councilText.includes("<input type=hidden name=option value=".concat(this.choice, ">"));
        }
        /**
         * Checks council.php to verify that a test is complete; more reliable than isDone, but requires an additional pagehit.
         *
         * @returns Whether council.php suggests that the test is complete.
         */
      }, {
        key: "verifyIsDone",
        value: function verifyIsDone() {
          return this._verifyIsDone(visitCouncil());
        }
      }, {
        key: "_actualCost",
        value: function _actualCost(councilText) {
          var match = councilText.match("<input type=hidden name=option value=".concat(this.id, ">.*?Perform Service \\((\\d+) Adventures\\)"));
          return match ? parseInt(match[1]) : 0;
        }
        /**
         * Checks council.php for the number of turns this test will take; more reliable than prediction, but requires an additional pagehit.
         *
         * @returns The number of turns to complete this test according to council.php.
         */
      }, {
        key: "actualCost",
        value: function actualCost() {
          return this._actualCost(visitCouncil());
        }
        /**
         * A log of the predicted turns, actual turns, and duration of each CS test performed.
         */
      }], [{
        key: "startTimer",
        value: (
          /**
           * Start the time & turn counter for the given task
           *
           * @param name The name of the task to start the counter of
           */
          function startTimer(name) {
            if (!this.taskTimers.has(name)) {
              this.taskTimers.set(name, {
                time: Date.now(),
                turns: (0, import_kolmafia62.myTurncount)()
              });
            }
          }
        )
      }, {
        key: "logTask",
        value: function logTask(name, action) {
          var _this$taskTimers$get, _action;
          var _ref2 = (_this$taskTimers$get = this.taskTimers.get(name)) !== null && _this$taskTimers$get !== void 0 ? _this$taskTimers$get : {
            time: Date.now(),
            turns: (0, import_kolmafia62.myTurncount)()
          }, time = _ref2.time, turns = _ref2.turns;
          var estimatedTurns = (_action = action()) !== null && _action !== void 0 ? _action : 0;
          CommunityService2.log[name] = {
            type: "task",
            turnCost: (0, import_kolmafia62.myTurncount)() - turns,
            predictedTurns: estimatedTurns,
            seconds: (Date.now() - time) / 1e3
          };
        }
      }, {
        key: "printLog",
        value: (
          /**
           * Prints turncount and time details of the test in question.
           *
           * @param colour The colour (or color) you'd like the log to be printed in.
           */
          function printLog2() {
            var colour = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "blue";
            var logEntries = Object.entries(CommunityService2.log);
            for (var _i = 0, _logEntries = logEntries; _i < _logEntries.length; _i++) {
              var _logEntries$_i = _slicedToArray17(_logEntries[_i], 2), testName = _logEntries$_i[0], testEntry = _logEntries$_i[1];
              var type = testEntry.type, predictedTurns = testEntry.predictedTurns, turnCost = testEntry.turnCost, seconds = testEntry.seconds;
              if (type === "test") {
                (0, import_kolmafia62.print)("We predicted the ".concat(testName, " test would take ").concat(predictedTurns, " turns, ").concat(predictedTurns === turnCost ? "and" : "but", " it took ").concat(turnCost, " turns."), colour);
                (0, import_kolmafia62.print)("".concat(testName, " took ").concat(seconds.toFixed(1), " seconds."), colour);
              } else {
                if (!(predictedTurns === 0 && turnCost === 0)) {
                  (0, import_kolmafia62.print)("We predicted the task ".concat(testName, " would take ").concat(predictedTurns, " turns, ").concat(predictedTurns === turnCost ? "and" : "but", " it took ").concat(turnCost, " turns."), colour);
                }
                (0, import_kolmafia62.print)("The task ".concat(testName, " took ").concat(seconds.toFixed(1), " seconds."), colour);
              }
            }
            var totalTime = sum(logEntries, function(_ref3) {
              var _ref4 = _slicedToArray17(_ref3, 2), testEntry2 = _ref4[1];
              return testEntry2.seconds;
            });
            (0, import_kolmafia62.print)("All together, you have spent ".concat(totalTime.toFixed(1), " seconds during this Community Service run"), colour);
          }
        )
        // Below, we have the tests themselves.
      }]);
      return CommunityService2;
    }();
    _defineProperty17(CommunityService, "taskTimers", /* @__PURE__ */ new Map());
    _defineProperty17(CommunityService, "log", {});
    _defineProperty17(CommunityService, "HP", new CommunityService(1, "HP", "Donate Blood", function() {
      return 60 - Math.floor(((0, import_kolmafia62.myMaxhp)() - (0, import_kolmafia62.myBuffedstat)($stat(_templateObject831 || (_templateObject831 = _taggedTemplateLiteral55(["muscle"])))) - 3) / 30);
    }, new Requirement(["HP"], {})));
    _defineProperty17(CommunityService, "Muscle", new CommunityService(2, "Muscle", "Feed The Children", statCommunityServicePredictor($stat(_templateObject926 || (_templateObject926 = _taggedTemplateLiteral55(["Muscle"])))), new Requirement(["Muscle"], {})));
    _defineProperty17(CommunityService, "Mysticality", new CommunityService(3, "Mysticality", "Build Playground Mazes", statCommunityServicePredictor($stat(_templateObject1023 || (_templateObject1023 = _taggedTemplateLiteral55(["Mysticality"])))), new Requirement(["Mysticality"], {})));
    _defineProperty17(CommunityService, "Moxie", new CommunityService(4, "Moxie", "Feed Conspirators", statCommunityServicePredictor($stat(_templateObject1120 || (_templateObject1120 = _taggedTemplateLiteral55(["Moxie"])))), new Requirement(["Moxie"], {})));
    _defineProperty17(CommunityService, "FamiliarWeight", new CommunityService(5, "Familiar Weight", "Breed More Collies", function() {
      return 60 - Math.floor((baseWeight() + (0, import_kolmafia62.weightAdjustment)()) / 5);
    }, new Requirement(["Familiar Weight"], {})));
    _defineProperty17(CommunityService, "WeaponDamage", new CommunityService(6, "Weapon Damage", "Reduce Gazelle Population", function() {
      var weaponPower = (0, import_kolmafia62.getPower)((0, import_kolmafia62.equippedItem)($slot(_templateObject1220 || (_templateObject1220 = _taggedTemplateLiteral55(["weapon"])))));
      var offhandPower = (0, import_kolmafia62.toSlot)((0, import_kolmafia62.equippedItem)($slot(_templateObject1318 || (_templateObject1318 = _taggedTemplateLiteral55(["off-hand"]))))) === $slot(_templateObject1415 || (_templateObject1415 = _taggedTemplateLiteral55(["weapon"]))) ? (0, import_kolmafia62.getPower)((0, import_kolmafia62.equippedItem)($slot(_templateObject1513 || (_templateObject1513 = _taggedTemplateLiteral55(["off-hand"]))))) : 0;
      var familiarPower = (0, import_kolmafia62.toSlot)((0, import_kolmafia62.equippedItem)($slot(_templateObject1613 || (_templateObject1613 = _taggedTemplateLiteral55(["familiar"]))))) === $slot(_templateObject1713 || (_templateObject1713 = _taggedTemplateLiteral55(["weapon"]))) ? (0, import_kolmafia62.getPower)((0, import_kolmafia62.equippedItem)($slot(_templateObject1813 || (_templateObject1813 = _taggedTemplateLiteral55(["familiar"]))))) : 0;
      var multiplier = have($effect(_templateObject1913 || (_templateObject1913 = _taggedTemplateLiteral55(["Bow-Legged Swagger"])))) ? 2 : 1;
      return 60 - Math.floor(multiplier * (get2("Weapon Damage") - 0.15 * (weaponPower + offhandPower + familiarPower)) / 50 + 1e-3) - Math.floor(multiplier * get2("Weapon Damage Percent") / 50 + 1e-3);
    }, new Requirement(["Weapon Damage", "Weapon Damage Percent"], {})));
    _defineProperty17(CommunityService, "SpellDamage", new CommunityService(7, "Spell Damage", "Make Sausage", function() {
      var dragonfishDamage = (0, import_kolmafia62.myFamiliar)() === $familiar(_templateObject2013 || (_templateObject2013 = _taggedTemplateLiteral55(["Magic Dragonfish"]))) ? (0, import_kolmafia62.numericModifier)($familiar(_templateObject2123 || (_templateObject2123 = _taggedTemplateLiteral55(["Magic Dragonfish"]))), "Spell Damage Percent", baseWeight() + (0, import_kolmafia62.weightAdjustment)(), $item.none) : 0;
      return 60 - Math.floor(get2("Spell Damage") / 50 + 1e-3) - Math.floor((get2("Spell Damage Percent") - dragonfishDamage) / 50 + 1e-3);
    }, new Requirement(["Spell Damage", "Spell Damage Percent"], {})));
    _defineProperty17(CommunityService, "Noncombat", new CommunityService(8, "Non-Combat", "Be a Living Statue", function() {
      var noncombatRate = -1 * get2("Combat Rate");
      var unsoftcappedRate = noncombatRate > 25 ? 25 + (noncombatRate - 25) * 5 : noncombatRate;
      return 60 - 3 * Math.floor(unsoftcappedRate / 5);
    }, new Requirement(["-combat"], {})));
    _defineProperty17(CommunityService, "BoozeDrop", new CommunityService(9, "Item Drop", "Make Margaritas", function() {
      var mummingCostume = MummingTrunk_exports.currentCostumes().get((0, import_kolmafia62.myFamiliar)());
      var mummingBuff = mummingCostume && mummingCostume[0] === "Item Drop" ? mummingCostume[1] : 0;
      var familiarItemDrop = (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.myFamiliar)(), "Item Drop", baseWeight() + (0, import_kolmafia62.weightAdjustment)(), (0, import_kolmafia62.equippedItem)($slot(_templateObject2215 || (_templateObject2215 = _taggedTemplateLiteral55(["familiar"]))))) + mummingBuff - (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.equippedItem)($slot(_templateObject2314 || (_templateObject2314 = _taggedTemplateLiteral55(["familiar"])))), "Item Drop");
      var familiarBoozeDrop = (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.myFamiliar)(), "Booze Drop", baseWeight() + (0, import_kolmafia62.weightAdjustment)(), (0, import_kolmafia62.equippedItem)($slot(_templateObject2412 || (_templateObject2412 = _taggedTemplateLiteral55(["familiar"]))))) - (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.equippedItem)($slot(_templateObject2512 || (_templateObject2512 = _taggedTemplateLiteral55(["familiar"])))), "Booze Drop");
      var multiplier = (0, import_kolmafia62.haveEquipped)($item(_templateObject2612 || (_templateObject2612 = _taggedTemplateLiteral55(["broken champagne bottle"])))) && get("garbageChampagneCharge") > 0 ? 0.5 : 1;
      return 60 - Math.floor(multiplier * (get2("Item Drop") - familiarItemDrop - (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.myThrall)(), "Item Drop")) / 30 + 1e-3) - Math.floor((get2("Booze Drop") - familiarBoozeDrop) / 15 + 1e-3);
    }, new Requirement(["Item Drop", "2 Booze Drop"], {
      preventEquip: $items(_templateObject2712 || (_templateObject2712 = _taggedTemplateLiteral55(["broken champagne bottle"])))
    })));
    _defineProperty17(CommunityService, "HotRes", new CommunityService(10, "Hot Resistance", "Clean Steam Tunnels", function() {
      return 60 - get2("Hot Resistance");
    }, new Requirement(["Hot Resistance"], {})));
    _defineProperty17(CommunityService, "CoilWire", new CommunityService(11, "Coil Wire", "Coil Wire", function() {
      return 60;
    }, new Requirement([], {})));
    _defineProperty17(CommunityService, "donate", function() {
      visitCouncil();
      (0, import_kolmafia62.visitUrl)("choice.php?whichchoice=1089&option=30");
    });
    _defineProperty17(CommunityService, "path", $path(_templateObject2810 || (_templateObject2810 = _taggedTemplateLiteral55(["Community Service"]))));
  }
});

// ../../node_modules/libram/dist/challengePaths/2016/NuclearAutumn.js
var NuclearAutumn_exports = {};
__export(NuclearAutumn_exports, {
  chronoLab: function() {
    return chronoLab;
  },
  coolingTank: function() {
    return coolingTank;
  },
  path: function() {
    return path2;
  },
  spa: function() {
    return spa;
  }
});
function _taggedTemplateLiteral56(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function coolingTank() {
  (0, import_kolmafia63.visitUrl)("place.php?whichplace=falloutshelter&action=vault8");
}
function spa() {
  (0, import_kolmafia63.visitUrl)("place.php?whichplace=falloutshelter&action=vault3");
}
function chronoLab() {
  (0, import_kolmafia63.visitUrl)("place.php?whichplace=falloutshelter&action=vault5");
}
var import_kolmafia63, _templateObject488, path2;
var init_NuclearAutumn = __esm({
  "../../node_modules/libram/dist/challengePaths/2016/NuclearAutumn.js": function() {
    import_kolmafia63 = require("kolmafia");
    init_template_string();
    path2 = $path(_templateObject488 || (_templateObject488 = _taggedTemplateLiteral56(["Nuclear Autumn"])));
  }
});

// ../../node_modules/libram/dist/challengePaths/index.js
var init_challengePaths = __esm({
  "../../node_modules/libram/dist/challengePaths/index.js": function() {
    init_HeavyRains();
    init_CommunityService();
    init_NuclearAutumn();
  }
});

// ../../node_modules/libram/dist/diet/knapsack.js
function _toConsumableArray14(arr) {
  return _arrayWithoutHoles14(arr) || _iterableToArray14(arr) || _unsupportedIterableToArray31(arr) || _nonIterableSpread14();
}
function _nonIterableSpread14() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray14(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles14(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray31(arr);
}
function _slicedToArray18(arr, i) {
  return _arrayWithHoles18(arr) || _iterableToArrayLimit18(arr, i) || _unsupportedIterableToArray31(arr, i) || _nonIterableRest18();
}
function _nonIterableRest18() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit18(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles18(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper12(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray31(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray31(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray31(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray31(o, minLen);
}
function _arrayLikeToArray31(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _defineProperties14(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey19(descriptor.key), descriptor);
  }
}
function _createClass14(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties14(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties14(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck14(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperty18(obj, key, value) {
  key = _toPropertyKey19(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey19(arg) {
  var key = _toPrimitive19(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive19(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function aggregate(list, isEqual) {
  var aggregatedList = [];
  var _iterator = _createForOfIteratorHelper12(list), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var item10 = _step.value;
      if (aggregatedList.length === 0) {
        aggregatedList.push([item10, 1]);
      } else {
        var last = aggregatedList[aggregatedList.length - 1];
        var _last = _slicedToArray18(last, 1), lastItem = _last[0];
        if (isEqual ? isEqual(item10, lastItem) : item10 === lastItem) {
          last[1]++;
        } else {
          aggregatedList.push([item10, 1]);
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return aggregatedList;
}
function knapsack(values, capacity) {
  var _ref5;
  if (!Number.isFinite(capacity)) {
    throw new Error("Invalid capacity.");
  }
  var valuesInverted = values.map(function(_ref) {
    var _ref2 = _slicedToArray18(_ref, 4), thing = _ref2[0], value2 = _ref2[1], weight = _ref2[2], maximum2 = _ref2[3];
    return weight < 0 && maximum2 !== void 0 ? [new Not(thing), -value2, -weight, maximum2] : [thing, value2, weight, maximum2];
  });
  var capacityAdjustment = sum(values, function(_ref3) {
    var _ref4 = _slicedToArray18(_ref3, 4), weight = _ref4[2], maximum2 = _ref4[3];
    return weight < 0 && maximum2 !== void 0 ? -weight * maximum2 : 0;
  });
  var adjustedCapacity = capacity + capacityAdjustment;
  if (adjustedCapacity < 0) {
    return [-Infinity, []];
  }
  var valuesSorted = _toConsumableArray14(valuesInverted).sort(function(x, y) {
    return x[2] - y[2];
  });
  var values01 = (_ref5 = []).concat.apply(_ref5, _toConsumableArray14(valuesSorted.map(function(_ref6) {
    var _ref7 = _slicedToArray18(_ref6, 4), thing = _ref7[0], value2 = _ref7[1], weight = _ref7[2], maximum2 = _ref7[3];
    if (!Number.isFinite(weight) || weight < 0) {
      throw new Error("Invalid weight ".concat(weight, " for ").concat(thing instanceof Not ? "not ".concat(thing.thing) : thing));
    }
    var maxQuantity = Math.floor(maximum2 !== null && maximum2 !== void 0 ? maximum2 : adjustedCapacity / weight);
    if (maxQuantity < 0) {
      throw new Error("Invalid max quantity ".concat(maxQuantity, " for ").concat(thing instanceof Not ? "not ".concat(thing.thing) : thing));
    }
    return new Array(maxQuantity).fill([thing, value2, weight]);
  })));
  var memoizationTable = new Array(values01.length);
  for (var i = 0; i < values01.length; i++) {
    memoizationTable[i] = new Array(adjustedCapacity).fill(null);
  }
  var _bestSolution = bestSolution(memoizationTable, values01, values01.length - 1, adjustedCapacity), _bestSolution2 = _slicedToArray18(_bestSolution, 2), value = _bestSolution2[0], invertedSolution = _bestSolution2[1];
  var aggregatedSolution = aggregate(invertedSolution);
  var countMap = new Map(aggregatedSolution);
  var valueAdjustment = 0;
  var solution = aggregatedSolution.filter(function(_ref8) {
    var _ref9 = _slicedToArray18(_ref8, 1), thingOrNot2 = _ref9[0];
    return !(thingOrNot2 instanceof Not);
  });
  var _iterator2 = _createForOfIteratorHelper12(valuesSorted), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var _step2$value = _slicedToArray18(_step2.value, 4), thingOrNot = _step2$value[0], _value = _step2$value[1], maximum = _step2$value[3];
      if (thingOrNot instanceof Not) {
        var _countMap$get;
        var notCount = (_countMap$get = countMap.get(thingOrNot)) !== null && _countMap$get !== void 0 ? _countMap$get : 0;
        if (maximum === void 0) {
          throw new Error("Cannot find maximum for item ".concat(thingOrNot.thing, "."));
        }
        if (notCount > maximum) {
          throw new Error("Somehow picked ".concat(notCount, " more than the maximum ").concat(notCount, " for item ").concat(thingOrNot.thing, "."));
        }
        if (notCount < maximum) {
          solution.push([thingOrNot.thing, maximum - notCount]);
        }
        valueAdjustment -= maximum * _value;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return [value + valueAdjustment, solution];
}
function bestSolution(memoizationTable, values, currentIndex, remainingCapacity) {
  if (remainingCapacity < 0)
    return [-Infinity, []];
  if (remainingCapacity === 0 || currentIndex < 0)
    return [0, []];
  var memoized = memoizationTable[currentIndex][remainingCapacity - 1];
  if (memoized !== null)
    return memoized;
  var _values$currentIndex = _slicedToArray18(values[currentIndex], 3), item10 = _values$currentIndex[0], value = _values$currentIndex[1], weight = _values$currentIndex[2];
  var _bestSolution3 = bestSolution(memoizationTable, values, currentIndex - 1, remainingCapacity - weight), _bestSolution4 = _slicedToArray18(_bestSolution3, 2), valueIncludeRest = _bestSolution4[0], itemsInclude = _bestSolution4[1];
  var valueInclude = valueIncludeRest + value;
  var _bestSolution5 = bestSolution(memoizationTable, values, currentIndex - 1, remainingCapacity), _bestSolution6 = _slicedToArray18(_bestSolution5, 2), valueExclude = _bestSolution6[0], itemsExclude = _bestSolution6[1];
  var result = valueInclude > valueExclude ? [valueInclude, [].concat(_toConsumableArray14(itemsInclude), [item10])] : [valueExclude, itemsExclude];
  memoizationTable[currentIndex][remainingCapacity - 1] = result;
  return result;
}
var Not;
var init_knapsack = __esm({
  "../../node_modules/libram/dist/diet/knapsack.js": function() {
    init_utils();
    Not = /* @__PURE__ */ _createClass14(function Not2(thing) {
      _classCallCheck14(this, Not2);
      _defineProperty18(this, "thing", void 0);
      this.thing = thing;
    });
  }
});

// ../../node_modules/libram/dist/diet/index.js
function _createForOfIteratorHelper13(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray32(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function ownKeys8(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread8(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys8(Object(t), true).forEach(function(r2) {
      _defineProperty19(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys8(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _classCallCheck15(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties15(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey20(descriptor.key), descriptor);
  }
}
function _createClass15(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties15(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties15(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty19(obj, key, value) {
  key = _toPropertyKey20(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey20(arg) {
  var key = _toPrimitive20(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive20(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toConsumableArray15(arr) {
  return _arrayWithoutHoles15(arr) || _iterableToArray15(arr) || _unsupportedIterableToArray32(arr) || _nonIterableSpread15();
}
function _nonIterableSpread15() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray15(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles15(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray32(arr);
}
function _slicedToArray19(arr, i) {
  return _arrayWithHoles19(arr) || _iterableToArrayLimit19(arr, i) || _unsupportedIterableToArray32(arr, i) || _nonIterableRest19();
}
function _nonIterableRest19() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray32(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray32(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray32(o, minLen);
}
function _arrayLikeToArray32(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit19(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles19(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral57(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function isMonday() {
  return get2("Muscle Percent", $item(_templateObject489 || (_templateObject489 = _taggedTemplateLiteral57(["Tuesday's ruby"])))) > 0;
}
function _expectedAdventures(item10, modifiers) {
  var _item$notes, _item$notes2, _item$notes3, _item$notes4, _item$notes5;
  if (item10.adventures === "")
    return 0;
  var _item$adventures$spli = item10.adventures.split(/[-]/).map(function(s) {
    return parseInt(s);
  }), _item$adventures$spli2 = _slicedToArray19(_item$adventures$spli, 2), min = _item$adventures$spli2[0], recordedMax = _item$adventures$spli2[1];
  var max = recordedMax !== null && recordedMax !== void 0 ? recordedMax : min;
  var interpolated = _toConsumableArray15(new Array(max - min + 1).keys()).map(function(n) {
    return n + min;
  });
  var forkMugMultiplier = (0, import_kolmafia64.itemType)(item10) === "food" && (_item$notes = item10.notes) !== null && _item$notes !== void 0 && _item$notes.includes("SALAD") || (0, import_kolmafia64.itemType)(item10) === "booze" && (_item$notes2 = item10.notes) !== null && _item$notes2 !== void 0 && _item$notes2.includes("BEER") ? 1.5 : 1.3;
  var seasoningAdventures = max - min <= 1 ? 1 : 0.5;
  var garish = modifiers.garish && ((_item$notes3 = item10.notes) === null || _item$notes3 === void 0 ? void 0 : _item$notes3.includes("LASAGNA")) && !isMonday();
  var refinedPalate = modifiers.refinedPalate && ((_item$notes4 = item10.notes) === null || _item$notes4 === void 0 ? void 0 : _item$notes4.includes("WINE"));
  var pinkyRing = modifiers.pinkyRing && ((_item$notes5 = item10.notes) === null || _item$notes5 === void 0 ? void 0 : _item$notes5.includes("WINE"));
  return sum(interpolated, function(baseAdventures) {
    var _item$notes6, _item$notes7;
    var adventures = baseAdventures;
    if (modifiers.forkMug) {
      adventures = Math.floor(adventures * forkMugMultiplier);
    }
    if ((_item$notes6 = item10.notes) !== null && _item$notes6 !== void 0 && _item$notes6.includes("SAUCY") && modifiers.saucemaven) {
      adventures += (0, import_kolmafia64.myPrimestat)() === $stat(_templateObject2124 || (_templateObject2124 = _taggedTemplateLiteral57(["Mysticality"]))) ? 5 : 3;
    }
    if (garish)
      adventures += 5;
    if (refinedPalate)
      adventures = Math.floor(adventures * 1.25);
    if (pinkyRing)
      adventures = Math.round(adventures * 1.125);
    if ((_item$notes7 = item10.notes) !== null && _item$notes7 !== void 0 && _item$notes7.includes("MARTINI") && modifiers.tuxedoShirt) {
      adventures += 2;
    }
    if ((0, import_kolmafia64.itemType)(item10) === "food" && modifiers.mayoflex)
      adventures++;
    if ((0, import_kolmafia64.itemType)(item10) === "food" && modifiers.seasoning)
      adventures += seasoningAdventures;
    return adventures;
  }) / interpolated.length;
}
function isOrgan(x) {
  return organs.includes(x);
}
function planDiet(mpa, menu3) {
  var organCapacities = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [["food", null], ["booze", null], ["spleen item", null]];
  var resolvedOrganCapacities = organCapacities.map(function(_ref8) {
    var _ref9 = _slicedToArray19(_ref8, 2), organ = _ref9[0], size = _ref9[1];
    return [organ, size !== null && size !== void 0 ? size : organ === "food" ? (0, import_kolmafia64.fullnessLimit)() - (0, import_kolmafia64.myFullness)() : organ === "booze" ? (0, import_kolmafia64.inebrietyLimit)() - (0, import_kolmafia64.myInebriety)() : organ === "spleen item" ? (0, import_kolmafia64.spleenLimit)() - (0, import_kolmafia64.mySpleenUse)() : 0];
  });
  var includedInteractingItems = menu3.map(function(menuItem) {
    var interacting = interactingItems.find(function(_ref10) {
      var _ref11 = _slicedToArray19(_ref10, 1), itemOrEffect = _ref11[0];
      return menuItem.item === itemOrEffect || menuItem.item === $item(_templateObject4710 || (_templateObject4710 = _taggedTemplateLiteral57(["pocket wish"]))) && menuItem.effect === itemOrEffect;
    });
    if (interacting) {
      var _interacting = _slicedToArray19(interacting, 2), organSizes = _interacting[1];
      return [menuItem, organSizes];
    } else {
      return null;
    }
  }).filter(function(value) {
    return value !== null;
  });
  var dietPlanner = new DietPlanner(mpa, menu3.filter(function(menuItem) {
    return !includedInteractingItems.some(function(_ref12) {
      var _ref13 = _slicedToArray19(_ref12, 1), interacting = _ref13[0];
      return interacting === menuItem;
    });
  }));
  var _dietPlanner$planOrga = dietPlanner.planOrgansWithTrials(resolvedOrganCapacities.filter(function(_ref14) {
    var _ref15 = _slicedToArray19(_ref14, 2), organ = _ref15[0], capacity = _ref15[1];
    return ["food", "booze"].includes(organ) && capacity >= 0;
  }), includedInteractingItems, {}), _dietPlanner$planOrga2 = _slicedToArray19(_dietPlanner$planOrga, 2), planFoodBooze = _dietPlanner$planOrga2[1];
  var spleenCapacity = resolvedOrganCapacities.find(function(_ref16) {
    var _ref17 = _slicedToArray19(_ref16, 1), organ = _ref17[0];
    return organ === "spleen item";
  });
  if (spleenCapacity) {
    var additionalSpleen = sum(planFoodBooze, function(_ref18) {
      var _ref19 = _slicedToArray19(_ref18, 2), items = _ref19[0], number = _ref19[1];
      return items.some(function(menuItem) {
        return $items(_templateObject4810 || (_templateObject4810 = _taggedTemplateLiteral57(["jar of fermented pickle juice, extra-greasy slider"]))).includes(menuItem.item);
      }) ? 5 * number : 0;
    });
    var _spleenCapacity = _slicedToArray19(spleenCapacity, 2), availableSpleen = _spleenCapacity[1];
    var _dietPlanner$planOrga3 = dietPlanner.planOrgan("spleen item", availableSpleen + additionalSpleen), _dietPlanner$planOrga4 = _slicedToArray19(_dietPlanner$planOrga3, 2), planSpleen = _dietPlanner$planOrga4[1];
    return [].concat(_toConsumableArray15(planFoodBooze), _toConsumableArray15(planSpleen));
  } else {
    return planFoodBooze;
  }
}
var import_kolmafia64, _templateObject489, _templateObject2124, _templateObject3107, _templateObject490, _templateObject556, _templateObject645, _templateObject739, _templateObject834, _templateObject927, _templateObject1024, _templateObject1121, _templateObject1221, _templateObject1319, _templateObject1416, _templateObject1514, _templateObject1614, _templateObject1714, _templateObject1814, _templateObject1914, _templateObject2014, _templateObject2125, _templateObject2216, _templateObject2315, _templateObject2413, _templateObject2513, _templateObject2613, _templateObject2713, _templateObject2811, _templateObject2910, _templateObject3010, _templateObject3114, _templateObject3212, _templateObject3312, _templateObject3410, _templateObject3510, _templateObject3610, _templateObject3710, _templateObject3810, _templateObject3910, _templateObject4010, _templateObject4112, _templateObject4211, _templateObject4311, _templateObject4410, _templateObject4510, _templateObject4610, _templateObject4710, _templateObject4810, _templateObject496, _templateObject506, _templateObject5111, _templateObject5210, _templateObject5310, _templateObject5410, _templateObject557, _templateObject565, _templateObject575, _templateObject585, _templateObject594, _templateObject604, _templateObject6110, _templateObject6210, MenuItem, organs, DietPlanner, interactingItems, DietEntry, Diet;
var init_diet = __esm({
  "../../node_modules/libram/dist/diet/index.js": function() {
    import_kolmafia64 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_MayoClinic();
    init_template_string();
    init_utils();
    init_knapsack();
    MenuItem = /* @__PURE__ */ function() {
      function MenuItem2(item10) {
        var _MenuItem$defaultOpti;
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        _classCallCheck15(this, MenuItem2);
        _defineProperty19(this, "item", void 0);
        _defineProperty19(this, "organ", void 0);
        _defineProperty19(this, "size", void 0);
        _defineProperty19(this, "maximum", void 0);
        _defineProperty19(this, "additionalValue", void 0);
        _defineProperty19(this, "effect", void 0);
        _defineProperty19(this, "priceOverride", void 0);
        _defineProperty19(this, "mayo", void 0);
        _defineProperty19(this, "data", void 0);
        var _options = _objectSpread8(_objectSpread8({}, options), (_MenuItem$defaultOpti = MenuItem2.defaultOptions().get(item10)) !== null && _MenuItem$defaultOpti !== void 0 ? _MenuItem$defaultOpti : {}), size = _options.size, organ = _options.organ, maximum = _options.maximum, additionalValue = _options.additionalValue, effect2 = _options.effect, priceOverride = _options.priceOverride, mayo = _options.mayo, data = _options.data;
        this.item = item10;
        this.maximum = maximum === "auto" ? item10.dailyusesleft : maximum;
        this.additionalValue = additionalValue;
        this.effect = effect2;
        this.priceOverride = priceOverride;
        this.mayo = mayo;
        this.data = data;
        var typ = (0, import_kolmafia64.itemType)(this.item);
        this.organ = organ !== null && organ !== void 0 ? organ : isOrgan(typ) ? typ : void 0;
        this.size = size !== null && size !== void 0 ? size : this.organ === "food" ? this.item.fullness : this.organ === "booze" ? this.item.inebriety : this.organ === "spleen item" ? this.item.spleen : 0;
      }
      _createClass15(MenuItem2, [{
        key: "equals",
        value: function equals(other) {
          return this.item === other.item && this.effect === other.effect;
        }
      }, {
        key: "toString",
        value: function toString() {
          if (this.effect) {
            return "".concat(this.item, ":").concat(this.effect);
          }
          return this.item.toString();
        }
      }, {
        key: "price",
        value: function price2() {
          var _this$priceOverride, _MenuItem$defaultPric;
          return (_this$priceOverride = this.priceOverride) !== null && _this$priceOverride !== void 0 ? _this$priceOverride : (_MenuItem$defaultPric = MenuItem2.defaultPriceFunction) === null || _MenuItem$defaultPric === void 0 ? void 0 : _MenuItem$defaultPric.call(MenuItem2, this.item);
        }
      }], [{
        key: "defaultOptions",
        value: function defaultOptions() {
          return /* @__PURE__ */ new Map([[$item(_templateObject3107 || (_templateObject3107 = _taggedTemplateLiteral57(["distention pill"]))), {
            organ: "food",
            maximum: !have($item(_templateObject490 || (_templateObject490 = _taggedTemplateLiteral57(["distention pill"])))) || get("_distentionPillUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject556 || (_templateObject556 = _taggedTemplateLiteral57(["synthetic dog hair pill"]))), {
            organ: "booze",
            maximum: !have($item(_templateObject645 || (_templateObject645 = _taggedTemplateLiteral57(["synthetic dog hair pill"])))) || get("_syntheticDogHairPillUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject739 || (_templateObject739 = _taggedTemplateLiteral57(["cuppa Voraci tea"]))), {
            organ: "food",
            maximum: get("_voraciTeaUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject834 || (_templateObject834 = _taggedTemplateLiteral57(["cuppa Sobrie tea"]))), {
            organ: "booze",
            maximum: get("_sobrieTeaUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject927 || (_templateObject927 = _taggedTemplateLiteral57(["mojo filter"]))), {
            organ: "spleen item",
            maximum: 3 - get("currentMojoFilters"),
            size: -1
          }], [$item(_templateObject1024 || (_templateObject1024 = _taggedTemplateLiteral57(["spice melange"]))), {
            maximum: get("spiceMelangeUsed") ? 0 : 1
          }], [$item(_templateObject1121 || (_templateObject1121 = _taggedTemplateLiteral57(["Ultra Mega Sour Ball"]))), {
            maximum: get("_ultraMegaSourBallUsed") ? 0 : 1
          }], [$item(_templateObject1221 || (_templateObject1221 = _taggedTemplateLiteral57(["The Plumber's mushroom stew"]))), {
            maximum: get("_plumbersMushroomStewEaten") ? 0 : 1
          }], [$item(_templateObject1319 || (_templateObject1319 = _taggedTemplateLiteral57(["The Mad Liquor"]))), {
            maximum: get("_madLiquorDrunk") ? 0 : 1
          }], [$item(_templateObject1416 || (_templateObject1416 = _taggedTemplateLiteral57(["Doc Clock's thyme cocktail"]))), {
            maximum: get("_docClocksThymeCocktailDrunk") ? 0 : 1
          }], [$item(_templateObject1514 || (_templateObject1514 = _taggedTemplateLiteral57(["Mr. Burnsger"]))), {
            maximum: get("_mrBurnsgerEaten") ? 0 : 1
          }], [$item(_templateObject1614 || (_templateObject1614 = _taggedTemplateLiteral57(["Calzone of Legend"]))), {
            maximum: get("calzoneOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1714 || (_templateObject1714 = _taggedTemplateLiteral57(["Deep Dish of Legend"]))), {
            maximum: get("deepDishOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1814 || (_templateObject1814 = _taggedTemplateLiteral57(["Pizza of Legend"]))), {
            maximum: get("pizzaOfLegendEaten") ? 0 : 1
          }]]);
        }
      }]);
      return MenuItem2;
    }();
    _defineProperty19(MenuItem, "defaultPriceFunction", function(item10) {
      return (0, import_kolmafia64.npcPrice)(item10) > 0 ? (0, import_kolmafia64.npcPrice)(item10) : (0, import_kolmafia64.mallPrice)(item10);
    });
    organs = ["food", "booze", "spleen item"];
    DietPlanner = /* @__PURE__ */ function() {
      function DietPlanner2(mpa, menu3) {
        var _this2 = this;
        var _this = this;
        _classCallCheck15(this, DietPlanner2);
        _defineProperty19(this, "mpa", void 0);
        _defineProperty19(this, "menu", void 0);
        _defineProperty19(this, "mayoLookup", void 0);
        _defineProperty19(this, "fork", void 0);
        _defineProperty19(this, "mug", void 0);
        _defineProperty19(this, "seasoning", void 0);
        _defineProperty19(this, "spleenValue", 0);
        this.mpa = mpa;
        this.fork = menu3.find(function(item10) {
          return item10.item === $item(_templateObject1914 || (_templateObject1914 = _taggedTemplateLiteral57(["Ol' Scratch's salad fork"])));
        });
        this.mug = menu3.find(function(item10) {
          return item10.item === $item(_templateObject2014 || (_templateObject2014 = _taggedTemplateLiteral57(["Frosty's frosty mug"])));
        });
        this.seasoning = menu3.find(function(item10) {
          return item10.item === $item(_templateObject2125 || (_templateObject2125 = _taggedTemplateLiteral57(["Special Seasoning"])));
        });
        this.mayoLookup = /* @__PURE__ */ new Map();
        if (installed3()) {
          var _loop = function _loop2() {
            var mayo = _arr[_i];
            var menuItem = menu3.find(function(item10) {
              return item10.item === mayo;
            });
            if (menuItem)
              _this.mayoLookup.set(mayo, menuItem);
          };
          for (var _i = 0, _arr = [Mayo.flex, Mayo.zapine]; _i < _arr.length; _i++) {
            _loop();
          }
        }
        this.menu = menu3.filter(function(item10) {
          return item10.organ;
        });
        if (menu3.filter(function(item10) {
          return (0, import_kolmafia64.historicalPrice)(item10.item) === 0 || (0, import_kolmafia64.historicalAge)(item10.item) >= 1;
        }).length > 100) {
          (0, import_kolmafia64.mallPrices)("food");
          (0, import_kolmafia64.mallPrices)("booze");
        }
        var spleenItems = menu3.filter(function(item10) {
          return (0, import_kolmafia64.itemType)(item10.item) === "spleen item";
        });
        spleenItems.sort(function(x, y) {
          return -(_this2.consumptionValue(x) / x.item.spleen - _this2.consumptionValue(y) / y.item.spleen);
        });
        if (spleenItems.length > 0) {
          var bestMarginalSpleenItem = spleenItems.find(function(spleenItem) {
            return spleenItem.maximum === void 0 || spleenItem.maximum * spleenItem.size >= (0, import_kolmafia64.spleenLimit)() - (0, import_kolmafia64.mySpleenUse)();
          });
          if (bestMarginalSpleenItem) {
            this.spleenValue = Math.max(0, this.consumptionValue(bestMarginalSpleenItem) / bestMarginalSpleenItem.size);
          }
        }
      }
      _createClass15(DietPlanner2, [{
        key: "consumptionValue",
        value: function consumptionValue(menuItem) {
          return this.consumptionHelpersAndValue(menuItem, {})[1];
        }
        /**
         * Determine which helpers will be used with a menu item and its resulting value.
         *
         * @param menuItem Menu item to check.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair [array of helpers and base menu item, value].
         */
      }, {
        key: "consumptionHelpersAndValue",
        value: function consumptionHelpersAndValue(menuItem, overrideModifiers) {
          var _menuItem$additionalV, _menuItem$additionalV2;
          var helpers = [];
          if ((0, import_kolmafia64.itemType)(menuItem.item) === "food" && this.mayoLookup.size) {
            var mayo = menuItem.mayo ? this.mayoLookup.get(menuItem.mayo) : this.mayoLookup.get(Mayo.flex);
            if (mayo)
              helpers.push(mayo);
          }
          var defaultModifiers = _objectSpread8({
            forkMug: false,
            seasoning: this.seasoning ? helpers.includes(this.seasoning) : false,
            mayoflex: this.mayoLookup.size ? helpers.some(function(item10) {
              return item10.item === Mayo.flex;
            }) : false,
            refinedPalate: have($effect(_templateObject2216 || (_templateObject2216 = _taggedTemplateLiteral57(["Refined Palate"])))),
            garish: have($effect(_templateObject2315 || (_templateObject2315 = _taggedTemplateLiteral57(["Gar-ish"])))),
            saucemaven: have($skill(_templateObject2413 || (_templateObject2413 = _taggedTemplateLiteral57(["Saucemaven"])))),
            pinkyRing: have($item(_templateObject2513 || (_templateObject2513 = _taggedTemplateLiteral57(["mafia pinky ring"])))) && (0, import_kolmafia64.canEquip)($item(_templateObject2613 || (_templateObject2613 = _taggedTemplateLiteral57(["mafia pinky ring"])))),
            tuxedoShirt: have($item(_templateObject2713 || (_templateObject2713 = _taggedTemplateLiteral57(["tuxedo shirt"])))) && (0, import_kolmafia64.canEquip)($item(_templateObject2811 || (_templateObject2811 = _taggedTemplateLiteral57(["tuxedo shirt"]))))
          }, overrideModifiers);
          if (this.seasoning && (0, import_kolmafia64.itemType)(menuItem.item) === "food" && this.mpa * (_expectedAdventures(menuItem.item, _objectSpread8(_objectSpread8({}, defaultModifiers), {}, {
            seasoning: true
          })) - _expectedAdventures(menuItem.item, _objectSpread8(_objectSpread8({}, defaultModifiers), {}, {
            seasoning: false
          }))) > (0, import_kolmafia64.mallPrice)($item(_templateObject2910 || (_templateObject2910 = _taggedTemplateLiteral57(["Special Seasoning"]))))) {
            helpers.push(this.seasoning);
          }
          var forkMug = (0, import_kolmafia64.itemType)(menuItem.item) === "food" ? this.fork : (0, import_kolmafia64.itemType)(menuItem.item) === "booze" ? this.mug : null;
          var forkMugPrice = forkMug ? forkMug.price() : Infinity;
          var baseCost = menuItem.price() + sum(helpers, function(item10) {
            return item10.price();
          });
          var valueRaw = _expectedAdventures(menuItem.item, defaultModifiers) * this.mpa - baseCost + ((_menuItem$additionalV = menuItem.additionalValue) !== null && _menuItem$additionalV !== void 0 ? _menuItem$additionalV : 0);
          var valueForkMug = _expectedAdventures(menuItem.item, _objectSpread8(_objectSpread8({}, defaultModifiers), {}, {
            forkMug: true
          })) * this.mpa - baseCost - forkMugPrice + ((_menuItem$additionalV2 = menuItem.additionalValue) !== null && _menuItem$additionalV2 !== void 0 ? _menuItem$additionalV2 : 0);
          var valueSpleen = $items(_templateObject3010 || (_templateObject3010 = _taggedTemplateLiteral57(["jar of fermented pickle juice, extra-greasy slider"]))).includes(menuItem.item) ? 5 * this.spleenValue : 0;
          return forkMug && valueForkMug > valueRaw ? [[].concat(helpers, [forkMug, menuItem]), valueForkMug + valueSpleen] : [[].concat(helpers, [menuItem]), valueRaw + valueSpleen];
        }
        /**
         * Plan an individual organ.
         *
         * @param organ Organ to plan
         * @param capacity Organ capacity.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgan",
        value: function planOrgan(organ, capacity) {
          var _this = this;
          var overrideModifiers = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var submenu = this.menu.filter(function(menuItem) {
            return menuItem.organ === organ && (0, import_kolmafia64.myLevel)() >= menuItem.item.levelreq;
          });
          var knapsackValues = submenu.map(function(menuItem) {
            return [].concat(_toConsumableArray15(_this.consumptionHelpersAndValue(menuItem, overrideModifiers)), [menuItem.size, menuItem.maximum]);
          });
          return knapsack(knapsackValues, capacity);
        }
        /**
         * Plan organs.
         *
         * @param organCapacities Organ capacities.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgans",
        value: function planOrgans(organCapacities) {
          var _this = this;
          var _ref5;
          var overrideModifiers = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var valuePlans = organCapacities.map(function(_ref) {
            var _ref2 = _slicedToArray19(_ref, 2), organ = _ref2[0], capacity = _ref2[1];
            return _this.planOrgan(organ, capacity, overrideModifiers);
          });
          return [sum(valuePlans, function(_ref3) {
            var _ref4 = _slicedToArray19(_ref3, 1), value = _ref4[0];
            return value;
          }), (_ref5 = []).concat.apply(_ref5, _toConsumableArray15(valuePlans.map(function(_ref6) {
            var _ref7 = _slicedToArray19(_ref6, 2), plan = _ref7[1];
            return plan;
          })))];
        }
        /**
         * Plan organs, retrying with and without each trial item. Runtime is
         * proportional to 2 ^ trialItems.length.
         *
         * @param organCapacities Organ capacities.
         * @param trialItems Items to rerun solver with and without.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgansWithTrials",
        value: function planOrgansWithTrials(organCapacities, trialItems, overrideModifiers) {
          if (trialItems.length === 0) {
            return this.planOrgans(organCapacities, overrideModifiers);
          }
          var _trialItems$ = _slicedToArray19(trialItems[0], 2), trialItem = _trialItems$[0], organSizes = _trialItems$[1];
          if (trialItem.maximum !== void 0 && trialItem.maximum <= 0) {
            return this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers);
          }
          var organCapacitiesWithMap = new Map(organCapacities);
          var _iterator = _createForOfIteratorHelper13(organSizes), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _step$value = _slicedToArray19(_step.value, 2), organ = _step$value[0], size = _step$value[1];
              var current2 = organCapacitiesWithMap.get(organ);
              if (current2 === void 0) {
                return this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers);
              }
              organCapacitiesWithMap.set(organ, current2 - size);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          var organCapacitiesWith = _toConsumableArray15(organCapacitiesWithMap);
          var isRefinedPalate = trialItem.item === $item(_templateObject3114 || (_templateObject3114 = _taggedTemplateLiteral57(["pocket wish"]))) && trialItem.effect === $effect(_templateObject3212 || (_templateObject3212 = _taggedTemplateLiteral57(["Refined Palate"]))) || trialItem.item === $item(_templateObject3312 || (_templateObject3312 = _taggedTemplateLiteral57(["toasted brie"])));
          var isGarish = trialItem.item === $item(_templateObject3410 || (_templateObject3410 = _taggedTemplateLiteral57(["pocket wish"]))) && trialItem.effect === $effect(_templateObject3510 || (_templateObject3510 = _taggedTemplateLiteral57(["Gar-ish"]))) || trialItem.item === $item(_templateObject3610 || (_templateObject3610 = _taggedTemplateLiteral57(["potion of the field gar"])));
          var _this$planOrgansWithT = this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers), _this$planOrgansWithT2 = _slicedToArray19(_this$planOrgansWithT, 2), valueWithout = _this$planOrgansWithT2[0], planWithout = _this$planOrgansWithT2[1];
          var _this$planOrgansWithT3 = this.planOrgansWithTrials(organCapacitiesWith, trialItems.slice(1), _objectSpread8(_objectSpread8(_objectSpread8({}, overrideModifiers), isRefinedPalate ? {
            refinedPalate: true
          } : {}), isGarish ? {
            garish: true
          } : {})), _this$planOrgansWithT4 = _slicedToArray19(_this$planOrgansWithT3, 2), valueWith = _this$planOrgansWithT4[0], planWith = _this$planOrgansWithT4[1];
          var _this$consumptionHelp = this.consumptionHelpersAndValue(trialItem, {}), _this$consumptionHelp2 = _slicedToArray19(_this$consumptionHelp, 2), helpersAndItem = _this$consumptionHelp2[0], value = _this$consumptionHelp2[1];
          return valueWithout > valueWith + value ? [valueWithout, planWithout] : [valueWith + value, [].concat(_toConsumableArray15(planWith), [[helpersAndItem, 1]])];
        }
      }]);
      return DietPlanner2;
    }();
    interactingItems = [[$item(_templateObject3710 || (_templateObject3710 = _taggedTemplateLiteral57(["spice melange"]))), [["food", -3], ["booze", -3]]], [$item(_templateObject3810 || (_templateObject3810 = _taggedTemplateLiteral57(["Ultra Mega Sour Ball"]))), [["food", -3], ["booze", -3]]], [$item(_templateObject3910 || (_templateObject3910 = _taggedTemplateLiteral57(["The Plumber's mushroom stew"]))), [["food", 3], ["booze", -1]]], [$item(_templateObject4010 || (_templateObject4010 = _taggedTemplateLiteral57(["The Mad Liquor"]))), [["food", -1], ["booze", 3]]], [$item(_templateObject4112 || (_templateObject4112 = _taggedTemplateLiteral57(["Doc Clock's thyme cocktail"]))), [["food", -2], ["booze", 4]]], [$item(_templateObject4211 || (_templateObject4211 = _taggedTemplateLiteral57(["Mr. Burnsger"]))), [["food", 4], ["booze", -2]]], [$effect(_templateObject4311 || (_templateObject4311 = _taggedTemplateLiteral57(["Refined Palate"]))), []], [$item(_templateObject4410 || (_templateObject4410 = _taggedTemplateLiteral57(["toasted brie"]))), [["food", 2]]], [$effect(_templateObject4510 || (_templateObject4510 = _taggedTemplateLiteral57(["Gar-ish"]))), []], [$item(_templateObject4610 || (_templateObject4610 = _taggedTemplateLiteral57(["potion of the field gar"]))), []]];
    DietEntry = /* @__PURE__ */ function() {
      function DietEntry2(menuItems, quantity) {
        _classCallCheck15(this, DietEntry2);
        _defineProperty19(this, "menuItems", void 0);
        _defineProperty19(this, "quantity", void 0);
        this.menuItems = menuItems;
        this.quantity = quantity;
      }
      _createClass15(DietEntry2, [{
        key: "target",
        value: function target() {
          return this.menuItems[this.menuItems.length - 1];
        }
      }, {
        key: "helpers",
        value: function helpers() {
          if (this.menuItems.length > 1) {
            return this.menuItems.slice(0, -1);
          }
          return [];
        }
      }, {
        key: "expectedAdventures",
        value: function expectedAdventures(diet) {
          {
            if (this.menuItems.length === 0 || this.quantity === 0) {
              return 0;
            } else {
              var items = this.menuItems.map(function(m) {
                return m.item;
              });
              var targetItem = this.menuItems[this.menuItems.length - 1].item;
              var fork = (0, import_kolmafia64.itemType)(targetItem) === "food" && items.includes($item(_templateObject496 || (_templateObject496 = _taggedTemplateLiteral57(["Ol' Scratch's salad fork"]))));
              var mug = (0, import_kolmafia64.itemType)(targetItem) === "booze" && items.includes($item(_templateObject506 || (_templateObject506 = _taggedTemplateLiteral57(["Frosty's frosty mug"]))));
              return this.quantity * _expectedAdventures(this.menuItems[this.menuItems.length - 1].item, {
                forkMug: fork || mug,
                seasoning: items.includes($item(_templateObject5111 || (_templateObject5111 = _taggedTemplateLiteral57(["Special Seasoning"])))),
                mayoflex: items.includes(Mayo.flex),
                refinedPalate: diet.refinedPalate,
                garish: diet.garish,
                saucemaven: diet.saucemaven,
                pinkyRing: diet.pinkyRing,
                tuxedoShirt: diet.tuxedoShirt
              });
            }
          }
        }
      }, {
        key: "expectedValue",
        value: function expectedValue(mpa, diet) {
          var method = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "gross";
          var gross = mpa * this.expectedAdventures(diet) + this.quantity * sum(this.menuItems, function(menuItem) {
            var _menuItem$additionalV3;
            return (_menuItem$additionalV3 = menuItem.additionalValue) !== null && _menuItem$additionalV3 !== void 0 ? _menuItem$additionalV3 : 0;
          });
          if (method === "gross") {
            return gross;
          } else {
            return gross - this.expectedPrice();
          }
        }
      }, {
        key: "expectedPrice",
        value: function expectedPrice() {
          return this.quantity * sum(this.menuItems, function(menuItem) {
            return menuItem.price();
          });
        }
      }]);
      return DietEntry2;
    }();
    Diet = /* @__PURE__ */ function() {
      function Diet2() {
        var entries = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        _classCallCheck15(this, Diet2);
        _defineProperty19(this, "entries", void 0);
        this.entries = entries;
      }
      _createClass15(Diet2, [{
        key: "refinedPalate",
        get: function get4() {
          return this.entries.some(function(dietEntry) {
            return dietEntry.menuItems.some(function(trialItem) {
              return trialItem.item === $item(_templateObject5210 || (_templateObject5210 = _taggedTemplateLiteral57(["pocket wish"]))) && trialItem.effect === $effect(_templateObject5310 || (_templateObject5310 = _taggedTemplateLiteral57(["Refined Palate"]))) || trialItem.item === $item(_templateObject5410 || (_templateObject5410 = _taggedTemplateLiteral57(["toasted brie"])));
            });
          });
        }
      }, {
        key: "garish",
        get: function get4() {
          return this.entries.some(function(dietEntry) {
            return dietEntry.menuItems.some(function(trialItem) {
              return trialItem.item === $item(_templateObject557 || (_templateObject557 = _taggedTemplateLiteral57(["pocket wish"]))) && trialItem.effect === $effect(_templateObject565 || (_templateObject565 = _taggedTemplateLiteral57(["Gar-ish"]))) || trialItem.item === $item(_templateObject575 || (_templateObject575 = _taggedTemplateLiteral57(["potion of the field gar"])));
            });
          });
        }
      }, {
        key: "saucemaven",
        get: function get4() {
          return have($skill(_templateObject585 || (_templateObject585 = _taggedTemplateLiteral57(["Saucemaven"]))));
        }
      }, {
        key: "tuxedoShirt",
        get: function get4() {
          return have($item(_templateObject594 || (_templateObject594 = _taggedTemplateLiteral57(["tuxedo shirt"])))) && (0, import_kolmafia64.canEquip)($item(_templateObject604 || (_templateObject604 = _taggedTemplateLiteral57(["tuxedo shirt"]))));
        }
      }, {
        key: "pinkyRing",
        get: function get4() {
          return have($item(_templateObject6110 || (_templateObject6110 = _taggedTemplateLiteral57(["mafia pinky ring"])))) && (0, import_kolmafia64.canEquip)($item(_templateObject6210 || (_templateObject6210 = _taggedTemplateLiteral57(["mafia pinky ring"]))));
        }
      }, {
        key: "expectedAdventures",
        value: function expectedAdventures() {
          var _this = this;
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedAdventures(_this);
          });
        }
      }, {
        key: "expectedValue",
        value: function expectedValue(mpa) {
          var _this = this;
          var method = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "gross";
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedValue(mpa, _this, method);
          });
        }
      }, {
        key: "expectedPrice",
        value: function expectedPrice() {
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedPrice();
          });
        }
      }, {
        key: "copy",
        value: function copy() {
          return new Diet2(_toConsumableArray15(this.entries));
        }
      }], [{
        key: "from",
        value: function from(rawDiet) {
          var diet = rawDiet.map(function(item10) {
            var _item = _slicedToArray19(item10, 2), menuItems = _item[0], quantity = _item[1];
            return new DietEntry(menuItems, quantity);
          });
          return new Diet2(diet);
        }
      }, {
        key: "plan",
        value: function plan(mpa, menu3) {
          var organCapacities = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
            food: "auto",
            booze: "auto",
            spleen: "auto"
          };
          var food = organCapacities.food, booze = organCapacities.booze, spleen = organCapacities.spleen;
          var plannerCapacity = [];
          if (food) {
            plannerCapacity.push(["food", food === "auto" ? null : food]);
          }
          if (booze) {
            plannerCapacity.push(["booze", booze === "auto" ? null : booze]);
          }
          if (spleen) {
            plannerCapacity.push(["spleen item", spleen === "auto" ? null : spleen]);
          }
          return Diet2.from(planDiet(mpa, menu3, plannerCapacity));
        }
      }]);
      return Diet2;
    }();
  }
});

// ../../node_modules/libram/dist/Dungeon.js
function _taggedTemplateLiteral58(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper14(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray33(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray16(arr) {
  return _arrayWithoutHoles16(arr) || _iterableToArray16(arr) || _unsupportedIterableToArray33(arr) || _nonIterableSpread16();
}
function _nonIterableSpread16() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray33(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray33(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray33(o, minLen);
}
function _iterableToArray16(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles16(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray33(arr);
}
function _arrayLikeToArray33(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck16(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties16(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey21(descriptor.key), descriptor);
  }
}
function _createClass16(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties16(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties16(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty20(obj, key, value) {
  key = _toPropertyKey21(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey21(arg) {
  var key = _toPrimitive21(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive21(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var import_kolmafia65, _templateObject491, _templateObject2126, _templateObject3108, Dungeon, Dreadsylvania, Hobopolis, SlimeTube;
var init_Dungeon = __esm({
  "../../node_modules/libram/dist/Dungeon.js": function() {
    import_kolmafia65 = require("kolmafia");
    init_Clan();
    init_lib();
    init_template_string();
    init_utils();
    Dungeon = /* @__PURE__ */ function() {
      function Dungeon2(name_, loot, openAction, closeAction, openCost, openImage, closedImage) {
        _classCallCheck16(this, Dungeon2);
        _defineProperty20(this, "name_", void 0);
        _defineProperty20(this, "loot", void 0);
        _defineProperty20(this, "openAction", void 0);
        _defineProperty20(this, "closeAction", void 0);
        _defineProperty20(this, "openCost", void 0);
        _defineProperty20(this, "openImage", void 0);
        _defineProperty20(this, "closedImage", void 0);
        this.name_ = name_;
        this.loot = loot;
        this.openAction = openAction;
        this.closeAction = closeAction;
        this.openCost = openCost;
        this.openImage = openImage;
        this.closedImage = closedImage;
      }
      _createClass16(Dungeon2, [{
        key: "possibleLoot",
        get: function get4() {
          return _toConsumableArray16(this.loot);
        }
      }, {
        key: "name",
        get: function get4() {
          return this.name_;
        }
      }, {
        key: "distribute",
        value: function distribute(idOrname_) {
          var _this = this;
          var loot = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.loot;
          var distributeAllOfAGivenItem = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !(loot instanceof Map);
          var player = getPlayerFromIdOrName(idOrname_);
          var lootList = loot instanceof Map ? countedMapToArray(loot) : Array.isArray(loot) ? loot : [loot];
          var badLoot = lootList.find(function(lootItem) {
            return !_this.loot.includes(lootItem);
          });
          if (badLoot) {
            throw new Error("".concat(badLoot, " is not a valid piece of dungeon loot"));
          }
          var pageText = (0, import_kolmafia65.visitUrl)("clan_basement.php");
          if (!pageText.match(new RegExp(player.name, "i"))) {
            throw new Error("".concat(player.name, " cannot be distributed loot from ").concat((0, import_kolmafia65.getClanName)()));
          }
          var itemname_s = (0, import_kolmafia65.xpath)(pageText, "//tr/td[2]/b/text()");
          var whichLoots = (0, import_kolmafia65.xpath)(pageText, '//form[@action="clan_basement.php"]//input[@type="hidden"][@name_="whichloot"]/@value');
          itemname_s.forEach(function(itemname_, index) {
            if (lootList.includes((0, import_kolmafia65.toItem)(itemname_))) {
              (0, import_kolmafia65.visitUrl)("clan_basement.php?whichloot=".concat(whichLoots[index], "&recipient=").concat(player.id));
              if (!distributeAllOfAGivenItem)
                lootList.splice(lootList.indexOf((0, import_kolmafia65.toItem)(itemname_)));
            }
          });
        }
        /**
         * Close this dungeon
         *
         * @returns Whether the dungeon is now closed
         */
      }, {
        key: "close",
        value: function close() {
          (0, import_kolmafia65.visitUrl)("clan_basement.php?action=".concat(this.closeAction, "&confirm=true"), true);
          var pageText = (0, import_kolmafia65.visitUrl)("clan_basement.php");
          return pageText.includes(this.closedImage);
        }
        /**
         * Open an instance of this dungeon
         *
         * @param paymentPolicy How much meat should we put into the clan stash to open this dungeon?
         * @returns Whether the dungeon is now open
         */
      }, {
        key: "open",
        value: function open() {
          var paymentPolicy = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Difference";
          var pageText = (0, import_kolmafia65.visitUrl)("clan_basement.php");
          if (pageText.includes(this.openImage))
            return true;
          var clan = Clan.get();
          if (paymentPolicy === "All") {
            clan.putMeatInCoffer(this.openCost);
          } else {
            var stashMeat = clan.getMeatInCoffer();
            var payDifference = this.openCost - stashMeat;
            if (payDifference > 0) {
              if (paymentPolicy === "None")
                return false;
              clan.putMeatInCoffer(payDifference);
            }
          }
          (0, import_kolmafia65.visitUrl)("clan_basement.php?action=".concat(this.openAction), true);
          return (0, import_kolmafia65.visitUrl)("clan_basement.php").includes(this.openImage);
        }
        /**
         * @returns A counted map of all loot from this dungeon eligible for distribution
         */
      }, {
        key: "findLoot",
        value: function findLoot() {
          var result = /* @__PURE__ */ new Map();
          var pageText = (0, import_kolmafia65.visitUrl)("clan_basement.php");
          var _iterator = _createForOfIteratorHelper14(this.loot), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _pageText$match$lengt, _pageText$match;
              var lootItem = _step.value;
              result.set(lootItem, (_pageText$match$lengt = (_pageText$match = pageText.match(new RegExp(lootItem.name, "g"))) === null || _pageText$match === void 0 ? void 0 : _pageText$match.length) !== null && _pageText$match$lengt !== void 0 ? _pageText$match$lengt : 0);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
      }]);
      return Dungeon2;
    }();
    Dreadsylvania = new Dungeon("Dreadsylvania", $items(_templateObject491 || (_templateObject491 = _taggedTemplateLiteral58(["Great Wolf's headband, Great Wolf's right paw, Great Wolf's left paw, Great Wolf's lice, Great Wolf's rocket launcher, Great Wolf's beastly trousers, Drapes-You-Regally, Warms-Your-Tush, Covers-Your-Head, Protects-Your-Junk, Quiets-Your-Steps, Helps-You-Sleep, Mayor Ghost's khakis, Mayor Ghost's cloak, Mayor Ghost's toupee, Mayor Ghost's scissors, Mayor Ghost's sash, Mayor Ghost's gavel, zombie mariachi hat, zombie accordion, zombie mariachi pants, HOA regulation book, HOA zombie eyes, HOA citation pad, Unkillable Skeleton's skullcap, Unkillable Skeleton's shinguards, Unkillable Skeleton's breastplate, Unkillable Skeleton's shield, Unkillable Skeleton's sawsword, Unkillable Skeleton's restless leg, skull capacitor, Thunkula's drinking cap, Drunkula's silky pants, Drunkula's cape, Drunkula's ring of haze, Drunkula's wineglass, Drunkula's bell, bottle of Bloodweiser, bottle of Bloodweiser, bottle of Bloodweiser, bottle of Bloodweiser, electric Kool-Aid, electric Kool-Aid, electric Kool-Aid, electric Kool-Aid, ghost pepper, ghost pepper, ghost pepper, ghost pepper, Gets-You-Drunk, Gets-You-Drunk, Gets-You-Drunk, Gets-You-Drunk, wriggling severed nose, wriggling severed nose, wriggling severed nose, wriggling severed nose, Hunger\u2122 Sauce, Hunger\u2122 Sauce, Hunger\u2122 Sauce, Hunger\u2122 Sauce"]))), "translatemap", "foldmap", 1e6, "dvmap.gif", "foldmap.gif");
    Hobopolis = new Dungeon("Hobopolis", $items(_templateObject2126 || (_templateObject2126 = _taggedTemplateLiteral58(["Ol' Scratch's ash can, Ol' Scratch's ol' britches, Ol' Scratch's stovepipe hat, Ol' Scratch's infernal pitchfork, Ol' Scratch's manacles, Ol' Scratch's stove door, Frosty's carrot, Frosty's nailbat, Frosty's old silk hat, Frosty's arm, Frosty's iceball, Frosty's snowball sack, Oscus's dumpster waders, Oscus's pelt, Wand of Oscus, Oscus's flypaper pants, Oscus's garbage can lid, Oscus's neverending soda, Zombo's grievous greaves, Zombo's shield, Zombo's skullcap, Zombo's empty eye, Zombo's shoulder blade, Zombo's skull ring, Chester's bag of candy, Chester's cutoffs, Chester's moustache, Chester's Aquarius medallion, Chester's muscle shirt, Chester's sunglasses, Hodgman's bow tie, Hodgman's porkpie hat, Hodgman's lobsterskin pants, Hodgman's almanac, Hodgman's lucky sock, Hodgman's metal detector, Hodgman's varcolac paw, Hodgman's harmonica, Hodgman's garbage sticker, Hodgman's cane, Hodgman's whackin' stick, Hodgman's disgusting technicolor overcoat, Hodgman's imaginary hamster"]))), "cleansewer", "floodsewer", 1e6, "opengrate.gif", "sewergrate.gif");
    SlimeTube = new Dungeon("The Slime Tube", $items(_templateObject3108 || (_templateObject3108 = _taggedTemplateLiteral58(["slime-soaked brain, slime-soaked hypophysis, slime-soaked sweat gland, squirming Slime larva, caustic slime nodule, caustic slime nodule, hardened slime belt, hardened slime hat, hardened slime pants"]))), "cleanspot", "sealtube", 25e4, "slimehole.gif", "greasespot.gif");
  }
});

// ../../node_modules/libram/dist/mood.js
function ownKeys9(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread9(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys9(Object(t), true).forEach(function(r2) {
      _defineProperty21(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys9(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _createForOfIteratorHelper15(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray34(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray34(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray34(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray34(o, minLen);
}
function _arrayLikeToArray34(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral59(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _inherits5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf5(subClass, superClass);
}
function _setPrototypeOf5(o, p) {
  _setPrototypeOf5 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf5(o, p);
}
function _createSuper4(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct4();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf4(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf4(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn4(this, result);
  };
}
function _possibleConstructorReturn4(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized4(self2);
}
function _assertThisInitialized4(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct4() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf4(o) {
  _getPrototypeOf4 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf4(o);
}
function _defineProperty21(obj, key, value) {
  key = _toPropertyKey22(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck17(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties17(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey22(descriptor.key), descriptor);
  }
}
function _createClass17(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties17(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties17(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey22(arg) {
  var key = _toPrimitive22(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive22(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var import_kolmafia66, _templateObject497, _templateObject2127, _templateObject3109, _templateObject498, _templateObject558, _templateObject646, _templateObject740, _templateObject835, _templateObject928, _templateObject1025, MpSource, OscusSoda, MagicalSausages, MoodElement, SkillMoodElement, PotionMoodElement, GenieMoodElement, CustomMoodElement, AsdonMoodElement, Mood;
var init_mood = __esm({
  "../../node_modules/libram/dist/mood.js": function() {
    import_kolmafia66 = require("kolmafia");
    init_lib();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    MpSource = /* @__PURE__ */ function() {
      function MpSource2() {
        _classCallCheck17(this, MpSource2);
      }
      _createClass17(MpSource2, [{
        key: "usesRemaining",
        value: function usesRemaining() {
          return 0;
        }
      }, {
        key: "availableMpMax",
        value: function availableMpMax() {
          return this.availableMpMin();
        }
      }]);
      return MpSource2;
    }();
    OscusSoda = /* @__PURE__ */ function(_MpSource) {
      _inherits5(OscusSoda2, _MpSource);
      var _super = _createSuper4(OscusSoda2);
      function OscusSoda2() {
        _classCallCheck17(this, OscusSoda2);
        return _super.apply(this, arguments);
      }
      _createClass17(OscusSoda2, [{
        key: "available",
        value: function available4() {
          return have($item(_templateObject497 || (_templateObject497 = _taggedTemplateLiteral59(["Oscus's neverending soda"]))));
        }
      }, {
        key: "usesRemaining",
        value: function usesRemaining() {
          return get("oscusSodaUsed") ? 0 : 1;
        }
      }, {
        key: "availableMpMin",
        value: function availableMpMin() {
          return this.available() && this.usesRemaining() > 0 ? 200 : 0;
        }
      }, {
        key: "availableMpMax",
        value: function availableMpMax() {
          return this.available() && this.usesRemaining() > 0 ? 300 : 0;
        }
      }, {
        key: "execute",
        value: function execute() {
          (0, import_kolmafia66.use)($item(_templateObject2127 || (_templateObject2127 = _taggedTemplateLiteral59(["Oscus's neverending soda"]))));
        }
      }]);
      return OscusSoda2;
    }(MpSource);
    _defineProperty21(OscusSoda, "instance", new OscusSoda());
    MagicalSausages = /* @__PURE__ */ function(_MpSource2) {
      _inherits5(MagicalSausages2, _MpSource2);
      var _super2 = _createSuper4(MagicalSausages2);
      function MagicalSausages2() {
        _classCallCheck17(this, MagicalSausages2);
        return _super2.apply(this, arguments);
      }
      _createClass17(MagicalSausages2, [{
        key: "available",
        value: function available4() {
          return have($item(_templateObject3109 || (_templateObject3109 = _taggedTemplateLiteral59(["Kramco Sausage-o-Matic\u2122"]))));
        }
      }, {
        key: "usesRemaining",
        value: function usesRemaining() {
          var maxSausages = (0, import_kolmafia66.availableAmount)($item(_templateObject498 || (_templateObject498 = _taggedTemplateLiteral59(["magical sausage"])))) + (0, import_kolmafia66.availableAmount)($item(_templateObject558 || (_templateObject558 = _taggedTemplateLiteral59(["magical sausage casing"]))));
          return this.available() ? clamp(23 - get("_sausagesEaten"), 0, maxSausages) : 0;
        }
      }, {
        key: "availableMpMin",
        value: function availableMpMin() {
          return this.available() ? Math.min((0, import_kolmafia66.myMaxmp)(), 999) * this.usesRemaining() : 0;
        }
      }, {
        key: "execute",
        value: function execute() {
          var mpSpaceAvailable = (0, import_kolmafia66.myMaxmp)() - (0, import_kolmafia66.myMp)();
          if (mpSpaceAvailable < 700)
            return;
          var maxSausages = Math.min(this.usesRemaining(), Math.floor(((0, import_kolmafia66.myMaxmp)() - (0, import_kolmafia66.myMp)()) / Math.min((0, import_kolmafia66.myMaxmp)() - (0, import_kolmafia66.myMp)(), 999)));
          (0, import_kolmafia66.retrieveItem)(maxSausages, $item(_templateObject646 || (_templateObject646 = _taggedTemplateLiteral59(["magical sausage"]))));
          (0, import_kolmafia66.eat)(maxSausages, $item(_templateObject740 || (_templateObject740 = _taggedTemplateLiteral59(["magical sausage"]))));
        }
      }]);
      return MagicalSausages2;
    }(MpSource);
    _defineProperty21(MagicalSausages, "instance", new MagicalSausages());
    MoodElement = /* @__PURE__ */ function() {
      function MoodElement2() {
        _classCallCheck17(this, MoodElement2);
      }
      _createClass17(MoodElement2, [{
        key: "mpCostPerTurn",
        value: function mpCostPerTurn() {
          return 0;
        }
      }, {
        key: "turnIncrement",
        value: function turnIncrement() {
          return 1;
        }
      }]);
      return MoodElement2;
    }();
    SkillMoodElement = /* @__PURE__ */ function(_MoodElement) {
      _inherits5(SkillMoodElement2, _MoodElement);
      var _super3 = _createSuper4(SkillMoodElement2);
      function SkillMoodElement2(skill) {
        var _this;
        _classCallCheck17(this, SkillMoodElement2);
        _this = _super3.call(this);
        _defineProperty21(_assertThisInitialized4(_this), "skill", void 0);
        _this.skill = skill;
        return _this;
      }
      _createClass17(SkillMoodElement2, [{
        key: "mpCostPerTurn",
        value: function mpCostPerTurn() {
          var turns = (0, import_kolmafia66.turnsPerCast)(this.skill);
          return turns > 0 ? (0, import_kolmafia66.mpCost)(this.skill) / turns : 0;
        }
      }, {
        key: "turnIncrement",
        value: function turnIncrement() {
          return (0, import_kolmafia66.turnsPerCast)(this.skill);
        }
      }, {
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var effect2 = (0, import_kolmafia66.toEffect)(this.skill);
          var initialTurns = (0, import_kolmafia66.haveEffect)(effect2);
          if (!(0, import_kolmafia66.haveSkill)(this.skill))
            return false;
          if (initialTurns >= ensureTurns)
            return true;
          if (mood.options.songSlots.length > 0 && isSong(this.skill) && !have(effect2)) {
            var activeSongs = getActiveSongs();
            var _iterator = _createForOfIteratorHelper15(activeSongs), _step;
            try {
              var _loop = function _loop2() {
                var song2 = _step.value;
                var slot = mood.options.songSlots.find(function(slot2) {
                  return slot2.includes(song2);
                });
                if (!slot || slot.includes(effect2)) {
                  (0, import_kolmafia66.cliExecute)("shrug ".concat(song2));
                  return 1;
                }
              };
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                if (_loop())
                  break;
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
          var oldRemainingCasts = -1;
          var remainingCasts = Math.ceil((ensureTurns - (0, import_kolmafia66.haveEffect)(effect2)) / (0, import_kolmafia66.turnsPerCast)(this.skill));
          while (remainingCasts > 0 && oldRemainingCasts !== remainingCasts) {
            var maxCasts = void 0;
            if ((0, import_kolmafia66.hpCost)(this.skill) > 0) {
              maxCasts = Math.max(0, Math.floor(((0, import_kolmafia66.myHp)() - 1) / (0, import_kolmafia66.hpCost)(this.skill)));
            } else {
              var cost = (0, import_kolmafia66.mpCost)(this.skill);
              maxCasts = Math.floor(Math.min(mood.availableMp(), (0, import_kolmafia66.myMp)()) / cost);
              if (maxCasts < remainingCasts) {
                var bestMp = Math.min(remainingCasts * (0, import_kolmafia66.mpCost)(this.skill), (0, import_kolmafia66.myMaxmp)());
                mood.moreMp(bestMp);
                maxCasts = Math.floor(Math.min(mood.availableMp(), (0, import_kolmafia66.myMp)()) / cost);
              }
            }
            var casts = clamp(remainingCasts, 0, Math.min(100, maxCasts));
            (0, import_kolmafia66.useSkill)(casts, this.skill);
            oldRemainingCasts = remainingCasts;
            remainingCasts = Math.ceil((ensureTurns - (0, import_kolmafia66.haveEffect)(effect2)) / (0, import_kolmafia66.turnsPerCast)(this.skill));
          }
          return (0, import_kolmafia66.haveEffect)(effect2) > ensureTurns;
        }
      }]);
      return SkillMoodElement2;
    }(MoodElement);
    PotionMoodElement = /* @__PURE__ */ function(_MoodElement2) {
      _inherits5(PotionMoodElement2, _MoodElement2);
      var _super4 = _createSuper4(PotionMoodElement2);
      function PotionMoodElement2(potion, maxPricePerTurn) {
        var _this2;
        _classCallCheck17(this, PotionMoodElement2);
        _this2 = _super4.call(this);
        _defineProperty21(_assertThisInitialized4(_this2), "potion", void 0);
        _defineProperty21(_assertThisInitialized4(_this2), "maxPricePerTurn", void 0);
        _this2.potion = potion;
        _this2.maxPricePerTurn = maxPricePerTurn;
        return _this2;
      }
      _createClass17(PotionMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var effect2 = (0, import_kolmafia66.effectModifier)(this.potion, "Effect");
          var effectTurns = (0, import_kolmafia66.haveEffect)(effect2);
          var turnsPerUse = (0, import_kolmafia66.numericModifier)(this.potion, "Effect Duration");
          if ((0, import_kolmafia66.mallPrice)(this.potion) > this.maxPricePerTurn * turnsPerUse) {
            return false;
          }
          if (effectTurns < ensureTurns) {
            var uses = Math.floor((ensureTurns - effectTurns) / turnsPerUse);
            var quantityToBuy = clamp(uses - (0, import_kolmafia66.availableAmount)(this.potion), 0, 100);
            (0, import_kolmafia66.buy)(quantityToBuy, this.potion, Math.floor(this.maxPricePerTurn * turnsPerUse));
            var quantityToUse = clamp(uses, 0, (0, import_kolmafia66.availableAmount)(this.potion));
            (0, import_kolmafia66.use)(quantityToUse, this.potion);
          }
          var remainingDifference = ensureTurns - (0, import_kolmafia66.haveEffect)(effect2);
          if (remainingDifference > 0) {
            var maxPrice = Math.floor(this.maxPricePerTurn * remainingDifference);
            if ((0, import_kolmafia66.mallPrice)(this.potion) <= maxPrice) {
              if ((0, import_kolmafia66.availableAmount)(this.potion) || (0, import_kolmafia66.buy)(1, this.potion, maxPrice)) {
                (0, import_kolmafia66.use)(1, this.potion);
              }
            }
          }
          return (0, import_kolmafia66.haveEffect)(effect2) >= ensureTurns;
        }
      }]);
      return PotionMoodElement2;
    }(MoodElement);
    GenieMoodElement = /* @__PURE__ */ function(_MoodElement3) {
      _inherits5(GenieMoodElement2, _MoodElement3);
      var _super5 = _createSuper4(GenieMoodElement2);
      function GenieMoodElement2(effect2) {
        var _this3;
        _classCallCheck17(this, GenieMoodElement2);
        _this3 = _super5.call(this);
        _defineProperty21(_assertThisInitialized4(_this3), "effect", void 0);
        _this3.effect = effect2;
        return _this3;
      }
      _createClass17(GenieMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          if ((0, import_kolmafia66.haveEffect)(this.effect) >= ensureTurns)
            return true;
          var neededWishes = Math.ceil(((0, import_kolmafia66.haveEffect)(this.effect) - ensureTurns) / 20);
          var wishesToBuy = clamp(neededWishes - (0, import_kolmafia66.availableAmount)($item(_templateObject835 || (_templateObject835 = _taggedTemplateLiteral59(["pocket wish"])))), 0, 20);
          (0, import_kolmafia66.buy)(wishesToBuy, $item(_templateObject928 || (_templateObject928 = _taggedTemplateLiteral59(["pocket wish"]))), 5e4);
          var wishesToUse = clamp(neededWishes, 0, (0, import_kolmafia66.availableAmount)($item(_templateObject1025 || (_templateObject1025 = _taggedTemplateLiteral59(["pocket wish"])))));
          for (; wishesToUse > 0; wishesToUse--) {
            (0, import_kolmafia66.cliExecute)("genie effect ".concat(this.effect.name));
          }
          return (0, import_kolmafia66.haveEffect)(this.effect) >= ensureTurns;
        }
      }]);
      return GenieMoodElement2;
    }(MoodElement);
    CustomMoodElement = /* @__PURE__ */ function(_MoodElement4) {
      _inherits5(CustomMoodElement2, _MoodElement4);
      var _super6 = _createSuper4(CustomMoodElement2);
      function CustomMoodElement2(effect2, gainEffect) {
        var _this4;
        _classCallCheck17(this, CustomMoodElement2);
        _this4 = _super6.call(this);
        _defineProperty21(_assertThisInitialized4(_this4), "effect", void 0);
        _defineProperty21(_assertThisInitialized4(_this4), "gainEffect", void 0);
        _this4.effect = effect2;
        _this4.gainEffect = gainEffect !== null && gainEffect !== void 0 ? gainEffect : function() {
          return (0, import_kolmafia66.cliExecute)(effect2.default);
        };
        return _this4;
      }
      _createClass17(CustomMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          var currentTurns = (0, import_kolmafia66.haveEffect)(this.effect);
          var lastCurrentTurns = -1;
          while (currentTurns < ensureTurns && currentTurns !== lastCurrentTurns) {
            this.gainEffect();
            lastCurrentTurns = currentTurns;
            currentTurns = (0, import_kolmafia66.haveEffect)(this.effect);
          }
          return (0, import_kolmafia66.haveEffect)(this.effect) > ensureTurns;
        }
      }]);
      return CustomMoodElement2;
    }(MoodElement);
    AsdonMoodElement = /* @__PURE__ */ function(_MoodElement5) {
      _inherits5(AsdonMoodElement2, _MoodElement5);
      var _super7 = _createSuper4(AsdonMoodElement2);
      function AsdonMoodElement2(effect2) {
        var _this5;
        var preferInventory = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        _classCallCheck17(this, AsdonMoodElement2);
        _this5 = _super7.call(this);
        _defineProperty21(_assertThisInitialized4(_this5), "effect", void 0);
        _defineProperty21(_assertThisInitialized4(_this5), "preferInventory", void 0);
        _this5.effect = effect2;
        _this5.preferInventory = preferInventory;
        return _this5;
      }
      _createClass17(AsdonMoodElement2, [{
        key: "execute",
        value: function execute(mood, ensureTurns) {
          return AsdonMartin_exports.drive(this.effect, ensureTurns, this.preferInventory);
        }
      }]);
      return AsdonMoodElement2;
    }(MoodElement);
    Mood = /* @__PURE__ */ function() {
      function Mood2() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        _classCallCheck17(this, Mood2);
        _defineProperty21(this, "options", void 0);
        _defineProperty21(this, "elements", []);
        this.options = _objectSpread9(_objectSpread9({}, Mood2.defaultOptions), options);
      }
      _createClass17(Mood2, [{
        key: "availableMp",
        value: function availableMp() {
          return this.options.useNativeRestores ? Infinity : sum(this.options.mpSources, function(mpSource) {
            return mpSource.availableMpMin();
          }) + Math.max((0, import_kolmafia66.myMp)() - this.options.reserveMp, 0);
        }
      }, {
        key: "moreMp",
        value: function moreMp(minimumTarget) {
          if ((0, import_kolmafia66.myMp)() >= minimumTarget)
            return;
          var _iterator2 = _createForOfIteratorHelper15(this.options.mpSources), _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var mpSource = _step2.value;
              if (mpSource.usesRemaining() > 0) {
                mpSource.execute();
                if ((0, import_kolmafia66.myMp)() >= minimumTarget)
                  break;
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          if (this.options.useNativeRestores) {
            (0, import_kolmafia66.restoreMp)(minimumTarget);
          }
        }
        /**
         * Add a skill to the mood.
         *
         * @param skill Skill to add.
         * @returns This mood to enable chaining
         */
      }, {
        key: "skill",
        value: function skill(_skill) {
          this.elements.push(new SkillMoodElement(_skill));
          return this;
        }
        /**
         * Add an effect to the mood, with casting based on {effect.default}.
         *
         * @param effect Effect to add.
         * @param gainEffect How to gain the effect. Only runs if we don't have the effect.
         * @returns This mood to enable chaining
         */
      }, {
        key: "effect",
        value: function effect2(_effect, gainEffect) {
          var skill = (0, import_kolmafia66.toSkill)(_effect);
          if (!gainEffect && skill !== $skill.none) {
            this.skill(skill);
          } else {
            this.elements.push(new CustomMoodElement(_effect, gainEffect));
          }
          return this;
        }
        /**
         * Add a potion to the mood.
         *
         * @param potion Potion to add.
         * @param maxPricePerTurn Maximum price to pay per turn of the effect.
         * @returns This mood to enable chaining
         */
      }, {
        key: "potion",
        value: function potion(_potion, maxPricePerTurn) {
          this.elements.push(new PotionMoodElement(_potion, maxPricePerTurn));
          return this;
        }
        /**
         * Add an effect to acquire via pocket wishes to the mood.
         *
         * @param effect Effect to wish for in the mood.
         * @returns This mood to enable chaining
         */
      }, {
        key: "genie",
        value: function genie(effect2) {
          this.elements.push(new GenieMoodElement(effect2));
          return this;
        }
        /**
         * Add an Asdon Martin driving style to the mood.
         *
         * @param effect Driving style to add to the mood.
         * @returns This mood to enable chaining
         */
      }, {
        key: "drive",
        value: function drive2(effect2) {
          if (Object.values(AsdonMartin_exports.Driving).includes(effect2) && AsdonMartin_exports.installed()) {
            this.elements.push(new AsdonMoodElement(effect2));
          }
          return this;
        }
        /**
         * Execute the mood, trying to ensure {ensureTurns} of each effect.
         *
         * @param ensureTurns Turns of each effect to try and achieve.
         * @returns Whether or not we successfully got this many turns of every effect in the mood.
         */
      }, {
        key: "execute",
        value: function execute() {
          var ensureTurns = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
          var availableMp = this.availableMp();
          var totalMpPerTurn = sum(this.elements, function(element2) {
            return element2.mpCostPerTurn();
          });
          var potentialTurns = Math.floor(availableMp / totalMpPerTurn);
          var completeSuccess = true;
          var _iterator3 = _createForOfIteratorHelper15(this.elements), _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var element = _step3.value;
              var elementTurns = ensureTurns;
              if (element.mpCostPerTurn() > 0) {
                var elementPotentialTurns = Math.floor(potentialTurns / element.turnIncrement()) * element.turnIncrement();
                elementTurns = Math.min(ensureTurns, elementPotentialTurns);
              }
              completeSuccess = element.execute(this, elementTurns) && completeSuccess;
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          this.moreMp(this.options.reserveMp);
          return completeSuccess;
        }
      }], [{
        key: "setDefaultOptions",
        value: (
          /**
           * Set default options for new Mood instances.
           *
           * @param options Default options for new Mood instances.
           */
          function setDefaultOptions(options) {
            Mood2.defaultOptions = _objectSpread9(_objectSpread9({}, Mood2.defaultOptions), options);
          }
        )
      }]);
      return Mood2;
    }();
    _defineProperty21(Mood, "defaultOptions", {
      songSlots: [],
      mpSources: [MagicalSausages.instance, OscusSoda.instance],
      reserveMp: 0,
      useNativeRestores: false
    });
  }
});

// ../../node_modules/libram/dist/since.js
function _defineProperties18(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey23(descriptor.key), descriptor);
  }
}
function _createClass18(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties18(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties18(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey23(arg) {
  var key = _toPrimitive23(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive23(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _classCallCheck18(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _inherits6(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf6(subClass, superClass);
}
function _createSuper5(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct5();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf5(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf5(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn5(this, result);
  };
}
function _possibleConstructorReturn5(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized5(self2);
}
function _assertThisInitialized5(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _wrapNativeSuper4(Class6) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper4 = function _wrapNativeSuper5(Class7) {
    if (Class7 === null || !_isNativeFunction4(Class7))
      return Class7;
    if (typeof Class7 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class7))
        return _cache.get(Class7);
      _cache.set(Class7, Wrapper);
    }
    function Wrapper() {
      return _construct4(Class7, arguments, _getPrototypeOf5(this).constructor);
    }
    Wrapper.prototype = Object.create(Class7.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
    return _setPrototypeOf6(Wrapper, Class7);
  };
  return _wrapNativeSuper4(Class6);
}
function _construct4(Parent, args, Class6) {
  if (_isNativeReflectConstruct5()) {
    _construct4 = Reflect.construct.bind();
  } else {
    _construct4 = function _construct5(Parent2, args2, Class7) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class7)
        _setPrototypeOf6(instance, Class7.prototype);
      return instance;
    };
  }
  return _construct4.apply(null, arguments);
}
function _isNativeReflectConstruct5() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _isNativeFunction4(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf6(o, p) {
  _setPrototypeOf6 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf6(o, p);
}
function _getPrototypeOf5(o) {
  _getPrototypeOf5 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf5(o);
}
function getScriptName() {
  var _require$main;
  var scriptName = (_require$main = require.main) === null || _require$main === void 0 ? void 0 : _require$main.id;
  return scriptName ? "'".concat(scriptName, "'") : "This script";
}
function sinceKolmafiaRevision(revision) {
  if (!Number.isInteger(revision)) {
    throw new TypeError("Invalid revision number ".concat(revision, " (must be an integer)"));
  }
  var currentRevision = (0, import_kolmafia67.getRevision)();
  if (currentRevision > 0 && currentRevision < revision) {
    throw new KolmafiaVersionError("".concat(getScriptName(), " requires revision r").concat(revision, " of kolmafia or higher (current: ").concat((0, import_kolmafia67.getRevision)(), "). Up-to-date builds can be found at https://ci.kolmafia.us/."));
  }
}
function sinceKolmafiaVersion(majorVersion, minorVersion) {
  if ((0, import_kolmafia67.getRevision)() >= 25720) {
    return;
  }
  if (!Number.isInteger(majorVersion)) {
    throw new TypeError("Invalid major version number ".concat(majorVersion, " (must be an integer)"));
  }
  if (!Number.isInteger(minorVersion)) {
    throw new TypeError("Invalid minor version number ".concat(minorVersion, " (must be an integer)"));
  }
  if (majorVersion > 21 || majorVersion === 20 && minorVersion > 9) {
    throw new Error("There were no versions released after 21.09. This command will always fail");
  }
  var versionStr = (0, import_kolmafia67.getVersion)();
  var versionStrMatch = /v(\d+)\.(\d+)/.exec(versionStr);
  if (!versionStrMatch) {
    throw new Error('Unexpected KoLmafia version string: "'.concat(versionStr, '". You may need to update the script.'));
  }
  var currentMajorVersion = Number(versionStrMatch[1]);
  var currentMinorVersion = Number(versionStrMatch[2]);
  if (currentMajorVersion < majorVersion || currentMajorVersion === majorVersion && currentMinorVersion < minorVersion) {
    throw new KolmafiaVersionError("".concat(getScriptName(), " requires version ").concat(majorVersion, ".").concat(minorVersion, " of kolmafia or higher (current: ").concat(currentMajorVersion, ".").concat(currentMinorVersion, "). Up-to-date builds can be found at https://ci.kolmafia.us/."));
  }
}
var import_kolmafia67, KolmafiaVersionError;
var init_since = __esm({
  "../../node_modules/libram/dist/since.js": function() {
    import_kolmafia67 = require("kolmafia");
    KolmafiaVersionError = /* @__PURE__ */ function(_Error) {
      _inherits6(KolmafiaVersionError2, _Error);
      var _super = _createSuper5(KolmafiaVersionError2);
      function KolmafiaVersionError2(message) {
        var _this;
        _classCallCheck18(this, KolmafiaVersionError2);
        _this = _super.call(this, message);
        Object.setPrototypeOf(_assertThisInitialized5(_this), KolmafiaVersionError2.prototype);
        return _this;
      }
      return _createClass18(KolmafiaVersionError2);
    }(/* @__PURE__ */ _wrapNativeSuper4(Error));
    KolmafiaVersionError.prototype.name = "KolmafiaVersionError";
  }
});

// ../../node_modules/libram/dist/Kmail.js
function _createForOfIteratorHelper16(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray35(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray17(arr) {
  return _arrayWithoutHoles17(arr) || _iterableToArray17(arr) || _unsupportedIterableToArray35(arr) || _nonIterableSpread17();
}
function _nonIterableSpread17() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray17(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles17(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray35(arr);
}
function _slicedToArray20(arr, i) {
  return _arrayWithHoles20(arr) || _iterableToArrayLimit20(arr, i) || _unsupportedIterableToArray35(arr, i) || _nonIterableRest20();
}
function _nonIterableRest20() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray35(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray35(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray35(o, minLen);
}
function _arrayLikeToArray35(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit20(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles20(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck19(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties19(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey24(descriptor.key), descriptor);
  }
}
function _createClass19(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties19(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties19(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty22(obj, key, value) {
  key = _toPropertyKey24(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey24(arg) {
  var key = _toPrimitive24(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive24(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var import_kolmafia68, Kmail;
var init_Kmail = __esm({
  "../../node_modules/libram/dist/Kmail.js": function() {
    import_kolmafia68 = require("kolmafia");
    init_utils();
    Kmail = /* @__PURE__ */ function() {
      function Kmail2(rawKmail) {
        _classCallCheck19(this, Kmail2);
        _defineProperty22(this, "id", void 0);
        _defineProperty22(this, "date", void 0);
        _defineProperty22(this, "type", void 0);
        _defineProperty22(this, "senderId", void 0);
        _defineProperty22(this, "senderName", void 0);
        _defineProperty22(this, "rawMessage", void 0);
        var date = new Date(rawKmail.localtime);
        date.setFullYear(date.getFullYear() + 100);
        this.id = Number(rawKmail.id);
        this.date = date;
        this.type = rawKmail.type;
        this.senderId = Number(rawKmail.fromid);
        this.senderName = rawKmail.fromname;
        this.rawMessage = rawKmail.message;
      }
      _createClass19(Kmail2, [{
        key: "delete",
        value: function _delete() {
          return Kmail2.delete([this]) === 1;
        }
        /**
         * Get message contents without any HTML from items or meat
         *
         * @returns Cleaned message contents
         */
      }, {
        key: "message",
        get: function get4() {
          var match = this.rawMessage.match(/^([\s\S]*?)</);
          return match ? match[1] : this.rawMessage;
        }
        /**
         * Get items attached to the kmail
         *
         * @returns Map of items attached to the kmail and their quantities
         */
      }, {
        key: "items",
        value: function items() {
          return new Map(Object.entries((0, import_kolmafia68.extractItems)(this.rawMessage)).map(function(_ref) {
            var _ref2 = _slicedToArray20(_ref, 2), itemName = _ref2[0], quantity = _ref2[1];
            return [import_kolmafia68.Item.get(itemName), quantity];
          }));
        }
        /**
         * Get meat attached to the kmail
         *
         * @returns Meat attached to the kmail
         */
      }, {
        key: "meat",
        value: function meat() {
          return (0, import_kolmafia68.extractMeat)(this.rawMessage);
        }
        /**
         * Reply to kmail
         *
         * @param message Message with which to reply
         * @param items Items to send
         * @param meat Meat to send
         * @see Kmail.send
         * @returns True if the kmail was successfully sent
         */
      }, {
        key: "reply",
        value: function reply() {
          var message = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
          var items = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
          var meat = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          return Kmail2.send(this.senderId, message, items, meat);
        }
      }], [{
        key: "parse",
        value: (
          /**
           * Parses a kmail from KoL's native format
           *
           * @param rawKmail Kmail in the format supplies by api.php
           * @returns Parsed kmail
           */
          function parse(rawKmail) {
            return new Kmail2(rawKmail);
          }
        )
        /**
         * Returns all of the player's kmails
         *
         * @param count Number of kmails to fetch
         * @returns Parsed kmails
         */
      }, {
        key: "inbox",
        value: function inbox() {
          var count = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
          return JSON.parse((0, import_kolmafia68.visitUrl)("api.php?what=kmail&for=libram&count=".concat(count))).map(Kmail2.parse);
        }
        /**
         * Bulk delete kmails
         *
         * @param kmails Kmails to delete
         * @returns Number of kmails deleted
         */
      }, {
        key: "delete",
        value: function _delete(kmails) {
          var _results$match$, _results$match;
          var results = (0, import_kolmafia68.visitUrl)("messages.php?the_action=delete&box=Inbox&pwd&".concat(kmails.map(function(k) {
            return "sel".concat(k.id, "=on");
          }).join("&")));
          return Number((_results$match$ = (_results$match = results.match(/<td>(\d) messages? deleted.<\/td>/)) === null || _results$match === void 0 ? void 0 : _results$match[1]) !== null && _results$match$ !== void 0 ? _results$match$ : 0);
        }
      }, {
        key: "_genericSend",
        value: function _genericSend(to, message, items, meat, chunkSize, constructUrl, successString) {
          var m = meat;
          var sendableItems = _toConsumableArray17(arrayToCountedMap(items).entries()).filter(function(_ref3) {
            var _ref4 = _slicedToArray20(_ref3, 1), item10 = _ref4[0];
            return (0, import_kolmafia68.isGiftable)(item10);
          });
          var result = true;
          var chunks = chunk(sendableItems, chunkSize);
          var _iterator = _createForOfIteratorHelper16(chunks.length > 0 ? chunks : [null]), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var c = _step.value;
              var itemsQuery = c === null ? [] : c.map(function(_ref5, index) {
                var _ref6 = _slicedToArray20(_ref5, 2), item10 = _ref6[0], quantity = _ref6[1];
                return "whichitem".concat(index + 1, "=").concat(item10.id, "&howmany").concat(index + 1, "=").concat(quantity);
              });
              var r = (0, import_kolmafia68.visitUrl)(constructUrl(m, itemsQuery.join("&"), itemsQuery.length));
              if (r.includes("That player cannot receive Meat or items")) {
                return Kmail2.gift(to, message, items, meat);
              }
              m = 0;
              result && (result = r.includes(successString));
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
        /**
         * Sends a kmail to a player
         *
         * Sends multiple kmails if more than 11 unique item types are attached.
         * Ignores any ungiftable items.
         * Sends a gift package to players in run
         *
         * @param to The player name or id to receive the kmail
         * @param message The text contents of the message
         * @param items The items to be attached
         * @param meat The quantity of meat to be attached
         * @returns True if the kmail was successfully sent
         */
      }, {
        key: "send",
        value: function send(to) {
          var message = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          var items = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          var meat = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          return Kmail2._genericSend(to, message, items, meat, 11, function(meat2, itemsQuery) {
            return "sendmessage.php?action=send&pwd&towho=".concat(to, "&message=").concat(message).concat(itemsQuery ? "&".concat(itemsQuery) : "", "&sendmeat=").concat(meat2);
          }, ">Message sent.</");
        }
        /**
         * Sends a gift to a player
         *
         * Sends multiple kmails if more than 3 unique item types are attached.
         * Ignores any ungiftable items.
         *
         * @param to The player name or id to receive the gift
         * @param message Message to send
         * @param items The items to be attached
         * @param meat The quantity of meat to be attached
         * @param insideNote The note on the inside of the gift
         * @returns True if the gift was successfully sent
         */
      }, {
        key: "gift",
        value: function gift(to) {
          var message = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          var items = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          var meat = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          var insideNote = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "";
          var baseUrl = "town_sendgift.php?action=Yep.&pwd&fromwhere=0&note=".concat(message, "&insidenote=").concat(insideNote, "&towho=").concat(to);
          return Kmail2._genericSend(to, message, items, meat, 3, function(m, itemsQuery, chunkSize) {
            return "".concat(baseUrl, "&whichpackage=").concat(chunkSize).concat(itemsQuery ? "&".concat(itemsQuery) : "", "&sendmeat=").concat(m);
          }, ">Package sent.</");
        }
      }]);
      return Kmail2;
    }();
  }
});

// ../../node_modules/libram/dist/Path.js
function _taggedTemplateLiteral60(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _defineProperties20(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey25(descriptor.key), descriptor);
  }
}
function _createClass20(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties20(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties20(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck20(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperty23(obj, key, value) {
  key = _toPropertyKey25(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey25(arg) {
  var key = _toPrimitive25(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive25(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var _templateObject499, _templateObject2128, _templateObject3115, _templateObject4100, _templateObject559, _templateObject647, _templateObject741, _templateObject836, _templateObject929, _templateObject1026, _templateObject1122, Path6, Paths;
var init_Path = __esm({
  "../../node_modules/libram/dist/Path.js": function() {
    init_template_string();
    Path6 = /* @__PURE__ */ _createClass20(
      /**
       *
       * @param name Name of path
       * @param id Path ID
       * @param hasAllPerms Does the player have immediate access to all permed skills>
       * @param canUseSkillbooks Does the player have ability to learn skills from skillbooks>
       * @param hasCampground Does the player have access to the campground?
       * @param hasTerrarium Does the player have access to terrarium.php
       * @param stomachSize Maximum fullness achievable at turn 0
       * @param liverSize The lowest inebriety that makes you unable to drink more
       * @param spleenSize Maximum spleen achievable at turn 0
       * @param classes Classes available in this path
       */
      function Path7(name, id) {
        var hasAllPerms = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
        var canUseSkillbooks = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
        var hasCampground = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : true;
        var hasTerrarium = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : true;
        var stomachSize = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 15;
        var liverSize = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : 15;
        var spleenSize = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : 15;
        var classes = arguments.length > 9 && arguments[9] !== void 0 ? arguments[9] : $classes(_templateObject499 || (_templateObject499 = _taggedTemplateLiteral60(["Seal Clubber, Turtle Tamer, Sauceror, Pastamancer, Disco Bandit, Accordion Thief"])));
        _classCallCheck20(this, Path7);
        _defineProperty23(this, "name", void 0);
        _defineProperty23(this, "id", void 0);
        _defineProperty23(this, "hasAllPerms", void 0);
        _defineProperty23(this, "canUseSkillbooks", void 0);
        _defineProperty23(this, "hasCampground", void 0);
        _defineProperty23(this, "hasTerrarium", void 0);
        _defineProperty23(this, "stomachSize", void 0);
        _defineProperty23(this, "liverSize", void 0);
        _defineProperty23(this, "spleenSize", void 0);
        _defineProperty23(this, "classes", void 0);
        this.name = name;
        this.id = id;
        this.hasAllPerms = hasAllPerms;
        this.canUseSkillbooks = canUseSkillbooks;
        this.hasCampground = hasCampground;
        this.hasTerrarium = hasTerrarium;
        this.stomachSize = stomachSize;
        this.liverSize = liverSize;
        this.spleenSize = spleenSize;
        this.classes = classes;
      }
    );
    Paths = {
      Unrestricted: new Path6("Unrestricted", 0),
      Boozetafarian: new Path6("Boozetafarian", 1, true, true, true, true, 0),
      Teetotaler: new Path6("Teetotaler", 2, true, true, true, true, 15, 0),
      Oxygenarian: new Path6("Oxygenarian", 3, true, true, true, true, 0, 0),
      BeesHateYou: new Path6("Bees Hate You", 4),
      WayOfTheSurprisingFist: new Path6("Way of the Surprising Fist", 6),
      Trendy: new Path6("Trendy", 7),
      AvatarOfBoris: new Path6("Avatar of Boris", 8, false, false, true, false, 20, 5, 15, $classes(_templateObject2128 || (_templateObject2128 = _taggedTemplateLiteral60(["Avatar of Boris"])))),
      BugbearInvasion: new Path6("Bugbear Invasion", 9),
      ZombieSlayer: new Path6("Zombie Slayer", 10, false, false, true, true, 15, 5, 15, $classes(_templateObject3115 || (_templateObject3115 = _taggedTemplateLiteral60(["Zombie Master"])))),
      ClassAct: new Path6("Class Act", 11, false, false),
      AvatarofJarlsberg: new Path6("Avatar of Jarlsberg", 12, false, false, true, false, 10, 10, 15, $classes(_templateObject4100 || (_templateObject4100 = _taggedTemplateLiteral60(["Avatar of Jarlsberg"])))),
      Big: new Path6("BIG!", 14),
      KolHs: new Path6("KOLHS", 15),
      ClassAct2: new Path6("Class Act II: A Class For Pigs", 16, false),
      AvatarofSneakyPete: new Path6("Avatar of Sneaky Pete", 17, false, false, true, false, 5, 20, 15, $classes(_templateObject559 || (_templateObject559 = _taggedTemplateLiteral60(["Avatar of Sneaky Pete"])))),
      SlowAndSteady: new Path6("Slow and Steady", 18),
      HeavyRains: new Path6("Heavy Rains", 19),
      Picky: new Path6("Picky", 21, false, false),
      Standard: new Path6("Standard", 22),
      ActuallyEdTheUndying: new Path6("Actually Ed the Undying", 23, false, false, false, false, 0, 0, 5, $classes(_templateObject647 || (_templateObject647 = _taggedTemplateLiteral60(["Ed the Undying"])))),
      OneCrazyRandomSummer: new Path6("One Crazy Random Summer", 24),
      CommunityService: new Path6("Community Service", 25),
      AvatarOfWestOfLoathing: new Path6("Avatar of West of Loathing", 26, false, false, true, true, 10, 10, 10, $classes(_templateObject741 || (_templateObject741 = _taggedTemplateLiteral60(["Cow Puncher, Snake Oiler, Beanslinger"])))),
      TheSource: new Path6("The Source", 27),
      NuclearAutumn: new Path6("Nuclear Autumn", 28, false, false, false, true, 3, 3, 3),
      GelatinousNoob: new Path6("Gelatinous Noob", 29, false, false, true, true, 0, 0, 0, $classes(_templateObject836 || (_templateObject836 = _taggedTemplateLiteral60(["Gelatinous Noob"])))),
      LicenseToAdventure: new Path6("License to Adventure", 30, true, true, true, false, 0, 2, 15),
      LiveAscendRepeat: new Path6("Live. Ascend. Repeat.", 31),
      PocketFamiliars: new Path6("Pocket Familiars", 32, false, false, true, false),
      GLover: new Path6("G-Lover", 33),
      DisguisesDelimit: new Path6("Disguises Delimit", 34),
      DarkGyffte: new Path6("Dark Gyffte", 35, false, false, true, false, 5, 5, 15, $classes(_templateObject929 || (_templateObject929 = _taggedTemplateLiteral60(["Vampyre"])))),
      TwoCrazyRandomSummer: new Path6("Two Crazy Random Summer", 36),
      KingdomOfExploathing: new Path6("Kingdom of Exploathing", 37),
      PathOfThePlumber: new Path6("Path of the Plumber", 38, false, false, true, true, 20, 0, 5, $classes(_templateObject1026 || (_templateObject1026 = _taggedTemplateLiteral60(["Plumber"])))),
      LowKeySummer: new Path6("Low Key Summer", 39),
      GreyGoo: new Path6("Grey Goo", 40),
      YouRobot: new Path6("You, Robot", 41, false, false, false, true, 0, 0, 0),
      QuantumTerrarium: new Path6("Quantum Terrarium", 42, true, true, true, false),
      Wildfire: new Path6("Wildfire", 43),
      GreyYou: new Path6(
        "Grey You",
        44,
        false,
        false,
        true,
        true,
        0,
        0,
        0,
        // eslint-disable-next-line libram/verify-constants
        $classes(_templateObject1122 || (_templateObject1122 = _taggedTemplateLiteral60(["Grey Goo"])))
      ),
      Journeyman: new Path6("Journeyman", 45, false, false)
    };
  }
});

// ../../node_modules/libram/dist/console.js
var console_exports = {};
__export(console_exports, {
  error: function() {
    return error;
  },
  info: function() {
    return info;
  },
  log: function() {
    return log;
  },
  warn: function() {
    return warn;
  }
});
var import_kolmafia69, logColor, log, info, warn, error;
var init_console = __esm({
  "../../node_modules/libram/dist/console.js": function() {
    import_kolmafia69 = require("kolmafia");
    logColor = function(color) {
      return function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var output = args.map(function(x) {
          return x.toString();
        }).join(" ");
        if (color) {
          (0, import_kolmafia69.print)(output, color);
        } else {
          (0, import_kolmafia69.print)(output);
        }
      };
    };
    log = logColor();
    info = logColor("blue");
    warn = logColor("red");
    error = logColor("red");
  }
});

// ../../node_modules/libram/dist/session.js
function _classCallCheck21(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties21(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey26(descriptor.key), descriptor);
  }
}
function _createClass21(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties21(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties21(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty24(obj, key, value) {
  key = _toPropertyKey26(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey26(arg) {
  var key = _toPrimitive26(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive26(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _createForOfIteratorHelper17(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray36(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray21(arr, i) {
  return _arrayWithHoles21(arr) || _iterableToArrayLimit21(arr, i) || _unsupportedIterableToArray36(arr, i) || _nonIterableRest21();
}
function _nonIterableRest21() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit21(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles21(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral61(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray18(arr) {
  return _arrayWithoutHoles18(arr) || _iterableToArray18(arr) || _unsupportedIterableToArray36(arr) || _nonIterableSpread18();
}
function _nonIterableSpread18() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray36(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray36(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray36(o, minLen);
}
function _iterableToArray18(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles18(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray36(arr);
}
function _arrayLikeToArray36(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function mySessionItemsWrapper() {
  var sessionOnly = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var manyToOne = function(primary, mapped) {
    return mapped.map(function(target) {
      return [target, primary];
    });
  };
  var foldable = function(item11) {
    return manyToOne(item11, getFoldGroup(item11));
  };
  var itemMappings = new Map([].concat(_toConsumableArray18(foldable($item(_templateObject500 || (_templateObject500 = _taggedTemplateLiteral61(["liar's pants"]))))), _toConsumableArray18(foldable($item(_templateObject2129 || (_templateObject2129 = _taggedTemplateLiteral61(["ice pick"]))))), _toConsumableArray18(manyToOne($item(_templateObject3116 || (_templateObject3116 = _taggedTemplateLiteral61(["Spooky Putty sheet"]))), [$item(_templateObject4101 || (_templateObject4101 = _taggedTemplateLiteral61(["Spooky Putty monster"])))].concat(_toConsumableArray18(getFoldGroup($item(_templateObject560 || (_templateObject560 = _taggedTemplateLiteral61(["Spooky Putty sheet"])))))))), _toConsumableArray18(foldable($item(_templateObject648 || (_templateObject648 = _taggedTemplateLiteral61(["stinky cheese sword"]))))), _toConsumableArray18(foldable($item(_templateObject744 || (_templateObject744 = _taggedTemplateLiteral61(["naughty paper shuriken"]))))), _toConsumableArray18(foldable($item(_templateObject837 || (_templateObject837 = _taggedTemplateLiteral61(["Loathing Legion knife"]))))), _toConsumableArray18(foldable($item(_templateObject930 || (_templateObject930 = _taggedTemplateLiteral61(["deceased crimbo tree"]))))), _toConsumableArray18(foldable($item(_templateObject1027 || (_templateObject1027 = _taggedTemplateLiteral61(["makeshift turban"]))))), _toConsumableArray18(foldable($item(_templateObject1123 || (_templateObject1123 = _taggedTemplateLiteral61(["turtle wax shield"]))))), _toConsumableArray18(foldable($item(_templateObject1222 || (_templateObject1222 = _taggedTemplateLiteral61(["metallic foil bow"]))))), _toConsumableArray18(foldable($item(_templateObject1320 || (_templateObject1320 = _taggedTemplateLiteral61(["ironic moustache"]))))), _toConsumableArray18(foldable($item(_templateObject1417 || (_templateObject1417 = _taggedTemplateLiteral61(["bugged balaclava"]))))), _toConsumableArray18(foldable($item(_templateObject1515 || (_templateObject1515 = _taggedTemplateLiteral61(["toggle switch (Bartend)"]))))), _toConsumableArray18(foldable($item(_templateObject1615 || (_templateObject1615 = _taggedTemplateLiteral61(["mushroom cap"]))))), _toConsumableArray18(manyToOne($item(_templateObject1715 || (_templateObject1715 = _taggedTemplateLiteral61(["can of Rain-Doh"]))), $items(_templateObject1815 || (_templateObject1815 = _taggedTemplateLiteral61(["empty Rain-Doh can"]))))), _toConsumableArray18(manyToOne($item(_templateObject1915 || (_templateObject1915 = _taggedTemplateLiteral61(["meteorite fragment"]))), $items(_templateObject2015 || (_templateObject2015 = _taggedTemplateLiteral61(["meteorite earring, meteorite necklace, meteorite ring"]))))), _toConsumableArray18(manyToOne($item(_templateObject2130 || (_templateObject2130 = _taggedTemplateLiteral61(["Sneaky Pete's leather jacket"]))), $items(_templateObject2217 || (_templateObject2217 = _taggedTemplateLiteral61(["Sneaky Pete's leather jacket (collar popped)"]))))), _toConsumableArray18(manyToOne($item(_templateObject2316 || (_templateObject2316 = _taggedTemplateLiteral61(["Boris's Helm"]))), $items(_templateObject2414 || (_templateObject2414 = _taggedTemplateLiteral61(["Boris's Helm (askew)"]))))), _toConsumableArray18(manyToOne($item(_templateObject2514 || (_templateObject2514 = _taggedTemplateLiteral61(["Jarlsberg's pan"]))), $items(_templateObject2614 || (_templateObject2614 = _taggedTemplateLiteral61(["Jarlsberg's pan (Cosmic portal mode)"]))))), _toConsumableArray18(manyToOne($item(_templateObject2714 || (_templateObject2714 = _taggedTemplateLiteral61(["tiny plastic sword"]))), $items(_templateObject2812 || (_templateObject2812 = _taggedTemplateLiteral61(["grogtini, bodyslam, dirty martini, vesper, cherry bomb, sangria del diablo"]))))), _toConsumableArray18(manyToOne($item(_templateObject2911 || (_templateObject2911 = _taggedTemplateLiteral61(["earthenware muffin tin"]))), $items(_templateObject3011 || (_templateObject3011 = _taggedTemplateLiteral61(["blueberry muffin, bran muffin, chocolate chip muffin"]))))), _toConsumableArray18(manyToOne($item(_templateObject3117 || (_templateObject3117 = _taggedTemplateLiteral61(["ChibiBuddy\u2122 (on)"]))), $items(_templateObject3213 || (_templateObject3213 = _taggedTemplateLiteral61(["ChibiBuddy\u2122 (off)"])))))));
  var inventory = /* @__PURE__ */ new Map();
  var invLocations = sessionOnly ? [import_kolmafia70.mySessionItems] : [import_kolmafia70.mySessionItems, import_kolmafia70.getCloset, import_kolmafia70.getDisplay, import_kolmafia70.getStorage];
  for (var _i = 0, _invLocations = invLocations; _i < _invLocations.length; _i++) {
    var inventoryFunc = _invLocations[_i];
    for (var _i2 = 0, _Object$entries = Object.entries(inventoryFunc()); _i2 < _Object$entries.length; _i2++) {
      var _itemMappings$get, _inventory$get;
      var _Object$entries$_i = _slicedToArray21(_Object$entries[_i2], 2), itemStr = _Object$entries$_i[0], quantity = _Object$entries$_i[1];
      var item10 = (0, import_kolmafia70.toItem)(itemStr);
      var mappedItem = (_itemMappings$get = itemMappings.get(item10)) !== null && _itemMappings$get !== void 0 ? _itemMappings$get : item10;
      inventory.set(mappedItem, quantity + ((_inventory$get = inventory.get(mappedItem)) !== null && _inventory$get !== void 0 ? _inventory$get : 0));
    }
  }
  for (var _i3 = 0, _Object$entries2 = Object.entries((0, import_kolmafia70.getCampground)()); _i3 < _Object$entries2.length; _i3++) {
    var _itemMappings$get2, _inventory$get2;
    var _Object$entries2$_i = _slicedToArray21(_Object$entries2[_i3], 2), _itemStr = _Object$entries2$_i[0], _quantity = _Object$entries2$_i[1];
    var _item = (0, import_kolmafia70.toItem)(_itemStr);
    if (_item === $item(_templateObject3313 || (_templateObject3313 = _taggedTemplateLiteral61(["big rock"]))))
      continue;
    var _mappedItem = (_itemMappings$get2 = itemMappings.get(_item)) !== null && _itemMappings$get2 !== void 0 ? _itemMappings$get2 : _item;
    inventory.set(_mappedItem, _quantity + ((_inventory$get2 = inventory.get(_mappedItem)) !== null && _inventory$get2 !== void 0 ? _inventory$get2 : 0));
  }
  return inventory;
}
function inventoryOperation(a, b, op) {
  var difference = /* @__PURE__ */ new Map();
  var _iterator = _createForOfIteratorHelper17(new Set([].concat(_toConsumableArray18(a.keys()), _toConsumableArray18(b.keys())))), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _a$get, _b$get;
      var item10 = _step.value;
      difference.set(item10, op((_a$get = a.get(item10)) !== null && _a$get !== void 0 ? _a$get : 0, (_b$get = b.get(item10)) !== null && _b$get !== void 0 ? _b$get : 0));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var diffEntries = _toConsumableArray18(difference.entries());
  return new Map(diffEntries.filter(function(value) {
    return value[1] !== 0;
  }));
}
var import_kolmafia70, _templateObject500, _templateObject2129, _templateObject3116, _templateObject4101, _templateObject560, _templateObject648, _templateObject744, _templateObject837, _templateObject930, _templateObject1027, _templateObject1123, _templateObject1222, _templateObject1320, _templateObject1417, _templateObject1515, _templateObject1615, _templateObject1715, _templateObject1815, _templateObject1915, _templateObject2015, _templateObject2130, _templateObject2217, _templateObject2316, _templateObject2414, _templateObject2514, _templateObject2614, _templateObject2714, _templateObject2812, _templateObject2911, _templateObject3011, _templateObject3117, _templateObject3213, _templateObject3313, Session;
var init_session = __esm({
  "../../node_modules/libram/dist/session.js": function() {
    import_kolmafia70 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    Session = /* @__PURE__ */ function() {
      function Session2(meat, items, totalTurns) {
        _classCallCheck21(this, Session2);
        _defineProperty24(this, "meat", void 0);
        _defineProperty24(this, "items", void 0);
        _defineProperty24(this, "totalTurns", void 0);
        this.meat = meat;
        this.items = items;
        this.totalTurns = totalTurns;
      }
      _createClass21(Session2, [{
        key: "register",
        value: function register(target, quantity) {
          if (target === "meat") {
            this.meat += quantity;
          } else {
            var _this$items$get;
            this.items.set(target, ((_this$items$get = this.items.get(target)) !== null && _this$items$get !== void 0 ? _this$items$get : 0) + quantity);
          }
        }
        /**
         * Value this session
         *
         * @param itemValue a function that, when given an item, will give a meat value of the item
         * @returns ItemResult with the full value of this session given the input function
         */
      }, {
        key: "value",
        value: function value(itemValue) {
          var turns = this.totalTurns;
          var meat = Math.floor(this.meat);
          var itemDetails = _toConsumableArray18(this.items.entries()).map(function(_ref) {
            var _ref2 = _slicedToArray21(_ref, 2), item10 = _ref2[0], quantity = _ref2[1];
            return {
              item: item10,
              quantity: quantity,
              value: itemValue(item10) * quantity
            };
          });
          var items = Math.floor(sum(itemDetails, "value"));
          return {
            meat: meat,
            items: items,
            total: meat + items,
            itemDetails: itemDetails,
            turns: turns
          };
        }
        /**
         * Subtract the contents of another session from this one, removing any items that have a resulting quantity of 0
         *  (this will ignore elements in b but not in a)
         *
         * @param other the session from which to pull values to remove from this session
         * @returns a new session representing the difference between this session and the other session
         */
      }, {
        key: "diff",
        value: function diff(other) {
          return new Session2(this.meat - other.meat, inventoryOperation(this.items, other.items, function(a, b) {
            return a - b;
          }), this.totalTurns - other.totalTurns);
        }
        /**
         * Subtract the contents of snasphot b from session a, removing any items that have a resulting quantity of 0
         *  (this will ignore elements in b but not in a)
         *
         * @param a the session from which to subtract elements
         * @param b the session from which to add elements
         * @returns a new session representing the difference between a and b
         */
      }, {
        key: "add",
        value: (
          /**
           * Generate a new session combining multiple sessions together
           *
           * @param other the session from which to add elements to this set
           * @returns a new session representing the addition of other to this
           */
          function add(other) {
            return new Session2(this.meat + other.meat, inventoryOperation(this.items, other.items, function(a, b) {
              return a + b;
            }), this.totalTurns + other.totalTurns);
          }
        )
        /**
         * Combine the contents of sessions
         *
         * @param sessions the set of sessions to combine together
         * @returns a new session representing the difference between a and b
         */
      }, {
        key: "toFile",
        value: (
          /**
           * Export this session to a file in the data/ directory. Conventionally this file should end in ".json"
           *
           * @param filename The file into which to export
           */
          function toFile(filename) {
            var val = {
              meat: this.meat,
              items: Object.fromEntries(this.items),
              totalTurns: this.totalTurns
            };
            (0, import_kolmafia70.bufferToFile)(JSON.stringify(val), Session2.getFilepath(filename));
          }
        )
        /**
         * Import a session from a file in the data/ directory. Conventionally the file should end in ".json"
         *
         * @param filename The file from which to import
         * @returns the session represented by the file
         */
      }, {
        key: "computeMPA",
        value: (
          /**
           * @param other the session to diff against this session when computing MPA
           * @param options options for computing MPA
           * @param options.value a function to compute the meat value of a given item
           * @param options.isOutlier a function to compute if an item is considered an outlier. By default, no items are outliers
           * @param options.excludeValue meat values to exclude when calculating specific portions of the MPA
           * @param options.excludeValue.meat how much meat to exclude when calculating the meat portion of MPA
           * @param options.excludeValue.item how much meat to exclude when calculating hte item portion of MPA
           * @returns an analysis of the effective MPA for the given session
           */
          function computeMPA(other, options) {
            return Session2.computeMPA(this, other, options);
          }
        )
      }], [{
        key: "diff",
        value: function diff(a, b) {
          return a.diff(b);
        }
      }, {
        key: "add",
        value: function add() {
          for (var _len = arguments.length, sessions = new Array(_len), _key = 0; _key < _len; _key++) {
            sessions[_key] = arguments[_key];
          }
          return sessions.reduce(function(previousSession, currentSession) {
            return previousSession.add(currentSession);
          });
        }
      }, {
        key: "getFilepath",
        value: function getFilepath(filename) {
          return filename.endsWith(".json") ? filename : "snapshots/".concat((0, import_kolmafia70.myName)(), "/").concat((0, import_kolmafia70.todayToString)(), "_").concat(filename, ".json");
        }
      }, {
        key: "fromFile",
        value: function fromFile(filename) {
          var fileValue = (0, import_kolmafia70.fileToBuffer)(Session2.getFilepath(filename));
          if (fileValue.length > 0) {
            var _val$totalTurns;
            var val = JSON.parse(fileValue);
            var parsedItems = Object.entries(val.items).map(function(_ref3) {
              var _ref4 = _slicedToArray21(_ref3, 2), itemStr = _ref4[0], quantity = _ref4[1];
              return [(0, import_kolmafia70.toItem)(itemStr), quantity];
            });
            return new Session2(val.meat, new Map(parsedItems), (_val$totalTurns = val.totalTurns) !== null && _val$totalTurns !== void 0 ? _val$totalTurns : 0);
          } else {
            return new Session2(0, /* @__PURE__ */ new Map(), 0);
          }
        }
        /**
         * Return the meat and items for the current session
         *
         * @param sessionOnly should closet, DC, and storage be ignored for the session calculation
         * @returns current session
         */
      }, {
        key: "current",
        value: function current2() {
          var sessionOnly = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
          var meat = sessionOnly ? [import_kolmafia70.mySessionMeat] : [import_kolmafia70.mySessionMeat, import_kolmafia70.myClosetMeat, import_kolmafia70.myStorageMeat];
          return new Session2(sum(meat, function(f) {
            return f();
          }), mySessionItemsWrapper(sessionOnly), (0, import_kolmafia70.totalTurnsPlayed)());
        }
        /**
         * @param baseline the base session to use when computing MPA
         * @param full the full session to use when computing MPA
         * @param options options for computing MPA
         * @param options.value a function to compute the meat value of a given item
         * @param options.isOutlier a function to compute if an item is considered an outlier. By default, no items are outliers
         * @param options.excludeValue meat values to exclude when calculating specific portions of the MPA
         * @param options.excludeValue.meat how much meat to exclude when calculating the meat portion of MPA
         * @param options.excludeValue.item how much meat to exclude when calculating hte item portion of MPA
         * @returns an analysis of the effective MPA for the given session
         */
      }, {
        key: "computeMPA",
        value: function computeMPA(baseline, full, options) {
          var _options$excludeValue, _excludeValue$meat, _excludeValue$item;
          var value = options.value;
          var excludeValue = (_options$excludeValue = options.excludeValue) !== null && _options$excludeValue !== void 0 ? _options$excludeValue : {
            meat: 0,
            item: 0
          };
          var isOutlier = options.isOutlier;
          var result = full.diff(baseline).value(value);
          var meatValue = result.meat - ((_excludeValue$meat = excludeValue.meat) !== null && _excludeValue$meat !== void 0 ? _excludeValue$meat : 0);
          var outlierItems = isOutlier ? result.itemDetails.filter(isOutlier) : [];
          var outliersValue = sum(outlierItems, function(detail) {
            return detail.value;
          });
          var itemValue = result.items - outliersValue - ((_excludeValue$item = excludeValue.item) !== null && _excludeValue$item !== void 0 ? _excludeValue$item : 0);
          var turns = result.turns;
          return {
            mpa: {
              effective: (meatValue + itemValue) / turns,
              total: (meatValue + itemValue + outliersValue) / turns,
              meat: meatValue / turns,
              items: itemValue / turns
            },
            values: {
              effective: meatValue + itemValue,
              total: meatValue + itemValue + outliersValue,
              meat: meatValue,
              items: itemValue
            },
            outlierItems: outlierItems,
            turns: turns
          };
        }
      }]);
      return Session2;
    }();
  }
});

// ../../node_modules/libram/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  $bounties: function() {
    return $bounties;
  },
  $bounty: function() {
    return $bounty;
  },
  $class: function() {
    return $class;
  },
  $classes: function() {
    return $classes;
  },
  $coinmaster: function() {
    return $coinmaster;
  },
  $coinmasters: function() {
    return $coinmasters;
  },
  $effect: function() {
    return $effect;
  },
  $effects: function() {
    return $effects;
  },
  $element: function() {
    return $element;
  },
  $elements: function() {
    return $elements;
  },
  $familiar: function() {
    return $familiar;
  },
  $familiars: function() {
    return $familiars;
  },
  $item: function() {
    return $item;
  },
  $items: function() {
    return $items;
  },
  $location: function() {
    return $location;
  },
  $locations: function() {
    return $locations;
  },
  $modifier: function() {
    return $modifier;
  },
  $modifiers: function() {
    return $modifiers;
  },
  $monster: function() {
    return $monster;
  },
  $monsters: function() {
    return $monsters;
  },
  $path: function() {
    return $path;
  },
  $paths: function() {
    return $paths;
  },
  $phyla: function() {
    return $phyla;
  },
  $phylum: function() {
    return $phylum;
  },
  $servant: function() {
    return $servant;
  },
  $servants: function() {
    return $servants;
  },
  $skill: function() {
    return $skill;
  },
  $skills: function() {
    return $skills;
  },
  $slot: function() {
    return $slot;
  },
  $slots: function() {
    return $slots;
  },
  $stat: function() {
    return $stat;
  },
  $stats: function() {
    return $stats;
  },
  $thrall: function() {
    return $thrall;
  },
  $thralls: function() {
    return $thralls;
  },
  ActionSource: function() {
    return ActionSource;
  },
  AscendError: function() {
    return AscendError;
  },
  AscensionPrepError: function() {
    return AscensionPrepError;
  },
  AsdonMartin: function() {
    return AsdonMartin_exports;
  },
  AugustScepter: function() {
    return AugustScepter_exports;
  },
  AutumnAton: function() {
    return AutumnAton_exports;
  },
  Bandersnatch: function() {
    return Bandersnatch_exports;
  },
  BarrelShrine: function() {
    return BarrelShrine_exports;
  },
  BeachComb: function() {
    return BeachComb_exports;
  },
  CampAway: function() {
    return CampAway_exports;
  },
  Cartography: function() {
    return Cartography_exports;
  },
  ChateauMantegna: function() {
    return ChateauMantegna_exports;
  },
  CinchoDeMayo: function() {
    return CinchoDeMayo_exports;
  },
  Clan: function() {
    return Clan;
  },
  ClosedCircuitPayphone: function() {
    return ClosedCircuitPayphone_exports;
  },
  CombatLoversLocket: function() {
    return CombatLoversLocket_exports;
  },
  CommunityService: function() {
    return CommunityService;
  },
  Counter: function() {
    return counter_exports;
  },
  CrimboShrub: function() {
    return CrimboShrub_exports;
  },
  CrownOfThrones: function() {
    return CrownOfThrones_exports;
  },
  CrystalBall: function() {
    return CrystalBall_exports;
  },
  CursedMonkeyPaw: function() {
    return CursedMonkeyPaw_exports;
  },
  DNALab: function() {
    return DNALab_exports;
  },
  DaylightShavings: function() {
    return DaylightShavings_exports;
  },
  DeckOfEveryCard: function() {
    return DeckOfEveryCard_exports;
  },
  Diet: function() {
    return Diet;
  },
  Dinseylandfill: function() {
    return Dinseylandfill_exports;
  },
  Dreadsylvania: function() {
    return Dreadsylvania;
  },
  Dungeon: function() {
    return Dungeon;
  },
  EnsureError: function() {
    return EnsureError;
  },
  Environment: function() {
    return Environment;
  },
  FloristFriar: function() {
    return Florist_exports;
  },
  GreyGoose: function() {
    return GreyGoose_exports;
  },
  Guzzlr: function() {
    return Guzzlr_exports;
  },
  HeavyRains: function() {
    return HeavyRains_exports;
  },
  Hobopolis: function() {
    return Hobopolis;
  },
  Horsery: function() {
    return Horsery_exports;
  },
  InvalidMacroError: function() {
    return InvalidMacroError;
  },
  JuneCleaver: function() {
    return JuneCleaver_exports;
  },
  JungMan: function() {
    return JungMan_exports;
  },
  Kmail: function() {
    return Kmail;
  },
  KolGender: function() {
    return KolGender;
  },
  KolmafiaVersionError: function() {
    return KolmafiaVersionError;
  },
  Latte: function() {
    return LatteLoversMembersMug_exports;
  },
  Lifestyle: function() {
    return Lifestyle;
  },
  LookingGlass: function() {
    return LookingGlass_exports;
  },
  Macro: function() {
    return Macro;
  },
  MagicalSausages: function() {
    return MagicalSausages;
  },
  MayoClinic: function() {
    return MayoClinic_exports;
  },
  MenuItem: function() {
    return MenuItem;
  },
  Mood: function() {
    return Mood;
  },
  MpSource: function() {
    return MpSource;
  },
  MummingTrunk: function() {
    return MummingTrunk_exports;
  },
  NuclearAutumn: function() {
    return NuclearAutumn_exports;
  },
  ObtuseAngel: function() {
    return ObtuseAngel_exports;
  },
  OscusSoda: function() {
    return OscusSoda;
  },
  Pantogram: function() {
    return Pantogram_exports;
  },
  Path: function() {
    return Path6;
  },
  Paths: function() {
    return Paths;
  },
  PropertiesManager: function() {
    return PropertiesManager;
  },
  RainDoh: function() {
    return RainDoh_exports;
  },
  RainDohBlackBox: function() {
    return RainDohBlackBox;
  },
  ReagnimatedGnome: function() {
    return ReagnimatedGnome_exports;
  },
  Requirement: function() {
    return Requirement;
  },
  RetroCape: function() {
    return RetroCape_exports;
  },
  Robortender: function() {
    return Robortender_exports;
  },
  Session: function() {
    return Session;
  },
  SlimeTube: function() {
    return SlimeTube;
  },
  Snapper: function() {
    return Snapper_exports;
  },
  SongBoom: function() {
    return SongBoom_exports;
  },
  SourceTerminal: function() {
    return SourceTerminal_exports;
  },
  Spacegate: function() {
    return Spacegate_exports;
  },
  SpookyPutty: function() {
    return SpookyPutty_exports;
  },
  SpookyPuttySheet: function() {
    return SpookyPuttySheet;
  },
  Stickers: function() {
    return Stickers_exports;
  },
  StompingBoots: function() {
    return StompingBoots_exports;
  },
  StrictMacro: function() {
    return StrictMacro;
  },
  TrainSet: function() {
    return TrainSet_exports;
  },
  TunnelOfLove: function() {
    return TunnelOfLove_exports;
  },
  Wanderer: function() {
    return Wanderer;
  },
  WinterGarden: function() {
    return WinterGarden_exports;
  },
  Witchess: function() {
    return Witchess_exports;
  },
  actionSourcesAvailable: function() {
    return actionSourcesAvailable;
  },
  adventureMacro: function() {
    return adventureMacro;
  },
  adventureMacroAuto: function() {
    return adventureMacroAuto;
  },
  applyModes: function() {
    return applyModes;
  },
  arrayContains: function() {
    return arrayContains;
  },
  arrayEquals: function() {
    return arrayEquals;
  },
  arrayToCountedMap: function() {
    return arrayToCountedMap;
  },
  ascend: function() {
    return ascend;
  },
  bestLibramToCast: function() {
    return bestLibramToCast;
  },
  booleanModifiers: function() {
    return booleanModifiers;
  },
  byClass: function() {
    return byClass;
  },
  byStat: function() {
    return byStat;
  },
  canRememberSong: function() {
    return canRememberSong;
  },
  canUse: function() {
    return canUse;
  },
  canVisitUrl: function() {
    return canVisitUrl;
  },
  chunk: function() {
    return chunk;
  },
  clamp: function() {
    return clamp;
  },
  classModifiers: function() {
    return classModifiers;
  },
  clearMaximizerCache: function() {
    return clearMaximizerCache;
  },
  console: function() {
    return console_exports;
  },
  couldUseRainDohBlackBox: function() {
    return couldUseRainDohBlackBox;
  },
  couldUseSpookyPuttySheet: function() {
    return couldUseSpookyPuttySheet;
  },
  countedMapToArray: function() {
    return countedMapToArray;
  },
  countedMapToString: function() {
    return countedMapToString;
  },
  damageTakenByElement: function() {
    return damageTakenByElement;
  },
  directlyUse: function() {
    return directlyUse;
  },
  effectModifiers: function() {
    return effectModifiers;
  },
  ensureEffect: function() {
    return ensureEffect;
  },
  ensureFreeKill: function() {
    return ensureFreeKill;
  },
  ensureFreeRun: function() {
    return ensureFreeRun;
  },
  examine: function() {
    return examine;
  },
  expectedLibramSummon: function() {
    return expectedLibramSummon;
  },
  findActionSource: function() {
    return findActionSource;
  },
  findFairyMultiplier: function() {
    return findFairyMultiplier;
  },
  findLeprechaunMultiplier: function() {
    return findLeprechaunMultiplier;
  },
  flat: function() {
    return flat;
  },
  freeCrafts: function() {
    return freeCrafts;
  },
  gameDay: function() {
    return gameDay;
  },
  get: function() {
    return get;
  },
  getActiveEffects: function() {
    return getActiveEffects;
  },
  getActiveSongs: function() {
    return getActiveSongs;
  },
  getAverage: function() {
    return getAverage;
  },
  getAverageAdventures: function() {
    return getAverageAdventures;
  },
  getBanishedMonsters: function() {
    return getBanishedMonsters;
  },
  getCurrentModes: function() {
    return getCurrentModes;
  },
  getFamiliarWandererChance: function() {
    return getFamiliarWandererChance;
  },
  getFoldGroup: function() {
    return getFoldGroup;
  },
  getKramcoWandererChance: function() {
    return getKramcoWandererChance;
  },
  getMacroId: function() {
    return getMacroId;
  },
  getModifier: function() {
    return get2;
  },
  getMonsterLocations: function() {
    return getMonsterLocations;
  },
  getPlayerFromIdOrName: function() {
    return getPlayerFromIdOrName;
  },
  getRemainingLiver: function() {
    return getRemainingLiver;
  },
  getRemainingSpleen: function() {
    return getRemainingSpleen;
  },
  getRemainingStomach: function() {
    return getRemainingStomach;
  },
  getSaleValue: function() {
    return getSaleValue;
  },
  getSongCount: function() {
    return getSongCount;
  },
  getSongLimit: function() {
    return getSongLimit;
  },
  getTodaysHolidayWanderers: function() {
    return getTodaysHolidayWanderers;
  },
  getTotalModifier: function() {
    return getTotalModifier;
  },
  getTotalPuttyLikeCopiesMade: function() {
    return getTotalPuttyLikeCopiesMade;
  },
  getWandererChance: function() {
    return getWandererChance;
  },
  getZapGroup: function() {
    return getZapGroup;
  },
  have: function() {
    return have;
  },
  haveCounter: function() {
    return haveCounter;
  },
  haveInCampground: function() {
    return haveInCampground;
  },
  haveWandererCounter: function() {
    return haveWandererCounter;
  },
  holidayWanderers: function() {
    return holidayWanderers;
  },
  invertMap: function() {
    return invertMap;
  },
  isBooleanProperty: function() {
    return isBooleanProperty;
  },
  isCurrentFamiliar: function() {
    return isCurrentFamiliar;
  },
  isFamiliarProperty: function() {
    return isFamiliarProperty;
  },
  isLocationProperty: function() {
    return isLocationProperty;
  },
  isMonsterProperty: function() {
    return isMonsterProperty;
  },
  isNumericOrStringProperty: function() {
    return isNumericOrStringProperty;
  },
  isNumericProperty: function() {
    return isNumericProperty;
  },
  isPhylumProperty: function() {
    return isPhylumProperty;
  },
  isSong: function() {
    return isSong;
  },
  isStatProperty: function() {
    return isStatProperty;
  },
  isStringProperty: function() {
    return isStringProperty;
  },
  isVoteWandererNow: function() {
    return isVoteWandererNow;
  },
  isWandererNow: function() {
    return isWandererNow;
  },
  lgrCurrencies: function() {
    return lgrCurrencies;
  },
  logger: function() {
    return logger_default;
  },
  makeByXFunction: function() {
    return makeByXFunction;
  },
  maxBy: function() {
    return maxBy;
  },
  maximizeCached: function() {
    return maximizeCached;
  },
  mergeMaximizeOptions: function() {
    return mergeMaximizeOptions;
  },
  modeableItems: function() {
    return modeableItems;
  },
  modeableState: function() {
    return modeableState;
  },
  monsterModifiers: function() {
    return monsterModifiers;
  },
  noneToNull: function() {
    return noneToNull;
  },
  notNull: function() {
    return notNull;
  },
  numericModifiers: function() {
    return numericModifiers;
  },
  parseNumber: function() {
    return parseNumber;
  },
  permedSkills: function() {
    return permedSkills;
  },
  possibleLibramSummons: function() {
    return possibleLibramSummons;
  },
  prepareAscension: function() {
    return prepareAscension;
  },
  property: function() {
    return property_exports;
  },
  propertyTypes: function() {
    return propertyTypes_exports;
  },
  questStep: function() {
    return questStep;
  },
  random: function() {
    return random;
  },
  realmAvailable: function() {
    return realmAvailable;
  },
  realmCurrency: function() {
    return realmCurrency;
  },
  realmTypes: function() {
    return realmTypes;
  },
  set: function() {
    return _set;
  },
  setDefaultMaximizeOptions: function() {
    return setDefaultMaximizeOptions;
  },
  setEqual: function() {
    return setEqual;
  },
  setProperties: function() {
    return setProperties;
  },
  signIdToName: function() {
    return signIdToName;
  },
  signNameToId: function() {
    return signNameToId;
  },
  sinceKolmafiaRevision: function() {
    return sinceKolmafiaRevision;
  },
  sinceKolmafiaVersion: function() {
    return sinceKolmafiaVersion;
  },
  skillModifiers: function() {
    return skillModifiers;
  },
  splitByCommasWithEscapes: function() {
    return splitByCommasWithEscapes;
  },
  statModifiers: function() {
    return statModifiers;
  },
  sum: function() {
    return sum;
  },
  sumNumbers: function() {
    return sumNumbers;
  },
  tc: function() {
    return tc;
  },
  telescope: function() {
    return telescope;
  },
  tryFindFreeKill: function() {
    return tryFindFreeKill;
  },
  tryFindFreeRun: function() {
    return tryFindFreeRun;
  },
  undelay: function() {
    return undelay;
  },
  uneffect: function() {
    return uneffect;
  },
  unequip: function() {
    return unequip;
  },
  withChoice: function() {
    return withChoice;
  },
  withChoices: function() {
    return withChoices;
  },
  withProperties: function() {
    return withProperties;
  },
  withProperty: function() {
    return withProperty;
  }
});
var init_dist = __esm({
  "../../node_modules/libram/dist/index.js": function() {
    init_actions();
    init_ascend();
    init_Clan();
    init_challengePaths();
    init_combat();
    init_counter();
    init_diet();
    init_Dungeon();
    init_lib();
    init_maximize();
    init_modifierTypes();
    init_mood();
    init_propertyTyping();
    init_resources();
    init_since();
    init_template_string();
    init_Kmail();
    init_Path();
    init_logger();
    init_console();
    init_property();
    init_propertyTypes();
    init_utils();
    init_property();
    init_modifier();
    init_session();
  }
});

// ../../node_modules/core-js/internals/global.js
var require_global = __commonJS({
  "../../node_modules/core-js/internals/global.js": function(exports, module2) {
    "use strict";
    var check = function check2(it) {
      return it && it.Math === Math && it;
    };
    module2.exports = // eslint-disable-next-line es/no-global-this -- safe
    check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
    check(typeof self == "object" && self) || check(typeof global == "object" && global) || // eslint-disable-next-line no-new-func -- fallback
    function() {
      return this;
    }() || exports || Function("return this")();
  }
});

// ../../node_modules/core-js/internals/fails.js
var require_fails = __commonJS({
  "../../node_modules/core-js/internals/fails.js": function(exports, module2) {
    "use strict";
    module2.exports = function(exec) {
      try {
        return !!exec();
      } catch (error2) {
        return true;
      }
    };
  }
});

// ../../node_modules/core-js/internals/descriptors.js
var require_descriptors = __commonJS({
  "../../node_modules/core-js/internals/descriptors.js": function(exports, module2) {
    "use strict";
    var fails = require_fails();
    module2.exports = !fails(function() {
      return Object.defineProperty({}, 1, {
        get: function get4() {
          return 7;
        }
      })[1] !== 7;
    });
  }
});

// ../../node_modules/core-js/internals/function-bind-native.js
var require_function_bind_native = __commonJS({
  "../../node_modules/core-js/internals/function-bind-native.js": function(exports, module2) {
    "use strict";
    var fails = require_fails();
    module2.exports = !fails(function() {
      var test = function() {
      }.bind();
      return typeof test != "function" || test.hasOwnProperty("prototype");
    });
  }
});

// ../../node_modules/core-js/internals/function-call.js
var require_function_call = __commonJS({
  "../../node_modules/core-js/internals/function-call.js": function(exports, module2) {
    "use strict";
    var NATIVE_BIND = require_function_bind_native();
    var call = Function.prototype.call;
    module2.exports = NATIVE_BIND ? call.bind(call) : function() {
      return call.apply(call, arguments);
    };
  }
});

// ../../node_modules/core-js/internals/object-property-is-enumerable.js
var require_object_property_is_enumerable = __commonJS({
  "../../node_modules/core-js/internals/object-property-is-enumerable.js": function(exports) {
    "use strict";
    var $propertyIsEnumerable = {}.propertyIsEnumerable;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({
      1: 2
    }, 1);
    exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
      var descriptor = getOwnPropertyDescriptor(this, V);
      return !!descriptor && descriptor.enumerable;
    } : $propertyIsEnumerable;
  }
});

// ../../node_modules/core-js/internals/create-property-descriptor.js
var require_create_property_descriptor = __commonJS({
  "../../node_modules/core-js/internals/create-property-descriptor.js": function(exports, module2) {
    "use strict";
    module2.exports = function(bitmap, value) {
      return {
        enumerable: !(bitmap & 1),
        configurable: !(bitmap & 2),
        writable: !(bitmap & 4),
        value: value
      };
    };
  }
});

// ../../node_modules/core-js/internals/function-uncurry-this.js
var require_function_uncurry_this = __commonJS({
  "../../node_modules/core-js/internals/function-uncurry-this.js": function(exports, module2) {
    "use strict";
    var NATIVE_BIND = require_function_bind_native();
    var FunctionPrototype = Function.prototype;
    var call = FunctionPrototype.call;
    var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);
    module2.exports = NATIVE_BIND ? uncurryThisWithBind : function(fn) {
      return function() {
        return call.apply(fn, arguments);
      };
    };
  }
});

// ../../node_modules/core-js/internals/classof-raw.js
var require_classof_raw = __commonJS({
  "../../node_modules/core-js/internals/classof-raw.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var toString = uncurryThis({}.toString);
    var stringSlice = uncurryThis("".slice);
    module2.exports = function(it) {
      return stringSlice(toString(it), 8, -1);
    };
  }
});

// ../../node_modules/core-js/internals/indexed-object.js
var require_indexed_object = __commonJS({
  "../../node_modules/core-js/internals/indexed-object.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var fails = require_fails();
    var classof = require_classof_raw();
    var $Object = Object;
    var split = uncurryThis("".split);
    module2.exports = fails(function() {
      return !$Object("z").propertyIsEnumerable(0);
    }) ? function(it) {
      return classof(it) === "String" ? split(it, "") : $Object(it);
    } : $Object;
  }
});

// ../../node_modules/core-js/internals/is-null-or-undefined.js
var require_is_null_or_undefined = __commonJS({
  "../../node_modules/core-js/internals/is-null-or-undefined.js": function(exports, module2) {
    "use strict";
    module2.exports = function(it) {
      return it === null || it === void 0;
    };
  }
});

// ../../node_modules/core-js/internals/require-object-coercible.js
var require_require_object_coercible = __commonJS({
  "../../node_modules/core-js/internals/require-object-coercible.js": function(exports, module2) {
    "use strict";
    var isNullOrUndefined = require_is_null_or_undefined();
    var $TypeError = TypeError;
    module2.exports = function(it) {
      if (isNullOrUndefined(it))
        throw $TypeError("Can't call method on " + it);
      return it;
    };
  }
});

// ../../node_modules/core-js/internals/to-indexed-object.js
var require_to_indexed_object = __commonJS({
  "../../node_modules/core-js/internals/to-indexed-object.js": function(exports, module2) {
    "use strict";
    var IndexedObject = require_indexed_object();
    var requireObjectCoercible = require_require_object_coercible();
    module2.exports = function(it) {
      return IndexedObject(requireObjectCoercible(it));
    };
  }
});

// ../../node_modules/core-js/internals/document-all.js
var require_document_all = __commonJS({
  "../../node_modules/core-js/internals/document-all.js": function(exports, module2) {
    "use strict";
    var documentAll = typeof document == "object" && document.all;
    var IS_HTMLDDA = typeof documentAll == "undefined" && documentAll !== void 0;
    module2.exports = {
      all: documentAll,
      IS_HTMLDDA: IS_HTMLDDA
    };
  }
});

// ../../node_modules/core-js/internals/is-callable.js
var require_is_callable = __commonJS({
  "../../node_modules/core-js/internals/is-callable.js": function(exports, module2) {
    "use strict";
    var $documentAll = require_document_all();
    var documentAll = $documentAll.all;
    module2.exports = $documentAll.IS_HTMLDDA ? function(argument) {
      return typeof argument == "function" || argument === documentAll;
    } : function(argument) {
      return typeof argument == "function";
    };
  }
});

// ../../node_modules/core-js/internals/is-object.js
var require_is_object = __commonJS({
  "../../node_modules/core-js/internals/is-object.js": function(exports, module2) {
    "use strict";
    var isCallable = require_is_callable();
    var $documentAll = require_document_all();
    var documentAll = $documentAll.all;
    module2.exports = $documentAll.IS_HTMLDDA ? function(it) {
      return typeof it == "object" ? it !== null : isCallable(it) || it === documentAll;
    } : function(it) {
      return typeof it == "object" ? it !== null : isCallable(it);
    };
  }
});

// ../../node_modules/core-js/internals/get-built-in.js
var require_get_built_in = __commonJS({
  "../../node_modules/core-js/internals/get-built-in.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var isCallable = require_is_callable();
    var aFunction = function aFunction2(argument) {
      return isCallable(argument) ? argument : void 0;
    };
    module2.exports = function(namespace, method) {
      return arguments.length < 2 ? aFunction(global2[namespace]) : global2[namespace] && global2[namespace][method];
    };
  }
});

// ../../node_modules/core-js/internals/object-is-prototype-of.js
var require_object_is_prototype_of = __commonJS({
  "../../node_modules/core-js/internals/object-is-prototype-of.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    module2.exports = uncurryThis({}.isPrototypeOf);
  }
});

// ../../node_modules/core-js/internals/engine-user-agent.js
var require_engine_user_agent = __commonJS({
  "../../node_modules/core-js/internals/engine-user-agent.js": function(exports, module2) {
    "use strict";
    module2.exports = typeof navigator != "undefined" && String(navigator.userAgent) || "";
  }
});

// ../../node_modules/core-js/internals/engine-v8-version.js
var require_engine_v8_version = __commonJS({
  "../../node_modules/core-js/internals/engine-v8-version.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var userAgent = require_engine_user_agent();
    var process2 = global2.process;
    var Deno = global2.Deno;
    var versions = process2 && process2.versions || Deno && Deno.version;
    var v8 = versions && versions.v8;
    var match;
    var version;
    if (v8) {
      match = v8.split(".");
      version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
    }
    if (!version && userAgent) {
      match = userAgent.match(/Edge\/(\d+)/);
      if (!match || match[1] >= 74) {
        match = userAgent.match(/Chrome\/(\d+)/);
        if (match)
          version = +match[1];
      }
    }
    module2.exports = version;
  }
});

// ../../node_modules/core-js/internals/symbol-constructor-detection.js
var require_symbol_constructor_detection = __commonJS({
  "../../node_modules/core-js/internals/symbol-constructor-detection.js": function(exports, module2) {
    "use strict";
    var V8_VERSION = require_engine_v8_version();
    var fails = require_fails();
    var global2 = require_global();
    var $String = global2.String;
    module2.exports = !!Object.getOwnPropertySymbols && !fails(function() {
      var symbol = Symbol("symbol detection");
      return !$String(symbol) || !(Object(symbol) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
      !Symbol.sham && V8_VERSION && V8_VERSION < 41;
    });
  }
});

// ../../node_modules/core-js/internals/use-symbol-as-uid.js
var require_use_symbol_as_uid = __commonJS({
  "../../node_modules/core-js/internals/use-symbol-as-uid.js": function(exports, module2) {
    "use strict";
    var NATIVE_SYMBOL = require_symbol_constructor_detection();
    module2.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == "symbol";
  }
});

// ../../node_modules/core-js/internals/is-symbol.js
var require_is_symbol = __commonJS({
  "../../node_modules/core-js/internals/is-symbol.js": function(exports, module2) {
    "use strict";
    var getBuiltIn = require_get_built_in();
    var isCallable = require_is_callable();
    var isPrototypeOf = require_object_is_prototype_of();
    var USE_SYMBOL_AS_UID = require_use_symbol_as_uid();
    var $Object = Object;
    module2.exports = USE_SYMBOL_AS_UID ? function(it) {
      return typeof it == "symbol";
    } : function(it) {
      var $Symbol = getBuiltIn("Symbol");
      return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
    };
  }
});

// ../../node_modules/core-js/internals/try-to-string.js
var require_try_to_string = __commonJS({
  "../../node_modules/core-js/internals/try-to-string.js": function(exports, module2) {
    "use strict";
    var $String = String;
    module2.exports = function(argument) {
      try {
        return $String(argument);
      } catch (error2) {
        return "Object";
      }
    };
  }
});

// ../../node_modules/core-js/internals/a-callable.js
var require_a_callable = __commonJS({
  "../../node_modules/core-js/internals/a-callable.js": function(exports, module2) {
    "use strict";
    var isCallable = require_is_callable();
    var tryToString = require_try_to_string();
    var $TypeError = TypeError;
    module2.exports = function(argument) {
      if (isCallable(argument))
        return argument;
      throw $TypeError(tryToString(argument) + " is not a function");
    };
  }
});

// ../../node_modules/core-js/internals/get-method.js
var require_get_method = __commonJS({
  "../../node_modules/core-js/internals/get-method.js": function(exports, module2) {
    "use strict";
    var aCallable = require_a_callable();
    var isNullOrUndefined = require_is_null_or_undefined();
    module2.exports = function(V, P) {
      var func = V[P];
      return isNullOrUndefined(func) ? void 0 : aCallable(func);
    };
  }
});

// ../../node_modules/core-js/internals/ordinary-to-primitive.js
var require_ordinary_to_primitive = __commonJS({
  "../../node_modules/core-js/internals/ordinary-to-primitive.js": function(exports, module2) {
    "use strict";
    var call = require_function_call();
    var isCallable = require_is_callable();
    var isObject = require_is_object();
    var $TypeError = TypeError;
    module2.exports = function(input, pref) {
      var fn, val;
      if (pref === "string" && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
        return val;
      if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input)))
        return val;
      if (pref !== "string" && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
        return val;
      throw $TypeError("Can't convert object to primitive value");
    };
  }
});

// ../../node_modules/core-js/internals/is-pure.js
var require_is_pure = __commonJS({
  "../../node_modules/core-js/internals/is-pure.js": function(exports, module2) {
    "use strict";
    module2.exports = false;
  }
});

// ../../node_modules/core-js/internals/define-global-property.js
var require_define_global_property = __commonJS({
  "../../node_modules/core-js/internals/define-global-property.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var defineProperty = Object.defineProperty;
    module2.exports = function(key, value) {
      try {
        defineProperty(global2, key, {
          value: value,
          configurable: true,
          writable: true
        });
      } catch (error2) {
        global2[key] = value;
      }
      return value;
    };
  }
});

// ../../node_modules/core-js/internals/shared-store.js
var require_shared_store = __commonJS({
  "../../node_modules/core-js/internals/shared-store.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var defineGlobalProperty = require_define_global_property();
    var SHARED = "__core-js_shared__";
    var store = global2[SHARED] || defineGlobalProperty(SHARED, {});
    module2.exports = store;
  }
});

// ../../node_modules/core-js/internals/shared.js
var require_shared = __commonJS({
  "../../node_modules/core-js/internals/shared.js": function(exports, module2) {
    "use strict";
    var IS_PURE = require_is_pure();
    var store = require_shared_store();
    (module2.exports = function(key, value) {
      return store[key] || (store[key] = value !== void 0 ? value : {});
    })("versions", []).push({
      version: "3.32.2",
      mode: IS_PURE ? "pure" : "global",
      copyright: "\xA9 2014-2023 Denis Pushkarev (zloirock.ru)",
      license: "https://github.com/zloirock/core-js/blob/v3.32.2/LICENSE",
      source: "https://github.com/zloirock/core-js"
    });
  }
});

// ../../node_modules/core-js/internals/to-object.js
var require_to_object = __commonJS({
  "../../node_modules/core-js/internals/to-object.js": function(exports, module2) {
    "use strict";
    var requireObjectCoercible = require_require_object_coercible();
    var $Object = Object;
    module2.exports = function(argument) {
      return $Object(requireObjectCoercible(argument));
    };
  }
});

// ../../node_modules/core-js/internals/has-own-property.js
var require_has_own_property = __commonJS({
  "../../node_modules/core-js/internals/has-own-property.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var toObject = require_to_object();
    var hasOwnProperty = uncurryThis({}.hasOwnProperty);
    module2.exports = Object.hasOwn || function hasOwn(it, key) {
      return hasOwnProperty(toObject(it), key);
    };
  }
});

// ../../node_modules/core-js/internals/uid.js
var require_uid = __commonJS({
  "../../node_modules/core-js/internals/uid.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var id = 0;
    var postfix = Math.random();
    var toString = uncurryThis(1 .toString);
    module2.exports = function(key) {
      return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString(++id + postfix, 36);
    };
  }
});

// ../../node_modules/core-js/internals/well-known-symbol.js
var require_well_known_symbol = __commonJS({
  "../../node_modules/core-js/internals/well-known-symbol.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var shared = require_shared();
    var hasOwn = require_has_own_property();
    var uid = require_uid();
    var NATIVE_SYMBOL = require_symbol_constructor_detection();
    var USE_SYMBOL_AS_UID = require_use_symbol_as_uid();
    var Symbol2 = global2.Symbol;
    var WellKnownSymbolsStore = shared("wks");
    var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol2["for"] || Symbol2 : Symbol2 && Symbol2.withoutSetter || uid;
    module2.exports = function(name) {
      if (!hasOwn(WellKnownSymbolsStore, name)) {
        WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol2, name) ? Symbol2[name] : createWellKnownSymbol("Symbol." + name);
      }
      return WellKnownSymbolsStore[name];
    };
  }
});

// ../../node_modules/core-js/internals/to-primitive.js
var require_to_primitive = __commonJS({
  "../../node_modules/core-js/internals/to-primitive.js": function(exports, module2) {
    "use strict";
    var call = require_function_call();
    var isObject = require_is_object();
    var isSymbol = require_is_symbol();
    var getMethod = require_get_method();
    var ordinaryToPrimitive = require_ordinary_to_primitive();
    var wellKnownSymbol = require_well_known_symbol();
    var $TypeError = TypeError;
    var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
    module2.exports = function(input, pref) {
      if (!isObject(input) || isSymbol(input))
        return input;
      var exoticToPrim = getMethod(input, TO_PRIMITIVE);
      var result;
      if (exoticToPrim) {
        if (pref === void 0)
          pref = "default";
        result = call(exoticToPrim, input, pref);
        if (!isObject(result) || isSymbol(result))
          return result;
        throw $TypeError("Can't convert object to primitive value");
      }
      if (pref === void 0)
        pref = "number";
      return ordinaryToPrimitive(input, pref);
    };
  }
});

// ../../node_modules/core-js/internals/to-property-key.js
var require_to_property_key = __commonJS({
  "../../node_modules/core-js/internals/to-property-key.js": function(exports, module2) {
    "use strict";
    var toPrimitive = require_to_primitive();
    var isSymbol = require_is_symbol();
    module2.exports = function(argument) {
      var key = toPrimitive(argument, "string");
      return isSymbol(key) ? key : key + "";
    };
  }
});

// ../../node_modules/core-js/internals/document-create-element.js
var require_document_create_element = __commonJS({
  "../../node_modules/core-js/internals/document-create-element.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var isObject = require_is_object();
    var document2 = global2.document;
    var EXISTS = isObject(document2) && isObject(document2.createElement);
    module2.exports = function(it) {
      return EXISTS ? document2.createElement(it) : {};
    };
  }
});

// ../../node_modules/core-js/internals/ie8-dom-define.js
var require_ie8_dom_define = __commonJS({
  "../../node_modules/core-js/internals/ie8-dom-define.js": function(exports, module2) {
    "use strict";
    var DESCRIPTORS = require_descriptors();
    var fails = require_fails();
    var createElement = require_document_create_element();
    module2.exports = !DESCRIPTORS && !fails(function() {
      return Object.defineProperty(createElement("div"), "a", {
        get: function get4() {
          return 7;
        }
      }).a !== 7;
    });
  }
});

// ../../node_modules/core-js/internals/object-get-own-property-descriptor.js
var require_object_get_own_property_descriptor = __commonJS({
  "../../node_modules/core-js/internals/object-get-own-property-descriptor.js": function(exports) {
    "use strict";
    var DESCRIPTORS = require_descriptors();
    var call = require_function_call();
    var propertyIsEnumerableModule = require_object_property_is_enumerable();
    var createPropertyDescriptor = require_create_property_descriptor();
    var toIndexedObject = require_to_indexed_object();
    var toPropertyKey = require_to_property_key();
    var hasOwn = require_has_own_property();
    var IE8_DOM_DEFINE = require_ie8_dom_define();
    var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
      O = toIndexedObject(O);
      P = toPropertyKey(P);
      if (IE8_DOM_DEFINE)
        try {
          return $getOwnPropertyDescriptor(O, P);
        } catch (error2) {
        }
      if (hasOwn(O, P))
        return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
    };
  }
});

// ../../node_modules/core-js/internals/v8-prototype-define-bug.js
var require_v8_prototype_define_bug = __commonJS({
  "../../node_modules/core-js/internals/v8-prototype-define-bug.js": function(exports, module2) {
    "use strict";
    var DESCRIPTORS = require_descriptors();
    var fails = require_fails();
    module2.exports = DESCRIPTORS && fails(function() {
      return Object.defineProperty(function() {
      }, "prototype", {
        value: 42,
        writable: false
      }).prototype !== 42;
    });
  }
});

// ../../node_modules/core-js/internals/an-object.js
var require_an_object = __commonJS({
  "../../node_modules/core-js/internals/an-object.js": function(exports, module2) {
    "use strict";
    var isObject = require_is_object();
    var $String = String;
    var $TypeError = TypeError;
    module2.exports = function(argument) {
      if (isObject(argument))
        return argument;
      throw $TypeError($String(argument) + " is not an object");
    };
  }
});

// ../../node_modules/core-js/internals/object-define-property.js
var require_object_define_property = __commonJS({
  "../../node_modules/core-js/internals/object-define-property.js": function(exports) {
    "use strict";
    var DESCRIPTORS = require_descriptors();
    var IE8_DOM_DEFINE = require_ie8_dom_define();
    var V8_PROTOTYPE_DEFINE_BUG = require_v8_prototype_define_bug();
    var anObject = require_an_object();
    var toPropertyKey = require_to_property_key();
    var $TypeError = TypeError;
    var $defineProperty = Object.defineProperty;
    var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var ENUMERABLE = "enumerable";
    var CONFIGURABLE = "configurable";
    var WRITABLE = "writable";
    exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
      anObject(O);
      P = toPropertyKey(P);
      anObject(Attributes);
      if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
        var current2 = $getOwnPropertyDescriptor(O, P);
        if (current2 && current2[WRITABLE]) {
          O[P] = Attributes.value;
          Attributes = {
            configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current2[CONFIGURABLE],
            enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current2[ENUMERABLE],
            writable: false
          };
        }
      }
      return $defineProperty(O, P, Attributes);
    } : $defineProperty : function defineProperty(O, P, Attributes) {
      anObject(O);
      P = toPropertyKey(P);
      anObject(Attributes);
      if (IE8_DOM_DEFINE)
        try {
          return $defineProperty(O, P, Attributes);
        } catch (error2) {
        }
      if ("get" in Attributes || "set" in Attributes)
        throw $TypeError("Accessors not supported");
      if ("value" in Attributes)
        O[P] = Attributes.value;
      return O;
    };
  }
});

// ../../node_modules/core-js/internals/create-non-enumerable-property.js
var require_create_non_enumerable_property = __commonJS({
  "../../node_modules/core-js/internals/create-non-enumerable-property.js": function(exports, module2) {
    "use strict";
    var DESCRIPTORS = require_descriptors();
    var definePropertyModule = require_object_define_property();
    var createPropertyDescriptor = require_create_property_descriptor();
    module2.exports = DESCRIPTORS ? function(object, key, value) {
      return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
    } : function(object, key, value) {
      object[key] = value;
      return object;
    };
  }
});

// ../../node_modules/core-js/internals/function-name.js
var require_function_name = __commonJS({
  "../../node_modules/core-js/internals/function-name.js": function(exports, module2) {
    "use strict";
    var DESCRIPTORS = require_descriptors();
    var hasOwn = require_has_own_property();
    var FunctionPrototype = Function.prototype;
    var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;
    var EXISTS = hasOwn(FunctionPrototype, "name");
    var PROPER = EXISTS && function something() {
    }.name === "something";
    var CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, "name").configurable);
    module2.exports = {
      EXISTS: EXISTS,
      PROPER: PROPER,
      CONFIGURABLE: CONFIGURABLE
    };
  }
});

// ../../node_modules/core-js/internals/inspect-source.js
var require_inspect_source = __commonJS({
  "../../node_modules/core-js/internals/inspect-source.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var isCallable = require_is_callable();
    var store = require_shared_store();
    var functionToString = uncurryThis(Function.toString);
    if (!isCallable(store.inspectSource)) {
      store.inspectSource = function(it) {
        return functionToString(it);
      };
    }
    module2.exports = store.inspectSource;
  }
});

// ../../node_modules/core-js/internals/weak-map-basic-detection.js
var require_weak_map_basic_detection = __commonJS({
  "../../node_modules/core-js/internals/weak-map-basic-detection.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var isCallable = require_is_callable();
    var WeakMap2 = global2.WeakMap;
    module2.exports = isCallable(WeakMap2) && /native code/.test(String(WeakMap2));
  }
});

// ../../node_modules/core-js/internals/shared-key.js
var require_shared_key = __commonJS({
  "../../node_modules/core-js/internals/shared-key.js": function(exports, module2) {
    "use strict";
    var shared = require_shared();
    var uid = require_uid();
    var keys = shared("keys");
    module2.exports = function(key) {
      return keys[key] || (keys[key] = uid(key));
    };
  }
});

// ../../node_modules/core-js/internals/hidden-keys.js
var require_hidden_keys = __commonJS({
  "../../node_modules/core-js/internals/hidden-keys.js": function(exports, module2) {
    "use strict";
    module2.exports = {};
  }
});

// ../../node_modules/core-js/internals/internal-state.js
var require_internal_state = __commonJS({
  "../../node_modules/core-js/internals/internal-state.js": function(exports, module2) {
    "use strict";
    var NATIVE_WEAK_MAP = require_weak_map_basic_detection();
    var global2 = require_global();
    var isObject = require_is_object();
    var createNonEnumerableProperty = require_create_non_enumerable_property();
    var hasOwn = require_has_own_property();
    var shared = require_shared_store();
    var sharedKey = require_shared_key();
    var hiddenKeys = require_hidden_keys();
    var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
    var TypeError2 = global2.TypeError;
    var WeakMap2 = global2.WeakMap;
    var set3;
    var get4;
    var has;
    var enforce = function enforce2(it) {
      return has(it) ? get4(it) : set3(it, {});
    };
    var getterFor = function getterFor2(TYPE) {
      return function(it) {
        var state;
        if (!isObject(it) || (state = get4(it)).type !== TYPE) {
          throw TypeError2("Incompatible receiver, " + TYPE + " required");
        }
        return state;
      };
    };
    if (NATIVE_WEAK_MAP || shared.state) {
      store = shared.state || (shared.state = new WeakMap2());
      store.get = store.get;
      store.has = store.has;
      store.set = store.set;
      set3 = function set4(it, metadata) {
        if (store.has(it))
          throw TypeError2(OBJECT_ALREADY_INITIALIZED);
        metadata.facade = it;
        store.set(it, metadata);
        return metadata;
      };
      get4 = function get5(it) {
        return store.get(it) || {};
      };
      has = function has2(it) {
        return store.has(it);
      };
    } else {
      STATE = sharedKey("state");
      hiddenKeys[STATE] = true;
      set3 = function set4(it, metadata) {
        if (hasOwn(it, STATE))
          throw TypeError2(OBJECT_ALREADY_INITIALIZED);
        metadata.facade = it;
        createNonEnumerableProperty(it, STATE, metadata);
        return metadata;
      };
      get4 = function get5(it) {
        return hasOwn(it, STATE) ? it[STATE] : {};
      };
      has = function has2(it) {
        return hasOwn(it, STATE);
      };
    }
    var store;
    var STATE;
    module2.exports = {
      set: set3,
      get: get4,
      has: has,
      enforce: enforce,
      getterFor: getterFor
    };
  }
});

// ../../node_modules/core-js/internals/make-built-in.js
var require_make_built_in = __commonJS({
  "../../node_modules/core-js/internals/make-built-in.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var fails = require_fails();
    var isCallable = require_is_callable();
    var hasOwn = require_has_own_property();
    var DESCRIPTORS = require_descriptors();
    var CONFIGURABLE_FUNCTION_NAME = require_function_name().CONFIGURABLE;
    var inspectSource = require_inspect_source();
    var InternalStateModule = require_internal_state();
    var enforceInternalState = InternalStateModule.enforce;
    var getInternalState = InternalStateModule.get;
    var $String = String;
    var defineProperty = Object.defineProperty;
    var stringSlice = uncurryThis("".slice);
    var replace = uncurryThis("".replace);
    var join = uncurryThis([].join);
    var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function() {
      return defineProperty(function() {
      }, "length", {
        value: 8
      }).length !== 8;
    });
    var TEMPLATE = String(String).split("String");
    var makeBuiltIn = module2.exports = function(value, name, options) {
      if (stringSlice($String(name), 0, 7) === "Symbol(") {
        name = "[" + replace($String(name), /^Symbol\(([^)]*)\)/, "$1") + "]";
      }
      if (options && options.getter)
        name = "get " + name;
      if (options && options.setter)
        name = "set " + name;
      if (!hasOwn(value, "name") || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {
        if (DESCRIPTORS)
          defineProperty(value, "name", {
            value: name,
            configurable: true
          });
        else
          value.name = name;
      }
      if (CONFIGURABLE_LENGTH && options && hasOwn(options, "arity") && value.length !== options.arity) {
        defineProperty(value, "length", {
          value: options.arity
        });
      }
      try {
        if (options && hasOwn(options, "constructor") && options.constructor) {
          if (DESCRIPTORS)
            defineProperty(value, "prototype", {
              writable: false
            });
        } else if (value.prototype)
          value.prototype = void 0;
      } catch (error2) {
      }
      var state = enforceInternalState(value);
      if (!hasOwn(state, "source")) {
        state.source = join(TEMPLATE, typeof name == "string" ? name : "");
      }
      return value;
    };
    Function.prototype.toString = makeBuiltIn(function toString() {
      return isCallable(this) && getInternalState(this).source || inspectSource(this);
    }, "toString");
  }
});

// ../../node_modules/core-js/internals/define-built-in.js
var require_define_built_in = __commonJS({
  "../../node_modules/core-js/internals/define-built-in.js": function(exports, module2) {
    "use strict";
    var isCallable = require_is_callable();
    var definePropertyModule = require_object_define_property();
    var makeBuiltIn = require_make_built_in();
    var defineGlobalProperty = require_define_global_property();
    module2.exports = function(O, key, value, options) {
      if (!options)
        options = {};
      var simple = options.enumerable;
      var name = options.name !== void 0 ? options.name : key;
      if (isCallable(value))
        makeBuiltIn(value, name, options);
      if (options.global) {
        if (simple)
          O[key] = value;
        else
          defineGlobalProperty(key, value);
      } else {
        try {
          if (!options.unsafe)
            delete O[key];
          else if (O[key])
            simple = true;
        } catch (error2) {
        }
        if (simple)
          O[key] = value;
        else
          definePropertyModule.f(O, key, {
            value: value,
            enumerable: false,
            configurable: !options.nonConfigurable,
            writable: !options.nonWritable
          });
      }
      return O;
    };
  }
});

// ../../node_modules/core-js/internals/math-trunc.js
var require_math_trunc = __commonJS({
  "../../node_modules/core-js/internals/math-trunc.js": function(exports, module2) {
    "use strict";
    var ceil = Math.ceil;
    var floor = Math.floor;
    module2.exports = Math.trunc || function trunc(x) {
      var n = +x;
      return (n > 0 ? floor : ceil)(n);
    };
  }
});

// ../../node_modules/core-js/internals/to-integer-or-infinity.js
var require_to_integer_or_infinity = __commonJS({
  "../../node_modules/core-js/internals/to-integer-or-infinity.js": function(exports, module2) {
    "use strict";
    var trunc = require_math_trunc();
    module2.exports = function(argument) {
      var number = +argument;
      return number !== number || number === 0 ? 0 : trunc(number);
    };
  }
});

// ../../node_modules/core-js/internals/to-absolute-index.js
var require_to_absolute_index = __commonJS({
  "../../node_modules/core-js/internals/to-absolute-index.js": function(exports, module2) {
    "use strict";
    var toIntegerOrInfinity = require_to_integer_or_infinity();
    var max = Math.max;
    var min = Math.min;
    module2.exports = function(index, length) {
      var integer = toIntegerOrInfinity(index);
      return integer < 0 ? max(integer + length, 0) : min(integer, length);
    };
  }
});

// ../../node_modules/core-js/internals/to-length.js
var require_to_length = __commonJS({
  "../../node_modules/core-js/internals/to-length.js": function(exports, module2) {
    "use strict";
    var toIntegerOrInfinity = require_to_integer_or_infinity();
    var min = Math.min;
    module2.exports = function(argument) {
      return argument > 0 ? min(toIntegerOrInfinity(argument), 9007199254740991) : 0;
    };
  }
});

// ../../node_modules/core-js/internals/length-of-array-like.js
var require_length_of_array_like = __commonJS({
  "../../node_modules/core-js/internals/length-of-array-like.js": function(exports, module2) {
    "use strict";
    var toLength = require_to_length();
    module2.exports = function(obj) {
      return toLength(obj.length);
    };
  }
});

// ../../node_modules/core-js/internals/array-includes.js
var require_array_includes = __commonJS({
  "../../node_modules/core-js/internals/array-includes.js": function(exports, module2) {
    "use strict";
    var toIndexedObject = require_to_indexed_object();
    var toAbsoluteIndex = require_to_absolute_index();
    var lengthOfArrayLike = require_length_of_array_like();
    var createMethod = function createMethod2(IS_INCLUDES) {
      return function($this, el, fromIndex) {
        var O = toIndexedObject($this);
        var length = lengthOfArrayLike(O);
        var index = toAbsoluteIndex(fromIndex, length);
        var value;
        if (IS_INCLUDES && el !== el)
          while (length > index) {
            value = O[index++];
            if (value !== value)
              return true;
          }
        else
          for (; length > index; index++) {
            if ((IS_INCLUDES || index in O) && O[index] === el)
              return IS_INCLUDES || index || 0;
          }
        return !IS_INCLUDES && -1;
      };
    };
    module2.exports = {
      // `Array.prototype.includes` method
      // https://tc39.es/ecma262/#sec-array.prototype.includes
      includes: createMethod(true),
      // `Array.prototype.indexOf` method
      // https://tc39.es/ecma262/#sec-array.prototype.indexof
      indexOf: createMethod(false)
    };
  }
});

// ../../node_modules/core-js/internals/object-keys-internal.js
var require_object_keys_internal = __commonJS({
  "../../node_modules/core-js/internals/object-keys-internal.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var hasOwn = require_has_own_property();
    var toIndexedObject = require_to_indexed_object();
    var indexOf2 = require_array_includes().indexOf;
    var hiddenKeys = require_hidden_keys();
    var push = uncurryThis([].push);
    module2.exports = function(object, names) {
      var O = toIndexedObject(object);
      var i = 0;
      var result = [];
      var key;
      for (key in O)
        !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
      while (names.length > i)
        if (hasOwn(O, key = names[i++])) {
          ~indexOf2(result, key) || push(result, key);
        }
      return result;
    };
  }
});

// ../../node_modules/core-js/internals/enum-bug-keys.js
var require_enum_bug_keys = __commonJS({
  "../../node_modules/core-js/internals/enum-bug-keys.js": function(exports, module2) {
    "use strict";
    module2.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
  }
});

// ../../node_modules/core-js/internals/object-get-own-property-names.js
var require_object_get_own_property_names = __commonJS({
  "../../node_modules/core-js/internals/object-get-own-property-names.js": function(exports) {
    "use strict";
    var internalObjectKeys = require_object_keys_internal();
    var enumBugKeys = require_enum_bug_keys();
    var hiddenKeys = enumBugKeys.concat("length", "prototype");
    exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
      return internalObjectKeys(O, hiddenKeys);
    };
  }
});

// ../../node_modules/core-js/internals/object-get-own-property-symbols.js
var require_object_get_own_property_symbols = __commonJS({
  "../../node_modules/core-js/internals/object-get-own-property-symbols.js": function(exports) {
    "use strict";
    exports.f = Object.getOwnPropertySymbols;
  }
});

// ../../node_modules/core-js/internals/own-keys.js
var require_own_keys = __commonJS({
  "../../node_modules/core-js/internals/own-keys.js": function(exports, module2) {
    "use strict";
    var getBuiltIn = require_get_built_in();
    var uncurryThis = require_function_uncurry_this();
    var getOwnPropertyNamesModule = require_object_get_own_property_names();
    var getOwnPropertySymbolsModule = require_object_get_own_property_symbols();
    var anObject = require_an_object();
    var concat = uncurryThis([].concat);
    module2.exports = getBuiltIn("Reflect", "ownKeys") || function ownKeys21(it) {
      var keys = getOwnPropertyNamesModule.f(anObject(it));
      var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
      return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
    };
  }
});

// ../../node_modules/core-js/internals/copy-constructor-properties.js
var require_copy_constructor_properties = __commonJS({
  "../../node_modules/core-js/internals/copy-constructor-properties.js": function(exports, module2) {
    "use strict";
    var hasOwn = require_has_own_property();
    var ownKeys21 = require_own_keys();
    var getOwnPropertyDescriptorModule = require_object_get_own_property_descriptor();
    var definePropertyModule = require_object_define_property();
    module2.exports = function(target, source, exceptions) {
      var keys = ownKeys21(source);
      var defineProperty = definePropertyModule.f;
      var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
          defineProperty(target, key, getOwnPropertyDescriptor(source, key));
        }
      }
    };
  }
});

// ../../node_modules/core-js/internals/is-forced.js
var require_is_forced = __commonJS({
  "../../node_modules/core-js/internals/is-forced.js": function(exports, module2) {
    "use strict";
    var fails = require_fails();
    var isCallable = require_is_callable();
    var replacement = /#|\.prototype\./;
    var isForced = function isForced2(feature, detection) {
      var value = data[normalize(feature)];
      return value === POLYFILL ? true : value === NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
    };
    var normalize = isForced.normalize = function(string) {
      return String(string).replace(replacement, ".").toLowerCase();
    };
    var data = isForced.data = {};
    var NATIVE = isForced.NATIVE = "N";
    var POLYFILL = isForced.POLYFILL = "P";
    module2.exports = isForced;
  }
});

// ../../node_modules/core-js/internals/export.js
var require_export = __commonJS({
  "../../node_modules/core-js/internals/export.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var getOwnPropertyDescriptor = require_object_get_own_property_descriptor().f;
    var createNonEnumerableProperty = require_create_non_enumerable_property();
    var defineBuiltIn = require_define_built_in();
    var defineGlobalProperty = require_define_global_property();
    var copyConstructorProperties = require_copy_constructor_properties();
    var isForced = require_is_forced();
    module2.exports = function(options, source) {
      var TARGET = options.target;
      var GLOBAL = options.global;
      var STATIC = options.stat;
      var FORCED, target, key, targetProperty, sourceProperty, descriptor;
      if (GLOBAL) {
        target = global2;
      } else if (STATIC) {
        target = global2[TARGET] || defineGlobalProperty(TARGET, {});
      } else {
        target = (global2[TARGET] || {}).prototype;
      }
      if (target)
        for (key in source) {
          sourceProperty = source[key];
          if (options.dontCallGetSet) {
            descriptor = getOwnPropertyDescriptor(target, key);
            targetProperty = descriptor && descriptor.value;
          } else
            targetProperty = target[key];
          FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
          if (!FORCED && targetProperty !== void 0) {
            if (typeof sourceProperty == typeof targetProperty)
              continue;
            copyConstructorProperties(sourceProperty, targetProperty);
          }
          if (options.sham || targetProperty && targetProperty.sham) {
            createNonEnumerableProperty(sourceProperty, "sham", true);
          }
          defineBuiltIn(target, key, sourceProperty, options);
        }
    };
  }
});

// ../../node_modules/core-js/internals/is-array.js
var require_is_array = __commonJS({
  "../../node_modules/core-js/internals/is-array.js": function(exports, module2) {
    "use strict";
    var classof = require_classof_raw();
    module2.exports = Array.isArray || function isArray(argument) {
      return classof(argument) === "Array";
    };
  }
});

// ../../node_modules/core-js/internals/does-not-exceed-safe-integer.js
var require_does_not_exceed_safe_integer = __commonJS({
  "../../node_modules/core-js/internals/does-not-exceed-safe-integer.js": function(exports, module2) {
    "use strict";
    var $TypeError = TypeError;
    var MAX_SAFE_INTEGER = 9007199254740991;
    module2.exports = function(it) {
      if (it > MAX_SAFE_INTEGER)
        throw $TypeError("Maximum allowed index exceeded");
      return it;
    };
  }
});

// ../../node_modules/core-js/internals/function-uncurry-this-clause.js
var require_function_uncurry_this_clause = __commonJS({
  "../../node_modules/core-js/internals/function-uncurry-this-clause.js": function(exports, module2) {
    "use strict";
    var classofRaw = require_classof_raw();
    var uncurryThis = require_function_uncurry_this();
    module2.exports = function(fn) {
      if (classofRaw(fn) === "Function")
        return uncurryThis(fn);
    };
  }
});

// ../../node_modules/core-js/internals/function-bind-context.js
var require_function_bind_context = __commonJS({
  "../../node_modules/core-js/internals/function-bind-context.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this_clause();
    var aCallable = require_a_callable();
    var NATIVE_BIND = require_function_bind_native();
    var bind = uncurryThis(uncurryThis.bind);
    module2.exports = function(fn, that) {
      aCallable(fn);
      return that === void 0 ? fn : NATIVE_BIND ? bind(fn, that) : function() {
        return fn.apply(that, arguments);
      };
    };
  }
});

// ../../node_modules/core-js/internals/flatten-into-array.js
var require_flatten_into_array = __commonJS({
  "../../node_modules/core-js/internals/flatten-into-array.js": function(exports, module2) {
    "use strict";
    var isArray = require_is_array();
    var lengthOfArrayLike = require_length_of_array_like();
    var doesNotExceedSafeInteger = require_does_not_exceed_safe_integer();
    var bind = require_function_bind_context();
    var flattenIntoArray = function flattenIntoArray2(target, original, source, sourceLen, start, depth, mapper, thisArg) {
      var targetIndex = start;
      var sourceIndex = 0;
      var mapFn = mapper ? bind(mapper, thisArg) : false;
      var element, elementLen;
      while (sourceIndex < sourceLen) {
        if (sourceIndex in source) {
          element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
          if (depth > 0 && isArray(element)) {
            elementLen = lengthOfArrayLike(element);
            targetIndex = flattenIntoArray2(target, original, element, elementLen, targetIndex, depth - 1) - 1;
          } else {
            doesNotExceedSafeInteger(targetIndex + 1);
            target[targetIndex] = element;
          }
          targetIndex++;
        }
        sourceIndex++;
      }
      return targetIndex;
    };
    module2.exports = flattenIntoArray;
  }
});

// ../../node_modules/core-js/internals/to-string-tag-support.js
var require_to_string_tag_support = __commonJS({
  "../../node_modules/core-js/internals/to-string-tag-support.js": function(exports, module2) {
    "use strict";
    var wellKnownSymbol = require_well_known_symbol();
    var TO_STRING_TAG = wellKnownSymbol("toStringTag");
    var test = {};
    test[TO_STRING_TAG] = "z";
    module2.exports = String(test) === "[object z]";
  }
});

// ../../node_modules/core-js/internals/classof.js
var require_classof = __commonJS({
  "../../node_modules/core-js/internals/classof.js": function(exports, module2) {
    "use strict";
    var TO_STRING_TAG_SUPPORT = require_to_string_tag_support();
    var isCallable = require_is_callable();
    var classofRaw = require_classof_raw();
    var wellKnownSymbol = require_well_known_symbol();
    var TO_STRING_TAG = wellKnownSymbol("toStringTag");
    var $Object = Object;
    var CORRECT_ARGUMENTS = classofRaw(function() {
      return arguments;
    }()) === "Arguments";
    var tryGet = function tryGet2(it, key) {
      try {
        return it[key];
      } catch (error2) {
      }
    };
    module2.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function(it) {
      var O, tag, result;
      return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) === "Object" && isCallable(O.callee) ? "Arguments" : result;
    };
  }
});

// ../../node_modules/core-js/internals/is-constructor.js
var require_is_constructor = __commonJS({
  "../../node_modules/core-js/internals/is-constructor.js": function(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var fails = require_fails();
    var isCallable = require_is_callable();
    var classof = require_classof();
    var getBuiltIn = require_get_built_in();
    var inspectSource = require_inspect_source();
    var noop = function noop2() {
    };
    var empty = [];
    var construct = getBuiltIn("Reflect", "construct");
    var constructorRegExp = /^\s*(?:class|function)\b/;
    var exec = uncurryThis(constructorRegExp.exec);
    var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);
    var isConstructorModern = function isConstructor(argument) {
      if (!isCallable(argument))
        return false;
      try {
        construct(noop, empty, argument);
        return true;
      } catch (error2) {
        return false;
      }
    };
    var isConstructorLegacy = function isConstructor(argument) {
      if (!isCallable(argument))
        return false;
      switch (classof(argument)) {
        case "AsyncFunction":
        case "GeneratorFunction":
        case "AsyncGeneratorFunction":
          return false;
      }
      try {
        return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
      } catch (error2) {
        return true;
      }
    };
    isConstructorLegacy.sham = true;
    module2.exports = !construct || fails(function() {
      var called;
      return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function() {
        called = true;
      }) || called;
    }) ? isConstructorLegacy : isConstructorModern;
  }
});

// ../../node_modules/core-js/internals/array-species-constructor.js
var require_array_species_constructor = __commonJS({
  "../../node_modules/core-js/internals/array-species-constructor.js": function(exports, module2) {
    "use strict";
    var isArray = require_is_array();
    var isConstructor = require_is_constructor();
    var isObject = require_is_object();
    var wellKnownSymbol = require_well_known_symbol();
    var SPECIES = wellKnownSymbol("species");
    var $Array = Array;
    module2.exports = function(originalArray) {
      var C;
      if (isArray(originalArray)) {
        C = originalArray.constructor;
        if (isConstructor(C) && (C === $Array || isArray(C.prototype)))
          C = void 0;
        else if (isObject(C)) {
          C = C[SPECIES];
          if (C === null)
            C = void 0;
        }
      }
      return C === void 0 ? $Array : C;
    };
  }
});

// ../../node_modules/core-js/internals/array-species-create.js
var require_array_species_create = __commonJS({
  "../../node_modules/core-js/internals/array-species-create.js": function(exports, module2) {
    "use strict";
    var arraySpeciesConstructor = require_array_species_constructor();
    module2.exports = function(originalArray, length) {
      return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
    };
  }
});

// ../../node_modules/core-js/modules/es.array.flat.js
var require_es_array_flat = __commonJS({
  "../../node_modules/core-js/modules/es.array.flat.js": function() {
    "use strict";
    var $2 = require_export();
    var flattenIntoArray = require_flatten_into_array();
    var toObject = require_to_object();
    var lengthOfArrayLike = require_length_of_array_like();
    var toIntegerOrInfinity = require_to_integer_or_infinity();
    var arraySpeciesCreate = require_array_species_create();
    $2({
      target: "Array",
      proto: true
    }, {
      flat: function flat2() {
        var depthArg = arguments.length ? arguments[0] : void 0;
        var O = toObject(this);
        var sourceLen = lengthOfArrayLike(O);
        var A = arraySpeciesCreate(O, 0);
        A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === void 0 ? 1 : toIntegerOrInfinity(depthArg));
        return A;
      }
    });
  }
});

// ../../node_modules/core-js/internals/object-keys.js
var require_object_keys = __commonJS({
  "../../node_modules/core-js/internals/object-keys.js": function(exports, module2) {
    "use strict";
    var internalObjectKeys = require_object_keys_internal();
    var enumBugKeys = require_enum_bug_keys();
    module2.exports = Object.keys || function keys(O) {
      return internalObjectKeys(O, enumBugKeys);
    };
  }
});

// ../../node_modules/core-js/internals/object-define-properties.js
var require_object_define_properties = __commonJS({
  "../../node_modules/core-js/internals/object-define-properties.js": function(exports) {
    "use strict";
    var DESCRIPTORS = require_descriptors();
    var V8_PROTOTYPE_DEFINE_BUG = require_v8_prototype_define_bug();
    var definePropertyModule = require_object_define_property();
    var anObject = require_an_object();
    var toIndexedObject = require_to_indexed_object();
    var objectKeys = require_object_keys();
    exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
      anObject(O);
      var props = toIndexedObject(Properties);
      var keys = objectKeys(Properties);
      var length = keys.length;
      var index = 0;
      var key;
      while (length > index)
        definePropertyModule.f(O, key = keys[index++], props[key]);
      return O;
    };
  }
});

// ../../node_modules/core-js/internals/html.js
var require_html = __commonJS({
  "../../node_modules/core-js/internals/html.js": function(exports, module2) {
    "use strict";
    var getBuiltIn = require_get_built_in();
    module2.exports = getBuiltIn("document", "documentElement");
  }
});

// ../../node_modules/core-js/internals/object-create.js
var require_object_create = __commonJS({
  "../../node_modules/core-js/internals/object-create.js": function(exports, module2) {
    "use strict";
    var anObject = require_an_object();
    var definePropertiesModule = require_object_define_properties();
    var enumBugKeys = require_enum_bug_keys();
    var hiddenKeys = require_hidden_keys();
    var html = require_html();
    var documentCreateElement = require_document_create_element();
    var sharedKey = require_shared_key();
    var GT = ">";
    var LT = "<";
    var PROTOTYPE = "prototype";
    var SCRIPT = "script";
    var IE_PROTO = sharedKey("IE_PROTO");
    var EmptyConstructor = function EmptyConstructor2() {
    };
    var scriptTag = function scriptTag2(content) {
      return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
    };
    var NullProtoObjectViaActiveX = function NullProtoObjectViaActiveX2(activeXDocument2) {
      activeXDocument2.write(scriptTag(""));
      activeXDocument2.close();
      var temp = activeXDocument2.parentWindow.Object;
      activeXDocument2 = null;
      return temp;
    };
    var NullProtoObjectViaIFrame = function NullProtoObjectViaIFrame2() {
      var iframe = documentCreateElement("iframe");
      var JS = "java" + SCRIPT + ":";
      var iframeDocument;
      iframe.style.display = "none";
      html.appendChild(iframe);
      iframe.src = String(JS);
      iframeDocument = iframe.contentWindow.document;
      iframeDocument.open();
      iframeDocument.write(scriptTag("document.F=Object"));
      iframeDocument.close();
      return iframeDocument.F;
    };
    var activeXDocument;
    var _NullProtoObject = function NullProtoObject() {
      try {
        activeXDocument = new ActiveXObject("htmlfile");
      } catch (error2) {
      }
      _NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
      var length = enumBugKeys.length;
      while (length--)
        delete _NullProtoObject[PROTOTYPE][enumBugKeys[length]];
      return _NullProtoObject();
    };
    hiddenKeys[IE_PROTO] = true;
    module2.exports = Object.create || function create3(O, Properties) {
      var result;
      if (O !== null) {
        EmptyConstructor[PROTOTYPE] = anObject(O);
        result = new EmptyConstructor();
        EmptyConstructor[PROTOTYPE] = null;
        result[IE_PROTO] = O;
      } else
        result = _NullProtoObject();
      return Properties === void 0 ? result : definePropertiesModule.f(result, Properties);
    };
  }
});

// ../../node_modules/core-js/internals/add-to-unscopables.js
var require_add_to_unscopables = __commonJS({
  "../../node_modules/core-js/internals/add-to-unscopables.js": function(exports, module2) {
    "use strict";
    var wellKnownSymbol = require_well_known_symbol();
    var create3 = require_object_create();
    var defineProperty = require_object_define_property().f;
    var UNSCOPABLES = wellKnownSymbol("unscopables");
    var ArrayPrototype = Array.prototype;
    if (ArrayPrototype[UNSCOPABLES] === void 0) {
      defineProperty(ArrayPrototype, UNSCOPABLES, {
        configurable: true,
        value: create3(null)
      });
    }
    module2.exports = function(key) {
      ArrayPrototype[UNSCOPABLES][key] = true;
    };
  }
});

// ../../node_modules/core-js/modules/es.array.unscopables.flat.js
var require_es_array_unscopables_flat = __commonJS({
  "../../node_modules/core-js/modules/es.array.unscopables.flat.js": function() {
    "use strict";
    var addToUnscopables = require_add_to_unscopables();
    addToUnscopables("flat");
  }
});

// ../../node_modules/core-js/internals/entry-unbind.js
var require_entry_unbind = __commonJS({
  "../../node_modules/core-js/internals/entry-unbind.js": function(exports, module2) {
    "use strict";
    var global2 = require_global();
    var uncurryThis = require_function_uncurry_this();
    module2.exports = function(CONSTRUCTOR, METHOD) {
      return uncurryThis(global2[CONSTRUCTOR].prototype[METHOD]);
    };
  }
});

// ../../node_modules/core-js/es/array/flat.js
var require_flat = __commonJS({
  "../../node_modules/core-js/es/array/flat.js": function(exports, module2) {
    "use strict";
    require_es_array_flat();
    require_es_array_unscopables_flat();
    var entryUnbind = require_entry_unbind();
    module2.exports = entryUnbind("Array", "flat");
  }
});

// ../../node_modules/core-js/stable/array/flat.js
var require_flat2 = __commonJS({
  "../../node_modules/core-js/stable/array/flat.js": function(exports, module2) {
    "use strict";
    var parent = require_flat();
    module2.exports = parent;
  }
});

// ../../node_modules/core-js/actual/array/flat.js
var require_flat3 = __commonJS({
  "../../node_modules/core-js/actual/array/flat.js": function(exports, module2) {
    "use strict";
    var parent = require_flat2();
    module2.exports = parent;
  }
});

// ../../node_modules/core-js/full/array/flat.js
var require_flat4 = __commonJS({
  "../../node_modules/core-js/full/array/flat.js": function(exports, module2) {
    "use strict";
    var parent = require_flat3();
    module2.exports = parent;
  }
});

// ../../node_modules/core-js/features/array/flat.js
var require_flat5 = __commonJS({
  "../../node_modules/core-js/features/array/flat.js": function(exports, module2) {
    "use strict";
    module2.exports = require_flat4();
  }
});

// ../garbo-lib/dist/value.js
var require_value = __commonJS({
  "../garbo-lib/dist/value.js": function(exports) {
    "use strict";
    var _templateObject991;
    var _templateObject2206;
    var _templateObject3186;
    var _templateObject4165;
    var _templateObject5150;
    var _templateObject6138;
    var _templateObject7120;
    var _templateObject8103;
    var _templateObject998;
    var _templateObject1078;
    var _templateObject1168;
    var _templateObject1260;
    var _templateObject1357;
    var _templateObject1450;
    var _templateObject1547;
    var _templateObject1646;
    var _templateObject1746;
    var _templateObject1845;
    var _templateObject1945;
    var _templateObject2045;
    var _templateObject21101;
    var _templateObject2241;
    var _templateObject2340;
    var _templateObject2438;
    var _templateObject2538;
    var _templateObject2638;
    var _templateObject2737;
    var _templateObject2835;
    var _templateObject2931;
    var _templateObject3031;
    var _templateObject3187;
    var _templateObject3234;
    var _templateObject3333;
    var _templateObject3429;
    var _templateObject3529;
    var _templateObject3628;
    var _templateObject3727;
    var _templateObject3827;
    var _templateObject3926;
    var _templateObject4026;
    var _templateObject4166;
    var _templateObject4226;
    var _templateObject4326;
    var _templateObject4425;
    var _templateObject4525;
    var _templateObject4625;
    var _templateObject4725;
    var _templateObject4825;
    var _templateObject4924;
    var _templateObject5022;
    var _templateObject5151;
    var _templateObject5224;
    var _templateObject5324;
    var _templateObject5424;
    var _templateObject5523;
    var _templateObject5622;
    var _templateObject5721;
    var _templateObject5819;
    var _templateObject5919;
    var _templateObject6018;
    var _templateObject6139;
    var _templateObject6223;
    var _templateObject6321;
    var _templateObject6421;
    var _templateObject6518;
    function _createForOfIteratorHelper40(o, allowArrayLike) {
      var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray78(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it)
            o = it;
          var i = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i >= o.length)
              return { done: true };
            return { done: false, value: o[i++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = true, didErr = false, err;
      return { s: function s() {
        it = it.call(o);
      }, n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f() {
        try {
          if (!normalCompletion && it.return != null)
            it.return();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _taggedTemplateLiteral114(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    function _slicedToArray36(arr, i) {
      return _arrayWithHoles36(arr) || _iterableToArrayLimit36(arr, i) || _unsupportedIterableToArray78(arr, i) || _nonIterableRest36();
    }
    function _nonIterableRest36() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit36(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t)
              return;
            f = false;
          } else
            for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
              ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t.return && (u = t.return(), Object(u) !== u))
              return;
          } finally {
            if (o)
              throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles36(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _toConsumableArray53(arr) {
      return _arrayWithoutHoles53(arr) || _iterableToArray53(arr) || _unsupportedIterableToArray78(arr) || _nonIterableSpread53();
    }
    function _nonIterableSpread53() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray78(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray78(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray78(o, minLen);
    }
    function _iterableToArray53(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles53(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray78(arr);
    }
    function _arrayLikeToArray78(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.makeValue = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    function makeValue2() {
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var regularValueCache = /* @__PURE__ */ new Map();
      var historicalValueCache = /* @__PURE__ */ new Map();
      var inputValues = options.itemValues ? _toConsumableArray53(options.itemValues.entries()).map(function(_ref) {
        var _ref2 = _slicedToArray36(_ref, 2), item10 = _ref2[0], val = _ref2[1];
        return [item10, function() {
          return (0, libram_1.undelay)(val);
        }];
      }) : [];
      var specialValueLookup = new Map([[(0, libram_1.$item)(_templateObject991 || (_templateObject991 = _taggedTemplateLiteral114(["Freddy Kruegerand"]))), currency.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject2206 || (_templateObject2206 = _taggedTemplateLiteral114(["bottle of Bloodweiser, electric Kool-Aid, Dreadsylvanian skeleton key"])))))], [(0, libram_1.$item)(_templateObject3186 || (_templateObject3186 = _taggedTemplateLiteral114(["Beach Buck"]))), currency((0, libram_1.$item)(_templateObject4165 || (_templateObject4165 = _taggedTemplateLiteral114(["one-day ticket to Spring Break Beach"]))))], [(0, libram_1.$item)(_templateObject5150 || (_templateObject5150 = _taggedTemplateLiteral114(["Coinspiracy"]))), currency.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral114(["Merc Core deployment orders, karma shawarma"])))))], [(0, libram_1.$item)(_templateObject7120 || (_templateObject7120 = _taggedTemplateLiteral114(["FunFunds\u2122"]))), currency((0, libram_1.$item)(_templateObject8103 || (_templateObject8103 = _taggedTemplateLiteral114(["one-day ticket to Dinseylandfill"]))))], [(0, libram_1.$item)(_templateObject998 || (_templateObject998 = _taggedTemplateLiteral114(["Volcoino"]))), currency((0, libram_1.$item)(_templateObject1078 || (_templateObject1078 = _taggedTemplateLiteral114(["one-day ticket to That 70s Volcano"]))))], [(0, libram_1.$item)(_templateObject1168 || (_templateObject1168 = _taggedTemplateLiteral114(["Wal-Mart gift certificate"]))), currency((0, libram_1.$item)(_templateObject1260 || (_templateObject1260 = _taggedTemplateLiteral114(["one-day ticket to The Glaciest"]))))], [(0, libram_1.$item)(_templateObject1357 || (_templateObject1357 = _taggedTemplateLiteral114(["Rubee\u2122"]))), currency((0, libram_1.$item)(_templateObject1450 || (_templateObject1450 = _taggedTemplateLiteral114(["FantasyRealm guest pass"]))))], [(0, libram_1.$item)(_templateObject1547 || (_templateObject1547 = _taggedTemplateLiteral114(["Guzzlrbuck"]))), currency((0, libram_1.$item)(_templateObject1646 || (_templateObject1646 = _taggedTemplateLiteral114(["Never Don't Stop Not Striving"]))))]].concat(_toConsumableArray53(complexCandy()), [[(0, libram_1.$item)(_templateObject1746 || (_templateObject1746 = _taggedTemplateLiteral114(["Merc Core deployment orders"]))), function() {
        return value((0, libram_1.$item)(_templateObject1845 || (_templateObject1845 = _taggedTemplateLiteral114(["one-day ticket to Conspiracy Island"]))));
      }], [(0, libram_1.$item)(_templateObject1945 || (_templateObject1945 = _taggedTemplateLiteral114(["free-range mushroom"]))), function() {
        return 3 * Math.max(value((0, libram_1.$item)(_templateObject2045 || (_templateObject2045 = _taggedTemplateLiteral114(["mushroom tea"])))) - value((0, libram_1.$item)(_templateObject21101 || (_templateObject21101 = _taggedTemplateLiteral114(["soda water"])))), value((0, libram_1.$item)(_templateObject2241 || (_templateObject2241 = _taggedTemplateLiteral114(["mushroom whiskey"])))) - value((0, libram_1.$item)(_templateObject2340 || (_templateObject2340 = _taggedTemplateLiteral114(["fermenting powder"])))), value((0, libram_1.$item)(_templateObject2438 || (_templateObject2438 = _taggedTemplateLiteral114(["mushroom filet"])))));
      }], [(0, libram_1.$item)(_templateObject2538 || (_templateObject2538 = _taggedTemplateLiteral114(["little firkin"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject2638 || (_templateObject2638 = _taggedTemplateLiteral114(["martini, screwdriver, strawberry daiquiri, margarita, vodka martini, tequila sunrise, bottle of Amontillado, barrel-aged martini, barrel gun"])))));
      }], [(0, libram_1.$item)(_templateObject2737 || (_templateObject2737 = _taggedTemplateLiteral114(["normal barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject2835 || (_templateObject2835 = _taggedTemplateLiteral114(["a little sump'm sump'm, pink pony, rockin' wagon, roll in the hay, slip 'n' slide, slap and tickle"])))));
      }], [(0, libram_1.$item)(_templateObject2931 || (_templateObject2931 = _taggedTemplateLiteral114(["big tun"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject3031 || (_templateObject3031 = _taggedTemplateLiteral114(["gibson, gin and tonic, mimosette, tequila sunset, vodka and tonic, zmobie"])))));
      }], [(0, libram_1.$item)(_templateObject3187 || (_templateObject3187 = _taggedTemplateLiteral114(["weathered barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject3234 || (_templateObject3234 = _taggedTemplateLiteral114(["bean burrito, enchanted bean burrito, jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3333 || (_templateObject3333 = _taggedTemplateLiteral114(["dusty barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject3429 || (_templateObject3429 = _taggedTemplateLiteral114(["spicy bean burrito, spicy enchanted bean burrito, spicy jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3529 || (_templateObject3529 = _taggedTemplateLiteral114(["disintegrating barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject3628 || (_templateObject3628 = _taggedTemplateLiteral114(["insanely spicy bean burrito, insanely spicy enchanted bean burrito, insanely spicy jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3727 || (_templateObject3727 = _taggedTemplateLiteral114(["moist barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject3827 || (_templateObject3827 = _taggedTemplateLiteral114(["cast, concentrated magicalness pill, enchanted barbell, giant moxie weed, Mountain Stream soda"])))));
      }], [(0, libram_1.$item)(_templateObject3926 || (_templateObject3926 = _taggedTemplateLiteral114(["rotting barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject4026 || (_templateObject4026 = _taggedTemplateLiteral114(["Doc Galaktik's Ailment Ointment, extra-strength strongness elixir, jug-o-magicalness, Marquis de Poivre soda, suntan lotion of moxiousness"])))));
      }], [(0, libram_1.$item)(_templateObject4166 || (_templateObject4166 = _taggedTemplateLiteral114(["mouldering barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject4226 || (_templateObject4226 = _taggedTemplateLiteral114(["creepy ginger ale, haunted battery, scroll of drastic healing, synthetic marrow, the funk"])))));
      }], [(0, libram_1.$item)(_templateObject4326 || (_templateObject4326 = _taggedTemplateLiteral114(["barnacled barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject4425 || (_templateObject4425 = _taggedTemplateLiteral114(["Alewife\u2122 Ale, bazookafish bubble gum, beefy fish meat, eel battery, glistening fish meat, ink bladder, pufferfish spine, shark cartilage, slick fish meat, slug of rum, slug of shochu, slug of vodka, temporary teardrop tattoo"])))));
      }], [(0, libram_1.$item)(_templateObject4525 || (_templateObject4525 = _taggedTemplateLiteral114(["psychoanalytic jar"]))), function() {
        return (
          // Exclude jick because he's rate-limited
          Math.max.apply(Math, _toConsumableArray53((0, libram_1.$items)(_templateObject4625 || (_templateObject4625 = _taggedTemplateLiteral114(["jar of psychoses (The Meatsmith), jar of psychoses (The Captain of the Gourd), jar of psychoses (The Crackpot Mystic), jar of psychoses (The Pretentious Artist), jar of psychoses (The Old Man), jar of psychoses (The Suspicious-Looking Guy)"]))).map(function(jar) {
            return value(jar);
          })))
        );
      }], [(0, libram_1.$item)(_templateObject4725 || (_templateObject4725 = _taggedTemplateLiteral114(["warbear whosit"]))), function() {
        return (0.35 * averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject4825 || (_templateObject4825 = _taggedTemplateLiteral114(["warbear auto-anvil, warbear chemistry lab, warbear high-efficiency still, warbear induction oven, warbear jackhammer drill press, warbear LP-ROM burner, warbear energy bracers, warbear exhaust manifold, warbear exo-arm, warbear foil hat, warbear laser beacon, warbear oil pan"]))))) + 0.65 * averageValue.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject4924 || (_templateObject4924 = _taggedTemplateLiteral114(["warbear metalworking primer, warbear beeping telegram, warbear gyrocopter, warbear procedural hilarity drone, warbear robo-camouflage unit, warbear sequential gaiety distribution system"])))))) / 100;
      }]], _toConsumableArray53((0, libram_1.$items)(_templateObject5022 || (_templateObject5022 = _taggedTemplateLiteral114(["worthless gewgaw, worthless knick-knack, worthless trinket"]))).map(function(i) {
        return [i, currency.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject5151 || (_templateObject5151 = _taggedTemplateLiteral114(["seal tooth, chisel, petrified noodles, jaba\xF1ero pepper, banjo strings, hot buttered roll, wooden figurine, ketchup, catsup, volleyball"])))).concat(_toConsumableArray53((0, kolmafia_1.myClass)() === (0, libram_1.$class)(_templateObject5224 || (_templateObject5224 = _taggedTemplateLiteral114(["Seal Clubber"]))) ? (0, libram_1.$items)(_templateObject5324 || (_templateObject5324 = _taggedTemplateLiteral114(["figurine of an ancient seal"]))) : [])))];
      })), [[(0, libram_1.$item)(_templateObject5424 || (_templateObject5424 = _taggedTemplateLiteral114(["Boris's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject5523 || (_templateObject5523 = _taggedTemplateLiteral114(["Boris's key lime"])))) - value((0, libram_1.$item)(_templateObject5622 || (_templateObject5622 = _taggedTemplateLiteral114(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject5721 || (_templateObject5721 = _taggedTemplateLiteral114(["Jarlsberg's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject5819 || (_templateObject5819 = _taggedTemplateLiteral114(["Jarlsberg's key lime"])))) - value((0, libram_1.$item)(_templateObject5919 || (_templateObject5919 = _taggedTemplateLiteral114(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject6018 || (_templateObject6018 = _taggedTemplateLiteral114(["Sneaky Pete's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject6139 || (_templateObject6139 = _taggedTemplateLiteral114(["Sneaky Pete's key lime"])))) - value((0, libram_1.$item)(_templateObject6223 || (_templateObject6223 = _taggedTemplateLiteral114(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject6321 || (_templateObject6321 = _taggedTemplateLiteral114(["fat loot token"]))), currency.apply(void 0, _toConsumableArray53((0, libram_1.$items)(_templateObject6421 || (_templateObject6421 = _taggedTemplateLiteral114(["Boris's key, Jarlsberg's key, Sneaky Pete's key, Boris's ring, Jarlsberg's earring, Sneaky Pete's breath spray, potato sprout, sewing kit, Spellbook: Singer's Faithful Ocelot, Spellbook: Drescher's Annoying Noise, Spellbook: Walberg's Dim Bulb, dried gelatinous cube"])))))]], _toConsumableArray53(inputValues)));
      var exclusions = /* @__PURE__ */ new Set([
        // For tradeable items which can be "consumed" infinitely
        (0, libram_1.$item)(_templateObject6518 || (_templateObject6518 = _taggedTemplateLiteral114(["ChibiBuddy\u2122 (off)"])))
      ]);
      function saleValue(item10, useHistorical) {
        if (useHistorical) {
          if ((0, kolmafia_1.historicalAge)(item10) <= 7 && (0, kolmafia_1.historicalPrice)(item10) > 0) {
            var isMallMin = (0, kolmafia_1.historicalPrice)(item10) === Math.max(100, 2 * (0, kolmafia_1.autosellPrice)(item10));
            return isMallMin ? (0, kolmafia_1.autosellPrice)(item10) : 0.9 * (0, kolmafia_1.historicalPrice)(item10);
          }
        }
        return (0, libram_1.getSaleValue)(item10);
      }
      function currency() {
        for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
          items[_key] = arguments[_key];
        }
        var unitCost = items.map(function(i) {
          var coinmaster = kolmafia_1.Coinmaster.all().find(function(c) {
            return (0, kolmafia_1.sellPrice)(c, i) > 0;
          });
          if (!coinmaster) {
            throw "Invalid coinmaster item ".concat(i);
          } else {
            return [i, (0, kolmafia_1.sellPrice)(coinmaster, i)];
          }
        });
        return function() {
          return Math.max.apply(Math, _toConsumableArray53(unitCost.map(function(_ref3) {
            var _ref4 = _slicedToArray36(_ref3, 2), item10 = _ref4[0], cost = _ref4[1];
            return value(item10) / cost;
          })));
        };
      }
      function complexCandy() {
        var candies = kolmafia_1.Item.all().filter(function(i) {
          return i.candyType === "complex";
        });
        var candyLookup = [[], [], [], [], []];
        var _iterator = _createForOfIteratorHelper40(candies), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var candy = _step.value;
            var id = (0, kolmafia_1.toInt)(candy) % 5;
            if (candy.tradeable) {
              candyLookup[id].push(candy);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        var candyIdPrices = candies.filter(function(i) {
          return !i.tradeable;
        }).map(function(i) {
          return [i, function() {
            return Math.min.apply(Math, _toConsumableArray53(candyLookup[(0, kolmafia_1.toInt)(i) % 5].map(function(i2) {
              return value(i2);
            })));
          }];
        });
        return candyIdPrices;
      }
      function value(inputItem) {
        var _regularValueCache$ge;
        var useHistorical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var _ref5 = inputItem instanceof kolmafia_1.Item ? {
          item: inputItem,
          quantity: 1
        } : inputItem, item10 = _ref5.item, quantity = _ref5.quantity;
        if (exclusions.has(item10))
          return 0;
        var cachedValue = (_regularValueCache$ge = regularValueCache.get(item10)) !== null && _regularValueCache$ge !== void 0 ? _regularValueCache$ge : useHistorical ? historicalValueCache.get(item10) : void 0;
        if (cachedValue === void 0) {
          var _specialValueCompute;
          var specialValueCompute = specialValueLookup.get(item10);
          var _value = (_specialValueCompute = specialValueCompute === null || specialValueCompute === void 0 ? void 0 : specialValueCompute()) !== null && _specialValueCompute !== void 0 ? _specialValueCompute : saleValue(item10, useHistorical);
          (useHistorical ? historicalValueCache : regularValueCache).set(item10, _value);
          return _value;
        }
        return quantity * cachedValue;
      }
      function averageValue() {
        for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          items[_key2] = arguments[_key2];
        }
        return (0, libram_1.sum)(items, value) / items.length;
      }
      return {
        averageValue: averageValue,
        value: value
      };
    }
    exports.makeValue = makeValue2;
  }
});

// ../garbo-lib/dist/wanderer/lib.js
var require_lib2 = __commonJS({
  "../garbo-lib/dist/wanderer/lib.js": function(exports) {
    "use strict";
    var _templateObject991;
    var _templateObject2206;
    var _templateObject3186;
    var _templateObject4165;
    var _templateObject5150;
    var _templateObject6138;
    var _templateObject7120;
    var _templateObject8103;
    var _templateObject998;
    var _templateObject1078;
    var _templateObject1168;
    var _templateObject1260;
    var _templateObject1357;
    var _templateObject1450;
    var _templateObject1547;
    var _templateObject1646;
    var _templateObject1746;
    var _templateObject1845;
    var _templateObject1945;
    var _templateObject2045;
    var _templateObject21101;
    var _templateObject2241;
    var _templateObject2340;
    var _templateObject2438;
    var _templateObject2538;
    var _templateObject2638;
    var _templateObject2737;
    function _defineProperties33(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey47(descriptor.key), descriptor);
      }
    }
    function _createClass33(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties33(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties33(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _classCallCheck33(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperty42(obj, key, value) {
      key = _toPropertyKey47(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey47(arg) {
      var key = _toPrimitive47(arg, "string");
      return typeof key === "symbol" ? key : String(key);
    }
    function _toPrimitive47(input, hint) {
      if (typeof input !== "object" || input === null)
        return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (typeof res !== "object")
          return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    function _toConsumableArray53(arr) {
      return _arrayWithoutHoles53(arr) || _iterableToArray53(arr) || _unsupportedIterableToArray78(arr) || _nonIterableSpread53();
    }
    function _nonIterableSpread53() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray78(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray78(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray78(o, minLen);
    }
    function _iterableToArray53(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles53(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray78(arr);
    }
    function _arrayLikeToArray78(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _taggedTemplateLiteral114(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.bofaValue = exports.wandererTurnsAvailableToday = exports.defaultFactory = exports.WandererTarget = exports.canWander = exports.unlock = exports.canAdventureOrUnlock = exports.underwater = exports.UnlockableZones = exports.isDraggableFight = exports.draggableFights = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    exports.draggableFights = ["backup", "wanderer", "yellow ray", "freefight"];
    function isDraggableFight(fight) {
      return exports.draggableFights.includes(fight);
    }
    exports.isDraggableFight = isDraggableFight;
    exports.UnlockableZones = [{
      zone: "Spaaace",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject991 || (_templateObject991 = _taggedTemplateLiteral114(["Transpondent"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject2206 || (_templateObject2206 = _taggedTemplateLiteral114(["transporter transponder"]))),
      noInv: false
    }, {
      zone: "Wormwood",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject3186 || (_templateObject3186 = _taggedTemplateLiteral114(["Absinthe-Minded"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject4165 || (_templateObject4165 = _taggedTemplateLiteral114(["tiny bottle of absinthe"]))),
      noInv: false
    }, {
      zone: "Rabbit Hole",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject5150 || (_templateObject5150 = _taggedTemplateLiteral114(["Down the Rabbit Hole"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral114(['"DRINK ME" potion']))),
      noInv: false
    }, {
      zone: "Conspiracy Island",
      available: function() {
        return (0, libram_1.realmAvailable)("spooky");
      },
      unlocker: (0, libram_1.$item)(_templateObject7120 || (_templateObject7120 = _taggedTemplateLiteral114(["one-day ticket to Conspiracy Island"]))),
      noInv: true
    }, {
      zone: "Dinseylandfill",
      available: function() {
        return (0, libram_1.realmAvailable)("stench");
      },
      unlocker: (0, libram_1.$item)(_templateObject8103 || (_templateObject8103 = _taggedTemplateLiteral114(["one-day ticket to Dinseylandfill"]))),
      noInv: true
    }, {
      zone: "The Glaciest",
      available: function() {
        return (0, libram_1.realmAvailable)("cold");
      },
      unlocker: (0, libram_1.$item)(_templateObject998 || (_templateObject998 = _taggedTemplateLiteral114(["one-day ticket to The Glaciest"]))),
      noInv: true
    }, {
      zone: "Spring Break Beach",
      available: function() {
        return (0, libram_1.realmAvailable)("sleaze");
      },
      unlocker: (0, libram_1.$item)(_templateObject1078 || (_templateObject1078 = _taggedTemplateLiteral114(["one-day ticket to Spring Break Beach"]))),
      noInv: true
    }];
    function underwater(location) {
      return location.environment === "underwater";
    }
    exports.underwater = underwater;
    var ILLEGAL_PARENTS = ["Clan Basement", "Psychoses", "PirateRealm"];
    var ILLEGAL_ZONES = ["The Drip"];
    var canAdventureOrUnlockSkipList = [].concat(_toConsumableArray53((0, libram_1.$locations)(_templateObject1168 || (_templateObject1168 = _taggedTemplateLiteral114(["The Oasis, The Bubblin' Caldera, Barrrney's Barrr, The F'c'le, The Poop Deck, Belowdecks, Madness Bakery, The Secret Government Laboratory, The Dire Warren, Inside the Palindome, The Haiku Dungeon, An Incredibly Strange Place (Bad Trip), An Incredibly Strange Place (Mediocre Trip), An Incredibly Strange Place (Great Trip), El Vibrato Island, The Daily Dungeon, Trick-or-Treating, Seaside Megalopolis"])))), _toConsumableArray53(kolmafia_1.Location.all().filter(function(_ref) {
      var parent = _ref.parent, zone = _ref.zone;
      return ILLEGAL_PARENTS.includes(parent) || ILLEGAL_ZONES.includes(zone);
    })));
    function canAdventureOrUnlock(loc) {
      var skiplist = _toConsumableArray53(canAdventureOrUnlockSkipList);
      if (!(0, libram_1.have)((0, libram_1.$item)(_templateObject1260 || (_templateObject1260 = _taggedTemplateLiteral114(["repaid diaper"])))) && (0, libram_1.have)((0, libram_1.$item)(_templateObject1357 || (_templateObject1357 = _taggedTemplateLiteral114(["Great Wolf's beastly trousers"]))))) {
        skiplist.push((0, libram_1.$location)(_templateObject1450 || (_templateObject1450 = _taggedTemplateLiteral114(["The Icy Peak"]))));
      }
      var canUnlock = exports.UnlockableZones.some(function(z) {
        return loc.zone === z.zone && (z.available() || !z.noInv);
      });
      return !underwater(loc) && !skiplist.includes(loc) && ((0, kolmafia_1.canAdventure)(loc) || canUnlock);
    }
    exports.canAdventureOrUnlock = canAdventureOrUnlock;
    function unlock(loc, value) {
      var unlockableZone = exports.UnlockableZones.find(function(z) {
        return z.zone === loc.zone;
      });
      if (!unlockableZone)
        return (0, kolmafia_1.canAdventure)(loc);
      if (unlockableZone.available())
        return true;
      if ((0, kolmafia_1.buy)(1, unlockableZone.unlocker, value) === 0)
        return false;
      return (0, kolmafia_1.use)(unlockableZone.unlocker);
    }
    exports.unlock = unlock;
    var backupSkiplist = (0, libram_1.$locations)(_templateObject1547 || (_templateObject1547 = _taggedTemplateLiteral114(["The Overgrown Lot, The Skeleton Store, The Mansion of Dr. Weirdeaux, Professor Jacking's Huge-A-Ma-tron"])));
    var backupSafelist = (0, libram_1.$locations)(_templateObject1646 || (_templateObject1646 = _taggedTemplateLiteral114(["The Haunted Gallery, The Haunted Ballroom, The Haunted Library, The Penultimate Fantasy Airship, Cobb's Knob Barracks, The Castle in the Clouds in the Sky (Basement), The Castle in the Clouds in the Sky (Ground Floor), The Castle in the Clouds in the Sky (Top Floor), The Haiku Dungeon, Twin Peak, A Mob of Zeppelin Protesters, The Upper Chamber"])));
    var yellowRaySafelist = (0, libram_1.$locations)(_templateObject1746 || (_templateObject1746 = _taggedTemplateLiteral114(["The Haunted Gallery, The Haunted Ballroom, The Haunted Library, Cobb's Knob Barracks, The Castle in the Clouds in the Sky (Basement), The Castle in the Clouds in the Sky (Ground Floor), The Haiku Dungeon, Twin Peak, A Mob of Zeppelin Protesters, The Upper Chamber"])));
    function canWanderTypeBackup(location) {
      return !backupSkiplist.includes(location) && (location.combatPercent >= 100 || backupSafelist.includes(location));
    }
    function canWanderTypeFreeFight(location) {
      if (location === (0, libram_1.$location)(_templateObject1845 || (_templateObject1845 = _taggedTemplateLiteral114(["The Fun-Guy Mansion"]))) && (0, libram_1.get)("funGuyMansionKills", 0) >= 100) {
        return false;
      }
      return !backupSkiplist.includes(location) && (location.combatPercent >= 100 || yellowRaySafelist.includes(location));
    }
    var wandererSkiplist = (0, libram_1.$locations)(_templateObject1945 || (_templateObject1945 = _taggedTemplateLiteral114(["The Batrat and Ratbat Burrow, Guano Junction, The Beanbat Chamber, A-Boo Peak, The Mouldering Mansion, The Rogue Windmill, The Stately Pleasure Dome"])));
    function canWanderTypeWander(location) {
      return !wandererSkiplist.includes(location) && location.wanderers;
    }
    function canWander(location, type) {
      if (underwater(location))
        return false;
      switch (type) {
        case "backup":
          return canWanderTypeBackup(location);
        case "freefight":
        case "yellow ray":
          return canWanderTypeFreeFight(location);
        case "wanderer":
          return canWanderTypeWander(location);
      }
    }
    exports.canWander = canWander;
    var WandererTarget = /* @__PURE__ */ _createClass33(
      /**
       * Process for determining where to put a wanderer to extract additional value from it
       * @param name name of this wanderer - for documentation/logging purposes
       * @param location returns the location to adventure to target this; null only if something goes wrong
       * @param value the expected additional value of putting a single wanderer-fight into the zone for this
       * @param prepareTurn attempt to set up, spending meat and or items as necessary
       */
      function WandererTarget2(name, location, value) {
        var prepareTurn = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : function() {
          return true;
        };
        _classCallCheck33(this, WandererTarget2);
        _defineProperty42(this, "name", void 0);
        _defineProperty42(this, "value", void 0);
        _defineProperty42(this, "location", void 0);
        _defineProperty42(this, "prepareTurn", void 0);
        this.name = name;
        this.value = value;
        this.location = location;
        this.prepareTurn = prepareTurn;
      }
    );
    exports.WandererTarget = WandererTarget;
    function defaultFactory() {
      return [new WandererTarget("Default", (0, libram_1.$location)(_templateObject2045 || (_templateObject2045 = _taggedTemplateLiteral114(["The Haunted Kitchen"]))), 0)];
    }
    exports.defaultFactory = defaultFactory;
    var WanderingSources = [{
      name: "CMG",
      item: (0, libram_1.$item)(_templateObject21101 || (_templateObject21101 = _taggedTemplateLiteral114(["cursed magnifying glass"]))),
      max: 3,
      property: "_voidFreeFights",
      type: "wanderer"
    }, {
      name: "Voter",
      item: (0, libram_1.$item)(_templateObject2241 || (_templateObject2241 = _taggedTemplateLiteral114(['"I Voted!" sticker']))),
      max: 3,
      property: "_voteFreeFights",
      type: "wanderer"
    }, {
      name: "Voter",
      item: (0, libram_1.$item)(_templateObject2340 || (_templateObject2340 = _taggedTemplateLiteral114(['"I Voted!" sticker']))),
      max: 3,
      property: "_voteFreeFights",
      type: "wanderer"
    }, {
      name: "Backup",
      item: (0, libram_1.$item)(_templateObject2438 || (_templateObject2438 = _taggedTemplateLiteral114(["backup camera"]))),
      max: 11,
      property: "_backUpUses",
      type: "backup"
    }];
    function wandererTurnsAvailableToday(options, location) {
      var canWanderCache = {
        backup: canWander(location, "backup"),
        wanderer: canWander(location, "wanderer"),
        "yellow ray": canWander(location, "yellow ray"),
        freefight: canWander(location, "freefight")
      };
      var digitize = canWanderCache["backup"] && options.digitzesRemaining ? options.digitzesRemaining(options.estimatedTurns()) : 0;
      var pigSkinnerRay = canWanderCache["backup"] && (0, libram_1.have)((0, libram_1.$skill)(_templateObject2538 || (_templateObject2538 = _taggedTemplateLiteral114(["Free-For-All"])))) ? Math.floor(options.estimatedTurns() / 25) : 0;
      var yellowRayCooldown = (0, libram_1.have)((0, libram_1.$skill)(_templateObject2638 || (_templateObject2638 = _taggedTemplateLiteral114(["Fondeluge"])))) ? 50 : 100;
      var yellowRay = canWanderCache["yellow ray"] ? Math.floor(options.estimatedTurns() / yellowRayCooldown) : 0;
      var wanderers2 = (0, libram_1.sum)(WanderingSources, function(source) {
        return canWanderCache[source.type] && (0, libram_1.have)(source.item) ? (0, libram_1.clamp)((0, libram_1.get)(source.property), 0, source.max) : 0;
      });
      return digitize + pigSkinnerRay + yellowRay + wanderers2;
    }
    exports.wandererTurnsAvailableToday = wandererTurnsAvailableToday;
    var LIMITED_BOFA_DROPS = (0, libram_1.$items)(_templateObject2737 || (_templateObject2737 = _taggedTemplateLiteral114(["pocket wish, tattered scrap of paper"])));
    function bofaValue(_ref2, monster) {
      var plentifulMonsters = _ref2.plentifulMonsters, itemValue = _ref2.itemValue, effectValue = _ref2.effectValue;
      switch (monster.factType) {
        case "item": {
          var item10 = (0, kolmafia_1.itemFact)(monster);
          var quantity = (0, kolmafia_1.numericFact)(monster);
          if (LIMITED_BOFA_DROPS.includes(item10) && plentifulMonsters.some(function(monster2) {
            return (0, kolmafia_1.toItem)(monster2.fact) === item10;
          })) {
            return 0;
          }
          return quantity * itemValue(item10);
        }
        case "effect": {
          var effect2 = (0, kolmafia_1.effectFact)(monster);
          var duration = (0, kolmafia_1.numericFact)(monster);
          return effectValue(effect2, duration);
        }
        case "meat": {
          return (0, kolmafia_1.numericFact)(monster);
        }
        default:
          return 0;
      }
    }
    exports.bofaValue = bofaValue;
  }
});

// ../garbo-lib/dist/wanderer/guzzlr.js
var require_guzzlr = __commonJS({
  "../garbo-lib/dist/wanderer/guzzlr.js": function(exports) {
    "use strict";
    var _templateObject991;
    function _taggedTemplateLiteral114(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.guzzlrFactory = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    function considerAbandon(options, locationSkiplist) {
      var location = libram_1.Guzzlr.getLocation();
      var remaningTurns = Math.ceil((100 - (0, libram_1.get)("guzzlrDeliveryProgress")) / (10 - (0, libram_1.get)("_guzzlrDeliveries")));
      (0, kolmafia_1.print)("Got guzzlr quest ".concat(libram_1.Guzzlr.getTier(), " at ").concat(libram_1.Guzzlr.getLocation(), " with remaining turns ").concat(remaningTurns));
      if (libram_1.Guzzlr.canAbandon() && // consider abandoning
      (!location || // if mafia failed to track the location correctly
      locationSkiplist.includes(location) || !(0, lib_1.canAdventureOrUnlock)(location) || // or the zone is marked as "generally cannot adv"
      options.ascend && (0, lib_1.wandererTurnsAvailableToday)(options, location) < remaningTurns)) {
        (0, kolmafia_1.print)("Abandoning...");
        libram_1.Guzzlr.abandon();
      }
    }
    function acceptGuzzlrQuest(options, locationSkiplist) {
      if (libram_1.Guzzlr.isQuestActive())
        considerAbandon(options, locationSkiplist);
      while (!libram_1.Guzzlr.isQuestActive()) {
        (0, kolmafia_1.print)("Picking a guzzlr quest");
        if (libram_1.Guzzlr.canPlatinum() && !(options.prioritizeCappingGuzzlr && libram_1.Guzzlr.haveFullPlatinumBonus())) {
          libram_1.Guzzlr.acceptPlatinum();
        } else if (libram_1.Guzzlr.canGold() && (libram_1.Guzzlr.haveFullBronzeBonus() || !libram_1.Guzzlr.haveFullGoldBonus())) {
          libram_1.Guzzlr.acceptGold();
        } else {
          libram_1.Guzzlr.acceptBronze();
        }
        considerAbandon(options, locationSkiplist);
      }
    }
    function guzzlrValue(buckValue, tier) {
      var progressPerTurn = 100 / (10 - (0, libram_1.get)("_guzzlrDeliveries"));
      switch (tier) {
        case null:
          return 0;
        case "bronze":
          return 3 * buckValue / progressPerTurn;
        case "gold":
          return 6 * buckValue / progressPerTurn;
        case "platinum":
          return 21.5 * buckValue / progressPerTurn;
      }
    }
    function guzzlrFactory(_type, locationSkiplist, options) {
      if (libram_1.Guzzlr.have()) {
        var buckValue = options.itemValue((0, libram_1.$item)(_templateObject991 || (_templateObject991 = _taggedTemplateLiteral114(["Guzzlrbuck"]))));
        acceptGuzzlrQuest(options, locationSkiplist);
        var location = libram_1.Guzzlr.getLocation();
        if (location !== null) {
          var guzzlrBooze = libram_1.Guzzlr.getTier() === "platinum" ? libram_1.Guzzlr.getCheapestPlatinumCocktail() : libram_1.Guzzlr.getBooze();
          return guzzlrBooze ? [new lib_1.WandererTarget("Guzzlr", location, guzzlrValue(buckValue, libram_1.Guzzlr.getTier()) - (0, kolmafia_1.mallPrice)(guzzlrBooze), function() {
            if (!guzzlrBooze) {
              return false;
            }
            if (!(0, libram_1.have)(guzzlrBooze)) {
              var fancy = guzzlrBooze && (0, kolmafia_1.craftType)(guzzlrBooze).includes("fancy");
              if (guzzlrBooze && (!fancy || fancy && (0, libram_1.freeCrafts)("booze") > 0)) {
                (0, kolmafia_1.retrieveItem)(guzzlrBooze);
              } else if (guzzlrBooze) {
                (0, kolmafia_1.buy)(1, guzzlrBooze, guzzlrValue(buckValue, libram_1.Guzzlr.getTier()));
              }
            }
            return (0, libram_1.have)(guzzlrBooze);
          })] : [];
        }
      }
      return [];
    }
    exports.guzzlrFactory = guzzlrFactory;
  }
});

// ../garbo-lib/dist/wanderer/lovebugs.js
var require_lovebugs = __commonJS({
  "../garbo-lib/dist/wanderer/lovebugs.js": function(exports) {
    "use strict";
    var _templateObject991;
    var _templateObject2206;
    var _templateObject3186;
    var _templateObject4165;
    var _templateObject5150;
    var _templateObject6138;
    function _taggedTemplateLiteral114(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.lovebugsFactory = void 0;
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    var LovebugTargets = [
      // exclude barf mountain because we spend most of our turns there anyway
      {
        element: "cold",
        location: (0, libram_1.$location)(_templateObject991 || (_templateObject991 = _taggedTemplateLiteral114(["VYKEA"]))),
        currency: (0, libram_1.$item)(_templateObject2206 || (_templateObject2206 = _taggedTemplateLiteral114(["Wal-Mart gift certificate"])))
      },
      {
        element: "sleaze",
        location: (0, libram_1.$location)(_templateObject3186 || (_templateObject3186 = _taggedTemplateLiteral114(["The Fun-Guy Mansion"]))),
        currency: (0, libram_1.$item)(_templateObject4165 || (_templateObject4165 = _taggedTemplateLiteral114(["Beach Buck"])))
      },
      {
        element: "spooky",
        location: (0, libram_1.$location)(_templateObject5150 || (_templateObject5150 = _taggedTemplateLiteral114(["The Deep Dark Jungle"]))),
        currency: (0, libram_1.$item)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral114(["Coinspiracy"])))
      }
    ];
    function lovebugsFactory(_type, _locationSkiplist, options) {
      if ((0, libram_1.get)("lovebugsUnlocked")) {
        return LovebugTargets.filter(function(t) {
          return (0, libram_1.realmAvailable)(t.element);
        }).map(function(t) {
          return new lib_1.WandererTarget("Lovebugs ".concat(t.location), t.location, options.itemValue(t.currency) * 0.05);
        });
      }
      return [];
    }
    exports.lovebugsFactory = lovebugsFactory;
  }
});

// ../garbo-lib/dist/wanderer/freefight.js
var require_freefight = __commonJS({
  "../garbo-lib/dist/wanderer/freefight.js": function(exports) {
    "use strict";
    function _toConsumableArray53(arr) {
      return _arrayWithoutHoles53(arr) || _iterableToArray53(arr) || _unsupportedIterableToArray78(arr) || _nonIterableSpread53();
    }
    function _nonIterableSpread53() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray53(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles53(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray78(arr);
    }
    function _createForOfIteratorHelper40(o, allowArrayLike) {
      var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray78(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it)
            o = it;
          var i = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i >= o.length)
              return { done: true };
            return { done: false, value: o[i++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = true, didErr = false, err;
      return { s: function s() {
        it = it.call(o);
      }, n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f() {
        try {
          if (!normalCompletion && it.return != null)
            it.return();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _unsupportedIterableToArray78(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray78(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray78(o, minLen);
    }
    function _arrayLikeToArray78(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.freefightFactory = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var lib_1 = require_lib2();
    function averageYrValue(location, forceItemDrops, options) {
      var badAttributes2 = ["LUCKY", "ULTRARARE", "BOSS"];
      var rates = (0, kolmafia_1.appearanceRates)(location);
      var monsters = (0, kolmafia_1.getMonsters)(location).filter(function(m) {
        return !badAttributes2.some(function(s) {
          return m.attributes.includes(s);
        }) && rates[m.name] > 0;
      });
      var canDuplicate2 = libram_1.SourceTerminal.have() && libram_1.SourceTerminal.duplicateUsesRemaining() > 0;
      if (monsters.length === 0) {
        return 0;
      } else {
        return (0, libram_1.sum)(monsters, function(m) {
          var items = (0, kolmafia_1.itemDropsArray)(m).filter(function(drop) {
            return ["", "n"].includes(drop.type);
          });
          var duplicateFactor = canDuplicate2 && !m.attributes.includes("NOCOPY") ? 2 : 1;
          var meatDrop = (0, libram_1.clamp)((m.minMeat + m.maxMeat) / 2, 0, 1e3);
          var itemDrop = duplicateFactor * (0, libram_1.sum)(items, function(drop) {
            var yrRate = (drop.type === "" && forceItemDrops ? 100 : drop.rate) / 100;
            return yrRate * options.itemValue(drop.drop);
          });
          return itemDrop + meatDrop + (0, lib_1.bofaValue)(options, m);
        }) / monsters.length;
      }
    }
    function monsterValues(forceItemDrops, options) {
      var values = /* @__PURE__ */ new Map();
      var _iterator = _createForOfIteratorHelper40(kolmafia_1.Location.all().filter(function(l) {
        return (0, lib_1.canAdventureOrUnlock)(l) && !(0, lib_1.underwater)(l);
      })), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var location = _step.value;
          values.set(location, averageYrValue(location, forceItemDrops, options) + options.freeFightExtraValue(location));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return values;
    }
    function freefightFactory(type, locationSkiplist, options) {
      if (type === "yellow ray" || type === "freefight") {
        var validLocations = kolmafia_1.Location.all().filter(function(location) {
          return (0, lib_1.canWander)(location, "yellow ray") && (0, lib_1.canAdventureOrUnlock)(location);
        });
        var locationValues = monsterValues(type === "yellow ray", options);
        var bestZones = /* @__PURE__ */ new Set([(0, libram_1.maxBy)(validLocations, function(l) {
          var _locationValues$get;
          return (_locationValues$get = locationValues.get(l)) !== null && _locationValues$get !== void 0 ? _locationValues$get : 0;
        })]);
        var _iterator2 = _createForOfIteratorHelper40(lib_1.UnlockableZones), _step2;
        try {
          var _loop = function _loop2() {
            var unlockableZone = _step2.value;
            var extraLocations = kolmafia_1.Location.all().filter(function(l) {
              return l.zone === unlockableZone.zone && !locationSkiplist.includes(l);
            });
            bestZones.add((0, libram_1.maxBy)(extraLocations, function(l) {
              var _locationValues$get3;
              return (_locationValues$get3 = locationValues.get(l)) !== null && _locationValues$get3 !== void 0 ? _locationValues$get3 : 0;
            }));
          };
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            _loop();
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        if (bestZones.size > 0) {
          return _toConsumableArray53(bestZones).map(function(l) {
            var _locationValues$get2;
            return new lib_1.WandererTarget("Yellow Ray ".concat(l), l, (_locationValues$get2 = locationValues.get(l)) !== null && _locationValues$get2 !== void 0 ? _locationValues$get2 : 0);
          });
        }
      }
      return [];
    }
    exports.freefightFactory = freefightFactory;
  }
});

// ../garbo-lib/dist/wanderer/eightbit.js
var require_eightbit = __commonJS({
  "../garbo-lib/dist/wanderer/eightbit.js": function(exports) {
    "use strict";
    var _templateObject991;
    var _templateObject2206;
    var _templateObject3186;
    var _templateObject4165;
    var _templateObject5150;
    var _templateObject6138;
    function _taggedTemplateLiteral114(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.eightbitFactory = exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST = exports.bonusColor = void 0;
    var kolmafia_1 = require("kolmafia");
    var lib_1 = require_lib2();
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    exports.bonusColor = ["black", "blue", "green", "red"];
    exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST = 2e4;
    var locationColor = {
      black: (0, libram_1.$location)(_templateObject991 || (_templateObject991 = _taggedTemplateLiteral114(["Vanya's Castle"]))),
      blue: (0, libram_1.$location)(_templateObject2206 || (_templateObject2206 = _taggedTemplateLiteral114(["Megalo-City"]))),
      green: (0, libram_1.$location)(_templateObject3186 || (_templateObject3186 = _taggedTemplateLiteral114(["Hero's Field"]))),
      red: (0, libram_1.$location)(_templateObject4165 || (_templateObject4165 = _taggedTemplateLiteral114(["The Fungus Plains"])))
    };
    function value(color, options) {
      var denominator = options.ascend ? (0, libram_1.get)("8BitScore") - exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST : exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST;
      return options.itemValue((0, libram_1.$item)(_templateObject5150 || (_templateObject5150 = _taggedTemplateLiteral114(["fat loot token"])))) * (0, kolmafia_1.eightBitPoints)(locationColor[color]) / denominator;
    }
    function eightbitFactory(type, locationSkiplist, options) {
      if ((0, libram_1.have)((0, libram_1.$item)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral114(["continuum transfunctioner"])))) && type !== "backup" && (0, libram_1.get)("8BitScore") < exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST) {
        return exports.bonusColor.map(function(color) {
          return new lib_1.WandererTarget("8-bit (".concat(color, ")"), locationColor[color], value(color, options));
        }).filter(function(t) {
          return !locationSkiplist.includes(t.location);
        });
      }
      return [];
    }
    exports.eightbitFactory = eightbitFactory;
  }
});

// ../garbo-lib/dist/wanderer/index.js
var require_wanderer = __commonJS({
  "../garbo-lib/dist/wanderer/index.js": function(exports) {
    "use strict";
    var _templateObject991;
    var _templateObject2206;
    var _templateObject3186;
    var _templateObject4165;
    var _templateObject5150;
    var _templateObject6138;
    var _templateObject7120;
    var _templateObject8103;
    var _templateObject998;
    var _templateObject1078;
    var _templateObject1168;
    var _templateObject1260;
    var _templateObject1357;
    var _templateObject1450;
    var _templateObject1547;
    var _templateObject1646;
    var _templateObject1746;
    var _templateObject1845;
    var _templateObject1945;
    var _templateObject2045;
    var _templateObject21101;
    var _templateObject2241;
    var _templateObject2340;
    var _templateObject2438;
    var _templateObject2538;
    var _templateObject2638;
    var _templateObject2737;
    var _templateObject2835;
    var _templateObject2931;
    var _templateObject3031;
    var _templateObject3187;
    function ownKeys21(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread21(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys21(Object(t), true).forEach(function(r2) {
          _defineProperty42(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys21(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck33(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties33(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey47(descriptor.key), descriptor);
      }
    }
    function _createClass33(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties33(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties33(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _defineProperty42(obj, key, value) {
      key = _toPropertyKey47(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey47(arg) {
      var key = _toPrimitive47(arg, "string");
      return typeof key === "symbol" ? key : String(key);
    }
    function _toPrimitive47(input, hint) {
      if (typeof input !== "object" || input === null)
        return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (typeof res !== "object")
          return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    function _toConsumableArray53(arr) {
      return _arrayWithoutHoles53(arr) || _iterableToArray53(arr) || _unsupportedIterableToArray78(arr) || _nonIterableSpread53();
    }
    function _nonIterableSpread53() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray53(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles53(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray78(arr);
    }
    function _createForOfIteratorHelper40(o, allowArrayLike) {
      var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray78(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it)
            o = it;
          var i = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i >= o.length)
              return { done: true };
            return { done: false, value: o[i++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = true, didErr = false, err;
      return { s: function s() {
        it = it.call(o);
      }, n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f() {
        try {
          if (!normalCompletion && it.return != null)
            it.return();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _unsupportedIterableToArray78(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray78(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray78(o, minLen);
    }
    function _arrayLikeToArray78(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _taggedTemplateLiteral114(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.WandererManager = void 0;
    var kolmafia_1 = require("kolmafia");
    var libram_1 = (init_dist(), __toCommonJS(dist_exports));
    var guzzlr_1 = require_guzzlr();
    var lib_1 = require_lib2();
    var lovebugs_1 = require_lovebugs();
    var freefight_1 = require_freefight();
    var eightbit_1 = require_eightbit();
    function sober2() {
      return (0, kolmafia_1.myInebriety)() <= (0, kolmafia_1.inebrietyLimit)() + ((0, kolmafia_1.myFamiliar)() === (0, libram_1.$familiar)(_templateObject991 || (_templateObject991 = _taggedTemplateLiteral114(["Stooper"]))) ? -1 : 0);
    }
    var wanderFactories = [lib_1.defaultFactory, freefight_1.freefightFactory, lovebugs_1.lovebugsFactory, guzzlr_1.guzzlrFactory, eightbit_1.eightbitFactory];
    function bestWander(type, locationSkiplist, nameSkiplist, options) {
      var possibleLocations = /* @__PURE__ */ new Map();
      for (var _i = 0, _wanderFactories = wanderFactories; _i < _wanderFactories.length; _i++) {
        var wanderFactory = _wanderFactories[_i];
        var wanderTargets = wanderFactory(type, locationSkiplist, options);
        var _iterator = _createForOfIteratorHelper40(wanderTargets), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var wanderTarget = _step.value;
            if (!nameSkiplist.includes(wanderTarget.name) && !locationSkiplist.includes(wanderTarget.location) && (0, lib_1.canWander)(wanderTarget.location, type)) {
              var _possibleLocations$ge;
              var wandererLocation = (_possibleLocations$ge = possibleLocations.get(wanderTarget.location)) !== null && _possibleLocations$ge !== void 0 ? _possibleLocations$ge : {
                location: wanderTarget.location,
                targets: [],
                value: 0
              };
              wandererLocation.targets = [].concat(_toConsumableArray53(wandererLocation.targets), [wanderTarget]);
              wandererLocation.value += wanderTarget.value;
              possibleLocations.set(wandererLocation.location, wandererLocation);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      if (possibleLocations.size === 0) {
        throw "Could not determine a wander target!";
      }
      return (0, libram_1.maxBy)(_toConsumableArray53(possibleLocations.values()), "value");
    }
    function wanderWhere(options, type) {
      var nameSkiplist = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      var locationSkiplist = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
      var candidate = bestWander(type, locationSkiplist, nameSkiplist, options);
      var failed = candidate.targets.filter(function(target) {
        return !target.prepareTurn();
      });
      var badLocation = !(0, lib_1.canAdventureOrUnlock)(candidate.location) || !(0, lib_1.unlock)(candidate.location, candidate.value) || !(0, lib_1.canWander)(candidate.location, type) ? [candidate.location] : [];
      if (failed.length > 0 || badLocation.length > 0) {
        return wanderWhere(options, type, [].concat(_toConsumableArray53(nameSkiplist), _toConsumableArray53(failed.map(function(target) {
          return target.name;
        }))), [].concat(_toConsumableArray53(locationSkiplist), badLocation));
      } else {
        var targets = candidate.targets.map(function(t) {
          return t.name;
        }).join("; ");
        var value = candidate.value.toFixed(2);
        (0, kolmafia_1.print)("Wandering at ".concat(candidate.location, " for expected value ").concat(value, " (").concat(targets, ")"), (0, kolmafia_1.isDarkMode)() ? "yellow" : "blue");
        return candidate.location;
      }
    }
    var defaultWanderOptions = {
      drunkSafe: true,
      allowEquipment: true
    };
    var WandererManager2 = /* @__PURE__ */ function() {
      function WandererManager3(options) {
        _classCallCheck33(this, WandererManager3);
        _defineProperty42(this, "quartetChoice", (0, libram_1.get)("lastQuartetRequest") || 4);
        _defineProperty42(this, "unsupportedChoices", /* @__PURE__ */ new Map([
          [(0, libram_1.$location)(_templateObject2206 || (_templateObject2206 = _taggedTemplateLiteral114(["The Spooky Forest"]))), {
            502: 2,
            505: 2
          }],
          [(0, libram_1.$location)(_templateObject3186 || (_templateObject3186 = _taggedTemplateLiteral114(["Guano Junction"]))), {
            1427: 1
          }],
          [(0, libram_1.$location)(_templateObject4165 || (_templateObject4165 = _taggedTemplateLiteral114(["The Hidden Apartment Building"]))), {
            780: 6,
            1578: 6
          }],
          [(0, libram_1.$location)(_templateObject5150 || (_templateObject5150 = _taggedTemplateLiteral114(["The Black Forest"]))), {
            923: 1,
            924: 1
          }],
          [(0, libram_1.$location)(_templateObject6138 || (_templateObject6138 = _taggedTemplateLiteral114(["LavaCo\u2122 Lamp Factory"]))), {
            1091: 9
          }],
          [(0, libram_1.$location)(_templateObject7120 || (_templateObject7120 = _taggedTemplateLiteral114(["The Haunted Laboratory"]))), {
            884: 6
          }],
          [(0, libram_1.$location)(_templateObject8103 || (_templateObject8103 = _taggedTemplateLiteral114(["The Haunted Nursery"]))), {
            885: 6
          }],
          [(0, libram_1.$location)(_templateObject998 || (_templateObject998 = _taggedTemplateLiteral114(["The Haunted Storage Room"]))), {
            886: 6
          }],
          [(0, libram_1.$location)(_templateObject1078 || (_templateObject1078 = _taggedTemplateLiteral114(["The Haunted Ballroom"]))), {
            106: 3,
            90: this.quartetChoice
          }],
          [(0, libram_1.$location)(_templateObject1168 || (_templateObject1168 = _taggedTemplateLiteral114(["The Haunted Library"]))), {
            163: 4,
            888: 4,
            889: 5
          }],
          [(0, libram_1.$location)(_templateObject1260 || (_templateObject1260 = _taggedTemplateLiteral114(["The Haunted Gallery"]))), {
            89: 6,
            91: 2
          }],
          [(0, libram_1.$location)(_templateObject1357 || (_templateObject1357 = _taggedTemplateLiteral114(["The Hidden Park"]))), {
            789: 6
          }],
          [(0, libram_1.$location)(_templateObject1450 || (_templateObject1450 = _taggedTemplateLiteral114(["A Mob of Zeppelin Protesters"]))), {
            1432: 1,
            856: 2,
            857: 2,
            858: 2
          }],
          [(0, libram_1.$location)(_templateObject1547 || (_templateObject1547 = _taggedTemplateLiteral114(["A-Boo Peak"]))), {
            1430: 2
          }],
          [(0, libram_1.$location)(_templateObject1646 || (_templateObject1646 = _taggedTemplateLiteral114(["Sloppy Seconds Diner"]))), {
            919: 6
          }],
          [(0, libram_1.$location)(_templateObject1746 || (_templateObject1746 = _taggedTemplateLiteral114(["VYKEA"]))), {
            1115: 6
          }],
          [(0, libram_1.$location)(_templateObject1845 || (_templateObject1845 = _taggedTemplateLiteral114(["The Castle in the Clouds in the Sky (Basement)"]))), {
            669: 1,
            670: 4,
            671: 4
          }],
          [(0, libram_1.$location)(_templateObject1945 || (_templateObject1945 = _taggedTemplateLiteral114(["The Haunted Bedroom"]))), {
            876: 1,
            877: 1,
            878: 1,
            879: 2,
            880: 2
            // a dumb 75 meat club
          }],
          [(0, libram_1.$location)(_templateObject2045 || (_templateObject2045 = _taggedTemplateLiteral114(["The Copperhead Club"]))), {
            855: 4
          }],
          [(0, libram_1.$location)(_templateObject21101 || (_templateObject21101 = _taggedTemplateLiteral114(["The Haunted Bathroom"]))), {
            882: 2
          }],
          [(0, libram_1.$location)(_templateObject2241 || (_templateObject2241 = _taggedTemplateLiteral114(["The Castle in the Clouds in the Sky (Top Floor)"]))), {
            1431: 1,
            675: 4,
            676: 4,
            677: 1,
            678: 3
            // Go to Steampunk choice
          }],
          [(0, libram_1.$location)(_templateObject2340 || (_templateObject2340 = _taggedTemplateLiteral114(["The Castle in the Clouds in the Sky (Ground Floor)"]))), {
            672: 3,
            673: 3,
            674: 3,
            1026: 3
            // Skip
          }],
          [(0, libram_1.$location)(_templateObject2438 || (_templateObject2438 = _taggedTemplateLiteral114(["The Hidden Office Building"]))), {
            786: 6
          }],
          [(0, libram_1.$location)(_templateObject2538 || (_templateObject2538 = _taggedTemplateLiteral114(["Cobb's Knob Barracks"]))), {
            522: 2
          }],
          [(0, libram_1.$location)(_templateObject2638 || (_templateObject2638 = _taggedTemplateLiteral114(["The Penultimate Fantasy Airship"]))), {
            178: 2,
            182: 1
          }],
          [(0, libram_1.$location)(_templateObject2737 || (_templateObject2737 = _taggedTemplateLiteral114(["The Haiku Dungeon"]))), {
            297: 3
          }]
          // skip
        ]));
        _defineProperty42(this, "equipment", new Map([].concat(_toConsumableArray53(kolmafia_1.Location.all().filter(function(l) {
          return l.zone === "The 8-Bit Realm";
        }).map(function(l) {
          return [l, (0, libram_1.$items)(_templateObject2835 || (_templateObject2835 = _taggedTemplateLiteral114(["continuum transfunctioner"])))];
        })), [[(0, libram_1.$location)(_templateObject2931 || (_templateObject2931 = _taggedTemplateLiteral114(["Shadow Rift (The 8-Bit Realm)"]))), (0, libram_1.$items)(_templateObject3031 || (_templateObject3031 = _taggedTemplateLiteral114(["continuum transfunctioner"])))]])));
        _defineProperty42(this, "cacheKey", "");
        _defineProperty42(this, "targets", {});
        _defineProperty42(this, "options", void 0);
        this.options = options;
      }
      _createClass33(WandererManager3, [{
        key: "getTarget",
        value: function getTarget(wanderer2) {
          var _this$targets, _ref2, _this$targets$_ref;
          var _ref = (0, lib_1.isDraggableFight)(wanderer2) ? {
            draggableFight: wanderer2,
            options: {}
          } : {
            draggableFight: wanderer2.wanderer,
            options: wanderer2
          }, draggableFight = _ref.draggableFight, options = _ref.options;
          var _defaultWanderOptions = _objectSpread21(_objectSpread21({}, defaultWanderOptions), options), drunkSafe = _defaultWanderOptions.drunkSafe, allowEquipment = _defaultWanderOptions.allowEquipment;
          var newKey = "".concat((0, kolmafia_1.myTotalTurnsSpent)(), ";").concat((0, kolmafia_1.totalTurnsPlayed)(), ";").concat((0, libram_1.get)("familiarSweat"));
          if (this.cacheKey !== newKey)
            this.clear();
          this.cacheKey = newKey;
          var locationSkipList = allowEquipment ? [] : _toConsumableArray53(this.equipment.keys());
          return sober2() || !drunkSafe ? (_this$targets$_ref = (_this$targets = this.targets)[_ref2 = "".concat(draggableFight, ":").concat(allowEquipment)]) !== null && _this$targets$_ref !== void 0 ? _this$targets$_ref : _this$targets[_ref2] = wanderWhere(this.options, draggableFight, [], locationSkipList) : (0, libram_1.$location)(_templateObject3187 || (_templateObject3187 = _taggedTemplateLiteral114(["Drunken Stupor"])));
        }
      }, {
        key: "getChoices",
        value: function getChoices(wanderer2) {
          var _this$unsupportedChoi;
          return (_this$unsupportedChoi = this.unsupportedChoices.get(this.getTarget(wanderer2))) !== null && _this$unsupportedChoi !== void 0 ? _this$unsupportedChoi : {};
        }
      }, {
        key: "clear",
        value: function clear() {
          this.targets = {};
        }
      }, {
        key: "getEquipment",
        value: function getEquipment(wanderer2) {
          var _this$equipment$get;
          return (_this$equipment$get = this.equipment.get(this.getTarget(wanderer2))) !== null && _this$equipment$get !== void 0 ? _this$equipment$get : [];
        }
      }]);
      return WandererManager3;
    }();
    exports.WandererManager = WandererManager2;
  }
});

// ../garbo-lib/dist/index.js
var require_dist = __commonJS({
  "../garbo-lib/dist/index.js": function(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.WandererManager = exports.makeValue = void 0;
    var value_1 = require_value();
    Object.defineProperty(exports, "makeValue", {
      enumerable: true,
      get: function get4() {
        return value_1.makeValue;
      }
    });
    var wanderer_1 = require_wanderer();
    Object.defineProperty(exports, "WandererManager", {
      enumerable: true,
      get: function get4() {
        return wanderer_1.WandererManager;
      }
    });
  }
});

// ../../node_modules/core-js/internals/iterators.js
var require_iterators = __commonJS({
  "../../node_modules/core-js/internals/iterators.js": function(exports, module2) {
    "use strict";
    module2.exports = {};
  }
});

// ../../node_modules/core-js/internals/is-array-iterator-method.js
var require_is_array_iterator_method = __commonJS({
  "../../node_modules/core-js/internals/is-array-iterator-method.js": function(exports, module2) {
    "use strict";
    var wellKnownSymbol = require_well_known_symbol();
    var Iterators = require_iterators();
    var ITERATOR = wellKnownSymbol("iterator");
    var ArrayPrototype = Array.prototype;
    module2.exports = function(it) {
      return it !== void 0 && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
    };
  }
});

// ../../node_modules/core-js/internals/get-iterator-method.js
var require_get_iterator_method = __commonJS({
  "../../node_modules/core-js/internals/get-iterator-method.js": function(exports, module2) {
    "use strict";
    var classof = require_classof();
    var getMethod = require_get_method();
    var isNullOrUndefined = require_is_null_or_undefined();
    var Iterators = require_iterators();
    var wellKnownSymbol = require_well_known_symbol();
    var ITERATOR = wellKnownSymbol("iterator");
    module2.exports = function(it) {
      if (!isNullOrUndefined(it))
        return getMethod(it, ITERATOR) || getMethod(it, "@@iterator") || Iterators[classof(it)];
    };
  }
});

// ../../node_modules/core-js/internals/get-iterator.js
var require_get_iterator = __commonJS({
  "../../node_modules/core-js/internals/get-iterator.js": function(exports, module2) {
    "use strict";
    var call = require_function_call();
    var aCallable = require_a_callable();
    var anObject = require_an_object();
    var tryToString = require_try_to_string();
    var getIteratorMethod = require_get_iterator_method();
    var $TypeError = TypeError;
    module2.exports = function(argument, usingIterator) {
      var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
      if (aCallable(iteratorMethod))
        return anObject(call(iteratorMethod, argument));
      throw $TypeError(tryToString(argument) + " is not iterable");
    };
  }
});

// ../../node_modules/core-js/internals/iterator-close.js
var require_iterator_close = __commonJS({
  "../../node_modules/core-js/internals/iterator-close.js": function(exports, module2) {
    "use strict";
    var call = require_function_call();
    var anObject = require_an_object();
    var getMethod = require_get_method();
    module2.exports = function(iterator, kind, value) {
      var innerResult, innerError;
      anObject(iterator);
      try {
        innerResult = getMethod(iterator, "return");
        if (!innerResult) {
          if (kind === "throw")
            throw value;
          return value;
        }
        innerResult = call(innerResult, iterator);
      } catch (error2) {
        innerError = true;
        innerResult = error2;
      }
      if (kind === "throw")
        throw value;
      if (innerError)
        throw innerResult;
      anObject(innerResult);
      return value;
    };
  }
});

// ../../node_modules/core-js/internals/iterate.js
var require_iterate = __commonJS({
  "../../node_modules/core-js/internals/iterate.js": function(exports, module2) {
    "use strict";
    var bind = require_function_bind_context();
    var call = require_function_call();
    var anObject = require_an_object();
    var tryToString = require_try_to_string();
    var isArrayIteratorMethod = require_is_array_iterator_method();
    var lengthOfArrayLike = require_length_of_array_like();
    var isPrototypeOf = require_object_is_prototype_of();
    var getIterator = require_get_iterator();
    var getIteratorMethod = require_get_iterator_method();
    var iteratorClose = require_iterator_close();
    var $TypeError = TypeError;
    var Result = function Result2(stopped, result) {
      this.stopped = stopped;
      this.result = result;
    };
    var ResultPrototype = Result.prototype;
    module2.exports = function(iterable, unboundFunction, options) {
      var that = options && options.that;
      var AS_ENTRIES = !!(options && options.AS_ENTRIES);
      var IS_RECORD = !!(options && options.IS_RECORD);
      var IS_ITERATOR = !!(options && options.IS_ITERATOR);
      var INTERRUPTED = !!(options && options.INTERRUPTED);
      var fn = bind(unboundFunction, that);
      var iterator, iterFn, index, length, result, next2, step;
      var stop = function stop2(condition) {
        if (iterator)
          iteratorClose(iterator, "normal", condition);
        return new Result(true, condition);
      };
      var callFn = function callFn2(value) {
        if (AS_ENTRIES) {
          anObject(value);
          return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
        }
        return INTERRUPTED ? fn(value, stop) : fn(value);
      };
      if (IS_RECORD) {
        iterator = iterable.iterator;
      } else if (IS_ITERATOR) {
        iterator = iterable;
      } else {
        iterFn = getIteratorMethod(iterable);
        if (!iterFn)
          throw $TypeError(tryToString(iterable) + " is not iterable");
        if (isArrayIteratorMethod(iterFn)) {
          for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
            result = callFn(iterable[index]);
            if (result && isPrototypeOf(ResultPrototype, result))
              return result;
          }
          return new Result(false);
        }
        iterator = getIterator(iterable, iterFn);
      }
      next2 = IS_RECORD ? iterable.next : iterator.next;
      while (!(step = call(next2, iterator)).done) {
        try {
          result = callFn(step.value);
        } catch (error2) {
          iteratorClose(iterator, "throw", error2);
        }
        if (typeof result == "object" && result && isPrototypeOf(ResultPrototype, result))
          return result;
      }
      return new Result(false);
    };
  }
});

// ../../node_modules/core-js/internals/create-property.js
var require_create_property = __commonJS({
  "../../node_modules/core-js/internals/create-property.js": function(exports, module2) {
    "use strict";
    var toPropertyKey = require_to_property_key();
    var definePropertyModule = require_object_define_property();
    var createPropertyDescriptor = require_create_property_descriptor();
    module2.exports = function(object, key, value) {
      var propertyKey = toPropertyKey(key);
      if (propertyKey in object)
        definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
      else
        object[propertyKey] = value;
    };
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  main: function() {
    return main;
  }
});
module.exports = __toCommonJS(src_exports);

// ../../node_modules/grimoire-kolmafia/dist/args.js
var import_kolmafia = require("kolmafia");
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e3) {
    didErr = true;
    err = _e3;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var Args = /* @__PURE__ */ function() {
  function Args2() {
    _classCallCheck(this, Args2);
  }
  _createClass(Args2, null, [{
    key: "custom",
    value: function custom(spec, _parser, valueHelpName) {
      var _a, _b;
      var raw_options = (_a = spec.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
        return option[0];
      });
      if ("default" in spec && raw_options) {
        if (!raw_options.includes(spec.default)) {
          throw "Invalid default value ".concat(spec.default);
        }
      }
      return _objectSpread(_objectSpread({}, spec), {}, {
        valueHelpName: valueHelpName,
        parser: function(value) {
          var parsed_value = _parser(value);
          if (parsed_value === void 0 || parsed_value instanceof ParseError)
            return parsed_value;
          if (raw_options) {
            if (!raw_options.includes(parsed_value)) {
              return new ParseError("received ".concat(value, " which was not in the allowed options"));
            }
          }
          return parsed_value;
        },
        options: (_b = spec.options) === null || _b === void 0 ? void 0 : _b.map(function(a) {
          return ["".concat(a[0]), a[1]];
        })
      });
    }
  }, {
    key: "arrayFromArg",
    value: function arrayFromArg(spec, argFromSpec) {
      var _a, _b, _c;
      var spec_without_default = _objectSpread({}, spec);
      if ("default" in spec_without_default)
        delete spec_without_default["default"];
      var arg = argFromSpec.call(this, spec_without_default);
      var raw_options = (_a = spec.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
        return option[0];
      });
      if ("default" in spec && raw_options) {
        var _iterator = _createForOfIteratorHelper(spec.default), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var default_entry = _step.value;
            if (!raw_options.includes(default_entry))
              throw "Invalid default value ".concat(spec.default);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      var separator = (_b = spec.separator) !== null && _b !== void 0 ? _b : ",";
      var arrayParser = function(value) {
        var values = value.split(separator);
        if (!spec.noTrim)
          values = values.map(function(v) {
            return v.trim();
          });
        var result = values.map(function(v) {
          return arg.parser(v);
        });
        var error2 = result.find(function(v) {
          return v instanceof ParseError;
        });
        if (error2)
          return error2;
        var failure_index = result.indexOf(void 0);
        if (failure_index !== -1)
          return new ParseError("components expected ".concat(arg.valueHelpName, " but could not parse ").concat(values[failure_index]));
        return result;
      };
      return _objectSpread(_objectSpread({}, spec), {}, {
        valueHelpName: "".concat(arg.valueHelpName).concat(separator, " ").concat(arg.valueHelpName).concat(separator, " ..."),
        parser: arrayParser,
        options: (_c = spec.options) === null || _c === void 0 ? void 0 : _c.map(function(a) {
          return ["".concat(a[0]), a[1]];
        })
      });
    }
  }, {
    key: "string",
    value: function string(spec) {
      return this.custom(spec, function(value) {
        return value;
      }, "TEXT");
    }
  }, {
    key: "strings",
    value: function strings(spec) {
      return this.arrayFromArg(spec, this.string);
    }
  }, {
    key: "number",
    value: function number(spec) {
      return this.custom(spec, function(value) {
        return isNaN(Number(value)) ? void 0 : Number(value);
      }, "NUMBER");
    }
  }, {
    key: "numbers",
    value: function numbers(spec) {
      return this.arrayFromArg(spec, this.number);
    }
  }, {
    key: "boolean",
    value: function boolean(spec) {
      return this.custom(spec, function(value) {
        if (value.toLowerCase() === "true")
          return true;
        if (value.toLowerCase() === "false")
          return false;
        return void 0;
      }, "BOOLEAN");
    }
  }, {
    key: "booleans",
    value: function booleans(spec) {
      return this.arrayFromArg(spec, this.boolean);
    }
  }, {
    key: "flag",
    value: function flag(spec) {
      return this.custom(spec, function(value) {
        if (value.toLowerCase() === "true")
          return true;
        if (value.toLowerCase() === "false")
          return false;
        return void 0;
      }, "FLAG");
    }
  }, {
    key: "class",
    value: function _class(spec) {
      return this.custom(spec, function(value) {
        var match = import_kolmafia.Class.get(value);
        if (match.toString().toUpperCase() === value.toString().toUpperCase())
          return match;
        if (!isNaN(Number(value)))
          return match;
        return void 0;
      }, "CLASS");
    }
  }, {
    key: "classes",
    value: function classes(spec) {
      return this.arrayFromArg(spec, this.class);
    }
  }, {
    key: "effect",
    value: function effect2(spec) {
      return this.custom(spec, import_kolmafia.Effect.get, "EFFECT");
    }
  }, {
    key: "effects",
    value: function effects(spec) {
      return this.arrayFromArg(spec, this.effect);
    }
  }, {
    key: "familiar",
    value: function familiar7(spec) {
      return this.custom(spec, import_kolmafia.Familiar.get, "FAMILIAR");
    }
  }, {
    key: "familiars",
    value: function familiars(spec) {
      return this.arrayFromArg(spec, this.familiar);
    }
  }, {
    key: "item",
    value: function item10(spec) {
      return this.custom(spec, import_kolmafia.Item.get, "ITEM");
    }
  }, {
    key: "items",
    value: function items(spec) {
      return this.arrayFromArg(spec, this.item);
    }
  }, {
    key: "location",
    value: function location(spec) {
      return this.custom(spec, import_kolmafia.Location.get, "LOCATION");
    }
  }, {
    key: "locations",
    value: function locations(spec) {
      return this.arrayFromArg(spec, this.location);
    }
  }, {
    key: "monster",
    value: function monster(spec) {
      return this.custom(spec, import_kolmafia.Monster.get, "MONSTER");
    }
  }, {
    key: "monsters",
    value: function monsters(spec) {
      return this.arrayFromArg(spec, this.monster);
    }
  }, {
    key: "path",
    value: function path3(spec) {
      return this.custom(spec, import_kolmafia.Path.get, "PATH");
    }
  }, {
    key: "paths",
    value: function paths(spec) {
      return this.arrayFromArg(spec, this.path);
    }
  }, {
    key: "skill",
    value: function skill(spec) {
      return this.custom(spec, import_kolmafia.Skill.get, "SKILL");
    }
  }, {
    key: "skills",
    value: function skills3(spec) {
      return this.arrayFromArg(spec, this.skill);
    }
    /**
     * Create a group of arguments that will be printed separately in the help.
     *
     * Note that keys in the group must still be globally distinct.
     *
     * @param groupName The display name for the group in help.
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     */
  }, {
    key: "group",
    value: function group(groupName, args) {
      return {
        name: groupName,
        args: args
      };
    }
    /**
     * Create a set of input arguments for a script.
     * @param scriptName Prefix for property names; often the name of the script.
     * @param scriptHelp Brief description of this script, for the help message.
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     * @param options Config options for the args and arg parser.
     * @returns An object which can hold parsed argument values. The keys of this
     *    object are identical to the keys in 'args'.
     */
  }, {
    key: "create",
    value: function create3(scriptName, scriptHelp, args, options) {
      var _objectSpread22;
      _traverse(args, function(keySpec, key) {
        if (key === "help" || keySpec.key === "help")
          throw "help is a reserved argument name";
      });
      var argsWithHelp = _objectSpread(_objectSpread({}, args), {}, {
        help: this.flag({
          help: "Show this message and exit.",
          setting: ""
        })
      });
      var res = _objectSpread(_objectSpread({}, _loadDefaultValues(argsWithHelp)), {}, (_objectSpread22 = {}, _defineProperty(_objectSpread22, specSymbol, argsWithHelp), _defineProperty(_objectSpread22, scriptSymbol, scriptName), _defineProperty(_objectSpread22, scriptHelpSymbol, scriptHelp), _defineProperty(_objectSpread22, optionsSymbol, options !== null && options !== void 0 ? options : {}), _objectSpread22));
      if (options === null || options === void 0 ? void 0 : options.positionalArgs) {
        var keys = [];
        var metadata = Args2.getMetadata(res);
        metadata.traverse(function(keySpec, key) {
          var _a;
          keys.push((_a = keySpec.key) !== null && _a !== void 0 ? _a : key);
        });
        var _iterator2 = _createForOfIteratorHelper(options.positionalArgs), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var arg = _step2.value;
            if (!keys.includes(arg))
              throw "Unknown key for positional arg: ".concat(arg);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return res;
    }
    /**
     * Parse the command line input into the provided script arguments.
     * @param args An object to hold the parsed argument values, from Args.create(*).
     * @param command The command line input.
     * @param includeSettings If true, parse values from settings as well.
     */
  }, {
    key: "fill",
    value: function fill2(args, command) {
      var includeSettings = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      var _a;
      var metadata = Args2.getMetadata(args);
      var keys = /* @__PURE__ */ new Set();
      var flags = /* @__PURE__ */ new Set();
      metadata.traverse(function(keySpec, key) {
        var _a2;
        var name = (_a2 = keySpec.key) !== null && _a2 !== void 0 ? _a2 : key;
        if (flags.has(name) || keys.has(name))
          throw "Duplicate arg key ".concat(name, " is not allowed");
        if (keySpec.valueHelpName === "FLAG")
          flags.add(name);
        else
          keys.add(name);
      });
      if (includeSettings) {
        metadata.traverseAndMaybeSet(args, function(keySpec, key) {
          var _a2, _b;
          var setting = (_a2 = keySpec.setting) !== null && _a2 !== void 0 ? _a2 : "".concat(metadata.scriptName, "_").concat((_b = keySpec.key) !== null && _b !== void 0 ? _b : key);
          if (setting === "")
            return void 0;
          var value_str = (0, import_kolmafia.getProperty)(setting);
          if (value_str === "")
            return void 0;
          return parseAndValidate(keySpec, "Setting ".concat(setting), value_str);
        });
      }
      if (command === void 0 || command === "")
        return;
      var parsed = new CommandParser(command, keys, flags, (_a = metadata.options.positionalArgs) !== null && _a !== void 0 ? _a : []).parse();
      metadata.traverseAndMaybeSet(args, function(keySpec, key) {
        var _a2;
        var argKey = (_a2 = keySpec.key) !== null && _a2 !== void 0 ? _a2 : key;
        var value_str = parsed.get(argKey);
        if (value_str === void 0)
          return void 0;
        return parseAndValidate(keySpec, "Argument ".concat(argKey), value_str);
      });
    }
    /**
     * Parse command line input into a new set of script arguments.
     * @param scriptName Prefix to use in property names; typically the name of the script.
     * @param scriptHelp Brief description of this script, for the help message.
     * @param spec An object specifying the script arguments.
     * @param command The command line input.
     * @param options Config options for the args and arg parser.
     */
  }, {
    key: "parse",
    value: function parse(scriptName, scriptHelp, spec, command, options) {
      var args = this.create(scriptName, scriptHelp, spec, options);
      this.fill(args, command);
      return args;
    }
    /**
     * Print a description of the script arguments to the CLI.
     *
     * First, all top-level argument descriptions are printed in the order they
     * were defined. Afterwards, descriptions for groups of arguments are printed
     * in the order they were defined.
     *
     * @param args An object of parsed arguments, from Args.create(*).
     * @param maxOptionsToDisplay If given, do not list more than this many options for each arg.
     */
  }, {
    key: "showHelp",
    value: function showHelp(args, maxOptionsToDisplay) {
      var _a;
      var metadata = Args2.getMetadata(args);
      (0, import_kolmafia.printHtml)("".concat(metadata.scriptHelp));
      (0, import_kolmafia.printHtml)("");
      (0, import_kolmafia.printHtml)("<b>".concat((_a = metadata.options.defaultGroupName) !== null && _a !== void 0 ? _a : "Options", ":</b>"));
      metadata.traverse(function(arg, key) {
        var _a2, _b, _c, _d, _e;
        if (arg.hidden)
          return;
        var nameText = "<font color='".concat((0, import_kolmafia.isDarkMode)() ? "yellow" : "blue", "'>").concat((_a2 = arg.key) !== null && _a2 !== void 0 ? _a2 : key, "</font>");
        var valueText = arg.valueHelpName === "FLAG" ? "" : "<font color='purple'>".concat(arg.valueHelpName, "</font>");
        var helpText = (_b = arg.help) !== null && _b !== void 0 ? _b : "";
        var defaultText = "default" in arg ? "<font color='#888888'>[default: ".concat(arg.default, "]</font>") : "";
        var settingText = arg.setting === "" ? "" : "<font color='#888888'>[setting: ".concat((_c = arg.setting) !== null && _c !== void 0 ? _c : "".concat(metadata.scriptName, "_").concat((_d = arg.key) !== null && _d !== void 0 ? _d : key), "]</font>");
        (0, import_kolmafia.printHtml)("&nbsp;&nbsp;".concat([nameText, valueText, "-", helpText, defaultText, settingText].join(" ")));
        var valueOptions = (_e = arg.options) !== null && _e !== void 0 ? _e : [];
        if (valueOptions.length < (maxOptionsToDisplay !== null && maxOptionsToDisplay !== void 0 ? maxOptionsToDisplay : Number.MAX_VALUE)) {
          var _iterator3 = _createForOfIteratorHelper(valueOptions), _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var option = _step3.value;
              if (option.length === 1 || option[1] === void 0) {
                (0, import_kolmafia.printHtml)("&nbsp;&nbsp;&nbsp;&nbsp;<font color='blue'>".concat(nameText, "</font> ").concat(option[0]));
              } else {
                (0, import_kolmafia.printHtml)("&nbsp;&nbsp;&nbsp;&nbsp;<font color='blue'>".concat(nameText, "</font> ").concat(option[0], " - ").concat(option[1]));
              }
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }
      }, function(group) {
        (0, import_kolmafia.printHtml)("");
        (0, import_kolmafia.printHtml)("<b>".concat(group.name, ":</b>"));
      });
    }
    /**
     * Load the metadata information for a set of arguments. Only for advanced usage.
     *
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     * @returns A class containing metadata information.
     */
  }, {
    key: "getMetadata",
    value: function getMetadata(args) {
      return new WrappedArgMetadata(args);
    }
  }]);
  return Args2;
}();
var ParseError = /* @__PURE__ */ _createClass(function ParseError2(message) {
  _classCallCheck(this, ParseError2);
  this.message = message;
});
var specSymbol = Symbol("spec");
var scriptSymbol = Symbol("script");
var scriptHelpSymbol = Symbol("scriptHelp");
var optionsSymbol = Symbol("options");
function parseAndValidate(arg, source, value) {
  var parsed_value;
  try {
    parsed_value = arg.parser(value);
  } catch (_a) {
    parsed_value = void 0;
  }
  if (parsed_value === void 0)
    throw "".concat(source, " expected ").concat(arg.valueHelpName, " but could not parse ").concat(value);
  if (parsed_value instanceof ParseError)
    throw "".concat(source, " ").concat(parsed_value.message);
  return parsed_value;
}
var WrappedArgMetadata = /* @__PURE__ */ function() {
  function WrappedArgMetadata2(args) {
    _classCallCheck(this, WrappedArgMetadata2);
    this.spec = args[specSymbol];
    this.scriptName = args[scriptSymbol];
    this.scriptHelp = args[scriptHelpSymbol];
    this.options = args[optionsSymbol];
  }
  _createClass(WrappedArgMetadata2, [{
    key: "loadDefaultValues",
    value: function loadDefaultValues() {
      return _loadDefaultValues(this.spec);
    }
    /**
     * Traverse the spec and possibly generate a value for each argument.
     *
     * @param result The object to hold the resulting argument values, typically
     *    the result of loadDefaultValues().
     * @param setTo A function to generate an argument value from each arg spec.
     *    If this function returns undefined, then the argument value is unchanged.
     */
  }, {
    key: "traverseAndMaybeSet",
    value: function traverseAndMaybeSet(result, setTo) {
      return _traverseAndMaybeSet(this.spec, result, setTo);
    }
    /**
     * Traverse the spec and call a method for each argument.
     *
     * @param process A function to call at each arg spec.
     */
  }, {
    key: "traverse",
    value: function traverse(process2, onGroup) {
      return _traverse(this.spec, process2, onGroup);
    }
  }]);
  return WrappedArgMetadata2;
}();
function _loadDefaultValues(spec) {
  var result = {};
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      result[k] = _loadDefaultValues(argSpec.args);
    } else {
      if ("default" in argSpec)
        result[k] = argSpec.default;
      else
        result[k] = void 0;
    }
  }
  return result;
}
function _traverseAndMaybeSet(spec, result, setTo) {
  var groups = [];
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      groups.push([argSpec, k]);
    } else {
      var value = setTo(argSpec, k);
      if (value === void 0)
        continue;
      result[k] = value;
    }
  }
  for (var _i = 0, _groups = groups; _i < _groups.length; _i++) {
    var group_and_key = _groups[_i];
    _traverseAndMaybeSet(group_and_key[0].args, result[group_and_key[1]], setTo);
  }
}
function _traverse(spec, process2, onGroup) {
  var groups = [];
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec) {
      groups.push([argSpec, k]);
    } else {
      process2(argSpec, k);
    }
  }
  for (var _i2 = 0, _groups2 = groups; _i2 < _groups2.length; _i2++) {
    var group_and_key = _groups2[_i2];
    onGroup === null || onGroup === void 0 ? void 0 : onGroup(group_and_key[0], group_and_key[1]);
    _traverse(group_and_key[0].args, process2, onGroup);
  }
}
var CommandParser = /* @__PURE__ */ function() {
  function CommandParser2(command, keys, flags, positionalArgs) {
    _classCallCheck(this, CommandParser2);
    this.command = command;
    this.index = 0;
    this.keys = keys;
    this.flags = flags;
    this.positionalArgs = positionalArgs;
    this.positionalArgsParsed = 0;
  }
  _createClass(CommandParser2, [{
    key: "parse",
    value: function parse() {
      var _a, _b, _c, _d;
      this.index = 0;
      var result = /* @__PURE__ */ new Map();
      while (!this.finished()) {
        var parsing_negative_flag = false;
        if (this.peek() === "!") {
          parsing_negative_flag = true;
          this.consume(["!"]);
        }
        var startIndex = this.index;
        var key = this.parseKey();
        if (result.has(key)) {
          throw "Duplicate key ".concat(key, " (first set to ").concat((_a = result.get(key)) !== null && _a !== void 0 ? _a : "", ")");
        }
        if (this.flags.has(key)) {
          result.set(key, parsing_negative_flag ? "false" : "true");
          if (this.peek() === "=")
            throw "Flag ".concat(key, " cannot be assigned a value");
          if (!this.finished())
            this.consume([" "]);
          this.prevUnquotedKey = void 0;
        } else if (this.keys.has(key)) {
          this.consume(["=", " "]);
          var value = this.parseValue();
          if (["'", '"'].includes((_b = this.prev()) !== null && _b !== void 0 ? _b : ""))
            this.prevUnquotedKey = void 0;
          else
            this.prevUnquotedKey = key;
          if (!this.finished())
            this.consume([" "]);
          result.set(key, value);
        } else if (this.positionalArgsParsed < this.positionalArgs.length && this.peek() !== "=") {
          var positionalKey = this.positionalArgs[this.positionalArgsParsed];
          this.positionalArgsParsed++;
          this.index = startIndex;
          var _value = this.parseValue();
          if (["'", '"'].includes((_c = this.prev()) !== null && _c !== void 0 ? _c : ""))
            this.prevUnquotedKey = void 0;
          else
            this.prevUnquotedKey = key;
          if (!this.finished())
            this.consume([" "]);
          if (result.has(positionalKey))
            throw "Cannot assign ".concat(_value, " to ").concat(positionalKey, " (positionally) since ").concat(positionalKey, " was already set to ").concat((_d = result.get(positionalKey)) !== null && _d !== void 0 ? _d : "");
          result.set(positionalKey, _value);
        } else {
          if (this.prevUnquotedKey && this.peek() !== "=")
            throw "Unknown argument: ".concat(key, " (if this should have been parsed as part of ").concat(this.prevUnquotedKey, ", you should surround the entire value in quotes)");
          else
            throw "Unknown argument: ".concat(key);
        }
      }
      return result;
    }
    /**
     * @returns True if the entire command has been parsed.
     */
  }, {
    key: "finished",
    value: function finished() {
      return this.index >= this.command.length;
    }
    /**
     * @returns The next character to parse, if it exists.
     */
  }, {
    key: "peek",
    value: function peek() {
      if (this.index >= this.command.length)
        return void 0;
      return this.command.charAt(this.index);
    }
    /**
     * @returns The character just parsed, if it exists.
     */
  }, {
    key: "prev",
    value: function prev() {
      if (this.index <= 0)
        return void 0;
      if (this.index >= this.command.length + 1)
        return void 0;
      return this.command.charAt(this.index - 1);
    }
    /**
     * Advance the internal marker over the next expected character.
     * Throws an error on unexpected characters.
     *
     * @param allowed Characters that are expected.
     */
  }, {
    key: "consume",
    value: function consume(allowed) {
      var _a;
      if (this.finished())
        throw "Expected ".concat(allowed);
      if (allowed.includes((_a = this.peek()) !== null && _a !== void 0 ? _a : "")) {
        this.index += 1;
      }
    }
    /**
     * Find the next occurance of one of the provided characters, or the end of
     * the string if the characters never appear again.
     *
     * @param searchValue The characters to locate.
     */
  }, {
    key: "findNext",
    value: function findNext(searchValue) {
      var result = this.command.length;
      var _iterator4 = _createForOfIteratorHelper(searchValue), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var value = _step4.value;
          var index = this.command.indexOf(value, this.index);
          if (index !== -1 && index < result)
            result = index;
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return result;
    }
    /**
     * Starting from the internal marker, parse a single key.
     * This also advances the internal marker.
     *
     * @returns The next key.
     */
  }, {
    key: "parseKey",
    value: function parseKey() {
      var keyEnd = this.findNext(["=", " "]);
      var key = this.command.substring(this.index, keyEnd);
      this.index = keyEnd;
      return key;
    }
    /**
     * Starting from the internal marker, parse a single value.
     * This also advances the internal marker.
     *
     * Values are a single word or enclosed in matching quotes, i.e. one of:
     *    "[^"]*"
     *    '[^']*"
     *    [^'"][^ ]*
     *
     * @returns The next value.
     */
  }, {
    key: "parseValue",
    value: function parseValue() {
      var _a, _b;
      var valueEnder = " ";
      var quotes = ["'", '"'];
      if (quotes.includes((_a = this.peek()) !== null && _a !== void 0 ? _a : "")) {
        valueEnder = (_b = this.peek()) !== null && _b !== void 0 ? _b : "";
        this.consume([valueEnder]);
      }
      var valueEnd = this.findNext([valueEnder]);
      var value = this.command.substring(this.index, valueEnd);
      if (valueEnder !== " " && valueEnd === this.command.length) {
        throw "No closing ".concat(valueEnder, " found for ").concat(valueEnder).concat(value);
      }
      this.index = valueEnd;
      if (valueEnder !== " ")
        this.consume([valueEnder]);
      return value;
    }
  }]);
  return CommandParser2;
}();

// ../../node_modules/grimoire-kolmafia/dist/combat.js
var import_kolmafia71 = require("kolmafia");
init_dist();
function _inherits7(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf7(subClass, superClass);
}
function _setPrototypeOf7(o, p) {
  _setPrototypeOf7 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf7(o, p);
}
function _createSuper6(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct6();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf6(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf6(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn6(this, result);
  };
}
function _possibleConstructorReturn6(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized6(self2);
}
function _assertThisInitialized6(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct6() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf6(o) {
  _getPrototypeOf6 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf6(o);
}
function _toConsumableArray19(arr) {
  return _arrayWithoutHoles19(arr) || _iterableToArray19(arr) || _unsupportedIterableToArray37(arr) || _nonIterableSpread19();
}
function _nonIterableSpread19() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray19(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles19(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray37(arr);
}
function _createForOfIteratorHelper18(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray37(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray37(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray37(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray37(o, minLen);
}
function _arrayLikeToArray37(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck22(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties22(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey27(descriptor.key), descriptor);
  }
}
function _createClass22(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties22(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties22(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey27(arg) {
  var key = _toPrimitive27(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive27(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var CombatStrategy = /* @__PURE__ */ function() {
  function CombatStrategy2() {
    _classCallCheck22(this, CombatStrategy2);
    this.macros = /* @__PURE__ */ new Map();
    this.autoattacks = /* @__PURE__ */ new Map();
    this.actions = /* @__PURE__ */ new Map();
    this.ccs_entries = /* @__PURE__ */ new Map();
  }
  _createClass22(CombatStrategy2, [{
    key: "macro",
    value: function macro(_macro2, monsters, prepend) {
      var _a, _b;
      if (monsters === void 0) {
        if (this.default_macro === void 0)
          this.default_macro = [];
        if (prepend)
          this.default_macro.unshift(_macro2);
        else
          this.default_macro.push(_macro2);
      } else {
        if (monsters instanceof import_kolmafia71.Monster)
          monsters = [monsters];
        var _iterator = _createForOfIteratorHelper18(monsters), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var monster = _step.value;
            if (!this.macros.has(monster))
              this.macros.set(monster, []);
            if (prepend)
              (_a = this.macros.get(monster)) === null || _a === void 0 ? void 0 : _a.unshift(_macro2);
            else
              (_b = this.macros.get(monster)) === null || _b === void 0 ? void 0 : _b.push(_macro2);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      return this;
    }
    /**
     * Add a macro to perform as an autoattack for this monster. If multiple
     * macros are given for the same monster, they are concatinated.
     *
     * @param macro The macro to perform as autoattack.
     * @param monsters Which monsters to use the macro on. If not given, add the
     *  macro as a general macro.
     * @param prepend If true, add the macro before all previous autoattack
     *    macros for the same monster. If false, add after all previous macros.
     * @returns this
     */
  }, {
    key: "autoattack",
    value: function autoattack(macro, monsters, prepend) {
      var _a, _b;
      if (monsters === void 0) {
        if (this.default_autoattack === void 0)
          this.default_autoattack = [];
        if (prepend)
          this.default_autoattack.unshift(macro);
        else
          this.default_autoattack.push(macro);
      } else {
        if (monsters instanceof import_kolmafia71.Monster)
          monsters = [monsters];
        var _iterator2 = _createForOfIteratorHelper18(monsters), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var monster = _step2.value;
            if (!this.autoattacks.has(monster))
              this.autoattacks.set(monster, []);
            if (prepend)
              (_a = this.autoattacks.get(monster)) === null || _a === void 0 ? void 0 : _a.unshift(macro);
            else
              (_b = this.autoattacks.get(monster)) === null || _b === void 0 ? void 0 : _b.push(macro);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return this;
    }
    /**
     * Add a macro to perform at the start of combat.
     * @param macro The macro to perform.
     * @param prepend If true, add the macro before all previous starting
     *    macros. If false, add after all previous starting macros.
     * @returns this
     */
  }, {
    key: "startingMacro",
    value: function startingMacro(macro, prepend) {
      if (this.starting_macro === void 0)
        this.starting_macro = [];
      if (prepend)
        this.starting_macro.unshift(macro);
      else
        this.starting_macro.push(macro);
      return this;
    }
    /**
     * Add an action to perform for this monster. Only one action can be set for
     * each monster; any previous actions are overwritten.
     *
     * @param action The action to perform.
     * @param monsters Which monsters to use the action on. If not given, set the
     *  action as the general action for all monsters.
     * @returns this
     */
  }, {
    key: "action",
    value: function action(_action, monsters) {
      if (monsters === void 0) {
        this.default_action = _action;
      } else if (monsters instanceof import_kolmafia71.Monster) {
        this.actions.set(monsters, _action);
      } else {
        var _iterator3 = _createForOfIteratorHelper18(monsters), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var monster = _step3.value;
            this.actions.set(monster, _action);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
      return this;
    }
    /**
     * Add a separate entry in the grimoire-generated CCS file for the specified
     * monster. If multiple entries are given for the same monster, they are
     * concatinated.
     *
     * This should typically be only used rarely, on monsters for which KoL does
     * not support macros in combat (e.g. rampaging adding machine).
     *
     * @param entry The entry to add for the given monster.
     * @param monsters Which monsters to add the entry to.
     * @param prepend If true, add the entry before all previous entries. If
     *   false, add after all previous entries.
     */
  }, {
    key: "ccs",
    value: function ccs(entry, monsters, prepend) {
      var _a, _b;
      if (monsters instanceof import_kolmafia71.Monster)
        monsters = [monsters];
      var _iterator4 = _createForOfIteratorHelper18(monsters), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var monster = _step4.value;
          if (!this.ccs_entries.has(monster))
            this.ccs_entries.set(monster, []);
          if (prepend)
            (_a = this.ccs_entries.get(monster)) === null || _a === void 0 ? void 0 : _a.unshift(entry);
          else
            (_b = this.ccs_entries.get(monster)) === null || _b === void 0 ? void 0 : _b.push(entry);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return this;
    }
    /**
     * Check if the provided action was requested for any monsters, or for the
     * general action.
     */
  }, {
    key: "can",
    value: function can(action) {
      if (action === this.default_action)
        return true;
      return Array.from(this.actions.values()).includes(action);
    }
    /**
     * Return the general action (if it exists).
     */
  }, {
    key: "getDefaultAction",
    value: function getDefaultAction() {
      return this.default_action;
    }
    /**
     * Return all monsters where the provided action was requested.
     */
  }, {
    key: "where",
    value: function where(action) {
      var _this = this;
      return Array.from(this.actions.keys()).filter(function(key) {
        return _this.actions.get(key) === action;
      });
    }
    /**
     * Return the requested action (if it exists) for the provided monster.
     */
  }, {
    key: "currentStrategy",
    value: function currentStrategy(monster) {
      var _a;
      return (_a = this.actions.get(monster)) !== null && _a !== void 0 ? _a : this.default_action;
    }
    /**
     * Perform a deep copy of this combat strategy.
     */
  }, {
    key: "clone",
    value: function clone() {
      var result = new CombatStrategy2();
      if (this.starting_macro)
        result.starting_macro = _toConsumableArray19(this.starting_macro);
      if (this.default_macro)
        result.default_macro = _toConsumableArray19(this.default_macro);
      var _iterator5 = _createForOfIteratorHelper18(this.macros), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var pair = _step5.value;
          result.macros.set(pair[0], _toConsumableArray19(pair[1]));
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      if (this.default_autoattack)
        result.default_autoattack = _toConsumableArray19(this.default_autoattack);
      var _iterator6 = _createForOfIteratorHelper18(this.autoattacks), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var _pair = _step6.value;
          result.autoattacks.set(_pair[0], _toConsumableArray19(_pair[1]));
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      result.default_action = this.default_action;
      var _iterator7 = _createForOfIteratorHelper18(this.actions), _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          var _pair2 = _step7.value;
          result.actions.set(_pair2[0], _pair2[1]);
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      var _iterator8 = _createForOfIteratorHelper18(this.ccs_entries), _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
          var _pair3 = _step8.value;
          result.ccs_entries.set(_pair3[0], _toConsumableArray19(_pair3[1]));
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      return result;
    }
    /**
     * Compile this combat strategy into a complete macro.
     *
     * @param resources The resources to use to fulfil actions.
     * @param defaults Macros to perform for each action without a resource.
     * @param location The adventuring location, if known.
     * @returns The compiled macro.
     */
  }, {
    key: "compile",
    value: function compile(resources, defaults, location) {
      var _a, _b;
      var result = new Macro();
      if (this.starting_macro) {
        result.step.apply(result, _toConsumableArray19(this.starting_macro.map(undelay)));
      }
      var monster_macros = new CompressedMacro();
      this.macros.forEach(function(value, key) {
        var _Macro;
        monster_macros.add(key, (_Macro = new Macro()).step.apply(_Macro, _toConsumableArray19(value.map(undelay))));
      });
      result.step(monster_macros.compile());
      if (this.default_macro)
        result.step.apply(result, _toConsumableArray19(this.default_macro.map(undelay)));
      var monster_actions = new CompressedMacro();
      this.actions.forEach(function(action, key) {
        var _a2, _b2;
        var macro2 = (_a2 = resources.getMacro(action)) !== null && _a2 !== void 0 ? _a2 : (_b2 = defaults === null || defaults === void 0 ? void 0 : defaults[action]) === null || _b2 === void 0 ? void 0 : _b2.call(defaults, key);
        if (macro2)
          monster_actions.add(key, new Macro().step(macro2));
      });
      result.step(monster_actions.compile());
      if (this.default_action) {
        var macro = (_a = resources.getMacro(this.default_action)) !== null && _a !== void 0 ? _a : (_b = defaults === null || defaults === void 0 ? void 0 : defaults[this.default_action]) === null || _b === void 0 ? void 0 : _b.call(defaults, location);
        if (macro)
          result.step(macro);
      }
      return result;
    }
    /**
     * Compile the autoattack of this combat strategy into a complete macro.
     *
     * @returns The compiled autoattack macro.
     */
  }, {
    key: "compileAutoattack",
    value: function compileAutoattack() {
      var result = new Macro();
      var monster_macros = new CompressedMacro();
      this.autoattacks.forEach(function(value, key) {
        var _Macro2;
        monster_macros.add(key, (_Macro2 = new Macro()).step.apply(_Macro2, _toConsumableArray19(value.map(undelay))));
      });
      result.step(monster_macros.compile());
      if (this.default_autoattack)
        result.step.apply(result, _toConsumableArray19(this.default_autoattack.map(undelay)));
      return result;
    }
    /**
     * Compile the CCS entries of this combat strategy into a single array.
     *
     * @returns The lines of a CCS file, not including the [default] macro.
     */
  }, {
    key: "compileCcs",
    value: function compileCcs() {
      var result = [];
      var _iterator9 = _createForOfIteratorHelper18(this.ccs_entries), _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
          var ccs_entry = _step9.value;
          result.push.apply(result, ["[".concat(ccs_entry[0].name, "]")].concat(_toConsumableArray19(ccs_entry[1])));
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
      return result;
    }
    /**
     * For advanced users, this method will generate a fluent API for requesting
     * actions. That is, it allows you to do
     *   combat.banish(monster1).kill(monster2)
     * instead of
     *   combat.action("banish", monster1).action("kill", monster2)
     *
     * Example usage:
     *   const myActions = ["kill", "banish"] as const;
     *   class MyCombatStrategy extends CombatStrategy.withActions(myActions) {}
     *
     *   const foo: MyCombatStrategy = new MyCombatStrategy();
     *   const bar: MyCombatStrategy = foo.banish($monster`crate`).kill($monster`tumbleweed`);
     */
  }], [{
    key: "withActions",
    value: function withActions(actions) {
      var CombatStrategyWithActions = /* @__PURE__ */ function(_this) {
        _inherits7(CombatStrategyWithActions2, _this);
        var _super = _createSuper6(CombatStrategyWithActions2);
        function CombatStrategyWithActions2() {
          _classCallCheck22(this, CombatStrategyWithActions2);
          return _super.apply(this, arguments);
        }
        return _createClass22(CombatStrategyWithActions2);
      }(this);
      var proto = CombatStrategyWithActions.prototype;
      var _iterator10 = _createForOfIteratorHelper18(actions), _step10;
      try {
        var _loop = function _loop2() {
          var action = _step10.value;
          proto[action] = function(monsters) {
            return this.action(action, monsters);
          };
        };
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
          _loop();
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }
      return CombatStrategyWithActions;
    }
  }]);
  return CombatStrategy2;
}();
var CompressedMacro = /* @__PURE__ */ function() {
  function CompressedMacro2() {
    _classCallCheck22(this, CompressedMacro2);
    this.components = /* @__PURE__ */ new Map();
  }
  _createClass22(CompressedMacro2, [{
    key: "add",
    value: function add(monster, macro) {
      var _a;
      var macro_text = macro.toString();
      if (macro_text.length === 0)
        return;
      if (!this.components.has(macro_text))
        this.components.set(macro_text, [monster]);
      else
        (_a = this.components.get(macro_text)) === null || _a === void 0 ? void 0 : _a.push(monster);
    }
    /**
     * Compile the compressed form of the macro.
     */
  }, {
    key: "compile",
    value: function compile() {
      var result = new Macro();
      this.components.forEach(function(monsters, macro) {
        var condition = monsters.map(function(mon) {
          return "monsterid ".concat(mon.id);
        }).join(" || ");
        result.if_(condition, macro);
      });
      return result;
    }
  }]);
  return CompressedMacro2;
}();
var CombatResources = /* @__PURE__ */ function() {
  function CombatResources2() {
    _classCallCheck22(this, CombatResources2);
    this.resources = /* @__PURE__ */ new Map();
  }
  _createClass22(CombatResources2, [{
    key: "provide",
    value: function provide(action, resource) {
      if (resource === void 0)
        return;
      this.resources.set(action, resource);
    }
    /**
     * Return true if the provided action has a resource provided.
     */
  }, {
    key: "has",
    value: function has(action) {
      return this.resources.has(action);
    }
    /**
     * Return all provided combat resources.
     */
  }, {
    key: "all",
    value: function all2() {
      return Array.from(this.resources.values());
    }
    /**
     * Get the macro provided by the resource for this action, or undefined if
     * no resource was provided.
     */
  }, {
    key: "getMacro",
    value: function getMacro(action) {
      var resource = this.resources.get(action);
      if (resource === void 0)
        return void 0;
      if (resource.do instanceof import_kolmafia71.Item)
        return new Macro().item(resource.do);
      if (resource.do instanceof import_kolmafia71.Skill)
        return new Macro().skill(resource.do);
      return undelay(resource.do);
    }
  }]);
  return CombatResources2;
}();

// ../../node_modules/grimoire-kolmafia/dist/engine.js
init_dist();
var import_kolmafia73 = require("kolmafia");

// ../../node_modules/grimoire-kolmafia/dist/outfit.js
var import_kolmafia72 = require("kolmafia");
init_dist();
var _templateObject501;
var _templateObject2131;
var _templateObject3118;
var _templateObject4102;
var _templateObject561;
var _templateObject649;
var _templateObject745;
var _templateObject838;
var _templateObject931;
var _templateObject1028;
var _templateObject1124;
var _templateObject1223;
var _templateObject1321;
var _templateObject1418;
var _templateObject1516;
var _templateObject1616;
var _templateObject1716;
var _templateObject1816;
var _templateObject1916;
var _templateObject2016;
var _templateObject2132;
var _templateObject2218;
var _templateObject2317;
var _templateObject2415;
var _templateObject2515;
var _templateObject2615;
var _templateObject2715;
var _templateObject2813;
var _templateObject2912;
var _templateObject3012;
var _templateObject3119;
var _templateObject3214;
var _templateObject3314;
var _templateObject3411;
var _templateObject3511;
var _templateObject3611;
var _templateObject3711;
var _templateObject3811;
var _templateObject3911;
var _templateObject4011;
var _templateObject4113;
var _templateObject4212;
var _templateObject4312;
var _templateObject4411;
var _templateObject4511;
var _templateObject4611;
var _templateObject4711;
var _templateObject4811;
var _templateObject4910;
var _templateObject507;
var _templateObject5112;
var _templateObject5211;
var _templateObject5311;
var _templateObject5411;
var _templateObject5510;
var _templateObject566;
var _templateObject576;
var _templateObject586;
var _templateObject595;
var _templateObject605;
var _templateObject6111;
function ownKeys10(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread10(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys10(Object(t), true).forEach(function(r2) {
      _defineProperty25(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys10(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty25(obj, key, value) {
  key = _toPropertyKey28(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray22(arr, i) {
  return _arrayWithHoles22(arr) || _iterableToArrayLimit22(arr, i) || _unsupportedIterableToArray38(arr, i) || _nonIterableRest22();
}
function _nonIterableRest22() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit22(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles22(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper19(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray38(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e3) {
    didErr = true;
    err = _e3;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _taggedTemplateLiteral62(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray20(arr) {
  return _arrayWithoutHoles20(arr) || _iterableToArray20(arr) || _unsupportedIterableToArray38(arr) || _nonIterableSpread20();
}
function _nonIterableSpread20() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray38(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray38(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray38(o, minLen);
}
function _iterableToArray20(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles20(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray38(arr);
}
function _arrayLikeToArray38(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck23(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties23(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey28(descriptor.key), descriptor);
  }
}
function _createClass23(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties23(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties23(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey28(arg) {
  var key = _toPrimitive28(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive28(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var FORCE_REFRESH_REQUIREMENT = new Requirement([], {
  forceUpdate: true
});
var outfitSlots = ["hat", "back", "weapon", "offhand", "shirt", "pants", "acc1", "acc2", "acc3", "famequip"];
var weaponHands = function(i) {
  return i ? (0, import_kolmafia72.weaponHands)(i) : 0;
};
var modeableCommands2 = ["backupcamera", "umbrella", "snowsuit", "edpiece", "retrocape", "parka"];
var Outfit = /* @__PURE__ */ function() {
  function Outfit2() {
    _classCallCheck23(this, Outfit2);
    this.equips = /* @__PURE__ */ new Map();
    this.riders = /* @__PURE__ */ new Map();
    this.modes = {};
    this.skipDefaults = false;
    this.modifier = [];
    this.avoid = [];
    this.bonuses = /* @__PURE__ */ new Map();
    this.postActions = [];
    this.preActions = [];
  }
  _createClass23(Outfit2, [{
    key: "equippedAmount",
    value: (
      /**
       * Check how many of an item is equipped on the outfit.
       */
      function equippedAmount5(item10) {
        return _toConsumableArray20(this.equips.values()).filter(function(i) {
          return i === item10;
        }).length;
      }
    )
  }, {
    key: "isAvailable",
    value: function isAvailable(item10) {
      var _a;
      if ((_a = this.avoid) === null || _a === void 0 ? void 0 : _a.includes(item10))
        return false;
      if (!have(item10, this.equippedAmount(item10) + 1))
        return false;
      if ((0, import_kolmafia72.booleanModifier)(item10, "Single Equip") && this.equippedAmount(item10) > 0)
        return false;
      return true;
    }
    /**
     * Check whether an item is equipped on the outfit, optionally in a specific slot.
     */
  }, {
    key: "haveEquipped",
    value: function haveEquipped12(item10, slot) {
      if (slot === void 0)
        return this.equippedAmount(item10) > 0;
      return this.equips.get(slot) === item10;
    }
  }, {
    key: "equipItemNone",
    value: function equipItemNone(item10, slot) {
      if (item10 !== $item.none)
        return false;
      if (slot === void 0)
        return true;
      if (this.equips.has(slot))
        return false;
      this.equips.set(slot, item10);
      return true;
    }
  }, {
    key: "equipNonAccessory",
    value: function equipNonAccessory(item10, slot) {
      if ($slots(_templateObject501 || (_templateObject501 = _taggedTemplateLiteral62(["acc1, acc2, acc3"]))).includes((0, import_kolmafia72.toSlot)(item10)))
        return false;
      if (slot !== void 0 && slot !== (0, import_kolmafia72.toSlot)(item10))
        return false;
      if (this.equips.has((0, import_kolmafia72.toSlot)(item10)))
        return false;
      switch ((0, import_kolmafia72.toSlot)(item10)) {
        case $slot(_templateObject2131 || (_templateObject2131 = _taggedTemplateLiteral62(["off-hand"]))):
          if (this.equips.has($slot(_templateObject3118 || (_templateObject3118 = _taggedTemplateLiteral62(["weapon"])))) && weaponHands(this.equips.get($slot(_templateObject4102 || (_templateObject4102 = _taggedTemplateLiteral62(["weapon"]))))) !== 1) {
            return false;
          }
          break;
        case $slot(_templateObject561 || (_templateObject561 = _taggedTemplateLiteral62(["familiar"]))):
          if (this.familiar !== void 0 && !(0, import_kolmafia72.canEquip)(this.familiar, item10))
            return false;
      }
      if ((0, import_kolmafia72.toSlot)(item10) !== $slot(_templateObject649 || (_templateObject649 = _taggedTemplateLiteral62(["familiar"]))) && !(0, import_kolmafia72.canEquip)(item10))
        return false;
      this.equips.set((0, import_kolmafia72.toSlot)(item10), item10);
      return true;
    }
  }, {
    key: "equipAccessory",
    value: function equipAccessory(item10, slot) {
      var _this = this;
      if (![void 0].concat(_toConsumableArray20($slots(_templateObject745 || (_templateObject745 = _taggedTemplateLiteral62(["acc1, acc2, acc3"]))))).includes(slot))
        return false;
      if ((0, import_kolmafia72.toSlot)(item10) !== $slot(_templateObject838 || (_templateObject838 = _taggedTemplateLiteral62(["acc1"]))))
        return false;
      if (!(0, import_kolmafia72.canEquip)(item10))
        return false;
      if (slot === void 0) {
        var empty = $slots(_templateObject931 || (_templateObject931 = _taggedTemplateLiteral62(["acc1, acc2, acc3"]))).find(function(s) {
          return !_this.equips.has(s);
        });
        if (empty === void 0)
          return false;
        this.equips.set(empty, item10);
      } else {
        if (this.equips.has(slot))
          return false;
        this.equips.set(slot, item10);
      }
      return true;
    }
  }, {
    key: "equipUsingDualWield",
    value: function equipUsingDualWield(item10, slot) {
      if (![void 0, $slot(_templateObject1028 || (_templateObject1028 = _taggedTemplateLiteral62(["off-hand"])))].includes(slot))
        return false;
      if ((0, import_kolmafia72.toSlot)(item10) !== $slot(_templateObject1124 || (_templateObject1124 = _taggedTemplateLiteral62(["weapon"]))))
        return false;
      if (this.equips.has($slot(_templateObject1223 || (_templateObject1223 = _taggedTemplateLiteral62(["weapon"])))) && weaponHands(this.equips.get($slot(_templateObject1321 || (_templateObject1321 = _taggedTemplateLiteral62(["weapon"]))))) !== 1) {
        return false;
      }
      if (this.equips.has($slot(_templateObject1418 || (_templateObject1418 = _taggedTemplateLiteral62(["off-hand"])))))
        return false;
      if (!have($skill(_templateObject1516 || (_templateObject1516 = _taggedTemplateLiteral62(["Double-Fisted Skull Smashing"])))))
        return false;
      if (weaponHands(item10) !== 1)
        return false;
      if (!(0, import_kolmafia72.canEquip)(item10))
        return false;
      this.equips.set($slot(_templateObject1616 || (_templateObject1616 = _taggedTemplateLiteral62(["off-hand"]))), item10);
      return true;
    }
  }, {
    key: "getHoldingFamiliar",
    value: function getHoldingFamiliar(item10) {
      switch ((0, import_kolmafia72.toSlot)(item10)) {
        case $slot(_templateObject1716 || (_templateObject1716 = _taggedTemplateLiteral62(["weapon"]))):
          return $familiar(_templateObject1816 || (_templateObject1816 = _taggedTemplateLiteral62(["Disembodied Hand"])));
        case $slot(_templateObject1916 || (_templateObject1916 = _taggedTemplateLiteral62(["off-hand"]))):
          return $familiar(_templateObject2016 || (_templateObject2016 = _taggedTemplateLiteral62(["Left-Hand Man"])));
        default:
          return void 0;
      }
    }
    /**
     * Returns the bonus value associated with a given item.
     *
     * @param item The item to check the bonus of.
     * @returns The bonus assigned to that item.
     */
  }, {
    key: "getBonus",
    value: function getBonus(item10) {
      var _a;
      return (_a = this.bonuses.get(item10)) !== null && _a !== void 0 ? _a : 0;
    }
    /**
     * Applies a value to any existing bonus this item has, using a rule assigned by the `reducer` parameter
     *
     * @param item The item to try to apply a bonus to.
     * @param value The value to try to apply.
     * @param reducer Function that combines new and current bonus
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "applyBonus",
    value: function applyBonus(item10, value, reducer) {
      var previous = this.getBonus(item10);
      return this.setBonus(item10, reducer(value, previous));
    }
    /**
     * Sets the bonus value of an item equal to a given value, overriding any current bonus assigned.
     *
     * @param item The item to try to apply a bonus to.
     * @param value The value to try to apply.
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "setBonus",
    value: function setBonus(item10, value) {
      this.bonuses.set(item10, value);
      return value;
    }
    /**
     * Adds a value to any existing bonus this item has
     *
     * @param item The item to try to add a bonus to.
     * @param value The value to try to add.
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "addBonus",
    value: function addBonus(item10, value) {
      return this.applyBonus(item10, value, function(a, b) {
        return a + b;
      });
    }
    /**
     * Apply the given items' bonuses to the outfit, using a rule given by the reducer
     *
     * @param items A map containing items and their bonuses
     * @param reducer A way of combining new bonuses with existing bonuses
     */
  }, {
    key: "applyBonuses",
    value: function applyBonuses(items, reducer) {
      var _iterator = _createForOfIteratorHelper19(items), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _step$value = _slicedToArray22(_step.value, 2), item10 = _step$value[0], value = _step$value[1];
          this.applyBonus(item10, value, reducer);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Sets the bonuses of the given items, overriding existing bonuses
     *
     * @param items Map containing items and bonuses
     */
  }, {
    key: "setBonuses",
    value: function setBonuses(items) {
      this.applyBonuses(items, function(a) {
        return a;
      });
    }
    /**
     * Adds the bonuses of the given items to any existing bonuses they ahave
     *
     * @param items Map containing items and bonuses
     */
  }, {
    key: "addBonuses",
    value: function addBonuses(items) {
      this.applyBonuses(items, function(a, b) {
        return a + b;
      });
    }
  }, {
    key: "equipUsingFamiliar",
    value: function equipUsingFamiliar(item10, slot) {
      if (![void 0, $slot(_templateObject2132 || (_templateObject2132 = _taggedTemplateLiteral62(["familiar"])))].includes(slot))
        return false;
      if (this.equips.has($slot(_templateObject2218 || (_templateObject2218 = _taggedTemplateLiteral62(["familiar"])))))
        return false;
      if ((0, import_kolmafia72.booleanModifier)(item10, "Single Equip"))
        return false;
      var familiar7 = this.getHoldingFamiliar(item10);
      if (familiar7 === void 0 || !this.equip(familiar7))
        return false;
      this.equips.set($slot(_templateObject2317 || (_templateObject2317 = _taggedTemplateLiteral62(["familiar"]))), item10);
      return true;
    }
  }, {
    key: "equipItem",
    value: function equipItem(item10, slot) {
      return this.haveEquipped(item10, slot) || this.equipItemNone(item10, slot) || this.isAvailable(item10) && (this.equipNonAccessory(item10, slot) || this.equipAccessory(item10, slot) || this.equipUsingDualWield(item10, slot) || this.equipUsingFamiliar(item10, slot));
    }
  }, {
    key: "equipFamiliar",
    value: function equipFamiliar(familiar7) {
      if (familiar7 === this.familiar)
        return true;
      if (this.familiar !== void 0)
        return false;
      if (familiar7 !== $familiar.none) {
        if (!have(familiar7))
          return false;
        if (Array.from(this.riders.values()).includes(familiar7))
          return false;
      }
      var item10 = this.equips.get($slot(_templateObject2415 || (_templateObject2415 = _taggedTemplateLiteral62(["familiar"]))));
      if (item10 !== void 0 && item10 !== $item.none && !(0, import_kolmafia72.canEquip)(familiar7, item10))
        return false;
      this.familiar = familiar7;
      return true;
    }
  }, {
    key: "equipSpec",
    value: function equipSpec(spec) {
      var _this$avoid;
      var _a, _b, _c, _d, _e, _f;
      var succeeded = true;
      for (var _i = 0, _outfitSlots2 = outfitSlots; _i < _outfitSlots2.length; _i++) {
        var slotName = _outfitSlots2[_i];
        var slot = (_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject2515 || (_templateObject2515 = _taggedTemplateLiteral62(["familiar"])))], ["offhand", $slot(_templateObject2615 || (_templateObject2615 = _taggedTemplateLiteral62(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia72.toSlot)(slotName);
        var itemOrItems = spec[slotName];
        if (itemOrItems !== void 0 && !this.equip(itemOrItems, slot))
          succeeded = false;
      }
      var _iterator2 = _createForOfIteratorHelper19((_b = spec === null || spec === void 0 ? void 0 : spec.equip) !== null && _b !== void 0 ? _b : []), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var item10 = _step2.value;
          if (!this.equip(item10))
            succeeded = false;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if ((spec === null || spec === void 0 ? void 0 : spec.familiar) !== void 0) {
        if (!this.equip(spec.familiar))
          succeeded = false;
      }
      (_this$avoid = this.avoid).push.apply(_this$avoid, _toConsumableArray20((_c = spec === null || spec === void 0 ? void 0 : spec.avoid) !== null && _c !== void 0 ? _c : []));
      this.skipDefaults = this.skipDefaults || ((_d = spec.skipDefaults) !== null && _d !== void 0 ? _d : false);
      if (spec.modifier) {
        var _this$modifier;
        if (Array.isArray(spec.modifier))
          (_this$modifier = this.modifier).push.apply(_this$modifier, _toConsumableArray20(spec.modifier));
        else
          this.modifier.push(spec.modifier);
      }
      if (spec.modes) {
        if (!this.setModes(spec.modes)) {
          succeeded = false;
        }
      }
      if (spec.riders) {
        if (spec.riders["buddy-bjorn"] && !this.bjornify(spec.riders["buddy-bjorn"]))
          succeeded = false;
        if (spec.riders["crown-of-thrones"] && !this.enthrone(spec.riders["crown-of-thrones"]))
          succeeded = false;
      }
      if (spec.bonuses) {
        this.addBonuses(spec.bonuses);
      }
      this.beforeDress.apply(this, _toConsumableArray20((_e = spec.beforeDress) !== null && _e !== void 0 ? _e : []));
      this.afterDress.apply(this, _toConsumableArray20((_f = spec.afterDress) !== null && _f !== void 0 ? _f : []));
      return succeeded;
    }
    /**
     * Equip the first thing that can be equipped to the outfit.
     *
     * @param things The things to equip.
     * @param slot The slot to equip them.
     * @returns True if one of the things is equipped, and false otherwise.
     */
  }, {
    key: "equipFirst",
    value: function equipFirst(things, slot) {
      var _this = this;
      if (things.length === 0)
        return true;
      return things.some(function(val) {
        return _this.equip(val, slot);
      });
    }
    /**
     * Equip a thing to the outfit.
     *
     * If no slot is given, then the thing will be equipped wherever possible
     * (possibly using dual-wielding, any of the accessory slots, or as
     * familiar equipment). If it is impossible to add this thing anywhere to
     * the outfit, this function will return false.
     *
     * If a slot is given, the item will be equipped only in that slot. If the
     * slot is filled with a different item, this function will return false.
     *
     * If the thing is already equipped in the provided slot, or if no slot is
     * given and the thing is already equipped in any slot, this function will
     * return true and not change the outfit.
     *
     * @param thing The thing or things to equip.
     * @param slot The slot to equip them.
     * @returns True if the thing was sucessfully equipped, and false otherwise.
     */
  }, {
    key: "equip",
    value: function equip14(thing, slot) {
      var _this = this;
      if (Array.isArray(thing)) {
        if (slot !== void 0)
          return this.equipFirst(thing, slot);
        return thing.every(function(val) {
          return _this.equip(val);
        });
      }
      if (thing instanceof import_kolmafia72.Item)
        return this.equipItem(thing, slot);
      if (thing instanceof import_kolmafia72.Familiar)
        return this.equipFamiliar(thing);
      if (thing instanceof Outfit2)
        return this.equipSpec(thing.spec());
      return this.equipSpec(thing);
    }
  }, {
    key: "equipRider",
    value: (
      /**
       * Add a rider to the outfit.
       *
       * This function does *not* equip the corresponding item; it must be equipped separately.
       *
       * If a familiar is already specified as the rider that is different from the provided target, this function will return false and not change the rider.
       * @param target The familiar to use as the rider, or a ranked list of familiars to try to use as the rider.
       * @returns True if we successfully set the slot to a valid rider.
       */
      function equipRider(target, slot) {
        var _this = this;
        var current2 = this.riders.get(slot);
        var targets = Array.isArray(target) ? target : [target];
        if (current2) {
          return targets.includes(current2);
        }
        var otherRiders = _toConsumableArray20(this.riders.entries()).filter(function(_ref) {
          var _ref2 = _slicedToArray22(_ref, 1), key = _ref2[0];
          return slot !== key;
        }).map(function(_ref3) {
          var _ref4 = _slicedToArray22(_ref3, 2), value = _ref4[1];
          return value;
        });
        var fam2 = targets.find(function(f) {
          return have(f) && _this.familiar !== f && !otherRiders.includes(f);
        });
        if (fam2) {
          this.riders.set(slot, fam2);
          return true;
        }
        return false;
      }
    )
    /**
     * Add a bjornified familiar to the outfit.
     *
     * This function does *not* equip the buddy bjorn itself; it must be equipped separately.
     *
     * If a familiar is already specified for the buddy bjorn that is different from the provided target, this function will return false and not change the buddy bjorn.
     * @param target The familiar to bjornify, or a ranked list of familiars to try to bjornify.
     * @returns True if we successfully set the bjorn to a valid target.
     */
  }, {
    key: "bjornify",
    value: function bjornify(target) {
      return this.equipRider(target, $slot(_templateObject2715 || (_templateObject2715 = _taggedTemplateLiteral62(["buddy-bjorn"]))));
    }
    /**
     * Add anenthroned familiar to the outfit.
     *
     * This function does *not* equip the crown of thrones itself; it must be equipped separately.
     *
     * If a familiar is already specified for the crown of thrones that is different from the provided target, this function will return false and not change the crown of thrones.
     * @param target The familiar to enthrone, or a ranked list of familiars to try to enthrone.
     * @returns True if we successfully set the enthrone to a valid target.
     */
  }, {
    key: "enthrone",
    value: function enthrone(target) {
      return this.equipRider(target, $slot(_templateObject2813 || (_templateObject2813 = _taggedTemplateLiteral62(["crown-of-thrones"]))));
    }
    /**
     * Set the provided modes for items that may be equipped in the outfit.
     *
     * This function does *not* equip items for the set modes; they must be
     * equipped separately.
     *
     * If a mode is already set for an item that is different from the provided
     * mode, this function will return false and not change the mode for that
     * item. (But other modes might still be changed if they are compatible.)
     *
     * Note that the superhero and instuctions of a retrocape can be set
     * independently (`undefined` is treated as "don't care").
     *
     * @param modes Modes to set in this outfit.
     * @returns True if all modes were sucessfully set, and false otherwise.
     */
  }, {
    key: "setModes",
    value: function setModes(modes) {
      var _a, _b;
      var compatible = true;
      for (var _i2 = 0, _modeableCommands = modeableCommands2; _i2 < _modeableCommands.length; _i2++) {
        var mode = _modeableCommands[_i2];
        if (mode === "retrocape")
          continue;
        if (this.modes[mode] && modes[mode] && this.modes[mode] !== modes[mode]) {
          compatible = false;
        }
      }
      if (this.modes["retrocape"] && modes["retrocape"]) {
        if (this.modes["retrocape"][0] && modes["retrocape"][0] && this.modes["retrocape"][0] !== modes["retrocape"][0]) {
          compatible = false;
        }
        if (this.modes["retrocape"][1] && modes["retrocape"][1] && this.modes["retrocape"][1] !== modes["retrocape"][1]) {
          compatible = false;
        }
        this.modes["retrocape"][0] = (_a = this.modes["retrocape"][0]) !== null && _a !== void 0 ? _a : modes["retrocape"][0];
        this.modes["retrocape"][1] = (_b = this.modes["retrocape"][1]) !== null && _b !== void 0 ? _b : modes["retrocape"][1];
      }
      this.modes = _objectSpread10(_objectSpread10({}, modes), this.modes);
      return compatible;
    }
    /**
     * Check if it is possible to equip a thing to this outfit using .equip().
     *
     * This does not change the current outfit.
     *
     * @param thing The thing to equip.
     * @param slot The slot to equip them.
     * @returns True if this thing can be equipped.
     */
  }, {
    key: "canEquip",
    value: function canEquip19(thing, slot) {
      var outfit3 = this.clone();
      return outfit3.equip(thing, slot);
    }
    /**
     * Check if it is possible to equip a thing to this outfit using .equip(); if it is, do so.
     *
     * This does change the current outfit.
     * @param thing The thing to equip.
     * @param slot The slot to equip them.
     * @returns True if this thing was successfully equipped.
     */
  }, {
    key: "tryEquip",
    value: function tryEquip(thing, slot) {
      return this.canEquip(thing, slot) && this.equip(thing, slot);
    }
  }, {
    key: "afterDress",
    value: function afterDress() {
      var _this$postActions;
      (_this$postActions = this.postActions).push.apply(_this$postActions, arguments);
    }
  }, {
    key: "beforeDress",
    value: function beforeDress() {
      var _this$preActions;
      (_this$preActions = this.preActions).push.apply(_this$preActions, arguments);
    }
    /**
     * Equip this outfit.
     */
  }, {
    key: "_dress",
    value: function _dress(refreshed) {
      var _this = this;
      if (this.familiar)
        (0, import_kolmafia72.useFamiliar)(this.familiar);
      var targetEquipment = Array.from(this.equips.values());
      var usedSlots = /* @__PURE__ */ new Set();
      var nonaccessorySlots = $slots(_templateObject2912 || (_templateObject2912 = _taggedTemplateLiteral62(["weapon, off-hand, hat, back, shirt, pants, familiar"])));
      var bjorn = this.riders.get($slot(_templateObject3012 || (_templateObject3012 = _taggedTemplateLiteral62(["buddy-bjorn"]))));
      if (bjorn && (this.equips.get($slot(_templateObject3119 || (_templateObject3119 = _taggedTemplateLiteral62(["back"])))) === $item(_templateObject3214 || (_templateObject3214 = _taggedTemplateLiteral62(["Buddy Bjorn"]))) || this.getBonus($item(_templateObject3314 || (_templateObject3314 = _taggedTemplateLiteral62(["Buddy Bjorn"])))))) {
        usedSlots.add($slot(_templateObject3411 || (_templateObject3411 = _taggedTemplateLiteral62(["buddy-bjorn"]))));
        usedSlots.add($slot(_templateObject3511 || (_templateObject3511 = _taggedTemplateLiteral62(["crown-of-thrones"]))));
      }
      var crown = this.riders.get($slot(_templateObject3611 || (_templateObject3611 = _taggedTemplateLiteral62(["crown-of-thrones"]))));
      if (crown && (this.equips.get($slot(_templateObject3711 || (_templateObject3711 = _taggedTemplateLiteral62(["hat"])))) === $item(_templateObject3811 || (_templateObject3811 = _taggedTemplateLiteral62(["Crown of Thrones"]))) || this.getBonus($item(_templateObject3911 || (_templateObject3911 = _taggedTemplateLiteral62(["Crown of Thrones"])))))) {
        usedSlots.add($slot(_templateObject4011 || (_templateObject4011 = _taggedTemplateLiteral62(["buddy-bjorn"]))));
        usedSlots.add($slot(_templateObject4113 || (_templateObject4113 = _taggedTemplateLiteral62(["crown-of-thrones"]))));
      }
      var _iterator3 = _createForOfIteratorHelper19(nonaccessorySlots), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var slot = _step3.value;
          if (targetEquipment.includes((0, import_kolmafia72.equippedItem)(slot)) && this.equips.get(slot) !== (0, import_kolmafia72.equippedItem)(slot) || this.avoid.includes((0, import_kolmafia72.equippedItem)(slot)) || slot === $slot(_templateObject4910 || (_templateObject4910 = _taggedTemplateLiteral62(["weapon"]))) && weaponHands((0, import_kolmafia72.equippedItem)(slot)) !== 1 && this.equips.has($slot(_templateObject507 || (_templateObject507 = _taggedTemplateLiteral62(["offhand"])))) && !this.equips.has($slot(_templateObject5112 || (_templateObject5112 = _taggedTemplateLiteral62(["weapon"])))))
            (0, import_kolmafia72.equip)(slot, $item.none);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      var _iterator4 = _createForOfIteratorHelper19(nonaccessorySlots), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var _slot = _step4.value;
          var equipment = this.equips.get(_slot);
          if (equipment) {
            (0, import_kolmafia72.equip)(_slot, equipment);
            usedSlots.add(_slot);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      var accessorySlots = $slots(_templateObject4212 || (_templateObject4212 = _taggedTemplateLiteral62(["acc1, acc2, acc3"])));
      var accessoryEquips = accessorySlots.map(function(slot2) {
        return _this.equips.get(slot2);
      }).filter(function(item10) {
        return item10 !== void 0;
      });
      var missingAccessories = [];
      var _iterator5 = _createForOfIteratorHelper19(accessoryEquips), _step5;
      try {
        var _loop = function _loop3() {
          var accessory2 = _step5.value;
          var alreadyEquipped = accessorySlots.find(function(slot2) {
            return !usedSlots.has(slot2) && (0, import_kolmafia72.equippedItem)(slot2) === accessory2;
          });
          if (alreadyEquipped) {
            usedSlots.add(alreadyEquipped);
          } else {
            missingAccessories.push(accessory2);
          }
        };
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          _loop();
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      for (var _i3 = 0, _missingAccessories = missingAccessories; _i3 < _missingAccessories.length; _i3++) {
        var accessory = _missingAccessories[_i3];
        var unusedSlot = accessorySlots.find(function(slot2) {
          return !usedSlots.has(slot2);
        });
        if (unusedSlot === void 0) {
          throw "No accessory slots remaining";
        }
        (0, import_kolmafia72.equip)(unusedSlot, accessory);
        usedSlots.add(unusedSlot);
      }
      var modes = convertToLibramModes(this.modes);
      if (this.modifier.length > 0) {
        var allRequirements = [new Requirement(this.modifier, {
          preventSlot: _toConsumableArray20(usedSlots),
          preventEquip: this.avoid,
          modes: modes,
          bonusEquip: this.bonuses
        })];
        if (refreshed)
          allRequirements.push(FORCE_REFRESH_REQUIREMENT);
        if (!Requirement.merge(allRequirements).maximize()) {
          if (!refreshed) {
            (0, import_kolmafia72.cliExecute)("refresh inventory");
            this._dress(true);
            return;
          } else
            throw new Error("Failed to maximize properly!");
        }
        (0, import_kolmafia72.logprint)("Maximize: ".concat(this.modifier));
      }
      applyModes(modes);
      if (bjorn && (0, import_kolmafia72.haveEquipped)($item(_templateObject4312 || (_templateObject4312 = _taggedTemplateLiteral62(["Buddy Bjorn"]))))) {
        if ((0, import_kolmafia72.myEnthronedFamiliar)() === bjorn)
          (0, import_kolmafia72.enthroneFamiliar)($familiar.none);
        if ((0, import_kolmafia72.myBjornedFamiliar)() !== bjorn)
          (0, import_kolmafia72.bjornifyFamiliar)(bjorn);
      }
      if (crown && (0, import_kolmafia72.haveEquipped)($item(_templateObject4411 || (_templateObject4411 = _taggedTemplateLiteral62(["Crown of Thrones"]))))) {
        if ((0, import_kolmafia72.myBjornedFamiliar)() === crown)
          (0, import_kolmafia72.bjornifyFamiliar)($familiar.none);
        if ((0, import_kolmafia72.myEnthronedFamiliar)() !== crown)
          (0, import_kolmafia72.enthroneFamiliar)(crown);
      }
      if (this.familiar !== void 0 && (0, import_kolmafia72.myFamiliar)() !== this.familiar)
        throw "Failed to fully dress (expected: familiar ".concat(this.familiar, ")");
      var _iterator6 = _createForOfIteratorHelper19(nonaccessorySlots), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var _slot2 = _step6.value;
          if (this.equips.has(_slot2) && (0, import_kolmafia72.equippedItem)(_slot2) !== this.equips.get(_slot2)) {
            throw "Failed to fully dress (expected: ".concat(_slot2, " ").concat(this.equips.get(_slot2), ")");
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      var _iterator7 = _createForOfIteratorHelper19(accessoryEquips), _step7;
      try {
        var _loop2 = function _loop22() {
          var accessory2 = _step7.value;
          if ((0, import_kolmafia72.equippedAmount)(accessory2) < accessoryEquips.filter(function(acc) {
            return acc === accessory2;
          }).length) {
            throw "Failed to fully dress (expected: acc ".concat(accessory2, ")");
          }
        };
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          _loop2();
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      for (var _i4 = 0, _arr = [[$slot(_templateObject4511 || (_templateObject4511 = _taggedTemplateLiteral62(["buddy-bjorn"]))), $item(_templateObject4611 || (_templateObject4611 = _taggedTemplateLiteral62(["Buddy Bjorn"]))), import_kolmafia72.myBjornedFamiliar], [$slot(_templateObject4711 || (_templateObject4711 = _taggedTemplateLiteral62(["crown-of-thrones"]))), $item(_templateObject4811 || (_templateObject4811 = _taggedTemplateLiteral62(["Crown of Thrones"]))), import_kolmafia72.myEnthronedFamiliar]]; _i4 < _arr.length; _i4++) {
        var _arr$_i = _slicedToArray22(_arr[_i4], 3), rider = _arr$_i[0], throne = _arr$_i[1], checkingFunction = _arr$_i[2];
        var wanted = this.riders.get(rider);
        if (_toConsumableArray20(this.equips.values()).includes(throne) && wanted && checkingFunction() !== wanted) {
          throw "Failed to fully dress: (expected ".concat(rider, " ").concat(wanted, ")");
        }
      }
    }
  }, {
    key: "dress",
    value: function dress() {
      var _iterator8 = _createForOfIteratorHelper19(this.preActions), _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
          var action = _step8.value;
          action();
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      this._dress(false);
      var _iterator9 = _createForOfIteratorHelper19(this.postActions), _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
          var _action = _step9.value;
          _action();
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
    }
    /**
     * Build an Outfit identical to this outfit.
     */
  }, {
    key: "clone",
    value: function clone() {
      var result = new Outfit2();
      result.equips = new Map(this.equips);
      result.skipDefaults = this.skipDefaults;
      result.familiar = this.familiar;
      result.modifier = _toConsumableArray20(this.modifier);
      result.avoid = _toConsumableArray20(this.avoid);
      result.modes = _objectSpread10({}, this.modes);
      result.riders = new Map(this.riders);
      result.bonuses = new Map(this.bonuses);
      result.beforeDress.apply(result, _toConsumableArray20(this.preActions));
      result.afterDress.apply(result, _toConsumableArray20(this.postActions));
      return result;
    }
    /**
     * Build an OutfitSpec identical to this outfit.
     */
  }, {
    key: "spec",
    value: function spec() {
      var _a;
      var result = {
        modifier: _toConsumableArray20(this.modifier),
        avoid: _toConsumableArray20(this.avoid),
        skipDefaults: this.skipDefaults,
        modes: _objectSpread10({}, this.modes),
        bonuses: new Map(this.bonuses)
      };
      if (this.familiar)
        result.familiar = this.familiar;
      for (var _i5 = 0, _outfitSlots2 = outfitSlots; _i5 < _outfitSlots2.length; _i5++) {
        var slotName = _outfitSlots2[_i5];
        var entry = this.equips.get((_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject5211 || (_templateObject5211 = _taggedTemplateLiteral62(["familiar"])))], ["offhand", $slot(_templateObject5311 || (_templateObject5311 = _taggedTemplateLiteral62(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia72.toSlot)(slotName));
        if (entry)
          result[slotName] = entry;
      }
      var riders = {};
      var buddyRider = this.riders.get($slot(_templateObject5411 || (_templateObject5411 = _taggedTemplateLiteral62(["buddy-bjorn"]))));
      if (buddyRider !== void 0)
        riders["buddy-bjorn"] = buddyRider;
      var throneRider = this.riders.get($slot(_templateObject5510 || (_templateObject5510 = _taggedTemplateLiteral62(["crown-of-thrones"]))));
      if (throneRider !== void 0)
        riders["crown-of-thrones"] = throneRider;
      if (buddyRider !== void 0 || throneRider !== void 0)
        result.riders = riders;
      if (this.preActions.length)
        result.beforeDress = this.preActions;
      if (this.postActions.length)
        result.afterDress = this.postActions;
      return result;
    }
  }], [{
    key: "current",
    value: function current2() {
      var _a;
      var outfit3 = new Outfit2();
      var familiar7 = (0, import_kolmafia72.myFamiliar)();
      if (outfit3.equip(familiar7)) {
        throw "Failed to create outfit from current state (expected: familiar ".concat(familiar7, ")");
      }
      for (var _i6 = 0, _outfitSlots3 = outfitSlots; _i6 < _outfitSlots3.length; _i6++) {
        var slotName = _outfitSlots3[_i6];
        var slot = (_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject566 || (_templateObject566 = _taggedTemplateLiteral62(["familiar"])))], ["offhand", $slot(_templateObject576 || (_templateObject576 = _taggedTemplateLiteral62(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia72.toSlot)(slotName);
        var item10 = (0, import_kolmafia72.equippedItem)(slot);
        if (!outfit3.equip(item10, slot)) {
          throw "Failed to create outfit from current state (expected: ".concat(slot, " ").concat(item10, ")");
        }
      }
      if ((0, import_kolmafia72.haveEquipped)($item(_templateObject586 || (_templateObject586 = _taggedTemplateLiteral62(["Crown of Thrones"])))))
        outfit3.riders.set($slot(_templateObject595 || (_templateObject595 = _taggedTemplateLiteral62(["crown-of-thrones"]))), (0, import_kolmafia72.myEnthronedFamiliar)());
      if ((0, import_kolmafia72.haveEquipped)($item(_templateObject605 || (_templateObject605 = _taggedTemplateLiteral62(["Buddy Bjorn"])))))
        outfit3.riders.set($slot(_templateObject6111 || (_templateObject6111 = _taggedTemplateLiteral62(["buddy-bjorn"]))), (0, import_kolmafia72.myBjornedFamiliar)());
      outfit3.setModes(getCurrentModes2());
      return outfit3;
    }
  }, {
    key: "from",
    value: function from(spec) {
      var error2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
      var _a;
      var outfit3 = new Outfit2();
      if (spec instanceof Requirement) {
        var result = {};
        result.modifier = spec.maximizeParameters;
        if ((_a = spec.maximizeOptions.forceEquip) === null || _a === void 0 ? void 0 : _a.length) {
          result.equip = spec.maximizeOptions.forceEquip;
        }
        result.avoid = spec.maximizeOptions.preventEquip;
        result.bonuses = spec.maximizeOptions.bonusEquip;
        if (spec.maximizeOptions.modes) {
          result.modes = convertFromLibramModes(spec.maximizeOptions.modes);
        }
        var cleanedResult = Object.fromEntries(_toConsumableArray20(Object.entries(result)).filter(function(_ref5) {
          var _ref6 = _slicedToArray22(_ref5, 2), v = _ref6[1];
          return v !== void 0;
        }));
        return Outfit2.from(cleanedResult);
      }
      var success = outfit3.equip(spec);
      if (!success && error2)
        throw error2;
      return success ? outfit3 : null;
    }
  }]);
  return Outfit2;
}();
function convertToLibramModes(modes) {
  var _a;
  return {
    backupcamera: modes["backupcamera"],
    umbrella: modes["umbrella"],
    snowsuit: modes["snowsuit"],
    edpiece: modes["edpiece"],
    retrocape: (_a = modes["retrocape"]) === null || _a === void 0 ? void 0 : _a.filter(function(s) {
      return s !== void 0;
    }).join(" "),
    parka: modes["parka"]
  };
}
function convertFromLibramModes(modes) {
  return modes.retrocape ? _objectSpread10(_objectSpread10({}, modes), {}, {
    retrocape: modes.retrocape.split(" ")
  }) : modes;
}
function getCurrentModes2() {
  return {
    backupcamera: getMode("backupCameraMode", ["ml", "meat", "init"]),
    umbrella: getMode("umbrellaState", ["broken", "forward-facing", "bucket style", "pitchfork style", "constantly twirling", "cocoon"]),
    snowsuit: getMode("snowsuit", ["eyebrows", "smirk", "nose", "goatee", "hat"]),
    edpiece: getMode("edPiece", ["bear", "owl", "puma", "hyena", "mouse", "weasel", "fish"]),
    retrocape: [getMode("retroCapeSuperhero", ["vampire", "heck", "robot"]), getMode("retroCapeWashingInstructions", ["hold", "thrill", "kiss", "kill"])],
    parka: getMode("parkaMode", ["kachungasaur", "dilophosaur", "ghostasaurus", "spikolodon", "pterodactyl"])
  };
}
function getMode(property, options) {
  var val = get(property, "");
  return options.find(function(s) {
    return s === val;
  });
}

// ../../node_modules/grimoire-kolmafia/dist/engine.js
var _templateObject508;
function _taggedTemplateLiteral63(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray21(arr) {
  return _arrayWithoutHoles21(arr) || _iterableToArray21(arr) || _unsupportedIterableToArray39(arr) || _nonIterableSpread21();
}
function _nonIterableSpread21() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray21(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles21(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray39(arr);
}
function _slicedToArray23(arr, i) {
  return _arrayWithHoles23(arr) || _iterableToArrayLimit23(arr, i) || _unsupportedIterableToArray39(arr, i) || _nonIterableRest23();
}
function _nonIterableRest23() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit23(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles23(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper20(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray39(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e3) {
    didErr = true;
    err = _e3;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray39(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray39(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray39(o, minLen);
}
function _arrayLikeToArray39(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys11(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread11(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys11(Object(t), true).forEach(function(r2) {
      _defineProperty26(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys11(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty26(obj, key, value) {
  key = _toPropertyKey29(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _defineProperties24(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey29(descriptor.key), descriptor);
  }
}
function _createClass24(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties24(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties24(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey29(arg) {
  var key = _toPrimitive29(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive29(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _classCallCheck24(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
var EngineOptions = /* @__PURE__ */ _createClass24(function EngineOptions2() {
  _classCallCheck24(this, EngineOptions2);
});
var grimoireCCS = "grimoire_macro";
var Engine = /* @__PURE__ */ function() {
  function Engine2(tasks, options) {
    var _this = this;
    _classCallCheck24(this, Engine2);
    this.attempts = {};
    this.propertyManager = new PropertiesManager();
    this.tasks_by_name = /* @__PURE__ */ new Map();
    this.cachedCcsContents = "";
    this.options = options !== null && options !== void 0 ? options : {};
    this.tasks = tasks.map(function(task2) {
      return _objectSpread11(_objectSpread11({}, _this.options.default_task_options), task2);
    });
    var _iterator = _createForOfIteratorHelper20(this.tasks), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var task = _step.value;
        this.tasks_by_name.set(task.name, task);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    this.initPropertiesManager(this.propertyManager);
  }
  _createClass24(Engine2, [{
    key: "getNextTask",
    value: function getNextTask() {
      var _this = this;
      return this.tasks.find(function(task) {
        return _this.available(task);
      });
    }
    /**
     * Continually get the next task and execute it.
     * @param actions If given, only perform up to this many tasks.
     */
  }, {
    key: "run",
    value: function run(actions) {
      for (var i = 0; i < (actions !== null && actions !== void 0 ? actions : Infinity); i++) {
        var task = this.getNextTask();
        if (!task)
          return;
        this.execute(task);
      }
    }
    /**
     * Close the engine and reset all properties.
     * After this has been called, this object should not be used.
     */
  }, {
    key: "destruct",
    value: function destruct() {
      this.propertyManager.resetAll();
      (0, import_kolmafia73.setAutoAttack)(0);
    }
    /**
     * Check if the given task is available at this moment.
     * @returns true if all dependencies are complete and the task is ready.
     *  Note that dependencies are not checked transitively. That is, if
     *  A depends on B which depends on C, then A is ready if B is complete
     *  (regardless of if C is complete or not).
     */
  }, {
    key: "available",
    value: function available4(task) {
      var _a, _b;
      if (((_a = task.limit) === null || _a === void 0 ? void 0 : _a.skip) !== void 0 && this.attempts[task.name] >= task.limit.skip)
        return false;
      var _iterator2 = _createForOfIteratorHelper20((_b = task.after) !== null && _b !== void 0 ? _b : []), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var after = _step2.value;
          var after_task = this.tasks_by_name.get(after);
          if (after_task === void 0)
            throw "Unknown task dependency ".concat(after, " on ").concat(task.name);
          if (!after_task.completed())
            return false;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (task.ready && !task.ready())
        return false;
      if (task.completed())
        return false;
      return true;
    }
    /**
     * Perform all steps to execute the provided task.
     * This is the main entry point for the Engine.
     * @param task The current executing task.
     */
  }, {
    key: "execute",
    value: function execute(task) {
      var _a, _b, _c, _d, _e;
      (0, import_kolmafia73.print)("");
      (0, import_kolmafia73.print)("Executing ".concat(task.name), "blue");
      var postcondition = (_b = (_a = task.limit) === null || _a === void 0 ? void 0 : _a.guard) === null || _b === void 0 ? void 0 : _b.call(_a);
      this.acquireItems(task);
      this.acquireEffects(task);
      var task_combat = (_d = (_c = task.combat) === null || _c === void 0 ? void 0 : _c.clone()) !== null && _d !== void 0 ? _d : new CombatStrategy();
      var outfit3 = this.createOutfit(task);
      var task_resources = new CombatResources();
      this.customize(task, outfit3, task_combat, task_resources);
      this.dress(task, outfit3);
      this.setCombat(task, task_combat, task_resources);
      this.setChoices(task, this.propertyManager);
      var _iterator3 = _createForOfIteratorHelper20(task_resources.all()), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var resource = _step3.value;
          (_e = resource.prepare) === null || _e === void 0 ? void 0 : _e.call(resource);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      this.prepare(task);
      this.do(task);
      while (this.shouldRepeatAdv(task)) {
        _set("lastEncounter", "");
        this.do(task);
      }
      this.post(task);
      this.markAttempt(task);
      this.checkLimits(task, postcondition);
    }
    /**
     * Acquire all items for the task.
     * @param task The current executing task.
     */
  }, {
    key: "acquireItems",
    value: function acquireItems(task) {
      var _a;
      var acquire2 = undelay(task.acquire);
      var _iterator4 = _createForOfIteratorHelper20(acquire2 || []), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var to_get = _step4.value;
          var num_needed = (_a = to_get.num) !== null && _a !== void 0 ? _a : 1;
          var num_have = (0, import_kolmafia73.itemAmount)(to_get.item) + (0, import_kolmafia73.equippedAmount)(to_get.item);
          if (num_needed <= num_have)
            continue;
          if (to_get.useful !== void 0 && !to_get.useful())
            continue;
          if (to_get.get) {
            to_get.get();
          } else if (to_get.price !== void 0) {
            (0, import_kolmafia73.buy)(to_get.item, num_needed - num_have, to_get.price);
          } else if (Object.keys((0, import_kolmafia73.getRelated)(to_get.item, "fold")).length > 0) {
            (0, import_kolmafia73.cliExecute)("fold ".concat(to_get.item));
          } else {
            (0, import_kolmafia73.retrieveItem)(to_get.item, num_needed);
          }
          if ((0, import_kolmafia73.itemAmount)(to_get.item) + (0, import_kolmafia73.equippedAmount)(to_get.item) < num_needed && !to_get.optional) {
            throw "Task ".concat(task.name, " was unable to acquire ").concat(num_needed, " ").concat(to_get.item);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    /**
     * Acquire all effects for the task.
     * @param task The current executing task.
     */
  }, {
    key: "acquireEffects",
    value: function acquireEffects(task) {
      var _a;
      var effects = (_a = undelay(task.effects)) !== null && _a !== void 0 ? _a : [];
      var songs = effects.filter(function(effect3) {
        return isSong(effect3);
      });
      if (songs.length > maxSongs())
        throw "Too many AT songs";
      var extraSongs = Object.keys((0, import_kolmafia73.myEffects)()).map(function(effectName) {
        return (0, import_kolmafia73.toEffect)(effectName);
      }).filter(function(effect3) {
        return isSong(effect3) && !songs.includes(effect3);
      });
      while (songs.length + extraSongs.length > maxSongs()) {
        var toRemove = extraSongs.pop();
        if (toRemove === void 0) {
          break;
        } else {
          uneffect(toRemove);
        }
      }
      var _iterator5 = _createForOfIteratorHelper20(effects), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var effect2 = _step5.value;
          ensureEffect(effect2);
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
    /**
     * Create an outfit for the task with all required equipment.
     * @param task The current executing task.
     */
  }, {
    key: "createOutfit",
    value: function createOutfit(task) {
      var spec = undelay(task.outfit);
      if (spec instanceof Outfit)
        return spec.clone();
      var outfit3 = new Outfit();
      if (spec !== void 0) {
        if (!outfit3.equip(spec) && !this.options.allow_partial_outfits) {
          throw "Unable to equip all items for ".concat(task.name);
        }
      }
      return outfit3;
    }
    /**
     * Equip the outfit for the task.
     * @param task The current executing task.
     * @param outfit The outfit for the task, possibly augmented by the engine.
     */
  }, {
    key: "dress",
    value: function dress(task, outfit3) {
      if (task.do instanceof import_kolmafia73.Location)
        (0, import_kolmafia73.setLocation)(task.do);
      outfit3.dress();
    }
    /* eslint-disable @typescript-eslint/no-unused-vars */
    /**
     * Perform any engine-specific customization for the outfit and combat plan.
     *
     * This is a natural method to override in order to:
     *   * Enable the use of any resources in the outfit or combat (e.g., allocate banishers).
     *   * Equip a default outfit.
     *   * Determine additional monster macros at a global level (e.g., use flyers).
     * @param task The current executing task.
     * @param outfit The outfit for the task.
     * @param combat The combat strategy so far for the task.
     * @param resources The combat resources assigned so far for the task.
     */
  }, {
    key: "customize",
    value: function customize(task, outfit3, combat, resources) {
    }
    /* eslint-enable @typescript-eslint/no-unused-vars */
    /**
     * Set the choice settings for the task.
     * @param task The current executing task.
     * @param manager The property manager to use.
     */
  }, {
    key: "setChoices",
    value: function setChoices(task, manager) {
      var _a;
      for (var _i = 0, _Object$entries = Object.entries(undelay((_a = task.choices) !== null && _a !== void 0 ? _a : {})); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = _slicedToArray23(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];
        if (value === void 0)
          continue;
        manager.setChoice(parseInt(key), value);
      }
    }
    /**
     * Save the combat macro for this task.
     * @param task The current executing task.
     * @param task_combat The completed combat strategy far for the task.
     * @param task_resources The combat resources assigned for the task.
     */
  }, {
    key: "setCombat",
    value: function setCombat(task, task_combat, task_resources) {
      var _a;
      var macro = task_combat.compile(task_resources, (_a = this.options) === null || _a === void 0 ? void 0 : _a.combat_defaults, task.do instanceof import_kolmafia73.Location ? task.do : void 0);
      macro.save();
      if (!this.options.ccs) {
        var otherCCSEntries = task_combat.compileCcs();
        var ccsContents = ["[default]", '"'.concat(macro.toString(), '"')].concat(_toConsumableArray21(otherCCSEntries)).join("\n");
        (0, import_kolmafia73.logprint)("CCS: ".concat(ccsContents.replace("\n", "\\n ")));
        if (ccsContents !== this.cachedCcsContents) {
          (0, import_kolmafia73.writeCcs)(ccsContents, grimoireCCS);
          (0, import_kolmafia73.cliExecute)("ccs ".concat(grimoireCCS));
          this.cachedCcsContents = ccsContents;
        }
      }
      var autoattack = task_combat.compileAutoattack();
      if (autoattack.toString().length > 1) {
        (0, import_kolmafia73.logprint)("Autoattack macro: ".concat(autoattack.toString()));
        autoattack.setAutoAttack();
      } else {
        (0, import_kolmafia73.setAutoAttack)(0);
      }
    }
    /**
     * Do any task-specific preparation.
     * @param task The current executing task.
     */
  }, {
    key: "prepare",
    value: function prepare(task) {
      var _a;
      (_a = task.prepare) === null || _a === void 0 ? void 0 : _a.call(task);
    }
    /**
     * Actually perform the task.
     * @param task The current executing task.
     */
  }, {
    key: "do",
    value: function _do(task) {
      var result = typeof task.do === "function" ? task.do() : task.do;
      if (result instanceof import_kolmafia73.Location)
        (0, import_kolmafia73.adv1)(result, -1, "");
      (0, import_kolmafia73.runCombat)();
      while ((0, import_kolmafia73.inMultiFight)())
        (0, import_kolmafia73.runCombat)();
      if ((0, import_kolmafia73.choiceFollowsFight)())
        (0, import_kolmafia73.runChoice)(-1);
    }
    /**
     * Check if the task.do should be immediately repeated without any prep.
     *
     * By default, this is only used to repeat a task if we hit one of:
     *   1. Halloweener dog noncombats,
     *   2. June cleaver noncombats,
     *   3. Lil' Doctor™ bag noncombat, or
     *   4. Turtle taming noncombats.
     * @param task The current executing task.
     * @returns True if the task should be immediately repeated.
     */
  }, {
    key: "shouldRepeatAdv",
    value: function shouldRepeatAdv(task) {
      return task.do instanceof import_kolmafia73.Location && lastEncounterWasWanderingNC();
    }
    /**
     * Do any task-specific wrapup activities.
     * @param task The current executing task.
     */
  }, {
    key: "post",
    value: function post(task) {
      var _a;
      (_a = task.post) === null || _a === void 0 ? void 0 : _a.call(task);
    }
    /**
     * Mark that an attempt was made on the current task.
     * @param task The current executing task.
     */
  }, {
    key: "markAttempt",
    value: function markAttempt(task) {
      if (!(task.name in this.attempts))
        this.attempts[task.name] = 0;
      this.attempts[task.name]++;
    }
    /**
     * Check if the task has passed any of its internal limits.
     * @param task The task to check.
     * @throws An error if any of the internal limits have been passed.
     */
  }, {
    key: "checkLimits",
    value: function checkLimits(task, postcondition) {
      var _a;
      if (!task.limit)
        return;
      var failureMessage = task.limit.message ? " ".concat(task.limit.message) : "";
      if (!task.completed()) {
        if (task.limit.tries && this.attempts[task.name] >= task.limit.tries)
          throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.tries, " attempts. Please check what went wrong.").concat(failureMessage);
        if (task.limit.soft && this.attempts[task.name] >= task.limit.soft)
          throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.soft, " attempts. Please check what went wrong (you may just be unlucky).").concat(failureMessage);
        if (task.limit.turns && task.do instanceof import_kolmafia73.Location && task.do.turnsSpent >= task.limit.turns)
          throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.turns, " turns. Please check what went wrong.").concat(failureMessage);
        if (task.limit.unready && ((_a = task.ready) === null || _a === void 0 ? void 0 : _a.call(task)))
          throw "Task ".concat(task.name, " is still ready, but it should not be. Please check what went wrong.").concat(failureMessage);
        if (task.limit.completed)
          throw "Task ".concat(task.name, " is not completed, but it should be. Please check what went wrong.").concat(failureMessage);
      }
      if (postcondition && !postcondition()) {
        throw "Task ".concat(task.name, " failed its guard. Please check what went wrong.").concat(failureMessage);
      }
    }
  }, {
    key: "getDefaultSettings",
    value: function getDefaultSettings() {
      return this.constructor.defaultSettings;
    }
    /**
     * Initialize properties for the script.
     * @param manager The properties manager to use.
     */
  }, {
    key: "initPropertiesManager",
    value: function initPropertiesManager(manager) {
      var _a;
      manager.set(this.getDefaultSettings());
      if (this.options.ccs !== "") {
        if (this.options.ccs === void 0 && (0, import_kolmafia73.readCcs)(grimoireCCS) === "") {
          (0, import_kolmafia73.writeCcs)("[ default ]\nabort", grimoireCCS);
        }
        manager.set({
          customCombatScript: (_a = this.options.ccs) !== null && _a !== void 0 ? _a : grimoireCCS
        });
      }
    }
  }]);
  return Engine2;
}();
Engine.defaultSettings = {
  logPreferenceChange: true,
  logPreferenceChangeFilter: _toConsumableArray21(new Set([].concat(_toConsumableArray21(get("logPreferenceChangeFilter").split(",")), ["libram_savedMacro", "maximizerMRUList", "testudinalTeachings", "_lastCombatStarted"]))).sort().filter(function(a) {
    return a;
  }).join(","),
  battleAction: "custom combat script",
  autoSatisfyWithMall: true,
  autoSatisfyWithNPCs: true,
  autoSatisfyWithCoinmasters: true,
  autoSatisfyWithStash: false,
  dontStopForCounters: true,
  maximizerFoldables: true,
  hpAutoRecovery: "-0.05",
  hpAutoRecoveryTarget: "0.0",
  mpAutoRecovery: "-0.05",
  mpAutoRecoveryTarget: "0.0",
  afterAdventureScript: "",
  betweenBattleScript: "",
  choiceAdventureScript: "",
  familiarScript: "",
  currentMood: "apathetic",
  autoTuxedo: true,
  autoPinkyRing: true,
  autoGarish: true,
  allowNonMoodBurning: false,
  allowSummonBurning: true,
  libramSkillsSoftcore: "none"
};
function maxSongs() {
  return have($skill(_templateObject508 || (_templateObject508 = _taggedTemplateLiteral63(["Mariachi Memory"])))) ? 4 : 3;
}
var wanderingNCs = /* @__PURE__ */ new Set([
  // Halloweener dog noncombats
  "Wooof! Wooooooof!",
  "Playing Fetch*",
  // June cleaver noncombats
  "Aunts not Ants",
  "Bath Time",
  "Beware of Aligator",
  "Delicious Sprouts",
  "Hypnotic Master",
  "Lost and Found",
  "Poetic Justice",
  "Summer Days",
  "Teacher's Pet",
  // Lil' Doctor™ bag noncombat
  "A Pound of Cure",
  // Turtle taming noncombats
  "Nantucket Snapper",
  "Blue Monday",
  "Capital!",
  "Training Day",
  "Boxed In",
  "Duel Nature",
  "Slow Food",
  "A Rolling Turtle Gathers No Moss",
  "Slow Road to Hell",
  "C'mere, Little Fella",
  "The Real Victims",
  "Like That Time in Tortuga",
  "Cleansing your Palette",
  "Harem Scarum",
  "Turtle in peril",
  "No Man, No Hole",
  "Slow and Steady Wins the Brawl",
  "Stormy Weather",
  "Turtles of the Universe",
  "O Turtle Were Art Thou",
  "Allow 6-8 Weeks For Delivery",
  "Kick the Can",
  "Turtles All The Way Around",
  "More eXtreme Than Usual",
  "Jewel in the Rough",
  "The worst kind of drowning",
  "Even Tamer Than Usual",
  "Never Break the Chain",
  "Close, but Yes Cigar",
  "Armchair Quarterback",
  "This Turtle Rocks!",
  "Really Sticking Her Neck Out",
  "It Came from Beneath the Sewer? Great!",
  "Don't Be Alarmed, Now",
  "Puttin' it on Wax",
  "More Like... Hurtle",
  "Musk! Musk! Musk!",
  "Silent Strolling"
]);
var zoneSpecificNCs = /* @__PURE__ */ new Map([
  ["The Horror...", ["Frat House"]]
  // Duplicate choice name
]);
function lastEncounterWasWanderingNC() {
  var _a;
  var last = get("lastEncounter");
  if (zoneSpecificNCs.has(last)) {
    var zones = (_a = zoneSpecificNCs.get(last)) !== null && _a !== void 0 ? _a : [];
    return zones.includes(get("lastAdventure"));
  } else {
    return wanderingNCs.has(last);
  }
}

// ../../node_modules/grimoire-kolmafia/dist/route.js
function ownKeys12(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread12(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys12(Object(t), true).forEach(function(r2) {
      _defineProperty27(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys12(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty27(obj, key, value) {
  key = _toPropertyKey30(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey30(arg) {
  var key = _toPrimitive30(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive30(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _createForOfIteratorHelper21(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray40(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray40(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray40(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray40(o, minLen);
}
function _arrayLikeToArray40(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function getTasks(quests2) {
  var implicitAfter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var _a, _b;
  var result = [];
  var _iterator = _createForOfIteratorHelper21(quests2), _step;
  try {
    var _loop = function _loop2() {
      var quest = _step.value;
      var questCompleted = quest.completed;
      var _iterator3 = _createForOfIteratorHelper21(quest.tasks), _step3;
      try {
        var _loop22 = function _loop23() {
          var task2 = _step3.value;
          var renamedTask = _objectSpread12({}, task2);
          renamedTask.name = "".concat(quest.name, "/").concat(task2.name);
          renamedTask.after = (_a = task2.after) === null || _a === void 0 ? void 0 : _a.map(function(after2) {
            return after2.includes("/") ? after2 : "".concat(quest.name, "/").concat(after2);
          });
          if (implicitAfter && task2.after === void 0 && result.length > 0)
            renamedTask.after = [result[result.length - 1].name];
          if (questCompleted !== void 0) {
            var taskCompleted = task2.completed;
            renamedTask.completed = function() {
              return questCompleted() || taskCompleted();
            };
          }
          result.push(renamedTask);
        };
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          _loop22();
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var names = /* @__PURE__ */ new Set();
  for (var _i = 0, _result = result; _i < _result.length; _i++) {
    var task = _result[_i];
    names.add(task.name);
  }
  for (var _i2 = 0, _result2 = result; _i2 < _result2.length; _i2++) {
    var _task = _result2[_i2];
    var _iterator2 = _createForOfIteratorHelper21((_b = _task.after) !== null && _b !== void 0 ? _b : []), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var after = _step2.value;
        if (!names.has(after)) {
          throw "Unknown task dependency ".concat(after, " of ").concat(_task.name);
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  return result;
}

// src/index.ts
var import_kolmafia128 = require("kolmafia");
init_dist();

// src/clan.ts
var import_kolmafia104 = require("kolmafia");
init_dist();

// src/combat.ts
var import_flat = __toESM(require_flat5());
var import_kolmafia103 = require("kolmafia");
init_dist();

// src/config.ts
var import_kolmafia74 = require("kolmafia");
init_dist();
var _templateObject509;
var _templateObject2133;
var _templateObject3120;
var _templateObject4103;
function _toConsumableArray22(arr) {
  return _arrayWithoutHoles22(arr) || _iterableToArray22(arr) || _unsupportedIterableToArray41(arr) || _nonIterableSpread22();
}
function _nonIterableSpread22() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray41(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray41(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray41(o, minLen);
}
function _iterableToArray22(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles22(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray41(arr);
}
function _arrayLikeToArray41(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral64(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var workshedAliases = [{
  item: $item(_templateObject509 || (_templateObject509 = _taggedTemplateLiteral64(["model train set"]))),
  aliases: ["trainrealm"]
}, {
  item: $item(_templateObject2133 || (_templateObject2133 = _taggedTemplateLiteral64(["Asdon Martin keyfob"]))),
  aliases: ["breadcar", "car", "aston"]
}, {
  item: $item(_templateObject3120 || (_templateObject3120 = _taggedTemplateLiteral64(["Little Geneticist DNA-Splicing Lab"]))),
  aliases: ["dnalab"]
}];
var unaliasedSheds = $items(_templateObject4103 || (_templateObject4103 = _taggedTemplateLiteral64(["cold medicine cabinet, diabolic pizza cube, portable Mayo Clinic, spinning wheel, warbear auto-anvil, warbear chemistry lab, warbear high-efficiency still, warbear induction oven, warbear jackhammer drill press, warbear LP-ROM burner"])));
var allWorkshedAliases = [].concat(_toConsumableArray22(workshedAliases.map(function(_ref) {
  var item10 = _ref.item, aliases = _ref.aliases;
  return {
    item: item10,
    aliases: [].concat(_toConsumableArray22(aliases), [item10.name.toLowerCase()])
  };
})), _toConsumableArray22(unaliasedSheds.map(function(item10) {
  return {
    item: item10,
    aliases: [item10.name.toLowerCase()]
  };
})));
function toInitials(s) {
  var initials = s.split(" ").map(function(term) {
    return term[0];
  }).join("");
  return initials.length >= 3 ? initials : "";
}
function stripString(s) {
  if (s.includes(" "))
    return stripString(s.replace(" ", ""));
  else if (s.includes("-"))
    return stripString(s.replace("-", ""));
  return s;
}
function stringToWorkshedItem(s) {
  if (s === "")
    return null;
  var lowerCaseWorkshed = s.toLowerCase();
  var strippedWorkshed = stripString(lowerCaseWorkshed);
  var validWorksheds = allWorkshedAliases.filter(function(_ref2) {
    var item10 = _ref2.item, aliases = _ref2.aliases;
    return toInitials(item10.name.toLowerCase()) === lowerCaseWorkshed || item10.name.toLowerCase().includes(lowerCaseWorkshed) || stripString(item10.name.toLowerCase()).includes(strippedWorkshed) || aliases.some(function(alias) {
      return alias === lowerCaseWorkshed;
    });
  });
  if (validWorksheds.length > 1) {
    (0, import_kolmafia74.print)("Invalid Workshed: ".concat(s, " matches multiple worksheds! Matched:"), "red");
    validWorksheds.forEach(function(_ref3) {
      var item10 = _ref3.item;
      return (0, import_kolmafia74.print)("".concat(item10), "red");
    });
    throw new Error();
  } else if (validWorksheds.length === 0) {
    (0, import_kolmafia74.print)("Invalid Workshed: ".concat(s, " does not match any worksheds!"), "red");
    throw new Error();
  }
  return validWorksheds[0].item;
}
var globalOptions = Args.create("garbo", 'This script is an automated turn-burning script for the Kingdom of Loathing that spends a day\'s resources and adventures on farming\nYou can use multiple options in conjunction, e.g. "garbo nobarf ascend"', {
  ascend: Args.flag({
    setting: "",
    help: "operate under the assumption that you're ascending after running it, rather than experiencing rollover. It will use borrowed time, it won't charge stinky cheese items, etc.",
    default: false
  }),
  loginvalidwishes: Args.flag({
    setting: "",
    help: "Logs any invalid wishes at the end of the day.",
    hidden: true
  }),
  nobarf: Args.flag({
    setting: "",
    help: "do beginning of the day setup, embezzlers, and various daily flags, but will terminate before normal Barf Mountain turns. May close NEP for the day.",
    default: false
  }),
  nodiet: Args.flag({
    setting: "",
    help: "skip eating and drinking anything as a part of its run (including pantsgiving).",
    default: false
  }),
  quick: Args.flag({
    setting: "",
    help: "garbo will sacrifice some optimal behaviors to run quicker. Estimated and actual profits may be less accurate in this mode. Sets quickcombat and quickgear.",
    default: false
  }),
  quickcombat: Args.flag({
    setting: "",
    help: "garbo will stasis in combat for 5 turns instead of 20, trading some potential profits for a faster run speed.",
    default: false
  }),
  quickgear: Args.flag({
    setting: "",
    help: "garbo will limit maximizer combinations and exclude some synergistic items, trading correctness for speed.",
    default: false
  }),
  returnstash: Args.flag({
    setting: "",
    help: "return all items to your stash clan's stash, then quit",
    default: false
  }),
  simdiet: Args.flag({
    setting: "",
    help: "print out what it computes as an optimal diet and then exit.",
    default: false
  }),
  turns: Args.number({
    setting: "",
    help: 'terminate after the specified number of turns, e.g. "garbo 200" or "garbo turns=200" will terminate after 200 turns are spent. Negative inputs will cause garbo to terminate when the specified number of turns remain.',
    default: 0
  }),
  version: Args.flag({
    setting: "",
    help: "Print the current version and exit."
  }),
  workshed: Args.custom({
    default: null,
    help: "Intelligently switch into the workshed whose item name you give us. Also accepts substrings of the item name (e.g. dna, trainset), certain shorthand aliases (e.g. car) and initials of length >= 3 (e.g. cmc).",
    options: [].concat(_toConsumableArray22(allWorkshedAliases.map(function(_ref4) {
      var item10 = _ref4.item, aliases = _ref4.aliases;
      return [item10, "".concat([].concat(_toConsumableArray22(aliases), [toInitials(item10.name.toLowerCase())]).filter(function(alias) {
        return alias !== "";
      }).join(", "))];
    })), [[null, "leave this field blank"]])
  }, stringToWorkshedItem, "Item"),
  prefs: Args.group("You can manually set the properties below, but it's recommended that you use the relay interface (dropdown menu at the top left in the browser)", {
    valueOfAdventure: Args.number({
      setting: "valueOfAdventure",
      help: "This is a native mafia property, garbo will make purchasing decisions based on this value. Recommended to be at least 3501."
    }),
    valueOfFreeFight: Args.number({
      setting: "garbo_valueOfFreeFight",
      help: "Set to whatever you estimate the value of a free fight/run to be for you. (Default 2000)",
      default: 2e3
    }),
    yachtzeechain: Args.flag({
      setting: "garbo_yachtzeechain",
      help: "only diets after free fights, and attempts to estimate if Yachtzee! chaining is profitable for you - if so, it consumes a specific diet which uses ~0-36 spleen;      if not it automatically continues with the regular diet. Requires Spring Break Beach access (it will not grab a one-day pass for you, but will make an attempt if one is used).      Sweet Synthesis is strongly recommended, as with access to other meat% buffs from Source Terminal, Fortune Teller, KGB and the summoning chamber. Having access to a PYEC (on hand or in the clan stash) is a plus.",
      default: false
    }),
    candydish: Args.flag({
      setting: "garbo_candydish",
      help: "*DANGEROUS* garbo will consider using porcelain candy dishes. This could result in potentially destructive behavior in the instance that the user does not have sufficient meat (1-2 million) to purchase as many dishes as garbo desires or there is a price cliff.",
      default: false,
      hidden: true
    }),
    embezzlerMultiplier: Args.number({
      setting: "garbo_embezzlerMultiplier",
      help: "The amount we multiply our valueOfAdventure by when estimating marginal Embezzler profit. (Default 2.5)",
      default: 2.5
    }),
    stashClan: Args.string({
      setting: "garbo_stashClan",
      help: "If set, garbo will attempt to switch to this clan to take and return useful clan stash item, i.e. a Haiku Katana or Repaid Diaper. Leave blank to disable.",
      default: ""
    }),
    vipClan: Args.string({
      setting: "garbo_vipClan",
      help: "If set, garbo will attempt to switch to this clan to utilize VIP furniture if you have a key. Leave blank to disable",
      default: ""
    }),
    skipAscensionCheck: Args.boolean({
      setting: "garbo_skipAscensionCheck",
      help: "Set to true to skip verifying that your account has broken the prism, otherwise you will be warned upon starting the script."
    }),
    fightGlitch: Args.boolean({
      setting: "garbo_fightGlitch",
      help: "Set to true to fight the glitch season reward. You need certain skills, see relay for info."
    }),
    buyPass: Args.boolean({
      setting: "garbo_buyPass",
      help: "Set to true to buy a Dinsey day pass with FunFunds at the end of the day, if possible."
    }),
    autoUserConfirm: Args.boolean({
      setting: "garbo_autoUserConfirm",
      help: "**WARNING: Experimental** Don't show user confirm dialogs, instead automatically select yes/no in a way that will allow garbo to continue executing. Useful for scripting/headless. Risky and potentially destructive."
    }),
    autoUserConfirm_embezzlerInvocationsThreshold: Args.number({
      setting: "garbo_autoUserConfirm_embezzlerInvocationsThreshold",
      help: "This is used only when autoUserConfirm is true, will automatically use resources (such as pocket wishes, 11-leaf clovers, etc) up to this threshold to source an embezzler for chaining before requesting user interference.",
      default: 1
    }),
    restoreHpTarget: Args.number({
      setting: "garbo_restoreHpTarget",
      help: "If you're a very high level, what HP threshold should garbo aim to maintain?",
      default: 2e3
    })
  }),
  /*
    Hidden preferences, CLI input ignored
  */
  stopTurncount: Args.custom({
    hidden: true,
    default: null
  }, function() {
    return null;
  }, ""),
  saveTurns: Args.custom({
    hidden: true,
    default: 0
  }, function() {
    return 0;
  }, ""),
  askedAboutWish: Args.custom({
    hidden: true,
    default: false
  }, function() {
    return false;
  }, ""),
  triedToUnlockHiddenTavern: Args.custom({
    hidden: true,
    default: false
  }, function() {
    return false;
  }, ""),
  wishAnswer: Args.custom({
    hidden: true,
    default: false
  }, function() {
    return false;
  }, ""),
  clarasBellClaimed: Args.custom({
    hidden: true,
    setting: "_claraBellUsed"
  }, function() {
    return get("_claraBellUsed");
  }, "")
}, {
  positionalArgs: ["turns"]
});
function isQuickGear() {
  return globalOptions.quick || globalOptions.quickgear;
}
function isQuickCombat() {
  return globalOptions.quick || globalOptions.quickcombat;
}

// src/familiar/lib.ts
var import_kolmafia99 = require("kolmafia");
init_dist();

// src/lib.ts
var import_kolmafia76 = require("kolmafia");
init_dist();

// src/acquire.ts
var import_kolmafia75 = require("kolmafia");
init_dist();

// src/garboValue.ts
var import_garbo_lib = __toESM(require_dist());
init_dist();
var _templateObject567;
function _taggedTemplateLiteral65(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var _valueFunctions = void 0;
function garboValueFunctions() {
  if (!_valueFunctions) {
    _valueFunctions = (0, import_garbo_lib.makeValue)({
      itemValues: /* @__PURE__ */ new Map([[$item(_templateObject567 || (_templateObject567 = _taggedTemplateLiteral65(["fake hand"]))), 5e4]])
    });
  }
  return _valueFunctions;
}
function garboValue(item10) {
  var useHistorical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  return garboValueFunctions().value(item10, useHistorical);
}
function garboAverageValue() {
  var _garboValueFunctions;
  return (_garboValueFunctions = garboValueFunctions()).averageValue.apply(_garboValueFunctions, arguments);
}

// src/acquire.ts
var priceCaps = {
  "cuppa Voraci tea": 2e5,
  "cuppa Sobrie tea": 2e5,
  "potion of the field gar": 5e4,
  "Special Seasoning": 2e4,
  "spice melange": 5e5,
  "mojo filter": 1e4,
  "Ol' Scratch's salad fork": 2e5,
  "Frosty's frosty mug": 2e5,
  "sweet tooth": 25e4
};
function acquire(qty, item10, maxPrice) {
  var throwOnFail = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
  var maxAggregateCost = arguments.length > 4 ? arguments[4] : void 0;
  var tryRetrievingUntradeable = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : false;
  if (maxPrice === void 0)
    maxPrice = priceCaps[item10.name];
  if (!item10.tradeable && !tryRetrievingUntradeable || maxPrice !== void 0 && maxPrice <= 0) {
    return 0;
  }
  if (maxPrice === void 0)
    throw new Error("No price cap for ".concat(item10.name, "."));
  (0, import_kolmafia75.print)("Trying to acquire ".concat(qty, " ").concat(item10.plural, "; max price ").concat(maxPrice.toFixed(0), "."), "green");
  if (qty * (0, import_kolmafia75.mallPrice)(item10) > (maxAggregateCost !== null && maxAggregateCost !== void 0 ? maxAggregateCost : 1e6)) {
    throw new Error("Aggregate cost too high! Probably a bug.");
  }
  var startAmount = (0, import_kolmafia75.itemAmount)(item10);
  var remaining = qty - startAmount;
  if (remaining <= 0)
    return qty;
  var logError = function(target, source) {
    throw new Error("Failed to remove ".concat(target, " from ").concat(source));
  };
  if (get("autoSatisfyWithCloset")) {
    var getCloset2 = Math.min(remaining, (0, import_kolmafia75.closetAmount)(item10));
    if (!(0, import_kolmafia75.takeCloset)(getCloset2, item10) && throwOnFail)
      logError(item10, "closet");
    remaining -= getCloset2;
    if (remaining <= 0)
      return qty;
  }
  var getStorage2 = Math.min(remaining, (0, import_kolmafia75.storageAmount)(item10));
  if (!(0, import_kolmafia75.takeStorage)(getStorage2, item10) && throwOnFail)
    logError(item10, "storage");
  remaining -= getStorage2;
  if (remaining <= 0)
    return qty;
  var getMall = Math.min(remaining, (0, import_kolmafia75.shopAmount)(item10));
  if (!(0, import_kolmafia75.takeShop)(getMall, item10)) {
    (0, import_kolmafia75.cliExecute)("refresh shop");
    (0, import_kolmafia75.cliExecute)("refresh inventory");
    remaining = qty - (0, import_kolmafia75.itemAmount)(item10);
    getMall = Math.min(remaining, (0, import_kolmafia75.shopAmount)(item10));
    if (!(0, import_kolmafia75.takeShop)(getMall, item10) && throwOnFail)
      logError(item10, "shop");
  }
  remaining -= getMall;
  var coinmaster = import_kolmafia75.Coinmaster.all().find(function(cm) {
    return (0, import_kolmafia75.sellsItem)(cm, item10);
  });
  var coinmasterPrice2 = coinmaster ? garboValue(coinmaster.item) * (0, import_kolmafia75.sellPrice)(coinmaster, item10) : 0;
  if (coinmaster && coinmasterPrice2 > (0, import_kolmafia75.mallPrice)(item10)) {
    (0, import_kolmafia75.buy)(item10, remaining, maxPrice);
  } else {
    withProperty("autoBuyPriceLimit", maxPrice, function() {
      return (0, import_kolmafia75.retrieveItem)(item10, qty);
    });
  }
  if ((0, import_kolmafia75.itemAmount)(item10) < qty && throwOnFail) {
    throw new Error("Failed to purchase sufficient quantities of ".concat(item10, " from the mall."));
  }
  return (0, import_kolmafia75.itemAmount)(item10) - startAmount;
}

// src/lib.ts
var _templateObject568;
var _templateObject2134;
var _templateObject3121;
var _templateObject4104;
var _templateObject569;
var _templateObject650;
var _templateObject746;
var _templateObject839;
var _templateObject933;
var _templateObject1029;
var _templateObject1125;
var _templateObject1224;
var _templateObject1322;
var _templateObject1419;
var _templateObject1517;
var _templateObject1617;
var _templateObject1717;
var _templateObject1817;
var _templateObject1917;
var _templateObject2017;
var _templateObject2135;
var _templateObject2219;
var _templateObject2318;
var _templateObject2416;
var _templateObject2516;
var _templateObject2616;
var _templateObject2716;
var _templateObject2814;
var _templateObject2913;
var _templateObject3013;
var _templateObject3122;
var _templateObject3215;
var _templateObject3315;
var _templateObject3412;
var _templateObject3512;
var _templateObject3612;
var _templateObject3712;
var _templateObject3812;
var _templateObject3912;
var _templateObject4012;
var _templateObject4114;
var _templateObject4213;
var _templateObject4313;
var _templateObject4412;
var _templateObject4512;
var _templateObject4612;
var _templateObject4712;
var _templateObject4812;
var _templateObject4911;
var _templateObject5010;
var _templateObject5113;
var _templateObject5212;
var _templateObject5312;
var _templateObject5412;
var _templateObject5511;
var _templateObject5610;
var _templateObject577;
var _templateObject587;
var _templateObject596;
var _templateObject606;
var _templateObject6112;
var _templateObject6211;
var _templateObject6310;
var _templateObject6410;
var _templateObject654;
var _templateObject664;
var _templateObject674;
var _templateObject684;
function _createForOfIteratorHelper22(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray42(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray23(arr) {
  return _arrayWithoutHoles23(arr) || _iterableToArray23(arr) || _unsupportedIterableToArray42(arr) || _nonIterableSpread23();
}
function _nonIterableSpread23() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray42(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray42(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray42(o, minLen);
}
function _iterableToArray23(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles23(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray42(arr);
}
function _arrayLikeToArray42(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _defineProperty28(obj, key, value) {
  key = _toPropertyKey31(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey31(arg) {
  var key = _toPrimitive31(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive31(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral66(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var embezzler = $monster(_templateObject568 || (_templateObject568 = _taggedTemplateLiteral66(["Knob Goblin Embezzler"])));
var eventLog = {
  initialEmbezzlersFought: 0,
  digitizedEmbezzlersFought: 0,
  embezzlerSources: [],
  yachtzees: 0
};
var BonusEquipMode = /* @__PURE__ */ function(BonusEquipMode2) {
  BonusEquipMode2[BonusEquipMode2["FREE"] = 0] = "FREE";
  BonusEquipMode2[BonusEquipMode2["EMBEZZLER"] = 1] = "EMBEZZLER";
  BonusEquipMode2[BonusEquipMode2["DMT"] = 2] = "DMT";
  BonusEquipMode2[BonusEquipMode2["BARF"] = 3] = "BARF";
  return BonusEquipMode2;
}({});
function modeIsFree(mode) {
  return [BonusEquipMode.FREE, BonusEquipMode.DMT].includes(mode);
}
function modeUseLimitedDrops(mode) {
  return [BonusEquipMode.BARF, BonusEquipMode.FREE].includes(mode);
}
function modeValueOfMeat(mode) {
  return modeIsFree(mode) ? 0 : (baseMeat + (mode === BonusEquipMode.EMBEZZLER ? 750 : 0)) / 100;
}
function modeValueOfItem(mode) {
  return mode === BonusEquipMode.BARF ? 0.72 : 0;
}
var WISH_VALUE = 5e4;
var HIGHLIGHT = (0, import_kolmafia76.isDarkMode)() ? "yellow" : "blue";
var ESTIMATED_OVERDRUNK_TURNS = 60;
var EMBEZZLER_MULTIPLIER = function() {
  return globalOptions.prefs.embezzlerMultiplier;
};
var propertyManager = new PropertiesManager();
var baseMeat = SongBoom_exports.have() && (SongBoom_exports.songChangesLeft() > 0 || SongBoom_exports.song() === "Total Eclipse of Your Meat" && (0, import_kolmafia76.myInebriety)() <= (0, import_kolmafia76.inebrietyLimit)()) ? 275 : 250;
function averageEmbezzlerNet() {
  return (baseMeat + 750) * (0, import_kolmafia76.meatDropModifier)() / 100;
}
function averageTouristNet() {
  return baseMeat * (0, import_kolmafia76.meatDropModifier)() / 100;
}
function expectedEmbezzlerProfit() {
  return averageEmbezzlerNet() - averageTouristNet();
}
function safeInterrupt() {
  if (get("garbo_interrupt", false)) {
    _set("garbo_interrupt", false);
    throw new Error("User interrupt requested. Stopping Garbage Collector.");
  }
}
function resetDailyPreference(trackingPreference) {
  var today = (0, import_kolmafia76.todayToString)();
  if (property_exports.getString(trackingPreference) !== today) {
    property_exports.set(trackingPreference, today);
    return true;
  } else {
    return false;
  }
}
function setChoice(adventure, value) {
  propertyManager.setChoices(_defineProperty28({}, adventure, value));
}
function shuffle(array) {
  var shuffledArray = _toConsumableArray23(array);
  for (var i = shuffledArray.length - 1; i > 0; i--) {
    var j = Math.floor(Math.random() * (i + 1));
    var temp = shuffledArray[i];
    shuffledArray[i] = shuffledArray[j];
    shuffledArray[j] = temp;
  }
  return shuffledArray;
}
function mapMonster2(location, monster) {
  if ((0, import_kolmafia76.haveSkill)($skill(_templateObject2134 || (_templateObject2134 = _taggedTemplateLiteral66(["Map the Monsters"])))) && !get("mappingMonsters") && get("_monstersMapped") < 3) {
    (0, import_kolmafia76.useSkill)($skill(_templateObject3121 || (_templateObject3121 = _taggedTemplateLiteral66(["Map the Monsters"]))));
  }
  if (!get("mappingMonsters"))
    throw "Failed to setup Map the Monsters.";
  var myTurns = (0, import_kolmafia76.myTurncount)();
  var mapPage = "";
  for (var tries = 0; tries < 10; tries++) {
    mapPage = (0, import_kolmafia76.visitUrl)((0, import_kolmafia76.toUrl)(location), false, true);
    if (mapPage.includes("Leading Yourself Right to Them"))
      break;
    if (mapPage.includes("<!-- MONSTERID: 1965 -->") || mapPage.includes("<!-- MONSTERID: 1622  -->")) {
      (0, import_kolmafia76.runCombat)(Macro.attack().repeat().toString());
    }
    if ((0, import_kolmafia76.handlingChoice)())
      (0, import_kolmafia76.runChoice)(-1);
    if ((0, import_kolmafia76.myTurncount)() > myTurns + 1)
      throw "Map the monsters unsuccessful?";
    if (tries === 9)
      throw "Stuck trying to Map the monsters.";
  }
  var fightPage = (0, import_kolmafia76.visitUrl)("choice.php?pwd&whichchoice=1435&option=1&heyscriptswhatsupwinkwink=".concat(monster.id));
  if (!fightPage.includes(monster.name)) {
    throw "Something went wrong starting the fight.";
  }
  if ((0, import_kolmafia76.choiceFollowsFight)())
    (0, import_kolmafia76.runChoice)(-1);
}
function arrayEquals2(array1, array2) {
  return array1.length === array2.length && array1.every(function(element, index) {
    return element === array2[index];
  });
}
function questStep2(questName) {
  var stringStep = property_exports.getString(questName);
  if (stringStep === "unstarted" || stringStep === "")
    return -1;
  else if (stringStep === "started")
    return 0;
  else if (stringStep === "finished")
    return 999;
  else {
    if (stringStep.substring(0, 4) !== "step") {
      throw "Quest state parsing error.";
    }
    return parseInt(stringStep.substring(4), 10);
  }
}
function tryFeast(familiar7) {
  if (have(familiar7)) {
    (0, import_kolmafia76.useFamiliar)(familiar7);
    (0, import_kolmafia76.use)($item(_templateObject4104 || (_templateObject4104 = _taggedTemplateLiteral66(["moveable feast"]))));
  }
}
var ltbRun = function() {
  return ensureFreeRun({
    requireUnlimited: function() {
      return true;
    },
    noFamiliar: function() {
      return true;
    },
    noRequirements: function() {
      return true;
    },
    maximumCost: function() {
      var _get3;
      return (_get3 = get("autoBuyPriceLimit")) !== null && _get3 !== void 0 ? _get3 : 2e4;
    }
  });
};
function coinmasterPrice(item10) {
  switch (item10) {
    case $item(_templateObject569 || (_templateObject569 = _taggedTemplateLiteral66(["viral video"]))):
      return 20;
    case $item(_templateObject650 || (_templateObject650 = _taggedTemplateLiteral66(["plus one"]))):
      return 74;
    case $item(_templateObject746 || (_templateObject746 = _taggedTemplateLiteral66(["gallon of milk"]))):
      return 100;
    case $item(_templateObject839 || (_templateObject839 = _taggedTemplateLiteral66(["print screen button"]))):
      return 111;
    case $item(_templateObject933 || (_templateObject933 = _taggedTemplateLiteral66(["daily dungeon malware"]))):
      return 150;
  }
  return 0;
}
function kramcoGuaranteed() {
  return have($item(_templateObject1029 || (_templateObject1029 = _taggedTemplateLiteral66(["Kramco Sausage-o-Matic\u2122"])))) && getKramcoWandererChance() >= 1;
}
var log2 = [];
function logMessage(message) {
  log2.push(message);
}
function printLog(color) {
  var _iterator = _createForOfIteratorHelper22(log2), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var message = _step.value;
      (0, import_kolmafia76.print)(message, color);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function pillkeeperOpportunityCost() {
  var canTreasury = (0, import_kolmafia76.canAdventure)($location(_templateObject1125 || (_templateObject1125 = _taggedTemplateLiteral66(["Cobb's Knob Treasury"]))));
  var alternateUses = [{
    can: canTreasury,
    value: EMBEZZLER_MULTIPLIER() * get("valueOfAdventure")
  }, {
    can: realmAvailable("sleaze"),
    value: 4e4
  }].filter(function(x) {
    return x.can;
  });
  var alternateUse = alternateUses.length ? maxBy(alternateUses, "value") : void 0;
  var alternateUseValue = alternateUse === null || alternateUse === void 0 ? void 0 : alternateUse.value;
  if (!alternateUseValue)
    return 0;
  if (!canTreasury)
    return alternateUseValue;
  var embezzler3 = $monster(_templateObject1224 || (_templateObject1224 = _taggedTemplateLiteral66(["Knob Goblin Embezzler"])));
  var canStartChain = [CombatLoversLocket_exports.have() && (0, import_kolmafia76.getLocketMonsters)()[embezzler3.name], ChateauMantegna_exports.have() && ChateauMantegna_exports.paintingMonster() === embezzler3 && !ChateauMantegna_exports.paintingFought(), have($item(_templateObject1322 || (_templateObject1322 = _taggedTemplateLiteral66(["Clan VIP Lounge key"])))) && !get("_photocopyUsed")].some(function(x) {
    return x;
  });
  return canStartChain ? alternateUseValue : WISH_VALUE;
}
function burnLibrams() {
  var mpTarget = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
  var libramToCast = bestLibramToCast();
  while (libramToCast && (0, import_kolmafia76.mpCost)(libramToCast) <= (0, import_kolmafia76.myMp)() - mpTarget) {
    (0, import_kolmafia76.useSkill)(libramToCast);
    libramToCast = bestLibramToCast();
  }
  if (mpTarget > 0) {
    (0, import_kolmafia76.cliExecute)("burn -".concat(mpTarget));
  } else {
    (0, import_kolmafia76.cliExecute)("burn *");
  }
}
function howManySausagesCouldIEat() {
  if (!have($item(_templateObject1419 || (_templateObject1419 = _taggedTemplateLiteral66(["Kramco Sausage-o-Matic\u2122"])))))
    return 0;
  if ((0, import_kolmafia76.myFullness)() > (0, import_kolmafia76.fullnessLimit)())
    return 0;
  return clamp(23 - get("_sausagesEaten"), 0, (0, import_kolmafia76.itemAmount)($item(_templateObject1517 || (_templateObject1517 = _taggedTemplateLiteral66(["magical sausage"])))) + (0, import_kolmafia76.itemAmount)($item(_templateObject1617 || (_templateObject1617 = _taggedTemplateLiteral66(["magical sausage casing"])))));
}
function safeRestoreMpTarget() {
  if (Math.abs((0, import_kolmafia76.myMaxmp)() - 200) < 40) {
    return Math.min((0, import_kolmafia76.myMaxmp)(), 100);
  }
  return Math.min((0, import_kolmafia76.myMaxmp)(), 200);
}
function safeRestore() {
  if (have($effect(_templateObject1717 || (_templateObject1717 = _taggedTemplateLiteral66(["Beaten Up"]))))) {
    if (get("lastEncounter") === "Sssshhsssblllrrggghsssssggggrrgglsssshhssslblgl") {
      uneffect($effect(_templateObject1817 || (_templateObject1817 = _taggedTemplateLiteral66(["Beaten Up"]))));
    } else {
      throw new Error("Hey, you're beaten up, and that's a bad thing. Lick your wounds, handle your problems, and run me again when you feel ready.");
    }
  }
  if ((0, import_kolmafia76.myHp)() < Math.min((0, import_kolmafia76.myMaxhp)() * 0.5, get("garbo_restoreHpTarget", 2e3))) {
    (0, import_kolmafia76.restoreHp)(Math.min((0, import_kolmafia76.myMaxhp)() * 0.9, get("garbo_restoreHpTarget", 2e3)));
  }
  var mpTarget = safeRestoreMpTarget();
  var shouldRestoreMp = function() {
    return (0, import_kolmafia76.myMp)() < mpTarget;
  };
  if (shouldRestoreMp() && howManySausagesCouldIEat() > 0) {
    (0, import_kolmafia76.eat)($item(_templateObject1917 || (_templateObject1917 = _taggedTemplateLiteral66(["magical sausage"]))));
  }
  var soulFoodCasts = Math.floor((0, import_kolmafia76.mySoulsauce)() / (0, import_kolmafia76.soulsauceCost)($skill(_templateObject2017 || (_templateObject2017 = _taggedTemplateLiteral66(["Soul Food"])))));
  if (shouldRestoreMp() && soulFoodCasts > 0) {
    (0, import_kolmafia76.useSkill)(soulFoodCasts, $skill(_templateObject2135 || (_templateObject2135 = _taggedTemplateLiteral66(["Soul Food"]))));
  }
  if (shouldRestoreMp())
    (0, import_kolmafia76.restoreMp)(mpTarget);
  burnLibrams(mpTarget * 2);
}
function checkGithubVersion() {
  if (true) {
    (0, import_kolmafia76.print)("Skipping version check for custom build");
  } else {
    if ((0, import_kolmafia76.gitAtHead)("loathers-garbage-collector-release") || (0, import_kolmafia76.gitAtHead)("Loathing-Associates-Scripting-Society-garbage-collector-release")) {
      (0, import_kolmafia76.print)("Garbo is up to date!", HIGHLIGHT);
    } else {
      var _gitBranches$find;
      var gitBranches = JSON.parse((0, import_kolmafia76.visitUrl)("https://api.github.com/repos/".concat("CustomBuild", "/branches")));
      var releaseCommit = (_gitBranches$find = gitBranches.find(function(branchInfo) {
        return branchInfo.name === "release";
      })) === null || _gitBranches$find === void 0 ? void 0 : _gitBranches$find.commit;
      (0, import_kolmafia76.print)("Garbo is out of date. Please run 'git update!'", "red");
      (0, import_kolmafia76.print)("Local Version: ".concat((0, import_kolmafia76.gitInfo)("loathers-garbage-collector-release").commit || (0, import_kolmafia76.gitInfo)("Loathing-Associates-Scripting-Society-garbage-collector-release").commit, "."));
      (0, import_kolmafia76.print)("Release Version: ".concat(releaseCommit === null || releaseCommit === void 0 ? void 0 : releaseCommit.sha, "."));
    }
  }
}
function formatNumber(num) {
  return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
}
function userConfirmDialog(msg, defaultValue, timeOut) {
  if (globalOptions.prefs.autoUserConfirm) {
    (0, import_kolmafia76.print)("Automatically selected ".concat(defaultValue, " for ").concat(msg), "red");
    return defaultValue;
  }
  if (timeOut)
    return (0, import_kolmafia76.userConfirm)(msg, timeOut, defaultValue);
  return (0, import_kolmafia76.userConfirm)(msg);
}
function determineFreeBunnyBanish() {
  var extraOrbFights = have($item(_templateObject2219 || (_templateObject2219 = _taggedTemplateLiteral66(["miniature crystal ball"])))) ? 1 : 0;
  var possibleGregsFromSpleen = Math.floor(((0, import_kolmafia76.spleenLimit)() - (0, import_kolmafia76.mySpleenUse)()) / 2) * (3 + extraOrbFights);
  var currentAvailableGregs = Math.max(0, get("beGregariousCharges")) * (3 + extraOrbFights);
  var habitatFights = (3 - clamp(get("_monsterHabitatsRecalled"), 0, 3)) * (5 + extraOrbFights);
  var expectedPocketProfFights = !have($familiar(_templateObject2318 || (_templateObject2318 = _taggedTemplateLiteral66(["Pocket Professor"])))) ? 0 : (!get("_garbo_meatChain", false) ? Math.max(10 - get("_pocketProfessorLectures"), 0) : 0) + (!get("_garbo_weightChain", false) ? Math.min(15 - get("_pocketProfessorLectures"), 5) : 0);
  var expectedDigitizesDuringGregs = SourceTerminal_exports.have() && get("_sourceTerminalDigitizeUses") < 3 ? 3 : 0;
  var expectedReplacerFights = (have($skill(_templateObject2416 || (_templateObject2416 = _taggedTemplateLiteral66(["Meteor Lore"])))) ? 10 - get("_macrometeoriteUses") : 0) + (have($item(_templateObject2516 || (_templateObject2516 = _taggedTemplateLiteral66(["Powerful Glove"])))) ? Math.floor((100 - get("_powerfulGloveBatteryPowerUsed")) / 10) : 0);
  var useFreeBanishes = getBanishedMonsters().get($item(_templateObject2616 || (_templateObject2616 = _taggedTemplateLiteral66(["ice house"])))) !== $monster(_templateObject2716 || (_templateObject2716 = _taggedTemplateLiteral66(["fluffy bunny"]))) && // 60 turns of banish from mafia middle finger ring, and 30 x 2 from two snokebombs
  // Account for our chain-starting fight as well as other embezzler sources that occur during our greg chain
  1 + possibleGregsFromSpleen + currentAvailableGregs + habitatFights + expectedPocketProfFights + expectedDigitizesDuringGregs + expectedReplacerFights < 120 && habitatFights + currentAvailableGregs + possibleGregsFromSpleen > 0 && have($item(_templateObject2814 || (_templateObject2814 = _taggedTemplateLiteral66(["mafia middle finger ring"])))) && !get("_mafiaMiddleFingerRingUsed") && have($skill(_templateObject2913 || (_templateObject2913 = _taggedTemplateLiteral66(["Snokebomb"])))) && get("_snokebombUsed") <= 1;
  return useFreeBanishes;
}
var usingFreeBunnyBanish;
function getUsingFreeBunnyBanish() {
  if (usingFreeBunnyBanish === void 0) {
    usingFreeBunnyBanish = determineFreeBunnyBanish();
  }
  return usingFreeBunnyBanish;
}
var reservedBanishes = /* @__PURE__ */ new Map([
  [$skill(_templateObject3013 || (_templateObject3013 = _taggedTemplateLiteral66(["Snokebomb"]))), function() {
    return get("_snokebombUsed") > 0;
  }],
  // We intend to save at least 2 uses for embezzlers, so if we've already used one, disallow usage.
  [$item(_templateObject3122 || (_templateObject3122 = _taggedTemplateLiteral66(["mafia middle finger ring"]))), function() {
    return true;
  }]
]);
function freeRunConstraints(latteActionSource) {
  return {
    allowedAction: function(action) {
      var _action$constraints$e, _action$constraints, _action$constraints$e2;
      var disallowUsage = reservedBanishes.get(action.source);
      if (!have($item(_templateObject3215 || (_templateObject3215 = _taggedTemplateLiteral66(["latte lovers member's mug"])))) || !latteActionSource) {
        return !(disallowUsage !== null && disallowUsage !== void 0 && disallowUsage() && getUsingFreeBunnyBanish());
      }
      var forceEquipsOtherThanLatte = ((_action$constraints$e = action === null || action === void 0 || (_action$constraints = action.constraints) === null || _action$constraints === void 0 || (_action$constraints$e2 = _action$constraints.equipmentRequirements) === null || _action$constraints$e2 === void 0 ? void 0 : _action$constraints$e2.call(_action$constraints).maximizeOptions.forceEquip) !== null && _action$constraints$e !== void 0 ? _action$constraints$e : []).filter(function(equipment) {
        return equipment !== $item(_templateObject3315 || (_templateObject3315 = _taggedTemplateLiteral66(["latte lovers member's mug"])));
      });
      return forceEquipsOtherThanLatte.every(function(equipment) {
        return (0, import_kolmafia76.toSlot)(equipment) !== $slot(_templateObject3412 || (_templateObject3412 = _taggedTemplateLiteral66(["off-hand"])));
      }) && sum(forceEquipsOtherThanLatte, import_kolmafia76.weaponHands) < 2 && !(disallowUsage !== null && disallowUsage !== void 0 && disallowUsage() && getUsingFreeBunnyBanish());
    }
  };
}
var olfactionCopies = have($skill(_templateObject3512 || (_templateObject3512 = _taggedTemplateLiteral66(["Transcendent Olfaction"])))) ? 3 : 0;
var gallapagosCopies = have($skill(_templateObject3612 || (_templateObject3612 = _taggedTemplateLiteral66(["Gallapagosian Mating Call"])))) ? 1 : 0;
var garbageTourists = 1 + olfactionCopies + gallapagosCopies;
var touristFamilies = 1;
var angryTourists = 1;
var barfTourists = garbageTourists + touristFamilies + angryTourists;
var garbageTouristRatio = garbageTourists / barfTourists;
var touristFamilyRatio = touristFamilies / barfTourists;
var turnsToNC = 27 * barfTourists / (garbageTourists + angryTourists + 3 * touristFamilies) + 1 * touristFamilyRatio + 2 * (1 - touristFamilyRatio) * touristFamilyRatio + 3 * (1 - touristFamilyRatio) * (1 - touristFamilyRatio);
function dogOrHolidayWanderer() {
  var extraEncounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return [].concat(_toConsumableArray23(extraEncounters), ["Wooof! Wooooooof!", "Playing Fetch*", "Your Dog Found Something Again"], _toConsumableArray23(getTodaysHolidayWanderers().map(function(monster) {
    return monster.name;
  }))).includes(get("lastEncounter"));
}
var juneCleaverChoiceValues = {
  1467: {
    1: 0,
    2: 0,
    3: 5 * get("valueOfAdventure")
  },
  1468: {
    1: 0,
    2: 5,
    3: 0
  },
  1469: {
    1: 0,
    2: $item(_templateObject3712 || (_templateObject3712 = _taggedTemplateLiteral66(["Dad's brandy"]))),
    3: 1500
  },
  1470: {
    1: 0,
    2: $item(_templateObject3812 || (_templateObject3812 = _taggedTemplateLiteral66(["teacher's pen"]))),
    3: 0
  },
  1471: {
    1: $item(_templateObject3912 || (_templateObject3912 = _taggedTemplateLiteral66(["savings bond"]))),
    2: 250,
    3: 0
  },
  1472: {
    1: $item(_templateObject4012 || (_templateObject4012 = _taggedTemplateLiteral66(["trampled ticket stub"]))),
    2: $item(_templateObject4114 || (_templateObject4114 = _taggedTemplateLiteral66(["fire-roasted lake trout"]))),
    3: 0
  },
  1473: {
    1: $item(_templateObject4213 || (_templateObject4213 = _taggedTemplateLiteral66(["gob of wet hair"]))),
    2: 0,
    3: 0
  },
  1474: {
    1: 0,
    2: $item(_templateObject4313 || (_templateObject4313 = _taggedTemplateLiteral66(["guilty sprout"]))),
    3: 0
  },
  1475: {
    1: $item(_templateObject4412 || (_templateObject4412 = _taggedTemplateLiteral66(["mother's necklace"]))),
    2: 0,
    3: 0
  }
};
function valueJuneCleaverOption(result) {
  return result instanceof import_kolmafia76.Item ? garboValue(result) : result;
}
function bestJuneCleaverOption(id) {
  var options = [1, 2, 3];
  return maxBy(options, function(option) {
    return valueJuneCleaverOption(juneCleaverChoiceValues[id][option]);
  });
}
var romanticMonsterImpossible = function() {
  return counter_exports.get("Romantic Monster Window end") === Infinity || counter_exports.get("Romantic Monster Window begin") > 0 && counter_exports.get("Romantic Monster window begin") !== Infinity || get("_romanticFightsLeft") <= 0;
};
function sober() {
  return (0, import_kolmafia76.myInebriety)() <= (0, import_kolmafia76.inebrietyLimit)() + ((0, import_kolmafia76.myFamiliar)() === $familiar(_templateObject4512 || (_templateObject4512 = _taggedTemplateLiteral66(["Stooper"]))) ? -1 : 0);
}
var asArray = function(singleOrArray) {
  return Array.isArray(singleOrArray) ? singleOrArray : [singleOrArray];
};
var _bestShadowRift = null;
function bestShadowRift() {
  if (!_bestShadowRift) {
    _bestShadowRift = withLocation($location(_templateObject4612 || (_templateObject4612 = _taggedTemplateLiteral66(["Shadow Rift"]))), function() {
      return ClosedCircuitPayphone_exports.chooseRift({
        canAdventure: true,
        otherFilter: function(l) {
          return l !== $location(_templateObject4712 || (_templateObject4712 = _taggedTemplateLiteral66(["Shadow Rift (The 8-Bit Realm)"])));
        },
        sortBy: function(l) {
          var dropModifier = 1 + (0, import_kolmafia76.numericModifier)("Item Drop") / 100;
          return sum((0, import_kolmafia76.getMonsters)(l), function(m) {
            return sum((0, import_kolmafia76.itemDropsArray)(m), function(_ref2) {
              var drop = _ref2.drop, rate = _ref2.rate;
              return garboValue(drop) * clamp(rate * dropModifier / 100, 0, 1);
            });
          });
        }
      });
    });
    if (!_bestShadowRift) {
      throw new Error("Failed to find a suitable Shadow Rift to adventure in");
    }
  }
  return _bestShadowRift;
}
function withLocation(location, action) {
  var start = (0, import_kolmafia76.myLocation)();
  try {
    (0, import_kolmafia76.setLocation)(location);
    return action();
  } finally {
    (0, import_kolmafia76.setLocation)(start);
  }
}
function freeRest() {
  if (get("timesRested") >= (0, import_kolmafia76.totalFreeRests)())
    return false;
  if ((0, import_kolmafia76.myHp)() >= (0, import_kolmafia76.myMaxhp)() && (0, import_kolmafia76.myMp)() >= (0, import_kolmafia76.myMaxmp)()) {
    if (acquire(1, $item(_templateObject4812 || (_templateObject4812 = _taggedTemplateLiteral66(["awful poetry journal"]))), 1e4, false)) {
      (0, import_kolmafia76.use)($item(_templateObject4911 || (_templateObject4911 = _taggedTemplateLiteral66(["awful poetry journal"]))));
    } else {
      var bestSkill = maxBy(import_kolmafia76.Skill.all().filter(function(sk) {
        return have(sk) && (0, import_kolmafia76.mpCost)(sk) >= 1;
      }), function(sk) {
        return -(0, import_kolmafia76.mpCost)(sk);
      });
      (0, import_kolmafia76.useSkill)(bestSkill);
    }
  }
  if (get("chateauAvailable")) {
    (0, import_kolmafia76.visitUrl)("place.php?whichplace=chateau&action=chateau_restlabelfree");
  } else if (get("getawayCampsiteUnlocked")) {
    (0, import_kolmafia76.visitUrl)("place.php?whichplace=campaway&action=campaway_tentclick");
  } else {
    (0, import_kolmafia76.visitUrl)("campground.php?action=rest");
  }
  return true;
}
function printEventLog() {
  if (resetDailyPreference("garboEmbezzlerDate")) {
    property_exports.set("garboEmbezzlerCount", 0);
    property_exports.set("garboEmbezzlerSources", "");
    property_exports.set("garboYachtzeeCount", 0);
  }
  var totalEmbezzlers = property_exports.getNumber("garboEmbezzlerCount", 0) + eventLog.initialEmbezzlersFought + eventLog.digitizedEmbezzlersFought;
  var allEmbezzlerSources = property_exports.getString("garboEmbezzlerSources").split(",").filter(function(source) {
    return source;
  });
  allEmbezzlerSources.push.apply(allEmbezzlerSources, _toConsumableArray23(eventLog.embezzlerSources));
  var yacthzeeCount = get("garboYachtzeeCount", 0) + eventLog.yachtzees;
  property_exports.set("garboEmbezzlerCount", totalEmbezzlers);
  property_exports.set("garboEmbezzlerSources", allEmbezzlerSources.join(","));
  property_exports.set("garboYachtzeeCount", yacthzeeCount);
  (0, import_kolmafia76.print)("You fought ".concat(eventLog.initialEmbezzlersFought, " KGEs at the beginning of the day, and an additional ").concat(eventLog.digitizedEmbezzlersFought, " digitized KGEs throughout the day. Good work, probably!"), HIGHLIGHT);
  (0, import_kolmafia76.print)("Including this, you have fought ".concat(totalEmbezzlers, " across all ascensions today"), HIGHLIGHT);
  if (yacthzeeCount > 0) {
    (0, import_kolmafia76.print)("You explored the undersea yacht ".concat(eventLog.yachtzees, " times"), HIGHLIGHT);
    (0, import_kolmafia76.print)("Including this, you explored the undersea yacht ".concat(yacthzeeCount, " times across all ascensions today"), HIGHLIGHT);
  }
}
function untangleDigitizes(turnCount, chunks) {
  var turnsPerChunk = turnCount / chunks;
  var monstersPerChunk = Math.sqrt((turnsPerChunk + 3) / 5 + 1 / 4) - 1 / 2;
  return Math.round(chunks * monstersPerChunk);
}
function digitizedMonstersRemainingForTurns(estimatedTurns) {
  if (!SourceTerminal_exports.have())
    return 0;
  var digitizesLeft = SourceTerminal_exports.getDigitizeUsesRemaining();
  if (digitizesLeft === SourceTerminal_exports.getMaximumDigitizeUses()) {
    return untangleDigitizes(estimatedTurns, SourceTerminal_exports.getMaximumDigitizeUses());
  }
  var monsterCount = SourceTerminal_exports.getDigitizeMonsterCount() + 1;
  var turnsLeftAtNextMonster = estimatedTurns - counter_exports.get("Digitize Monster");
  if (turnsLeftAtNextMonster <= 0)
    return 0;
  var turnsAtLastDigitize = turnsLeftAtNextMonster + ((monsterCount + 1) * monsterCount * 5 - 3);
  return untangleDigitizes(turnsAtLastDigitize, digitizesLeft + 1) - SourceTerminal_exports.getDigitizeMonsterCount();
}
function maxCarriedFamiliarDamage(familiar7) {
  switch (familiar7) {
    case $familiar(_templateObject5010 || (_templateObject5010 = _taggedTemplateLiteral66(["Animated Macaroni Duck"]))):
      return 50;
    case $familiar(_templateObject5113 || (_templateObject5113 = _taggedTemplateLiteral66(["Barrrnacle"]))):
    case $familiar(_templateObject5212 || (_templateObject5212 = _taggedTemplateLiteral66(["Gelatinous Cubeling"]))):
    case $familiar(_templateObject5312 || (_templateObject5312 = _taggedTemplateLiteral66(["Penguin Goodfella"]))):
      return 30;
    case $familiar(_templateObject5412 || (_templateObject5412 = _taggedTemplateLiteral66(["Misshapen Animal Skeleton"]))):
      return 40 + (0, import_kolmafia76.numericModifier)("Spooky Damage");
    case $familiar(_templateObject5511 || (_templateObject5511 = _taggedTemplateLiteral66(["Hobo Monkey"]))):
      return 25;
    case $familiar(_templateObject5610 || (_templateObject5610 = _taggedTemplateLiteral66(["Grouper Groupie"]))):
      return 25 + (0, import_kolmafia76.numericModifier)("Sleaze Damage") * ((0, import_kolmafia76.myLocation)() === $location(_templateObject577 || (_templateObject577 = _taggedTemplateLiteral66(["Barf Mountain"]))) ? 2 : 1);
    case $familiar(_templateObject587 || (_templateObject587 = _taggedTemplateLiteral66(["Jitterbug"]))):
      return 20;
    case $familiar(_templateObject596 || (_templateObject596 = _taggedTemplateLiteral66(["Mutant Cactus Bud"]))):
      return 47;
    case $familiar(_templateObject606 || (_templateObject606 = _taggedTemplateLiteral66(["Robortender"]))):
      return 20;
  }
  return 0;
}
function maxFamiliarDamage(familiar7) {
  switch (familiar7) {
    case $familiar(_templateObject6112 || (_templateObject6112 = _taggedTemplateLiteral66(["Cocoabo"]))):
      return (0, import_kolmafia76.familiarWeight)(familiar7) + 3;
    case $familiar(_templateObject6211 || (_templateObject6211 = _taggedTemplateLiteral66(["Feather Boa Constrictor"]))):
      return (0, import_kolmafia76.familiarWeight)(familiar7) + 3 + (0, import_kolmafia76.numericModifier)("Sleaze Damage") * ((0, import_kolmafia76.myLocation)() === $location(_templateObject6310 || (_templateObject6310 = _taggedTemplateLiteral66(["Barf Mountain"]))) ? 2 : 1);
    case $familiar(_templateObject6410 || (_templateObject6410 = _taggedTemplateLiteral66(["Ninja Pirate Zombie Robot"]))):
      return Math.floor(((0, import_kolmafia76.familiarWeight)(familiar7) + 3) * 1.5);
    case $familiar(_templateObject654 || (_templateObject654 = _taggedTemplateLiteral66(["Jill-of-All-Trades"]))):
      return (0, import_kolmafia76.familiarWeight)(familiar7);
  }
  return 0;
}
function maxPassiveDamage() {
  var vykeaMaxDamage = get("_VYKEACompanionLevel") > 0 ? 10 * get("_VYKEACompanionLevel") + 10 : 0;
  var thrallMaxDamage = (0, import_kolmafia76.myThrall)().level >= 5 && $thralls(_templateObject664 || (_templateObject664 = _taggedTemplateLiteral66(["Lasagmbie,Vermincelli"]))).includes((0, import_kolmafia76.myThrall)()) ? (0, import_kolmafia76.myThrall)().level * 2 : 0;
  var crownMaxDamage = (0, import_kolmafia76.haveEquipped)($item(_templateObject674 || (_templateObject674 = _taggedTemplateLiteral66(["Crown of Thrones"])))) ? maxCarriedFamiliarDamage((0, import_kolmafia76.myEnthronedFamiliar)()) : 0;
  var bjornMaxDamage = (0, import_kolmafia76.haveEquipped)($item(_templateObject684 || (_templateObject684 = _taggedTemplateLiteral66(["Buddy Bjorn"])))) ? maxCarriedFamiliarDamage((0, import_kolmafia76.myBjornedFamiliar)()) : 0;
  var familiarMaxDamage = maxFamiliarDamage((0, import_kolmafia76.myFamiliar)());
  return vykeaMaxDamage + thrallMaxDamage + crownMaxDamage + bjornMaxDamage + familiarMaxDamage;
}
var monsterManuelCached = void 0;
function monsterManuelAvailable() {
  if (monsterManuelCached !== void 0)
    return Boolean(monsterManuelCached);
  monsterManuelCached = (0, import_kolmafia76.visitUrl)("questlog.php?which=3").includes("Monster Manuel");
  return Boolean(monsterManuelCached);
}
function felizValue() {
  var lastCalculated = new Date(get("garbo_felizValueDate", 0));
  if (!get("garbo_felizValue", 0) || gameDay().getTime() - lastCalculated.getTime() > 7 * 24 * 60 * 60 * 1e3) {
    var felizDrops = JSON.parse((0, import_kolmafia76.fileToBuffer)("garbo_item_lists.json"))["Feliz Navidad"];
    _set("garbo_felizValue", (sum(felizDrops, function(name) {
      return garboValue((0, import_kolmafia76.toItem)(name));
    }) / felizDrops.length).toFixed(0));
    _set("garbo_felizValueDate", gameDay().getTime());
  }
  return get("garbo_felizValue", 0);
}
function newarkValue() {
  var lastCalculated = new Date(get("garbo_newarkValueDate", 0));
  if (!get("garbo_newarkValue", 0) || gameDay().getTime() - lastCalculated.getTime() > 7 * 24 * 60 * 60 * 1e3) {
    var newarkDrops = JSON.parse((0, import_kolmafia76.fileToBuffer)("garbo_item_lists.json"))["Newark"];
    _set("garbo_newarkValue", (sum(newarkDrops, function(name) {
      return garboValue((0, import_kolmafia76.toItem)(name));
    }) / newarkDrops.length).toFixed(0));
    _set("garbo_newarkValueDate", gameDay().getTime());
  }
  return get("garbo_newarkValue", 0);
}
function allMallPrices() {
  var today = (0, import_kolmafia76.todayToString)();
  if (import_kolmafia76.sessionStorage.getItem("allpricedate") !== today) {
    (0, import_kolmafia76.mallPrices)("allitems");
    import_kolmafia76.sessionStorage.setItem("allpricedate", today);
  }
}

// src/turns.ts
var import_kolmafia98 = require("kolmafia");
init_dist();

// src/outfit/dropsgearAccessories.ts
var import_kolmafia77 = require("kolmafia");
init_dist();
var _templateObject570;
var _templateObject2136;
var _templateObject3123;
var _templateObject4105;
var _templateObject571;
var _templateObject651;
var _templateObject747;
var _templateObject840;
var _templateObject934;
var _templateObject1030;
var _templateObject1126;
var _templateObject1225;
var _templateObject1323;
var _templateObject1420;
var _templateObject1518;
var _templateObject1618;
var _templateObject1718;
var _templateObject1818;
var _templateObject1918;
var _templateObject2018;
var _templateObject2137;
var _templateObject2220;
var _templateObject2319;
var _templateObject2417;
var _templateObject2517;
var _templateObject2617;
var _templateObject2717;
var _templateObject2815;
function _createForOfIteratorHelper23(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray43(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray24(arr, i) {
  return _arrayWithHoles24(arr) || _iterableToArrayLimit24(arr, i) || _unsupportedIterableToArray43(arr, i) || _nonIterableRest24();
}
function _nonIterableRest24() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit24(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles24(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray24(arr) {
  return _arrayWithoutHoles24(arr) || _iterableToArray24(arr) || _unsupportedIterableToArray43(arr) || _nonIterableSpread24();
}
function _nonIterableSpread24() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray43(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray43(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray43(o, minLen);
}
function _iterableToArray24(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles24(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray43(arr);
}
function _arrayLikeToArray43(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral67(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function mafiaThumbRing(mode) {
  if (!have($item(_templateObject570 || (_templateObject570 = _taggedTemplateLiteral67(["mafia thumb ring"])))) || modeIsFree(mode)) {
    return /* @__PURE__ */ new Map([]);
  }
  return /* @__PURE__ */ new Map([[$item(_templateObject2136 || (_templateObject2136 = _taggedTemplateLiteral67(["mafia thumb ring"]))), (1 / 0.96 - 1) * get("valueOfAdventure")]]);
}
function luckyGoldRing(mode) {
  if (!have($item(_templateObject3123 || (_templateObject3123 = _taggedTemplateLiteral67(["lucky gold ring"])))) || mode === BonusEquipMode.DMT) {
    return /* @__PURE__ */ new Map([]);
  }
  var dropValues = [100].concat(_toConsumableArray24([
    (0, import_kolmafia77.itemAmount)($item(_templateObject4105 || (_templateObject4105 = _taggedTemplateLiteral67(["hobo nickel"])))) > 0 ? 100 : 0,
    // This should be closeted
    (0, import_kolmafia77.itemAmount)($item(_templateObject571 || (_templateObject571 = _taggedTemplateLiteral67(["sand dollar"])))) > 0 ? garboValue($item(_templateObject651 || (_templateObject651 = _taggedTemplateLiteral67(["sand dollar"])))) : 0,
    // This should be closeted
    (0, import_kolmafia77.itemAmount)($item(_templateObject747 || (_templateObject747 = _taggedTemplateLiteral67(["Freddy Kruegerand"])))) > 0 ? garboValue($item(_templateObject840 || (_templateObject840 = _taggedTemplateLiteral67(["Freddy Kruegerand"])))) : 0
  ].concat(_toConsumableArray24(lgrCurrencies().map(function(i) {
    return i === $item(_templateObject934 || (_templateObject934 = _taggedTemplateLiteral67(["Volcoino"]))) && mode === BonusEquipMode.EMBEZZLER && !globalOptions.nobarf ? 0 : garboValue(i);
  }))).filter(function(value) {
    return value > 0;
  })));
  return /* @__PURE__ */ new Map([[$item(_templateObject1030 || (_templateObject1030 = _taggedTemplateLiteral67(["lucky gold ring"]))), sumNumbers(dropValues) / dropValues.length / 10]]);
}
function mrCheengsSpectacles() {
  if (!have($item(_templateObject1126 || (_templateObject1126 = _taggedTemplateLiteral67(["Mr. Cheeng's spectacles"]))))) {
    return /* @__PURE__ */ new Map([]);
  }
  return /* @__PURE__ */ new Map([[$item(_templateObject1225 || (_templateObject1225 = _taggedTemplateLiteral67(["Mr. Cheeng's spectacles"]))), 220]]);
}
function mrScreegesSpectacles() {
  if (!have($item(_templateObject1323 || (_templateObject1323 = _taggedTemplateLiteral67(["Mr. Screege's spectacles"]))))) {
    return /* @__PURE__ */ new Map([]);
  }
  return /* @__PURE__ */ new Map([[$item(_templateObject1420 || (_templateObject1420 = _taggedTemplateLiteral67(["Mr. Screege's spectacles"]))), 180]]);
}
function cinchoDeMayo(mode) {
  if (!have($item(_templateObject1518 || (_templateObject1518 = _taggedTemplateLiteral67(["Cincho de Mayo"])))) || CinchoDeMayo_exports.currentCinch() === 0 || // Ignore for DMT? Requires specific combat stuff, so probably weird there
  mode === BonusEquipMode.DMT || mode === BonusEquipMode.EMBEZZLER || // Require manuel to make sure we don't kill during stasis
  !monsterManuelAvailable() || // Don't use Cincho if we're planning on doing yachtzees, and haven't completed them yet
  !get("_garboYachtzeeChainCompleted") && globalOptions.prefs.yachtzeechain || // If we have more than 50 passive damage, we'll never be able to cast projectile pinata without risking the monster dying
  maxPassiveDamage() >= 50) {
    return /* @__PURE__ */ new Map([]);
  }
  return /* @__PURE__ */ new Map([[$item(_templateObject1618 || (_templateObject1618 = _taggedTemplateLiteral67(["Cincho de Mayo"]))), 3 * felizValue()]]);
}
function bonusAccessories(mode) {
  return new Map([].concat(_toConsumableArray24(mafiaThumbRing(mode)), _toConsumableArray24(luckyGoldRing(mode)), _toConsumableArray24(mrCheengsSpectacles()), _toConsumableArray24(mrScreegesSpectacles()), _toConsumableArray24(cinchoDeMayo(mode))));
}
var cachedUsingThumbRing = null;
function usingThumbRing() {
  if (!have($item(_templateObject1718 || (_templateObject1718 = _taggedTemplateLiteral67(["mafia thumb ring"]))))) {
    return false;
  }
  if (cachedUsingThumbRing === null) {
    var gear = bonusAccessories(BonusEquipMode.BARF);
    var accessoryBonuses = _toConsumableArray24(gear.entries()).filter(function(_ref) {
      var _ref2 = _slicedToArray24(_ref, 1), item10 = _ref2[0];
      return have(item10);
    });
    (0, import_kolmafia77.setLocation)($location(_templateObject1818 || (_templateObject1818 = _taggedTemplateLiteral67(["Barf Mountain"]))));
    var meatAccessories = import_kolmafia77.Item.all().filter(function(item10) {
      return have(item10) && (0, import_kolmafia77.toSlot)(item10) === $slot(_templateObject1918 || (_templateObject1918 = _taggedTemplateLiteral67(["acc1"]))) && get2("Meat Drop", item10) > 0;
    }).map(function(item10) {
      return [item10, get2("Meat Drop", item10) * baseMeat / 100];
    });
    var accessoryValues = new Map(accessoryBonuses);
    var _iterator = _createForOfIteratorHelper23(meatAccessories), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var _accessoryValues$get;
        var _step$value = _slicedToArray24(_step.value, 2), accessory = _step$value[0], value = _step$value[1];
        accessoryValues.set(accessory, value + ((_accessoryValues$get = accessoryValues.get(accessory)) !== null && _accessoryValues$get !== void 0 ? _accessoryValues$get : 0));
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    if (have($item(_templateObject2018 || (_templateObject2018 = _taggedTemplateLiteral67(["mafia pointer finger ring"])))) && ((0, import_kolmafia77.myClass)() === $class(_templateObject2137 || (_templateObject2137 = _taggedTemplateLiteral67(["Seal Clubber"]))) && have($skill(_templateObject2220 || (_templateObject2220 = _taggedTemplateLiteral67(["Furious Wallop"])))) || have($item(_templateObject2319 || (_templateObject2319 = _taggedTemplateLiteral67(["haiku katana"])))) || have($item(_templateObject2417 || (_templateObject2417 = _taggedTemplateLiteral67(["Operation Patriot Shield"])))) || have($item(_templateObject2517 || (_templateObject2517 = _taggedTemplateLiteral67(["unwrapped knock-off retro superhero cape"])))) || have($skill(_templateObject2617 || (_templateObject2617 = _taggedTemplateLiteral67(["Head in the Game"])))))) {
      accessoryValues.set($item(_templateObject2717 || (_templateObject2717 = _taggedTemplateLiteral67(["mafia pointer finger ring"]))), 500);
    }
    var bestAccessories = _toConsumableArray24(accessoryValues.entries()).sort(function(_ref3, _ref4) {
      var _ref5 = _slicedToArray24(_ref3, 2), aBonus = _ref5[1];
      var _ref6 = _slicedToArray24(_ref4, 2), bBonus = _ref6[1];
      return bBonus - aBonus;
    }).map(function(_ref7) {
      var _ref8 = _slicedToArray24(_ref7, 1), item10 = _ref8[0];
      return item10;
    });
    cachedUsingThumbRing = bestAccessories.slice(0, 2).includes($item(_templateObject2815 || (_templateObject2815 = _taggedTemplateLiteral67(["mafia thumb ring"]))));
  }
  return cachedUsingThumbRing;
}

// src/embezzler/fights.ts
var import_kolmafia96 = require("kolmafia");
init_dist();

// src/resources/scepter.ts
init_dist();

// ../../node_modules/core-js/modules/es.object.from-entries.js
var $ = require_export();
var iterate = require_iterate();
var createProperty = require_create_property();
$({
  target: "Object",
  stat: true
}, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate(iterable, function(k, v) {
      createProperty(obj, k, v);
    }, {
      AS_ENTRIES: true
    });
    return obj;
  }
});

// src/potions.ts
var import_kolmafia92 = require("kolmafia");
init_dist();

// src/outfit/barf.ts
var import_kolmafia84 = require("kolmafia");
init_dist();

// src/outfit/bjorn.ts
init_dist();
function _slicedToArray25(arr, i) {
  return _arrayWithHoles25(arr) || _iterableToArrayLimit25(arr, i) || _unsupportedIterableToArray44(arr, i) || _nonIterableRest25();
}
function _nonIterableRest25() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit25(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles25(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray25(arr) {
  return _arrayWithoutHoles25(arr) || _iterableToArray25(arr) || _unsupportedIterableToArray44(arr) || _nonIterableSpread25();
}
function _nonIterableSpread25() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray44(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray44(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray44(o, minLen);
}
function _iterableToArray25(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles25(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray44(arr);
}
function _arrayLikeToArray44(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function valueBjornModifiers(mode, familiar7) {
  var meatValue = modeValueOfMeat(mode);
  var leprechaunMultiplier = findLeprechaunMultiplier(familiar7);
  var leprechaunCoefficient = meatValue * (2 * leprechaunMultiplier + Math.sqrt(leprechaunMultiplier));
  var itemValue = modeValueOfItem(mode);
  var fairyMultiplier = findFairyMultiplier(familiar7);
  var fairyCoefficient = itemValue * (fairyMultiplier + Math.sqrt(fairyMultiplier) / 2);
  return CrownOfThrones_exports.createModifierValueFunction(["Familiar Weight", "Meat Drop", "Item Drop"], {
    "Familiar Weight": function(mod) {
      return mod * (fairyCoefficient + leprechaunCoefficient);
    },
    "Item Drop": function(mod) {
      return mod * itemValue;
    },
    "Meat Drop": function(mod) {
      return mod * meatValue;
    }
  });
}
function dropsValueFunction(drops) {
  return Array.isArray(drops) ? garboAverageValue.apply(void 0, _toConsumableArray25(drops)) : sum(_toConsumableArray25(drops.entries()), function(_ref) {
    var _ref2 = _slicedToArray25(_ref, 2), item10 = _ref2[0], quantity = _ref2[1];
    return quantity * garboValue(item10);
  }) / sumNumbers(_toConsumableArray25(drops.values()));
}
function chooseBjorn(mode, familiar7) {
  var sim = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var leprechaunMultiplier = findLeprechaunMultiplier(familiar7);
  var fairyMultiplier = findFairyMultiplier(familiar7);
  var ignoreLimitedDrops = sim || !modeUseLimitedDrops(mode);
  var key = "Leprechaun:".concat(leprechaunMultiplier.toFixed(2), ";Fairy:").concat(fairyMultiplier.toFixed(2), ";ignoreLimitedDrops:").concat(ignoreLimitedDrops);
  if (!CrownOfThrones_exports.hasRiderMode(key)) {
    CrownOfThrones_exports.createRiderMode(key, {
      ignoreLimitedDrops: ignoreLimitedDrops,
      modifierValueFunction: valueBjornModifiers(mode, familiar7),
      dropsValueFunction: dropsValueFunction
    });
  }
  var result = CrownOfThrones_exports.pickRider(key);
  if (!result)
    throw new Error("Unable to choose rider for key ".concat(key));
  return {
    familiar: result.familiar,
    value: CrownOfThrones_exports.valueRider(result, valueBjornModifiers(mode, familiar7), dropsValueFunction)
  };
}

// src/outfit/dropsgear.ts
var import_kolmafia82 = require("kolmafia");
init_dist();

// src/diet.ts
var import_kolmafia81 = require("kolmafia");
init_dist();

// src/resources/extrovermectin.ts
var import_kolmafia78 = require("kolmafia");
init_dist();
var _templateObject578;
var _templateObject2138;
var _templateObject3124;
var _templateObject4106;
var _templateObject579;
var _templateObject655;
var _templateObject748;
var _templateObject841;
var _templateObject935;
var _templateObject1031;
var _templateObject1127;
var _templateObject1226;
var _templateObject1324;
var _templateObject1421;
var _templateObject1519;
var _templateObject1619;
var _templateObject1719;
var _templateObject1819;
var _templateObject1919;
var _templateObject2019;
var _templateObject2139;
var _templateObject2221;
var _templateObject2320;
var _templateObject2418;
var _templateObject2518;
var _templateObject2618;
var _templateObject2718;
var _templateObject2816;
var _templateObject2914;
var _templateObject3014;
var _templateObject3125;
var _templateObject3216;
var _templateObject3316;
var _templateObject3413;
var _templateObject3513;
var _templateObject3613;
var _templateObject3713;
var _templateObject3813;
var _templateObject3913;
var _templateObject4013;
var _templateObject4115;
var _templateObject4214;
var _templateObject4314;
var _templateObject4413;
var _templateObject4513;
var _templateObject4613;
var _templateObject4713;
var _templateObject4813;
var _templateObject4912;
var _templateObject5011;
var _templateObject5114;
var _templateObject5213;
var _templateObject5313;
var _templateObject5413;
var _templateObject5512;
var _templateObject5611;
var _templateObject5710;
var _templateObject588;
var _templateObject597;
var _templateObject607;
var _templateObject6113;
var _templateObject6212;
var _templateObject6311;
var _templateObject6411;
var _templateObject656;
var _templateObject665;
var _templateObject675;
var _templateObject685;
var _templateObject694;
var _templateObject703;
var _templateObject7110;
var _templateObject7210;
function _slicedToArray26(arr, i) {
  return _arrayWithHoles26(arr) || _iterableToArrayLimit26(arr, i) || _unsupportedIterableToArray45(arr, i) || _nonIterableRest26();
}
function _nonIterableRest26() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit26(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles26(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys13(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread13(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys13(Object(t), true).forEach(function(r2) {
      _defineProperty29(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys13(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty29(obj, key, value) {
  key = _toPropertyKey32(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey32(arg) {
  var key = _toPrimitive32(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive32(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toConsumableArray26(arr) {
  return _arrayWithoutHoles26(arr) || _iterableToArray26(arr) || _unsupportedIterableToArray45(arr) || _nonIterableSpread26();
}
function _nonIterableSpread26() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray45(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray45(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray45(o, minLen);
}
function _iterableToArray26(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles26(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray45(arr);
}
function _arrayLikeToArray45(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral68(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var embezzler2 = $monster(_templateObject578 || (_templateObject578 = _taggedTemplateLiteral68(["Knob Goblin Embezzler"])));
var crate = $monster(_templateObject2138 || (_templateObject2138 = _taggedTemplateLiteral68(["crate"])));
function expectedGregs(skillSource) {
  var habitatCharges = have($skill(_templateObject3124 || (_templateObject3124 = _taggedTemplateLiteral68(["Just the Facts"])))) ? 3 - get("_monsterHabitatsRecalled", 0) : 0;
  var habitatGregs = new Array(habitatCharges).fill({
    copies: 5,
    skillSource: "habitat",
    replaces: 0,
    extra: 0
  });
  var extroGregs = new Array(50).fill({
    copies: 3,
    skillSource: "extro",
    replaces: 0,
    extra: 0
  });
  var baseGregs = [].concat(_toConsumableArray26(habitatGregs), _toConsumableArray26(extroGregs));
  var replacementsPerGreg = function(source) {
    return have($skill(_templateObject4106 || (_templateObject4106 = _taggedTemplateLiteral68(["Transcendent Olfaction"])))) ? Math.floor(source.copies * 7 / 3) : Math.floor(source.copies * 5 / 3);
  };
  var timeSpunGregs = have($item(_templateObject579 || (_templateObject579 = _taggedTemplateLiteral68(["Time-Spinner"])))) ? Math.floor((10 - get("_timeSpinnerMinutesUsed")) / 3) : 0;
  var orbGregs = have($item(_templateObject655 || (_templateObject655 = _taggedTemplateLiteral68(["miniature crystal ball"])))) ? 1 : 0;
  var macrometeors = have($skill(_templateObject748 || (_templateObject748 = _taggedTemplateLiteral68(["Meteor Lore"])))) ? 10 - get("_macrometeoriteUses") : 0;
  var replaceEnemies = have($item(_templateObject841 || (_templateObject841 = _taggedTemplateLiteral68(["Powerful Glove"])))) ? Math.floor((100 - get("_powerfulGloveBatteryPowerUsed")) / 10) : 0;
  var firstReplaces = clamp(replacementsPerGreg(baseGregs[0]), 0, macrometeors + replaceEnemies);
  var initialCast = {
    replacesLeft: macrometeors + replaceEnemies - firstReplaces,
    sources: [_objectSpread13(_objectSpread13({}, baseGregs[0]), {}, {
      replaces: firstReplaces,
      extra: timeSpunGregs + orbGregs
    })]
  };
  return baseGregs.slice(1).reduce(function(acc, curr) {
    var currentReplaces = clamp(replacementsPerGreg(curr), 0, acc.replacesLeft);
    return {
      replacesLeft: acc.replacesLeft - currentReplaces,
      sources: [].concat(_toConsumableArray26(acc.sources), [_objectSpread13(_objectSpread13({}, curr), {}, {
        replaces: currentReplaces,
        extra: orbGregs
      })])
    };
  }, initialCast).sources.filter(function(source) {
    return source.skillSource === skillSource;
  }).map(function(source) {
    return source.copies + source.replaces + source.extra;
  });
}
function doingGregFight() {
  var extrovermectin = get("beGregariousCharges") > 0 || get("beGregariousFightsLeft") > 0;
  var habitat = have($skill(_templateObject935 || (_templateObject935 = _taggedTemplateLiteral68(["Just the Facts"])))) && (get("_monsterHabitatsRecalled") < 3 || get("_monsterHabitatsFightsLeft") > 0);
  return extrovermectin || habitat || globalOptions.prefs.yachtzeechain && !get("_garboYachtzeeChainCompleted");
}
function crateStrategy() {
  if (!doingGregFight())
    return null;
  if (have($skill(_templateObject1031 || (_templateObject1031 = _taggedTemplateLiteral68(["Transcendent Olfaction"])))) && (property_exports.getString("olfactedMonster") === "crate" || get("_olfactionsUsed") < 2) || have($skill(_templateObject1127 || (_templateObject1127 = _taggedTemplateLiteral68(["Long Con"])))) && (get("longConMonster") === crate || get("_longConUsed") < 4)) {
    return "Sniff";
  }
  if (have($item(_templateObject1226 || (_templateObject1226 = _taggedTemplateLiteral68(["miniature crystal ball"])))))
    return "Orb";
  if (have($item(_templateObject1324 || (_templateObject1324 = _taggedTemplateLiteral68(["Fourth of May Cosplay Saber"])))) && get("_saberForceUses") < 5) {
    return "Saber";
  }
  return null;
}
function hasMonsterReplacers() {
  return have($skill(_templateObject1421 || (_templateObject1421 = _taggedTemplateLiteral68(["Meteor Lore"])))) && get("_macrometeoriteUses") < 10 || have($item(_templateObject1519 || (_templateObject1519 = _taggedTemplateLiteral68(["Powerful Glove"])))) && get("_powerfulGloveBatteryPowerUsed") < 90;
}
function saberCrateIfSafe() {
  var canSaber = have($item(_templateObject1619 || (_templateObject1619 = _taggedTemplateLiteral68(["Fourth of May Cosplay Saber"])))) && get("_saberForceUses") < 5;
  var isSafeToSaber = get("beGregariousFightsLeft") === 0 || get("_saberForceMonsterCount") > 0;
  if (!canSaber || !isSafeToSaber)
    return;
  do {
    var _tryFindFreeRun, _run$constraints$fami, _run$constraints$fami2, _run$constraints, _run$constraints$prep, _run$constraints2, _run$constraints$equi, _run$constraints$equi2, _run$constraints3;
    var run = (_tryFindFreeRun = tryFindFreeRun(freeRunConstraints(false))) !== null && _tryFindFreeRun !== void 0 ? _tryFindFreeRun : ltbRun();
    (0, import_kolmafia78.useFamiliar)((_run$constraints$fami = (_run$constraints$fami2 = (_run$constraints = run.constraints).familiar) === null || _run$constraints$fami2 === void 0 ? void 0 : _run$constraints$fami2.call(_run$constraints)) !== null && _run$constraints$fami !== void 0 ? _run$constraints$fami : freeFightFamiliar({
      canChooseMacro: false
    }));
    (_run$constraints$prep = (_run$constraints2 = run.constraints).preparation) === null || _run$constraints$prep === void 0 || _run$constraints$prep.call(_run$constraints2);
    new Requirement([], {
      forceEquip: $items(_templateObject1719 || (_templateObject1719 = _taggedTemplateLiteral68(["Fourth of May Cosplay Saber"]))),
      preventEquip: $items(_templateObject1819 || (_templateObject1819 = _taggedTemplateLiteral68(["Kramco Sausage-o-Matic\u2122"])))
    }).merge((_run$constraints$equi = (_run$constraints$equi2 = (_run$constraints3 = run.constraints).equipmentRequirements) === null || _run$constraints$equi2 === void 0 ? void 0 : _run$constraints$equi2.call(_run$constraints3)) !== null && _run$constraints$equi !== void 0 ? _run$constraints$equi : new Requirement([], {})).maximize();
    setChoice(1387, 2);
    garboAdventure($location(_templateObject1919 || (_templateObject1919 = _taggedTemplateLiteral68(["Noob Cave"]))), Macro2.if_(crate, Macro2.skill($skill(_templateObject2019 || (_templateObject2019 = _taggedTemplateLiteral68(["Use the Force"]))))).if_($monster(_templateObject2139 || (_templateObject2139 = _taggedTemplateLiteral68(["sausage goblin"]))), Macro2.kill()).ifHolidayWanderer(run.macro).abort());
  } while (["Puttin' it on Wax", "Wooof! Wooooooof!", "Playing Fetch*", "Your Dog Found Something Again"].includes(get("lastEncounter")));
}
function equipOrbIfDesired() {
  if (have($item(_templateObject2221 || (_templateObject2221 = _taggedTemplateLiteral68(["miniature crystal ball"])))) && !(get("_saberForceMonster") === crate && get("_saberForceMonsterCount") > 0) && crateStrategy() !== "Sniff" && [void 0, crate].includes(CrystalBall_exports.ponder().get($location(_templateObject2320 || (_templateObject2320 = _taggedTemplateLiteral68(["Noob Cave"])))))) {
    (0, import_kolmafia78.equip)($slot(_templateObject2418 || (_templateObject2418 = _taggedTemplateLiteral68(["familiar"]))), $item(_templateObject2518 || (_templateObject2518 = _taggedTemplateLiteral68(["miniature crystal ball"]))));
  }
}
function initializeCrates() {
  do {
    if (property_exports.getString("olfactedMonster") !== "crate") {
      (0, import_kolmafia78.visitUrl)("desc_effect.php?whicheffect=".concat($effect(_templateObject2618 || (_templateObject2618 = _taggedTemplateLiteral68(["On the Trail"]))).descid));
    }
    if (crateStrategy() === "Sniff" && (property_exports.getString("olfactedMonster") !== "crate" || !have($effect(_templateObject2718 || (_templateObject2718 = _taggedTemplateLiteral68(["On the Trail"])))) || property_exports.getString("longConMonster") !== "crate" || get("_longConUsed") <= 0) || crateStrategy() === "Orb" && (get("_gallapagosMonster") !== crate && have($skill(_templateObject2816 || (_templateObject2816 = _taggedTemplateLiteral68(["Gallapagosian Mating Call"])))) || have($item(_templateObject2914 || (_templateObject2914 = _taggedTemplateLiteral68(["latte lovers member's mug"])))) && !get("_latteCopyUsed"))) {
      var _tryFindFreeRun2, _run$constraints$fami3, _run$constraints$fami4, _run$constraints4, _run$constraints$prep2, _run$constraints5, _run$constraints$equi3, _run$constraints$equi4, _run$constraints6;
      var run = (_tryFindFreeRun2 = tryFindFreeRun(freeRunConstraints(true))) !== null && _tryFindFreeRun2 !== void 0 ? _tryFindFreeRun2 : ltbRun();
      setChoice(1387, 2);
      var macro = Macro2.trySkill($skill(_templateObject3014 || (_templateObject3014 = _taggedTemplateLiteral68(["Transcendent Olfaction"])))).trySkill($skill(_templateObject3125 || (_templateObject3125 = _taggedTemplateLiteral68(["Long Con"])))).trySkill($skill(_templateObject3216 || (_templateObject3216 = _taggedTemplateLiteral68(["Offer Latte to Opponent"])))).externalIf(get("_gallapagosMonster") !== crate && have($skill(_templateObject3316 || (_templateObject3316 = _taggedTemplateLiteral68(["Gallapagosian Mating Call"])))), Macro2.trySkill($skill(_templateObject3413 || (_templateObject3413 = _taggedTemplateLiteral68(["Gallapagosian Mating Call"]))))).trySkill($skill(_templateObject3513 || (_templateObject3513 = _taggedTemplateLiteral68(["Use the Force"])))).step(run.macro);
      (0, import_kolmafia78.useFamiliar)((_run$constraints$fami3 = (_run$constraints$fami4 = (_run$constraints4 = run.constraints).familiar) === null || _run$constraints$fami4 === void 0 ? void 0 : _run$constraints$fami4.call(_run$constraints4)) !== null && _run$constraints$fami3 !== void 0 ? _run$constraints$fami3 : freeFightFamiliar({
        canChooseMacro: false
      }));
      (_run$constraints$prep2 = (_run$constraints5 = run.constraints).preparation) === null || _run$constraints$prep2 === void 0 || _run$constraints$prep2.call(_run$constraints5);
      new Requirement(["100 Monster Level"], {
        forceEquip: $items(_templateObject3613 || (_templateObject3613 = _taggedTemplateLiteral68(["latte lovers member's mug, Fourth of May Cosplay Saber"]))).filter(function(item10) {
          return have(item10);
        }),
        preventEquip: $items(_templateObject3713 || (_templateObject3713 = _taggedTemplateLiteral68(["carnivorous potted plant"])))
      }).merge((_run$constraints$equi3 = (_run$constraints$equi4 = (_run$constraints6 = run.constraints).equipmentRequirements) === null || _run$constraints$equi4 === void 0 ? void 0 : _run$constraints$equi4.call(_run$constraints6)) !== null && _run$constraints$equi3 !== void 0 ? _run$constraints$equi3 : new Requirement([], {})).maximize();
      garboAdventure($location(_templateObject3813 || (_templateObject3813 = _taggedTemplateLiteral68(["Noob Cave"]))), Macro2.if_(crate, macro).ifHolidayWanderer(run.macro).abort());
      (0, import_kolmafia78.visitUrl)("desc_effect.php?whicheffect=".concat($effect(_templateObject3913 || (_templateObject3913 = _taggedTemplateLiteral68(["On the Trail"]))).descid));
    } else if (crateStrategy() === "Saber" && (get("_saberForceMonster") !== crate || get("_saberForceMonsterCount") === 0) && get("_saberForceUses") < 5) {
      saberCrateIfSafe();
    } else
      break;
  } while (!["crate", "Using the Force"].includes(get("lastEncounter")));
}
function getClub() {
  var _Item$all$find;
  if (have($skill(_templateObject4013 || (_templateObject4013 = _taggedTemplateLiteral68(["Iron Palm Technique"])))) && !have($effect(_templateObject4115 || (_templateObject4115 = _taggedTemplateLiteral68(["Iron Palms"]))))) {
    (0, import_kolmafia78.useSkill)($skill(_templateObject4214 || (_templateObject4214 = _taggedTemplateLiteral68(["Iron Palm Technique"]))));
  }
  var availableClub = (_Item$all$find = import_kolmafia78.Item.all().find(function(i) {
    return have(i) && (0, import_kolmafia78.canEquip)(i) && (0, import_kolmafia78.weaponHands)(i) === 2 && ((0, import_kolmafia78.itemType)(i) === "club" || have($effect(_templateObject4314 || (_templateObject4314 = _taggedTemplateLiteral68(["Iron Palms"])))) && (0, import_kolmafia78.itemType)(i) === "sword");
  })) !== null && _Item$all$find !== void 0 ? _Item$all$find : $item(_templateObject4413 || (_templateObject4413 = _taggedTemplateLiteral68(["amok putter"])));
  (0, import_kolmafia78.retrieveItem)(availableClub);
  return availableClub;
}
var MAX_BANISH_PRICE = 1e5;
var combatItem = function(item10, maxPrice) {
  return {
    name: "".concat(item10),
    available: function() {
      return (0, import_kolmafia78.mallPrice)(item10) < (maxPrice !== null && maxPrice !== void 0 ? maxPrice : MAX_BANISH_PRICE);
    },
    macro: function() {
      return Macro2.item(item10);
    },
    price: function() {
      return (0, import_kolmafia78.mallPrice)(item10);
    },
    prepare: function() {
      return acquire(1, item10, maxPrice !== null && maxPrice !== void 0 ? maxPrice : MAX_BANISH_PRICE);
    }
    // put a sanity ceiling of 50k on the banish
  };
};
var longBanishes = [combatItem($item(_templateObject4513 || (_templateObject4513 = _taggedTemplateLiteral68(["human musk"])))), combatItem($item(_templateObject4613 || (_templateObject4613 = _taggedTemplateLiteral68(["tryptophan dart"])))), combatItem($item(_templateObject4713 || (_templateObject4713 = _taggedTemplateLiteral68(["Daily Affirmation: Be a Mind Master"])))), {
  name: "Batter Up!",
  available: function() {
    return (0, import_kolmafia78.myFury)() >= 5 && have($skill(_templateObject4813 || (_templateObject4813 = _taggedTemplateLiteral68(["Batter Up!"]))));
  },
  macro: function() {
    return Macro2.skill($skill(_templateObject4912 || (_templateObject4912 = _taggedTemplateLiteral68(["Batter Up!"]))));
  },
  prepare: function() {
    var club = getClub();
    new Requirement(["100 Monster Level"], {
      preventEquip: $items(_templateObject5011 || (_templateObject5011 = _taggedTemplateLiteral68(["carnivorous potted plant"]))),
      forceEquip: [club]
    }).maximize();
  }
}, {
  name: "Nanobrawny",
  available: function() {
    return true;
  },
  price: function() {
    return (0, import_kolmafia78.mallPrice)($item(_templateObject5114 || (_templateObject5114 = _taggedTemplateLiteral68(["pocket wish"])))) * 2;
  },
  // could be 3 if you are unlucky
  macro: function() {
    return Macro2.skill($skill(_templateObject5213 || (_templateObject5213 = _taggedTemplateLiteral68(["Unleash Nanites"]))));
  },
  prepare: function() {
    while ((0, import_kolmafia78.haveEffect)($effect(_templateObject5313 || (_templateObject5313 = _taggedTemplateLiteral68(["Nanobrawny"])))) < 40) {
      acquire(1, $item(_templateObject5413 || (_templateObject5413 = _taggedTemplateLiteral68(["pocket wish"]))), 5e4);
      (0, import_kolmafia78.cliExecute)("genie effect Nanobrawny");
    }
  }
}];
var freeBunnyBanish = {
  name: "Mafia Middle Finger Ring",
  available: function() {
    return !get("_mafiaMiddleFingerRingUsed");
  },
  macro: function() {
    return Macro2.skill($skill(_templateObject5512 || (_templateObject5512 = _taggedTemplateLiteral68(["Show them your ring"]))));
  },
  prepare: function() {
    new Requirement([], {
      preventEquip: $items(_templateObject5611 || (_templateObject5611 = _taggedTemplateLiteral68(["carnivorous potted plant"]))),
      forceEquip: [$item(_templateObject5710 || (_templateObject5710 = _taggedTemplateLiteral68(["mafia middle finger ring"])))]
    }).maximize();
  }
};
var iceHouseBanish = {
  name: "Ice House",
  available: function() {
    return true;
  },
  macro: function() {
    return Macro2.item($item(_templateObject588 || (_templateObject588 = _taggedTemplateLiteral68(["ice house"]))));
  },
  prepare: function() {
    return acquire(1, $item(_templateObject597 || (_templateObject597 = _taggedTemplateLiteral68(["ice house"]))), 1e6);
  }
};
var shortBanishes = [combatItem($item(_templateObject607 || (_templateObject607 = _taggedTemplateLiteral68(["Louder Than Bomb"]))), 1e4), combatItem($item(_templateObject6113 || (_templateObject6113 = _taggedTemplateLiteral68(["tennis ball"]))), 1e4)];
function iceHouseAllowed() {
  if (get("garboDisallowIceHouseNotify", false) || globalOptions.prefs.autoUserConfirm) {
    return false;
  }
  if (userConfirmDialog("Would you like to allow garbo to ice house a fluffy bunny? This saves significant costs on banishers in the long run.", false)) {
    return true;
  }
  _set("garboDisallowIceHouseNotify", true);
  return false;
}
function banishBunny() {
  var banishes = [].concat(longBanishes, _toConsumableArray26(!have($item(_templateObject6212 || (_templateObject6212 = _taggedTemplateLiteral68(["miniature crystal ball"])))) ? shortBanishes : [])).filter(function(b) {
    return b.available();
  });
  var usingIceHouseBanish = getBanishedMonsters().get($item(_templateObject6311 || (_templateObject6311 = _taggedTemplateLiteral68(["ice house"])))) !== $monster(_templateObject6411 || (_templateObject6411 = _taggedTemplateLiteral68(["fluffy bunny"]))) && (0, import_kolmafia78.retrievePrice)($item(_templateObject656 || (_templateObject656 = _taggedTemplateLiteral68(["ice house"])))) < 1e6 && iceHouseAllowed();
  var banish = usingIceHouseBanish ? iceHouseBanish : getUsingFreeBunnyBanish() ? freeBunnyBanish : maxBy(banishes, function(banish2) {
    var _banish$price, _banish$price2;
    return (_banish$price = (_banish$price2 = banish2.price) === null || _banish$price2 === void 0 ? void 0 : _banish$price2.call(banish2)) !== null && _banish$price !== void 0 ? _banish$price : 0;
  }, true);
  do {
    var _banish$prepare;
    (_banish$prepare = banish.prepare) === null || _banish$prepare === void 0 || _banish$prepare.call(banish);
    garboAdventure($location(_templateObject665 || (_templateObject665 = _taggedTemplateLiteral68(["The Dire Warren"]))), Macro2.if_($monster(_templateObject675 || (_templateObject675 = _taggedTemplateLiteral68(["fluffy bunny"]))), banish.macro()).embezzler());
  } while ("fluffy bunny" !== get("lastEncounter") && !get("banishedMonsters").includes("fluffy bunny"));
}
function getBanishedPhyla() {
  var phylumBanish = /* @__PURE__ */ new Map();
  var banishPart = get("banishedPhyla").split(":").slice(0, 2);
  if (banishPart.length === 2) {
    var _banishPart = _slicedToArray26(banishPart, 2), skill = _banishPart[0], phylum = _banishPart[1];
    phylumBanish.set((0, import_kolmafia78.toSkill)(skill), (0, import_kolmafia78.toPhylum)(phylum));
  }
  return phylumBanish;
}
function initializeDireWarren() {
  (0, import_kolmafia78.visitUrl)("museum.php?action=icehouse");
  var banishedMonsters = getBanishedMonsters();
  var banishedPhyla = getBanishedPhyla();
  if (_toConsumableArray26(banishedMonsters.values()).find(function(m) {
    return m === $monster(_templateObject685 || (_templateObject685 = _taggedTemplateLiteral68(["fluffy bunny"])));
  })) {
    return;
  }
  if (_toConsumableArray26(banishedPhyla.values()).find(function(p) {
    return p === $monster(_templateObject694 || (_templateObject694 = _taggedTemplateLiteral68(["fluffy bunny"]))).phylum;
  })) {
    return;
  }
  banishBunny();
}
function initializeExtrovermectinZones() {
  if (get("beGregariousFightsLeft") === 0) {
    if (hasMonsterReplacers())
      initializeCrates();
    initializeDireWarren();
  }
}
function gregReady() {
  return get("beGregariousMonster") === embezzler2 && get("beGregariousFightsLeft") > 0 || get("_monsterHabitatsMonster") === embezzler2 && get("_monsterHabitatsFightsLeft") > 0;
}
function totalGregCharges(countPartial) {
  var extroPartial = get("beGregariousFightsLeft") > 0 ? 1 : 0;
  var habitatPartial = get("_monsterHabitatsFightsLeft") > 0 ? 1 : 0;
  return get("beGregariousCharges") + (have($skill(_templateObject703 || (_templateObject703 = _taggedTemplateLiteral68(["Just the Facts"])))) ? 3 - get("_monsterHabitatsRecalled") : 0) + (countPartial ? extroPartial + habitatPartial : 0);
}
function possibleGregCrystalBall() {
  if (have($item(_templateObject7110 || (_templateObject7110 = _taggedTemplateLiteral68(["miniature crystal ball"]))))) {
    var ponderCount = CrystalBall_exports.ponder().get($location(_templateObject7210 || (_templateObject7210 = _taggedTemplateLiteral68(["The Dire Warren"])))) === embezzler2 ? 1 : 0;
    return totalGregCharges(true) + ponderCount;
  }
  return 0;
}

// src/mood.ts
var import_kolmafia79 = require("kolmafia");
init_dist();
var _templateObject580;
var _templateObject2140;
var _templateObject3126;
var _templateObject4107;
var _templateObject581;
var _templateObject657;
var _templateObject749;
var _templateObject844;
var _templateObject936;
var _templateObject1032;
var _templateObject1128;
var _templateObject1227;
var _templateObject1325;
var _templateObject1422;
var _templateObject1520;
var _templateObject1620;
var _templateObject1720;
var _templateObject1820;
var _templateObject1920;
var _templateObject2020;
var _templateObject2141;
var _templateObject2222;
var _templateObject2321;
var _templateObject2419;
var _templateObject2519;
var _templateObject2619;
var _templateObject2719;
var _templateObject2817;
var _templateObject2915;
var _templateObject3015;
var _templateObject3127;
var _templateObject3217;
var _templateObject3317;
var _templateObject3414;
var _templateObject3514;
var _templateObject3614;
var _templateObject3714;
var _templateObject3814;
var _templateObject3914;
var _templateObject4014;
var _templateObject4116;
var _templateObject4215;
var _templateObject4315;
var _templateObject4414;
var _templateObject4514;
var _templateObject4614;
var _templateObject4714;
var _templateObject4814;
var _templateObject4913;
var _templateObject5012;
var _templateObject5115;
var _templateObject5214;
var _templateObject5314;
var _templateObject5414;
var _templateObject5513;
var _templateObject5612;
var _templateObject5711;
var _templateObject589;
var _templateObject598;
var _templateObject608;
var _templateObject6114;
var _templateObject6213;
var _templateObject6312;
var _templateObject6412;
var _templateObject658;
var _templateObject666;
var _templateObject676;
var _templateObject686;
var _templateObject695;
var _templateObject704;
function _toConsumableArray27(arr) {
  return _arrayWithoutHoles27(arr) || _iterableToArray27(arr) || _unsupportedIterableToArray46(arr) || _nonIterableSpread27();
}
function _nonIterableSpread27() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray46(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray46(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray46(o, minLen);
}
function _iterableToArray27(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles27(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray46(arr);
}
function _arrayLikeToArray46(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral69(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
Mood.setDefaultOptions({
  songSlots: [$effects(_templateObject580 || (_templateObject580 = _taggedTemplateLiteral69(["Polka of Plenty"]))), $effects(_templateObject2140 || (_templateObject2140 = _taggedTemplateLiteral69(["Fat Leon's Phat Loot Lyric, Ur-Kel's Aria of Annoyance"]))), $effects(_templateObject3126 || (_templateObject3126 = _taggedTemplateLiteral69(["Chorale of Companionship"]))), $effects(_templateObject4107 || (_templateObject4107 = _taggedTemplateLiteral69(["The Ballad of Richie Thingfinder"])))],
  useNativeRestores: true
});
function meatMood() {
  var urKels = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var meat = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : baseMeat;
  var mood = new Mood({
    reserveMp: safeRestoreMpTarget()
  });
  mood.potion($item(_templateObject581 || (_templateObject581 = _taggedTemplateLiteral69(["How to Avoid Scams"]))), 3 * baseMeat);
  mood.potion($item(_templateObject657 || (_templateObject657 = _taggedTemplateLiteral69(["resolution: be wealthier"]))), 0.3 * baseMeat);
  mood.potion($item(_templateObject749 || (_templateObject749 = _taggedTemplateLiteral69(["resolution: be happier"]))), 0.15 * 0.45 * 0.8 * 200);
  var flaskValue = usingPurse() ? 0.3 * baseMeat : 5;
  mood.potion($item(_templateObject844 || (_templateObject844 = _taggedTemplateLiteral69(["Flaskfull of Hollow"]))), flaskValue);
  mood.skill($skill(_templateObject936 || (_templateObject936 = _taggedTemplateLiteral69(["Blood Bond"]))));
  mood.skill($skill(_templateObject1032 || (_templateObject1032 = _taggedTemplateLiteral69(["Leash of Linguini"]))));
  mood.skill($skill(_templateObject1128 || (_templateObject1128 = _taggedTemplateLiteral69(["Empathy of the Newt"]))));
  mood.skill($skill(_templateObject1227 || (_templateObject1227 = _taggedTemplateLiteral69(["The Polka of Plenty"]))));
  mood.skill($skill(_templateObject1325 || (_templateObject1325 = _taggedTemplateLiteral69(["Disco Leer"]))));
  mood.skill(urKels ? $skill(_templateObject1422 || (_templateObject1422 = _taggedTemplateLiteral69(["Ur-Kel's Aria of Annoyance"]))) : $skill(_templateObject1520 || (_templateObject1520 = _taggedTemplateLiteral69(["Fat Leon's Phat Loot Lyric"]))));
  mood.skill($skill(_templateObject1620 || (_templateObject1620 = _taggedTemplateLiteral69(["Singer's Faithful Ocelot"]))));
  mood.skill($skill(_templateObject1720 || (_templateObject1720 = _taggedTemplateLiteral69(["The Spirit of Taking"]))));
  mood.skill($skill(_templateObject1820 || (_templateObject1820 = _taggedTemplateLiteral69(["Drescher's Annoying Noise"]))));
  mood.skill($skill(_templateObject1920 || (_templateObject1920 = _taggedTemplateLiteral69(["Pride of the Puffin"]))));
  mood.skill($skill(_templateObject2020 || (_templateObject2020 = _taggedTemplateLiteral69(["Walk: Leisurely Amble"]))));
  mood.skill($skill(_templateObject2141 || (_templateObject2141 = _taggedTemplateLiteral69(["Call For Backup"]))));
  mood.skill($skill(_templateObject2222 || (_templateObject2222 = _taggedTemplateLiteral69(["Soothing Flute"]))));
  var mmjCost = (100 - (have($skill(_templateObject2321 || (_templateObject2321 = _taggedTemplateLiteral69(["Five Finger Discount"])))) ? 5 : 0) - (have($item(_templateObject2419 || (_templateObject2419 = _taggedTemplateLiteral69(["Travoltan trousers"])))) ? 5 : 0)) * (200 / (1.5 * (0, import_kolmafia79.myLevel)() + 5));
  var genericManaPotionCost = (0, import_kolmafia79.mallPrice)($item(_templateObject2519 || (_templateObject2519 = _taggedTemplateLiteral69(["generic mana potion"])))) * (200 / (2.5 * (0, import_kolmafia79.myLevel)()));
  var mpRestorerCost = Math.min(mmjCost, genericManaPotionCost);
  if ((0, import_kolmafia79.myClass)() !== $class(_templateObject2619 || (_templateObject2619 = _taggedTemplateLiteral69(["Pastamancer"]))) && 0.1 * meat * 10 > mpRestorerCost) {
    mood.skill($skill(_templateObject2719 || (_templateObject2719 = _taggedTemplateLiteral69(["Bind Lasagmbie"]))));
  }
  if ((0, import_kolmafia79.getWorkshed)() === $item(_templateObject2817 || (_templateObject2817 = _taggedTemplateLiteral69(["Asdon Martin keyfob"])))) {
    mood.drive(AsdonMartin_exports.Driving.Observantly);
  }
  if (have($item(_templateObject2915 || (_templateObject2915 = _taggedTemplateLiteral69(["Kremlin's Greatest Briefcase"]))))) {
    mood.effect($effect(_templateObject3015 || (_templateObject3015 = _taggedTemplateLiteral69(["A View to Some Meat"]))), function() {
      if (get("_kgbClicksUsed") < 22) {
        var buffTries = Math.ceil((22 - get("_kgbClicksUsed")) / 3);
        (0, import_kolmafia79.cliExecute)("Briefcase buff ".concat(new Array(buffTries).fill("meat").join(" ")));
      }
    });
  }
  if (!get("concertVisited") && get("sidequestArenaCompleted") === "fratboy") {
    (0, import_kolmafia79.cliExecute)("concert winklered");
  } else if (!get("concertVisited") && get("sidequestArenaCompleted") === "hippy") {
    (0, import_kolmafia79.cliExecute)("concert optimist primal");
  }
  if ((0, import_kolmafia79.itemAmount)($item(_templateObject3127 || (_templateObject3127 = _taggedTemplateLiteral69(["Bird-a-Day calendar"])))) > 0) {
    if (!have($skill(_templateObject3217 || (_templateObject3217 = _taggedTemplateLiteral69(["Seek out a Bird"])))) || !get("_canSeekBirds")) {
      (0, import_kolmafia79.use)(1, $item(_templateObject3317 || (_templateObject3317 = _taggedTemplateLiteral69(["Bird-a-Day calendar"]))));
    }
    if (have($skill(_templateObject3414 || (_templateObject3414 = _taggedTemplateLiteral69(["Visit your Favorite Bird"])))) && !get("_favoriteBirdVisited") && ((0, import_kolmafia79.numericModifier)($effect(_templateObject3514 || (_templateObject3514 = _taggedTemplateLiteral69(["Blessing of your favorite Bird"]))), "Meat Drop") > 0 || (0, import_kolmafia79.numericModifier)($effect(_templateObject3614 || (_templateObject3614 = _taggedTemplateLiteral69(["Blessing of your favorite Bird"]))), "Item Drop") > 0)) {
      (0, import_kolmafia79.useSkill)($skill(_templateObject3714 || (_templateObject3714 = _taggedTemplateLiteral69(["Visit your Favorite Bird"]))));
    }
    if (have($skill(_templateObject3814 || (_templateObject3814 = _taggedTemplateLiteral69(["Seek out a Bird"])))) && get("_birdsSoughtToday") < 6 && ((0, import_kolmafia79.numericModifier)($effect(_templateObject3914 || (_templateObject3914 = _taggedTemplateLiteral69(["Blessing of the Bird"]))), "Meat Drop") > 0 || (0, import_kolmafia79.numericModifier)($effect(_templateObject4014 || (_templateObject4014 = _taggedTemplateLiteral69(["Blessing of the Bird"]))), "Item Drop") > 0)) {
      setChoice(1399, 2);
      (0, import_kolmafia79.useSkill)($skill(_templateObject4116 || (_templateObject4116 = _taggedTemplateLiteral69(["Seek out a Bird"]))), 6 - get("_birdsSoughtToday"));
    }
  }
  if (have($skill(_templateObject4215 || (_templateObject4215 = _taggedTemplateLiteral69(["Incredible Self-Esteem"])))) && $effects(_templateObject4315 || (_templateObject4315 = _taggedTemplateLiteral69(["Always be Collecting, Work For Hours a Week"]))).some(function(effect2) {
    return have(effect2);
  }) && !get("_incredibleSelfEsteemCast")) {
    (0, import_kolmafia79.useSkill)($skill(_templateObject4414 || (_templateObject4414 = _taggedTemplateLiteral69(["Incredible Self-Esteem"]))));
  }
  var canRecord = (0, import_kolmafia79.getWorkshed)() === $item(_templateObject4514 || (_templateObject4514 = _taggedTemplateLiteral69(["warbear LP-ROM burner"]))) || have($item(_templateObject4614 || (_templateObject4614 = _taggedTemplateLiteral69(["warbear LP-ROM burner"]))) || get("questG04Nemesis") === "finished");
  if ((0, import_kolmafia79.myClass)() === $class(_templateObject4714 || (_templateObject4714 = _taggedTemplateLiteral69(["Accordion Thief"]))) && (0, import_kolmafia79.myLevel)() >= 15 && !canRecord) {
    if (have($skill(_templateObject4814 || (_templateObject4814 = _taggedTemplateLiteral69(["The Ballad of Richie Thingfinder"]))))) {
      (0, import_kolmafia79.useSkill)($skill(_templateObject4913 || (_templateObject4913 = _taggedTemplateLiteral69(["The Ballad of Richie Thingfinder"]))), 10 - get("_thingfinderCasts"));
    }
    if (have($skill(_templateObject5012 || (_templateObject5012 = _taggedTemplateLiteral69(["Chorale of Companionship"]))))) {
      (0, import_kolmafia79.useSkill)($skill(_templateObject5115 || (_templateObject5115 = _taggedTemplateLiteral69(["Chorale of Companionship"]))), 10 - get("_companionshipCasts"));
    }
  }
  shrugBadEffects();
  return mood;
}
function freeFightMood() {
  var mood = new Mood();
  for (var _len = arguments.length, additionalEffects = new Array(_len), _key = 0; _key < _len; _key++) {
    additionalEffects[_key] = arguments[_key];
  }
  for (var _i = 0, _additionalEffects = additionalEffects; _i < _additionalEffects.length; _i++) {
    var effect2 = _additionalEffects[_i];
    mood.effect(effect2);
  }
  if ((0, import_kolmafia79.haveEffect)($effect(_templateObject5214 || (_templateObject5214 = _taggedTemplateLiteral69(["Blue Swayed"])))) < 50) {
    (0, import_kolmafia79.use)(Math.ceil((50 - (0, import_kolmafia79.haveEffect)($effect(_templateObject5314 || (_templateObject5314 = _taggedTemplateLiteral69(["Blue Swayed"]))))) / 10), $item(_templateObject5414 || (_templateObject5414 = _taggedTemplateLiteral69(["pulled blue taffy"]))));
  }
  mood.potion($item(_templateObject5513 || (_templateObject5513 = _taggedTemplateLiteral69(["white candy heart"]))), 30);
  mood.skill($skill(_templateObject5612 || (_templateObject5612 = _taggedTemplateLiteral69(["Curiosity of Br'er Tarrypin"]))));
  shrugBadEffects.apply(void 0, additionalEffects);
  if ((0, import_kolmafia79.getWorkshed)() === $item(_templateObject5711 || (_templateObject5711 = _taggedTemplateLiteral69(["Asdon Martin keyfob"])))) {
    mood.drive(AsdonMartin_exports.Driving.Observantly);
  }
  return mood;
}
function useBuffExtenders() {
  withStash($items(_templateObject589 || (_templateObject589 = _taggedTemplateLiteral69(["Platinum Yendorian Express Card, Bag o' Tricks"]))), function() {
    if (have($item(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral69(["Platinum Yendorian Express Card"])))) && !get("expressCardUsed")) {
      burnLibrams();
      (0, import_kolmafia79.use)($item(_templateObject608 || (_templateObject608 = _taggedTemplateLiteral69(["Platinum Yendorian Express Card"]))));
    }
    if (have($item(_templateObject6114 || (_templateObject6114 = _taggedTemplateLiteral69(["Bag o' Tricks"])))) && !get("_bagOTricksUsed")) {
      (0, import_kolmafia79.use)($item(_templateObject6213 || (_templateObject6213 = _taggedTemplateLiteral69(["Bag o' Tricks"]))));
    }
  });
  if (have($item(_templateObject6312 || (_templateObject6312 = _taggedTemplateLiteral69(["License to Chill"])))) && !get("_licenseToChillUsed")) {
    burnLibrams();
    (0, import_kolmafia79.use)($item(_templateObject6412 || (_templateObject6412 = _taggedTemplateLiteral69(["License to Chill"]))));
  }
}
var stings = [].concat(_toConsumableArray27($effects(_templateObject658 || (_templateObject658 = _taggedTemplateLiteral69(["Apoplectic with Rage, Barfpits, Berry Thorny, Biologically Shocked, Bone Homie, Boner Battalion, Coal-Powered, Curse of the Black Pearl Onion, Dizzy with Rage, Drenched With Filth, EVISCERATE!, Fangs and Pangs, Frigidalmatian, Gummi Badass, Haiku State of Mind, It's Electric!, Jaba\xF1ero Saucesphere, Jalape\xF1o Saucesphere, Little Mouse Skull Buddy, Long Live GORF, Mayeaugh, Permanent Halloween, Psalm of Pointiness, Pygmy Drinking Buddy, Quivering with Rage, Scarysauce, Skeletal Cleric, Skeletal Rogue, Skeletal Warrior, Skeletal Wizard, Smokin', Soul Funk, Spiky Frozen Hair, Stinkybeard, Stuck-Up Hair, Can Has Cyborger, Feeling Nervous"])))), [$effect(_templateObject666 || (_templateObject666 = _taggedTemplateLiteral69(["Burning, Man"]))), $effect(_templateObject676 || (_templateObject676 = _taggedTemplateLiteral69(["Yes, Can Haz"])))]);
var textAlteringEffects = $effects(_templateObject686 || (_templateObject686 = _taggedTemplateLiteral69(["Can Has Cyborger, Dis Abled, Haiku State of Mind, Just the Best Anapests, O Hai!, Robocamo"])));
var teleportEffects = $effects(_templateObject695 || (_templateObject695 = _taggedTemplateLiteral69(["Teleportitis, Feeling Lost, Funday!"])));
var otherwiseBadEffects = $effects(_templateObject704 || (_templateObject704 = _taggedTemplateLiteral69(["Temporary Blindness"])));
function shrugBadEffects() {
  for (var _len2 = arguments.length, exclude = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    exclude[_key2] = arguments[_key2];
  }
  [].concat(_toConsumableArray27(stings), _toConsumableArray27(textAlteringEffects), _toConsumableArray27(teleportEffects), _toConsumableArray27(otherwiseBadEffects)).forEach(function(effect2) {
    if (have(effect2) && !exclude.includes(effect2)) {
      uneffect(effect2);
    }
  });
}

// src/resources/synthesis.ts
var import_kolmafia80 = require("kolmafia");
init_dist();
var _templateObject590;
var _templateObject2142;
var _templateObject3128;
var _templateObject4108;
var _templateObject591;
var _templateObject659;
var _templateObject750;
var _templateObject845;
var _templateObject937;
var _templateObject1033;
var _templateObject1129;
var _templateObject1228;
var _templateObject1326;
var _templateObject1423;
var _templateObject1521;
function _createForOfIteratorHelper24(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray47(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray47(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray47(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray47(o, minLen);
}
function _arrayLikeToArray47(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral70(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var allowList = $items(_templateObject590 || (_templateObject590 = _taggedTemplateLiteral70(["Fudgie Roll, peanut brittle shield, sugar shotgun, sugar shillelagh, sugar shank, sugar chapeau, sugar shorts, sugar shield, sugar shirt"])));
var blockList = /* @__PURE__ */ new Set([$item(_templateObject2142 || (_templateObject2142 = _taggedTemplateLiteral70(["candied nuts"]))), $item(_templateObject3128 || (_templateObject3128 = _taggedTemplateLiteral70(["candy kneecapping stick"]))), $item(_templateObject4108 || (_templateObject4108 = _taggedTemplateLiteral70(["chocolate cigar"]))), $item(_templateObject591 || (_templateObject591 = _taggedTemplateLiteral70(["fancy but probably evil chocolate"]))), $item(_templateObject659 || (_templateObject659 = _taggedTemplateLiteral70(["fancy chocolate"]))), $item(_templateObject750 || (_templateObject750 = _taggedTemplateLiteral70(["fancy chocolate car"]))), $item(_templateObject845 || (_templateObject845 = _taggedTemplateLiteral70(["gummi ammonite"]))), $item(_templateObject937 || (_templateObject937 = _taggedTemplateLiteral70(["gummi belemnite"]))), $item(_templateObject1033 || (_templateObject1033 = _taggedTemplateLiteral70(["gummi trilobite"]))), $item(_templateObject1129 || (_templateObject1129 = _taggedTemplateLiteral70(["powdered candy sushi set"]))), $item(_templateObject1228 || (_templateObject1228 = _taggedTemplateLiteral70(["radio button candy"]))), $item(_templateObject1326 || (_templateObject1326 = _taggedTemplateLiteral70(["spiritual candy cane"]))), $item(_templateObject1423 || (_templateObject1423 = _taggedTemplateLiteral70(["Ultra Mega Sour Ball"]))), $item(_templateObject1521 || (_templateObject1521 = _taggedTemplateLiteral70(["vitachoconutriment capsule"])))]);
function synthesize(casts, effect2) {
  var saveLimit = 1;
  var buyableCandies = $items.all().filter(function(i) {
    return i.tradeable && i.candyType === "complex" && !blockList.has(i);
  }).sort(function(a, b) {
    return (0, import_kolmafia80.mallPrice)(a) - (0, import_kolmafia80.mallPrice)(b);
  }).slice(0, 50);
  var shuffledAllowlist = shuffle(allowList);
  var _iterator = _createForOfIteratorHelper24(shuffledAllowlist), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var untradeable = _step.value;
      if ((0, import_kolmafia80.availableAmount)(untradeable) <= saveLimit)
        continue;
      var _iterator2 = _createForOfIteratorHelper24(buyableCandies), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var buyable = _step2.value;
          if ((0, import_kolmafia80.sweetSynthesisResult)(untradeable, buyable) !== effect2)
            continue;
          var possibleCasts = (0, import_kolmafia80.availableAmount)(untradeable) - saveLimit;
          var spleen = Math.max((0, import_kolmafia80.spleenLimit)() - (0, import_kolmafia80.mySpleenUse)(), 0);
          var castsToDo = Math.min(possibleCasts, casts, spleen);
          if (castsToDo === 0)
            continue;
          (0, import_kolmafia80.retrieveItem)(untradeable, castsToDo);
          (0, import_kolmafia80.retrieveItem)(buyable, castsToDo);
          if ((0, import_kolmafia80.sweetSynthesis)(castsToDo, untradeable, buyable))
            casts -= castsToDo;
          if (casts <= 0)
            return;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  (0, import_kolmafia80.sweetSynthesis)(clamp(casts, 0, (0, import_kolmafia80.spleenLimit)() - (0, import_kolmafia80.mySpleenUse)()), effect2);
}

// src/diet.ts
var _templateObject599;
var _templateObject2143;
var _templateObject3129;
var _templateObject4109;
var _templateObject5100;
var _templateObject660;
var _templateObject751;
var _templateObject846;
var _templateObject938;
var _templateObject1034;
var _templateObject1130;
var _templateObject1229;
var _templateObject1327;
var _templateObject1424;
var _templateObject1522;
var _templateObject1621;
var _templateObject1721;
var _templateObject1821;
var _templateObject1921;
var _templateObject2021;
var _templateObject2144;
var _templateObject2223;
var _templateObject2322;
var _templateObject2420;
var _templateObject2520;
var _templateObject2620;
var _templateObject2720;
var _templateObject2818;
var _templateObject2916;
var _templateObject3016;
var _templateObject3130;
var _templateObject3218;
var _templateObject3318;
var _templateObject3415;
var _templateObject3515;
var _templateObject3615;
var _templateObject3715;
var _templateObject3815;
var _templateObject3915;
var _templateObject4015;
var _templateObject4117;
var _templateObject4216;
var _templateObject4316;
var _templateObject4415;
var _templateObject4515;
var _templateObject4615;
var _templateObject4715;
var _templateObject4815;
var _templateObject4914;
var _templateObject5013;
var _templateObject5116;
var _templateObject5215;
var _templateObject5315;
var _templateObject5415;
var _templateObject5514;
var _templateObject5613;
var _templateObject5712;
var _templateObject5810;
var _templateObject5910;
var _templateObject609;
var _templateObject6115;
var _templateObject6214;
var _templateObject6313;
var _templateObject6413;
var _templateObject6510;
var _templateObject667;
var _templateObject677;
var _templateObject687;
var _templateObject696;
var _templateObject705;
var _templateObject7111;
var _templateObject7211;
var _templateObject7310;
var _templateObject7410;
var _templateObject754;
var _templateObject764;
var _templateObject774;
var _templateObject783;
var _templateObject793;
var _templateObject803;
var _templateObject8110;
var _templateObject8210;
var _templateObject8310;
var _templateObject847;
var _templateObject854;
var _templateObject863;
var _templateObject873;
var _templateObject882;
var _templateObject892;
var _templateObject902;
var _templateObject9110;
var _templateObject9210;
var _templateObject939;
var _templateObject943;
var _templateObject953;
var _templateObject963;
var _templateObject973;
var _templateObject982;
var _templateObject992;
var _templateObject1002;
var _templateObject10110;
var _templateObject10210;
var _templateObject1035;
var _templateObject1042;
var _templateObject1052;
var _templateObject1062;
var _templateObject1072;
var _templateObject1082;
var _templateObject1092;
var _templateObject1102;
var _templateObject11110;
var _templateObject11210;
var _templateObject1132;
var _templateObject1142;
var _templateObject1152;
var _templateObject1162;
var _templateObject1172;
var _templateObject1182;
var _templateObject1192;
var _templateObject1202;
var _templateObject12110;
var _templateObject12210;
var _templateObject1232;
var _templateObject1242;
var _templateObject1252;
var _templateObject1262;
var _templateObject1272;
var _templateObject1282;
var _templateObject1292;
var _templateObject1302;
var _templateObject13110;
var _templateObject1328;
var _templateObject1332;
var _templateObject1342;
var _templateObject1352;
var _templateObject1362;
var _templateObject1372;
var _templateObject1382;
var _templateObject1392;
var _templateObject1402;
var _templateObject14110;
var _templateObject1425;
var _templateObject1432;
var _templateObject1442;
var _templateObject1452;
var _templateObject1462;
var _templateObject1472;
var _templateObject1482;
var _templateObject1492;
var _templateObject1502;
var _templateObject15110;
var _templateObject1523;
var _templateObject1532;
var _templateObject1542;
var _templateObject1552;
var _templateObject1562;
var _templateObject1572;
var _templateObject1582;
var _templateObject1592;
var _templateObject1602;
var _templateObject16110;
var _templateObject1622;
var _templateObject1632;
var _templateObject1642;
var _templateObject1652;
var _templateObject1662;
var _templateObject1672;
var _templateObject1682;
var _templateObject1692;
var _templateObject1702;
var _templateObject17110;
var _templateObject1722;
var _templateObject1732;
var _templateObject1742;
var _templateObject1752;
var _templateObject1762;
var _templateObject1772;
var _templateObject1782;
var _templateObject1792;
var _templateObject1802;
var _templateObject18110;
var _templateObject1822;
var _templateObject1832;
var _templateObject1842;
var _templateObject1852;
var _templateObject1862;
var _templateObject1872;
var _templateObject1882;
var _templateObject1892;
var _templateObject1902;
var _templateObject19110;
var _templateObject1922;
var _templateObject1932;
var _templateObject1942;
var _templateObject1952;
var _templateObject1962;
var _templateObject1972;
var _templateObject1982;
var _templateObject1992;
var _templateObject2002;
var _templateObject20110;
var _templateObject2022;
var _templateObject2032;
var _templateObject2042;
var _templateObject2052;
var _templateObject2062;
var _templateObject2072;
var _templateObject2082;
var _templateObject2092;
var _templateObject21010;
var _templateObject21110;
var _templateObject21210;
var _templateObject21310;
var _templateObject2145;
var _templateObject2152;
var _templateObject2162;
function _slicedToArray27(arr, i) {
  return _arrayWithHoles27(arr) || _iterableToArrayLimit27(arr, i) || _unsupportedIterableToArray48(arr, i) || _nonIterableRest27();
}
function _nonIterableRest27() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit27(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles27(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper25(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray48(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray28(arr) {
  return _arrayWithoutHoles28(arr) || _iterableToArray28(arr) || _unsupportedIterableToArray48(arr) || _nonIterableSpread28();
}
function _nonIterableSpread28() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray48(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray48(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray48(o, minLen);
}
function _iterableToArray28(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles28(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray48(arr);
}
function _arrayLikeToArray48(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral71(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var MPA = get("valueOfAdventure");
(0, import_kolmafia81.print)("Using adventure value ".concat(MPA, "."), HIGHLIGHT);
var Mayo2 = MayoClinic_exports.Mayo;
function eatSafe(qty, item10) {
  if (have($item(_templateObject599 || (_templateObject599 = _taggedTemplateLiteral71(["Universal Seasoning"])))) && $item(_templateObject2143 || (_templateObject2143 = _taggedTemplateLiteral71(["Universal Seasoning"]))).dailyusesleft > 0 && !get("universalSeasoningActive")) {
    (0, import_kolmafia81.use)($item(_templateObject3129 || (_templateObject3129 = _taggedTemplateLiteral71(["Universal Seasoning"]))));
  }
  if ((0, import_kolmafia81.myLevel)() >= 15 && !get("_hungerSauceUsed") && (0, import_kolmafia81.mallPrice)($item(_templateObject4109 || (_templateObject4109 = _taggedTemplateLiteral71(["Hunger\u2122 Sauce"])))) < 3 * MPA) {
    acquire(1, $item(_templateObject5100 || (_templateObject5100 = _taggedTemplateLiteral71(["Hunger\u2122 Sauce"]))), 3 * MPA);
    (0, import_kolmafia81.use)($item(_templateObject660 || (_templateObject660 = _taggedTemplateLiteral71(["Hunger\u2122 Sauce"]))));
  }
  if ((0, import_kolmafia81.mallPrice)($item(_templateObject751 || (_templateObject751 = _taggedTemplateLiteral71(["fudge spork"])))) < 3 * MPA && !get("_fudgeSporkUsed")) {
    (0, import_kolmafia81.eat)($item(_templateObject846 || (_templateObject846 = _taggedTemplateLiteral71(["fudge spork"]))));
  }
  useIfUnused($item(_templateObject938 || (_templateObject938 = _taggedTemplateLiteral71(["milk of magnesium"]))), "_milkOfMagnesiumUsed", 5 * MPA);
  if (!(0, import_kolmafia81.eat)(qty, item10))
    throw "Failed to eat safely";
}
function drinkSafe(qty, item10) {
  var prevDrunk = (0, import_kolmafia81.myInebriety)();
  if (have($skill(_templateObject1034 || (_templateObject1034 = _taggedTemplateLiteral71(["The Ode to Booze"]))))) {
    var odeTurns = qty * item10.inebriety;
    var castTurns = odeTurns - (0, import_kolmafia81.haveEffect)($effect(_templateObject1130 || (_templateObject1130 = _taggedTemplateLiteral71(["Ode to Booze"]))));
    if (castTurns > 0) {
      (0, import_kolmafia81.useSkill)($skill(_templateObject1229 || (_templateObject1229 = _taggedTemplateLiteral71(["The Ode to Booze"]))), Math.ceil(castTurns / (0, import_kolmafia81.turnsPerCast)($skill(_templateObject1327 || (_templateObject1327 = _taggedTemplateLiteral71(["The Ode to Booze"]))))));
    }
  }
  if (!(0, import_kolmafia81.drink)(qty, item10))
    throw "Failed to drink safely";
  if (item10.inebriety === 1 && prevDrunk === qty + (0, import_kolmafia81.myInebriety)() - 1) {
    (0, import_kolmafia81.setProperty)("_mimeArmyShotglassUsed", "true");
  }
}
function chewSafe(qty, item10) {
  if (!(0, import_kolmafia81.chew)(qty, item10))
    throw "Failed to chew safely";
}
function consumeSafe(qty, item10, additionalValue, skipAcquire) {
  var spleenCleaned = spleenCleaners.get(item10);
  if (spleenCleaned && (0, import_kolmafia81.mySpleenUse)() < spleenCleaned) {
    throw "No spleen to clear with this.";
  }
  var averageAdventures = getAverageAdventures(item10);
  if (!skipAcquire && (averageAdventures > 0 || additionalValue)) {
    var cap = Math.max(0, averageAdventures * MPA) + (additionalValue !== null && additionalValue !== void 0 ? additionalValue : 0);
    acquire(qty, item10, cap);
  } else if (!skipAcquire) {
    acquire(qty, item10);
  }
  if ((0, import_kolmafia81.itemType)(item10) === "food" || item10 === saladFork)
    eatSafe(qty, item10);
  else if ((0, import_kolmafia81.itemType)(item10) === "booze" || item10 === frostyMug) {
    drinkSafe(qty, item10);
  } else if ((0, import_kolmafia81.itemType)(item10) === "spleen item")
    chewSafe(qty, item10);
  else
    (0, import_kolmafia81.use)(qty, item10);
}
function propTrue(prop) {
  if (typeof prop === "boolean") {
    return prop;
  } else {
    return get(prop);
  }
}
function useIfUnused(item10, prop, maxPrice) {
  if (!propTrue(prop)) {
    if ((0, import_kolmafia81.mallPrice)(item10) <= maxPrice) {
      acquire(1, item10, maxPrice, false);
      if (!have(item10))
        return;
      (0, import_kolmafia81.use)(1, item10);
    } else {
      (0, import_kolmafia81.print)("Skipping ".concat(item10.name, "; too expensive (").concat((0, import_kolmafia81.mallPrice)(item10), " > ").concat(maxPrice, ")."));
    }
  }
}
function nonOrganAdventures() {
  useIfUnused($item(_templateObject1424 || (_templateObject1424 = _taggedTemplateLiteral71(["fancy chocolate car"]))), get("_chocolatesUsed") !== 0, 2 * MPA);
  while (get("_loveChocolatesUsed") < 3) {
    var price2 = have($item(_templateObject1522 || (_templateObject1522 = _taggedTemplateLiteral71(["LOV Extraterrestrial Chocolate"])))) ? 15e3 : 2e4;
    var value = clamp(3 - get("_loveChocolatesUsed"), 0, 3) * get("valueOfAdventure");
    if (value < price2)
      break;
    if (!have($item(_templateObject1621 || (_templateObject1621 = _taggedTemplateLiteral71(["LOV Extraterrestrial Chocolate"]))))) {
      Kmail.send("sellbot", "".concat($item(_templateObject1721 || (_templateObject1721 = _taggedTemplateLiteral71(["LOV Extraterrestrial Chocolate"]))).name, " (1)"), void 0, 2e4);
      (0, import_kolmafia81.wait)(11);
      (0, import_kolmafia81.cliExecute)("refresh inventory");
      if (!have($item(_templateObject1821 || (_templateObject1821 = _taggedTemplateLiteral71(["LOV Extraterrestrial Chocolate"]))))) {
        (0, import_kolmafia81.print)("I'm tired of waiting for sellbot to send me some chocolate", "red");
        break;
      }
    }
    (0, import_kolmafia81.use)($item(_templateObject1921 || (_templateObject1921 = _taggedTemplateLiteral71(["LOV Extraterrestrial Chocolate"]))));
  }
  var chocos = /* @__PURE__ */ new Map([[$class(_templateObject2021 || (_templateObject2021 = _taggedTemplateLiteral71(["Seal Clubber"]))), $item(_templateObject2144 || (_templateObject2144 = _taggedTemplateLiteral71(["chocolate seal-clubbing club"])))], [$class(_templateObject2223 || (_templateObject2223 = _taggedTemplateLiteral71(["Turtle Tamer"]))), $item(_templateObject2322 || (_templateObject2322 = _taggedTemplateLiteral71(["chocolate turtle totem"])))], [$class(_templateObject2420 || (_templateObject2420 = _taggedTemplateLiteral71(["Pastamancer"]))), $item(_templateObject2520 || (_templateObject2520 = _taggedTemplateLiteral71(["chocolate pasta spoon"])))], [$class(_templateObject2620 || (_templateObject2620 = _taggedTemplateLiteral71(["Sauceror"]))), $item(_templateObject2720 || (_templateObject2720 = _taggedTemplateLiteral71(["chocolate saucepan"])))], [$class(_templateObject2818 || (_templateObject2818 = _taggedTemplateLiteral71(["Accordion Thief"]))), $item(_templateObject2916 || (_templateObject2916 = _taggedTemplateLiteral71(["chocolate stolen accordion"])))], [$class(_templateObject3016 || (_templateObject3016 = _taggedTemplateLiteral71(["Disco Bandit"]))), $item(_templateObject3130 || (_templateObject3130 = _taggedTemplateLiteral71(["chocolate disco ball"])))]]);
  var classChoco = chocos.get((0, import_kolmafia81.myClass)());
  var chocExpVal = function(remaining, item10) {
    var advs = [0, 0, 1, 2, 3][remaining + (item10 === classChoco ? 1 : 0)];
    return advs * MPA - (0, import_kolmafia81.mallPrice)(item10);
  };
  var chocosRemaining = clamp(3 - get("_chocolatesUsed"), 0, 3);
  var _loop = function _loop2(i2) {
    var chocoVals = _toConsumableArray28(chocos.values()).map(function(choc) {
      return {
        choco: choc,
        value: chocExpVal(i2, choc)
      };
    });
    var best = maxBy(chocoVals, "value");
    if (best.value > 0) {
      acquire(1, best.choco, best.value + (0, import_kolmafia81.mallPrice)(best.choco), false);
      (0, import_kolmafia81.use)(1, best.choco);
    } else
      return 1;
  };
  for (var i = chocosRemaining; i > 0; i--) {
    if (_loop(i))
      break;
  }
  useIfUnused($item(_templateObject3218 || (_templateObject3218 = _taggedTemplateLiteral71(["fancy chocolate sculpture"]))), get("_chocolateSculpturesUsed") > 0, 5 * MPA + 5e3);
  useIfUnused($item(_templateObject3318 || (_templateObject3318 = _taggedTemplateLiteral71(["essential tofu"]))), "_essentialTofuUsed", 5 * MPA);
  if (!get("_etchedHourglassUsed") && have($item(_templateObject3415 || (_templateObject3415 = _taggedTemplateLiteral71(["etched hourglass"]))))) {
    (0, import_kolmafia81.use)(1, $item(_templateObject3515 || (_templateObject3515 = _taggedTemplateLiteral71(["etched hourglass"]))));
  }
  if ((0, import_kolmafia81.getProperty)("_timesArrowUsed") !== "true" && (0, import_kolmafia81.mallPrice)($item(_templateObject3615 || (_templateObject3615 = _taggedTemplateLiteral71(["time's arrow"])))) < 5 * MPA) {
    acquire(1, $item(_templateObject3715 || (_templateObject3715 = _taggedTemplateLiteral71(["time's arrow"]))), 5 * MPA);
    (0, import_kolmafia81.cliExecute)("csend 1 time's arrow to botticelli");
    (0, import_kolmafia81.setProperty)("_timesArrowUsed", "true");
  }
  if (have($skill(_templateObject3815 || (_templateObject3815 = _taggedTemplateLiteral71(["Ancestral Recall"])))) && (0, import_kolmafia81.mallPrice)($item(_templateObject3915 || (_templateObject3915 = _taggedTemplateLiteral71(["blue mana"])))) < 3 * MPA) {
    var casts = Math.max(10 - get("_ancestralRecallCasts"), 0);
    acquire(casts, $item(_templateObject4015 || (_templateObject4015 = _taggedTemplateLiteral71(["blue mana"]))), 3 * MPA);
    (0, import_kolmafia81.useSkill)(casts, $skill(_templateObject4117 || (_templateObject4117 = _taggedTemplateLiteral71(["Ancestral Recall"]))));
  }
  if (globalOptions.ascend) {
    useIfUnused($item(_templateObject4216 || (_templateObject4216 = _taggedTemplateLiteral71(["borrowed time"]))), "_borrowedTimeUsed", 20 * MPA);
  }
}
function pillCheck() {
  if (!get("_distentionPillUsed")) {
    if (!get("garbo_skipPillCheck", false) && !have($item(_templateObject4316 || (_templateObject4316 = _taggedTemplateLiteral71(["distention pill"]))), 1)) {
      _set("garbo_skipPillCheck", userConfirmDialog("You do not have any distention pills. Continue anyway? (Defaulting to no in 15 seconds)", false, 15e3));
    }
  }
  if (!get("_syntheticDogHairPillUsed")) {
    if (!get("garbo_skipPillCheck", false) && !have($item(_templateObject4415 || (_templateObject4415 = _taggedTemplateLiteral71(["synthetic dog hair pill"]))), 1)) {
      _set("garbo_skipPillCheck", userConfirmDialog("You do not have any synthetic dog hair pills. Continue anyway? (Defaulting to no in 15 seconds)", false, 15e3));
    }
  }
}
var saladFork = $item(_templateObject4515 || (_templateObject4515 = _taggedTemplateLiteral71(["Ol' Scratch's salad fork"])));
var frostyMug = $item(_templateObject4615 || (_templateObject4615 = _taggedTemplateLiteral71(["Frosty's frosty mug"])));
var spleenCleaners = /* @__PURE__ */ new Map([[$item(_templateObject4715 || (_templateObject4715 = _taggedTemplateLiteral71(["extra-greasy slider"]))), 5], [$item(_templateObject4815 || (_templateObject4815 = _taggedTemplateLiteral71(["jar of fermented pickle juice"]))), 5], [$item(_templateObject4914 || (_templateObject4914 = _taggedTemplateLiteral71(["mojo filter"]))), 1]]);
var stomachLiverCleaners = /* @__PURE__ */ new Map([[$item(_templateObject5013 || (_templateObject5013 = _taggedTemplateLiteral71(["spice melange"]))), [-3, -3]], [$item(_templateObject5116 || (_templateObject5116 = _taggedTemplateLiteral71(["synthetic dog hair pill"]))), [0, -1]], [$item(_templateObject5215 || (_templateObject5215 = _taggedTemplateLiteral71(["cuppa Sobrie tea"]))), [0, -1]], [$item(_templateObject5315 || (_templateObject5315 = _taggedTemplateLiteral71(["designer sweatpants"]))), [0, -1]], [$item(_templateObject5415 || (_templateObject5415 = _taggedTemplateLiteral71(["august scepter"]))), [-1, 0]]]);
function legendaryPizzaToMenu(pizzas, maker) {
  var canCookLegendaryPizza = function(pizza) {
    var recipes = [pizza].concat(_toConsumableArray28($items(_templateObject5514 || (_templateObject5514 = _taggedTemplateLiteral71(["roasted vegetable of Jarlsberg, Pete's rich ricotta, Boris's bread"]))))).map(function(i) {
      return (0, import_kolmafia81.toInt)(i);
    });
    return !recipes.some(function(id) {
      return get("unknownRecipe".concat(id), true);
    });
  };
  return pizzas.filter(function(_ref) {
    var item10 = _ref.item, pref = _ref.pref;
    return !get(pref, true) && canCookLegendaryPizza(item10);
  }).map(function(_ref2) {
    var item10 = _ref2.item;
    return maker({
      item: item10,
      price: 2 * sum($items(_templateObject5613 || (_templateObject5613 = _taggedTemplateLiteral71(["Vegetable of Jarlsberg, St. Sneaky Pete's Whey, Yeast of Boris"]))), ingredientCost)
    });
  });
}
var mallMin = function(items) {
  return maxBy(items, import_kolmafia81.mallPrice, true);
};
function menu() {
  var spaghettiBreakfast = have($item(_templateObject5712 || (_templateObject5712 = _taggedTemplateLiteral71(["spaghetti breakfast"])))) && (0, import_kolmafia81.myFullness)() === 0 && get("_timeSpinnerFoodAvailable") === "" && !get("_spaghettiBreakfastEaten") ? 1 : 0;
  var complexMushroomWines = $items(_templateObject5810 || (_templateObject5810 = _taggedTemplateLiteral71(["overpowering mushroom wine, complex mushroom wine, smooth mushroom wine, blood-red mushroom wine, buzzing mushroom wine, swirling mushroom wine"])));
  var perfectDrinks = $items(_templateObject5910 || (_templateObject5910 = _taggedTemplateLiteral71(["perfect cosmopolitan, perfect negroni, perfect dark and stormy, perfect mimosa, perfect old-fashioned, perfect paloma"])));
  var lasagnas = $items(_templateObject609 || (_templateObject609 = _taggedTemplateLiteral71(["fishy fish lasagna, gnat lasagna, long pork lasagna"])));
  var standardSpleenItems = $items(_templateObject6115 || (_templateObject6115 = _taggedTemplateLiteral71(["agua de vida, gooey paste, oily paste, ectoplasmic paste, greasy paste, bug paste, hippy paste, orc paste, demonic paste, indescribably horrible paste, fishy paste, goblin paste, pirate paste, chlorophyll paste, strange paste, Mer-kin paste, slimy paste, penguin paste, elemental paste, cosmic paste, hobo paste, Crimbo paste, groose grease, Unconscious Collective Dream Jar, grim fairy tale, powdered gold"])));
  var smallEpics = [].concat(_toConsumableArray28($items(_templateObject6214 || (_templateObject6214 = _taggedTemplateLiteral71(["meteoreo, ice rice"])))), [$item(_templateObject6313 || (_templateObject6313 = _taggedTemplateLiteral71(["Tea, Earl Grey, Hot"])))]);
  var boxingDayCareItems = $items(_templateObject6413 || (_templateObject6413 = _taggedTemplateLiteral71(["glass of raw eggs, punch-drunk punch"]))).filter(function(item10) {
    return have(item10);
  });
  var pilsners = $items(_templateObject6510 || (_templateObject6510 = _taggedTemplateLiteral71(["astral pilsner"]))).filter(function(item10) {
    return have(item10);
  });
  var limitedItems = [].concat(_toConsumableArray28(boxingDayCareItems), _toConsumableArray28(pilsners)).map(function(item10) {
    return new MenuItem(item10, {
      maximum: (0, import_kolmafia81.availableAmount)(item10)
    });
  });
  var legendaryPizzas = legendaryPizzaToMenu([{
    item: $item(_templateObject667 || (_templateObject667 = _taggedTemplateLiteral71(["Calzone of Legend"]))),
    pref: "calzoneOfLegendEaten"
  }, {
    item: $item(_templateObject677 || (_templateObject677 = _taggedTemplateLiteral71(["Pizza of Legend"]))),
    pref: "pizzaOfLegendEaten"
  }], function(out) {
    return new MenuItem(out.item, {
      maximum: 1,
      priceOverride: out.price
    });
  });
  return [
    // FOOD
    new MenuItem($item(_templateObject687 || (_templateObject687 = _taggedTemplateLiteral71(["Dreadsylvanian cold pocket"])))),
    new MenuItem($item(_templateObject696 || (_templateObject696 = _taggedTemplateLiteral71(["Dreadsylvanian hot pocket"])))),
    new MenuItem($item(_templateObject705 || (_templateObject705 = _taggedTemplateLiteral71(["Dreadsylvanian sleaze pocket"])))),
    new MenuItem($item(_templateObject7111 || (_templateObject7111 = _taggedTemplateLiteral71(["Dreadsylvanian stink pocket"])))),
    new MenuItem($item(_templateObject7211 || (_templateObject7211 = _taggedTemplateLiteral71(["Dreadsylvanian spooky pocket"])))),
    new MenuItem($item(_templateObject7310 || (_templateObject7310 = _taggedTemplateLiteral71(["tin cup of mulligan stew"])))),
    new MenuItem($item(_templateObject7410 || (_templateObject7410 = _taggedTemplateLiteral71(["frozen banquet"])))),
    new MenuItem($item(_templateObject754 || (_templateObject754 = _taggedTemplateLiteral71(["deviled egg"])))),
    new MenuItem($item(_templateObject764 || (_templateObject764 = _taggedTemplateLiteral71(["spaghetti breakfast"]))), {
      maximum: spaghettiBreakfast
    }),
    new MenuItem($item(_templateObject774 || (_templateObject774 = _taggedTemplateLiteral71(["extra-greasy slider"])))),
    new MenuItem(mallMin(lasagnas)),
    new MenuItem(mallMin(smallEpics)),
    new MenuItem($item(_templateObject783 || (_templateObject783 = _taggedTemplateLiteral71(["green hamhock"]))))
  ].concat(_toConsumableArray28(legendaryPizzas.flat()), [
    // BOOZE
    new MenuItem($item(_templateObject793 || (_templateObject793 = _taggedTemplateLiteral71(["elemental caipiroska"])))),
    new MenuItem($item(_templateObject803 || (_templateObject803 = _taggedTemplateLiteral71(["moreltini"])))),
    new MenuItem($item(_templateObject8110 || (_templateObject8110 = _taggedTemplateLiteral71(["Dreadsylvanian cold-fashioned"])))),
    new MenuItem($item(_templateObject8210 || (_templateObject8210 = _taggedTemplateLiteral71(["Dreadsylvanian dank and stormy"])))),
    new MenuItem($item(_templateObject8310 || (_templateObject8310 = _taggedTemplateLiteral71(["Dreadsylvanian grimlet"])))),
    new MenuItem($item(_templateObject847 || (_templateObject847 = _taggedTemplateLiteral71(["Dreadsylvanian hot toddy"])))),
    new MenuItem($item(_templateObject854 || (_templateObject854 = _taggedTemplateLiteral71(["Dreadsylvanian slithery nipple"])))),
    new MenuItem($item(_templateObject863 || (_templateObject863 = _taggedTemplateLiteral71(["Hodgman's blanket"])))),
    new MenuItem($item(_templateObject873 || (_templateObject873 = _taggedTemplateLiteral71(["Sacramento wine"])))),
    new MenuItem($item(_templateObject882 || (_templateObject882 = _taggedTemplateLiteral71(["iced plum wine"])))),
    new MenuItem($item(_templateObject892 || (_templateObject892 = _taggedTemplateLiteral71(["splendid martini"])))),
    new MenuItem($item(_templateObject902 || (_templateObject902 = _taggedTemplateLiteral71(["Eye and a Twist"])))),
    new MenuItem($item(_templateObject9110 || (_templateObject9110 = _taggedTemplateLiteral71(["jar of fermented pickle juice"])))),
    new MenuItem(mallMin(complexMushroomWines)),
    new MenuItem(mallMin(perfectDrinks)),
    new MenuItem($item(_templateObject9210 || (_templateObject9210 = _taggedTemplateLiteral71(["green eggnog"])))),
    // SPLEEN
    new MenuItem($item(_templateObject939 || (_templateObject939 = _taggedTemplateLiteral71(["octolus oculus"])))),
    new MenuItem($item(_templateObject943 || (_templateObject943 = _taggedTemplateLiteral71(["prismatic wad"])))),
    new MenuItem($item(_templateObject953 || (_templateObject953 = _taggedTemplateLiteral71(["transdermal smoke patch"])))),
    new MenuItem($item(_templateObject963 || (_templateObject963 = _taggedTemplateLiteral71(["antimatter wad"])))),
    new MenuItem($item(_templateObject973 || (_templateObject973 = _taggedTemplateLiteral71(["voodoo snuff"])))),
    new MenuItem($item(_templateObject982 || (_templateObject982 = _taggedTemplateLiteral71(["blood-drive sticker"])))),
    new MenuItem(mallMin(standardSpleenItems)),
    new MenuItem(mallMin($items(_templateObject992 || (_templateObject992 = _taggedTemplateLiteral71(["not-a-pipe, glimmering roc feather"])))))
  ], _toConsumableArray28(limitedItems), [
    // HELPERS
    new MenuItem($item(_templateObject1002 || (_templateObject1002 = _taggedTemplateLiteral71(["distention pill"])))),
    new MenuItem($item(_templateObject10110 || (_templateObject10110 = _taggedTemplateLiteral71(["cuppa Voraci tea"])))),
    new MenuItem(Mayo2.flex),
    new MenuItem(Mayo2.zapine),
    new MenuItem($item(_templateObject10210 || (_templateObject10210 = _taggedTemplateLiteral71(["Special Seasoning"])))),
    new MenuItem(saladFork),
    new MenuItem(frostyMug),
    new MenuItem($item(_templateObject1035 || (_templateObject1035 = _taggedTemplateLiteral71(["mojo filter"])))),
    new MenuItem($item(_templateObject1042 || (_templateObject1042 = _taggedTemplateLiteral71(["pocket wish"]))), {
      maximum: 1,
      effect: $effect(_templateObject1052 || (_templateObject1052 = _taggedTemplateLiteral71(["Refined Palate"])))
    }),
    new MenuItem($item(_templateObject1062 || (_templateObject1062 = _taggedTemplateLiteral71(["toasted brie"]))), {
      maximum: 1
    }),
    new MenuItem($item(_templateObject1072 || (_templateObject1072 = _taggedTemplateLiteral71(["potion of the field gar"]))), {
      maximum: 1
    })
  ], _toConsumableArray28(_toConsumableArray28(stomachLiverCleaners.keys()).map(function(item10) {
    return new MenuItem(item10);
  })), [new MenuItem($item(_templateObject1082 || (_templateObject1082 = _taggedTemplateLiteral71(["sweet tooth"]))), {
    size: -1,
    organ: "food",
    maximum: 1
  }), new MenuItem($item(_templateObject1092 || (_templateObject1092 = _taggedTemplateLiteral71(["designer sweatpants"]))), {
    size: -1,
    organ: "booze",
    maximum: Math.min(3 - get("_sweatOutSomeBoozeUsed"), Math.floor(get("sweat") / 25))
  }), new MenuItem($item(_templateObject1102 || (_templateObject1102 = _taggedTemplateLiteral71(["august scepter"]))), {
    size: -1,
    organ: "food",
    maximum: shouldAugustCast($skill(_templateObject11110 || (_templateObject11110 = _taggedTemplateLiteral71(["Aug. 16th: Roller Coaster Day!"])))) ? 1 : 0
  })]).filter(function(item10) {
    return item10.price() < Infinity;
  });
}
function bestConsumable(organType) {
  var levelRestrict = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  var restrictList = arguments.length > 2 ? arguments[2] : void 0;
  var maxSize = arguments.length > 3 ? arguments[3] : void 0;
  var fullMenu = potionMenu(menu(), 0, 0);
  var organMenu = fullMenu.filter(function(menuItem) {
    return (0, import_kolmafia81.itemType)(menuItem.item) === organType;
  });
  if (restrictList) {
    if (restrictList instanceof import_kolmafia81.Item) {
      organMenu = organMenu.filter(function(menuItem) {
        return restrictList !== menuItem.item;
      });
    } else {
      organMenu = organMenu.filter(function(menuItem) {
        return !restrictList.includes(menuItem.item);
      });
    }
  }
  if (maxSize) {
    organMenu = organMenu.filter(function(menuItem) {
      return menuItem.size <= maxSize;
    });
  }
  if (levelRestrict) {
    organMenu = organMenu.filter(function(menuItem) {
      return menuItem.item.levelreq <= (0, import_kolmafia81.myLevel)();
    });
  }
  var organList = organMenu.map(function(consumable) {
    var edible = consumable.item;
    var buff = get2("Effect", edible);
    var turnsPerUse = get2("Effect Duration", edible);
    var meatDrop = get2("Meat Drop", buff);
    var famWeight = get2("Familiar Weight", buff);
    var buffValue = (meatDrop + famWeight * 25 / 10) * turnsPerUse * (baseMeat + 750) / 100;
    var advValue = getAverageAdventures(edible) * get("valueOfAdventure");
    var organSpace = consumable.size;
    return {
      edible: edible,
      value: (buffValue + advValue - (0, import_kolmafia81.mallPrice)(edible)) / organSpace
    };
  });
  var best = maxBy(organList, "value");
  return best;
}
function gregariousCount() {
  var gregariousCharges = get("beGregariousCharges") + (get("beGregariousFightsLeft") > 0 && get("beGregariousMonster") === $monster(_templateObject11210 || (_templateObject11210 = _taggedTemplateLiteral71(["Knob Goblin Embezzler"]))) ? 1 : 0);
  var gregariousFightsPerCharge = expectedGregs("extro");
  var marginalGregariousFights = gregariousFightsPerCharge.splice(gregariousFightsPerCharge.length - 1, 1)[0];
  var expectedGregariousFights = gregariousFightsPerCharge.slice(gregariousCharges);
  return {
    expectedGregariousFights: expectedGregariousFights,
    marginalGregariousFights: marginalGregariousFights
  };
}
function copiers() {
  var embezzlerDifferential = EMBEZZLER_MULTIPLIER() * MPA;
  var _gregariousCount = gregariousCount(), expectedGregariousFights = _gregariousCount.expectedGregariousFights, marginalGregariousFights = _gregariousCount.marginalGregariousFights;
  var extros = (0, import_kolmafia81.myInebriety)() > (0, import_kolmafia81.inebrietyLimit)() ? [] : [].concat(_toConsumableArray28(expectedGregariousFights.map(function(embezzlers) {
    return new MenuItem($item(_templateObject1132 || (_templateObject1132 = _taggedTemplateLiteral71(["Extrovermectin\u2122"]))), {
      additionalValue: embezzlers * embezzlerDifferential,
      maximum: 1
    });
  })), [new MenuItem($item(_templateObject1142 || (_templateObject1142 = _taggedTemplateLiteral71(["Extrovermectin\u2122"]))), {
    additionalValue: marginalGregariousFights * embezzlerDifferential
  })]);
  return _toConsumableArray28(extros);
}
function countCopies(diet) {
  var extros = sum(diet.entries, function(_ref3) {
    var menuItems = _ref3.menuItems, quantity = _ref3.quantity;
    return menuItems.some(function(menuItem) {
      return menuItem.item === $item(_templateObject1152 || (_templateObject1152 = _taggedTemplateLiteral71(["Extrovermectin\u2122"])));
    }) ? quantity : 0;
  });
  var _gregariousCount2 = gregariousCount(), expectedGregariousFights = _gregariousCount2.expectedGregariousFights, marginalGregariousFights = _gregariousCount2.marginalGregariousFights;
  var replaceExtros = sumNumbers(expectedGregariousFights.slice(0, extros));
  var bonusExtros = clamp(extros - expectedGregariousFights.length, 0, extros) * marginalGregariousFights;
  return replaceExtros + bonusExtros;
}
function ingredientCost(item10) {
  var ingredientMallPrice = (0, import_kolmafia81.mallPrice)(item10);
  var ingredientAutosellPrice = (0, import_kolmafia81.autosellPrice)(item10);
  if (!have(item10) || item10.tradeable && ingredientMallPrice > Math.max(100, 2 * ingredientAutosellPrice)) {
    return ingredientMallPrice;
  }
  return ingredientAutosellPrice;
}
function potionMenu(baseMenu, embezzlers, turns) {
  function limitedPotion(input, limit) {
    var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    if (limit === 0) {
      return [];
    }
    var potion2 = input instanceof import_kolmafia81.Item ? new Potion(input) : input;
    var mayo = void 0;
    if ((0, import_kolmafia81.itemType)(potion2.potion) === "food" && MayoClinic_exports.installed()) {
      potion2 = potion2.doubleDuration();
      mayo = Mayo2.zapine;
    }
    return potion2.value(embezzlers, turns, limit).map(function(tier) {
      return new MenuItem(potion2.potion, {
        maximum: tier.quantity,
        additionalValue: tier.value,
        priceOverride: options.price,
        organ: options.organ,
        size: options.size,
        data: tier.name,
        mayo: mayo
      });
    });
  }
  function potion(potion2) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return limitedPotion(potion2, void 0, options);
  }
  var speakeasy = $item(_templateObject1162 || (_templateObject1162 = _taggedTemplateLiteral71(["Clan speakeasy"])));
  var hasSpeakeasy = (0, import_kolmafia81.getClanLounge)()["".concat(speakeasy)];
  var twiceHauntedPrice = Math.min(ingredientCost($item(_templateObject1172 || (_templateObject1172 = _taggedTemplateLiteral71(["haunted orange"])))), ingredientCost($item(_templateObject1182 || (_templateObject1182 = _taggedTemplateLiteral71(["orange"])))) + ingredientCost($item(_templateObject1192 || (_templateObject1192 = _taggedTemplateLiteral71(["ghostly ectoplasm"]))))) + Math.min(ingredientCost($item(_templateObject1202 || (_templateObject1202 = _taggedTemplateLiteral71(["haunted bottle of vodka"])))), ingredientCost($item(_templateObject12110 || (_templateObject12110 = _taggedTemplateLiteral71(["bottle of vodka"])))) + ingredientCost($item(_templateObject12210 || (_templateObject12210 = _taggedTemplateLiteral71(["ghostly ectoplasm"])))));
  var campfireHotdog = get("getawayCampsiteUnlocked") ? potion($item(_templateObject1232 || (_templateObject1232 = _taggedTemplateLiteral71(["campfire hot dog"]))), {
    price: ingredientCost($item(_templateObject1242 || (_templateObject1242 = _taggedTemplateLiteral71(["stick of firewood"]))))
  }) : [];
  var foodCone = realmAvailable("stench") || globalOptions.simdiet && !globalOptions.nobarf ? limitedPotion($item(_templateObject1252 || (_templateObject1252 = _taggedTemplateLiteral71(["Dinsey food-cone"]))), Math.floor((0, import_kolmafia81.availableAmount)($item(_templateObject1262 || (_templateObject1262 = _taggedTemplateLiteral71(["FunFunds\u2122"])))) / 2), {
    price: 2 * garboValue($item(_templateObject1272 || (_templateObject1272 = _taggedTemplateLiteral71(["FunFunds\u2122"]))))
  }) : [];
  var borisBread = !get("unknownRecipe10978") ? potion($item(_templateObject1282 || (_templateObject1282 = _taggedTemplateLiteral71(["Boris's bread"]))), {
    price: 2 * ingredientCost($item(_templateObject1292 || (_templateObject1292 = _taggedTemplateLiteral71(["Yeast of Boris"]))))
  }) : [];
  var deepDish = legendaryPizzaToMenu([{
    item: $item(_templateObject1302 || (_templateObject1302 = _taggedTemplateLiteral71(["Deep Dish of Legend"]))),
    pref: "deepDishOfLegendEaten"
  }], function(out) {
    return limitedPotion(out.item, 1, {
      price: out.price
    });
  });
  return [].concat(_toConsumableArray28(baseMenu), _toConsumableArray28(copiers()), _toConsumableArray28(potion($item(_templateObject13110 || (_templateObject13110 = _taggedTemplateLiteral71(["jumping horseradish"]))))), _toConsumableArray28(potion($item(_templateObject1328 || (_templateObject1328 = _taggedTemplateLiteral71(["tempura cauliflower"]))))), _toConsumableArray28(potion($item(_templateObject1332 || (_templateObject1332 = _taggedTemplateLiteral71(["sea truffle"]))))), _toConsumableArray28(potion($item(_templateObject1342 || (_templateObject1342 = _taggedTemplateLiteral71(["tempura broccoli"]))))), _toConsumableArray28(potion($item(_templateObject1352 || (_templateObject1352 = _taggedTemplateLiteral71(["Miserable Pie"]))))), _toConsumableArray28(potion($item(_templateObject1362 || (_templateObject1362 = _taggedTemplateLiteral71(["Every Day is Like This Sundae"]))))), _toConsumableArray28(potion($item(_templateObject1372 || (_templateObject1372 = _taggedTemplateLiteral71(["bowl of mummy guts"]))))), _toConsumableArray28(potion($item(_templateObject1382 || (_templateObject1382 = _taggedTemplateLiteral71(["haunted Hell ramen"]))))), _toConsumableArray28(campfireHotdog), _toConsumableArray28(foodCone), _toConsumableArray28(borisBread), _toConsumableArray28(deepDish.flat()), _toConsumableArray28(potion($item(_templateObject1392 || (_templateObject1392 = _taggedTemplateLiteral71(["dirt julep"]))))), _toConsumableArray28(potion($item(_templateObject1402 || (_templateObject1402 = _taggedTemplateLiteral71(["Ambitious Turkey"]))))), _toConsumableArray28(potion($item(_templateObject14110 || (_templateObject14110 = _taggedTemplateLiteral71(["Friendly Turkey"]))))), _toConsumableArray28(potion($item(_templateObject1425 || (_templateObject1425 = _taggedTemplateLiteral71(["vintage smart drink"]))))), _toConsumableArray28(potion($item(_templateObject1432 || (_templateObject1432 = _taggedTemplateLiteral71(["Strikes Again Bigmouth"]))))), _toConsumableArray28(potion($item(_templateObject1442 || (_templateObject1442 = _taggedTemplateLiteral71(["Irish Coffee, English Heart"]))))), _toConsumableArray28(potion($item(_templateObject1452 || (_templateObject1452 = _taggedTemplateLiteral71(["Jack-O-Lantern beer"]))))), _toConsumableArray28(potion($item(_templateObject1462 || (_templateObject1462 = _taggedTemplateLiteral71(["Amnesiac Ale"]))))), _toConsumableArray28(potion($item(_templateObject1472 || (_templateObject1472 = _taggedTemplateLiteral71(["mentholated wine"]))))), _toConsumableArray28(potion($item(_templateObject1482 || (_templateObject1482 = _taggedTemplateLiteral71(["Feliz Navidad"]))))), _toConsumableArray28(potion($item(_templateObject1492 || (_templateObject1492 = _taggedTemplateLiteral71(["broberry brogurt"]))))), _toConsumableArray28(potion($item(_templateObject1502 || (_templateObject1502 = _taggedTemplateLiteral71(["haunted martini"]))))), _toConsumableArray28(potion($item(_templateObject15110 || (_templateObject15110 = _taggedTemplateLiteral71(["bottle of Greedy Dog"]))))), _toConsumableArray28(potion($item(_templateObject1523 || (_templateObject1523 = _taggedTemplateLiteral71(["twice-haunted screwdriver"]))), {
    price: twiceHauntedPrice
  })), _toConsumableArray28(limitedPotion($item(_templateObject1532 || (_templateObject1532 = _taggedTemplateLiteral71(["high-end ginger wine"]))), (0, import_kolmafia81.availableAmount)($item(_templateObject1542 || (_templateObject1542 = _taggedTemplateLiteral71(["high-end ginger wine"])))))), _toConsumableArray28(limitedPotion($item(_templateObject1552 || (_templateObject1552 = _taggedTemplateLiteral71(["Hot Socks"]))), hasSpeakeasy ? 3 : 0, {
    price: 5e3
  })), _toConsumableArray28(realmAvailable("sleaze") && (0, import_kolmafia81.sellsItem)($coinmaster(_templateObject1562 || (_templateObject1562 = _taggedTemplateLiteral71(["The Frozen Brogurt Stand"]))), $item(_templateObject1572 || (_templateObject1572 = _taggedTemplateLiteral71(["broberry brogurt"])))) ? limitedPotion($item(_templateObject1582 || (_templateObject1582 = _taggedTemplateLiteral71(["broberry brogurt"]))), Math.floor((0, import_kolmafia81.itemAmount)($item(_templateObject1592 || (_templateObject1592 = _taggedTemplateLiteral71(["Beach Buck"])))) / 10), {
    price: 10 * garboValue($item(_templateObject1602 || (_templateObject1602 = _taggedTemplateLiteral71(["Beach Buck"]))))
  }) : []), _toConsumableArray28(potion($item(_templateObject16110 || (_templateObject16110 = _taggedTemplateLiteral71(["cute mushroom"]))))), _toConsumableArray28(potion($item(_templateObject1622 || (_templateObject1622 = _taggedTemplateLiteral71(["beggin' cologne"]))))), _toConsumableArray28(potion($item(_templateObject1632 || (_templateObject1632 = _taggedTemplateLiteral71(["Knob Goblin nasal spray"]))))), _toConsumableArray28(potion($item(_templateObject1642 || (_templateObject1642 = _taggedTemplateLiteral71(["handful of Smithereens"]))))), _toConsumableArray28(potion($item(_templateObject1652 || (_templateObject1652 = _taggedTemplateLiteral71(["black striped oyster egg"]))))), _toConsumableArray28(potion($item(_templateObject1662 || (_templateObject1662 = _taggedTemplateLiteral71(["black paisley oyster egg"]))))), _toConsumableArray28(potion($item(_templateObject1672 || (_templateObject1672 = _taggedTemplateLiteral71(["black polka-dot oyster egg"]))))), _toConsumableArray28(potion($item(_templateObject1682 || (_templateObject1682 = _taggedTemplateLiteral71(["lustrous oyster egg"]))))), _toConsumableArray28(potion($item(_templateObject1692 || (_templateObject1692 = _taggedTemplateLiteral71(["glimmering buzzard feather"]))))), _toConsumableArray28(potion($item(_templateObject1702 || (_templateObject1702 = _taggedTemplateLiteral71(["Knob Goblin pet-buffing spray"]))))), _toConsumableArray28(potion($item(_templateObject17110 || (_templateObject17110 = _taggedTemplateLiteral71(["abstraction: joy"]))))), _toConsumableArray28(potion($item(_templateObject1722 || (_templateObject1722 = _taggedTemplateLiteral71(["beastly paste"]))))), _toConsumableArray28(potion($item(_templateObject1732 || (_templateObject1732 = _taggedTemplateLiteral71(["gleaming oyster egg"]))))), _toConsumableArray28(potion($item(_templateObject1742 || (_templateObject1742 = _taggedTemplateLiteral71(["Party-in-a-Can\u2122"]))))), _toConsumableArray28(limitedPotion($item(_templateObject1752 || (_templateObject1752 = _taggedTemplateLiteral71(["body spradium"]))), clamp((0, import_kolmafia81.availableAmount)($item(_templateObject1762 || (_templateObject1762 = _taggedTemplateLiteral71(["body spradium"])))), 0, 1))), _toConsumableArray28(have($skill(_templateObject1772 || (_templateObject1772 = _taggedTemplateLiteral71(["Sweet Synthesis"])))) ? potion(new Potion($item(_templateObject1782 || (_templateObject1782 = _taggedTemplateLiteral71(["Rethinking Candy"]))), {
    effect: $effect(_templateObject1792 || (_templateObject1792 = _taggedTemplateLiteral71(["Synthesis: Greed"]))),
    duration: 30
  }), {
    size: 1,
    organ: "spleen item",
    price: 0
  }) : []));
}
function balanceMenu(baseMenu, dietPlanner) {
  var baseEmbezzlers = embezzlerCount();
  function rebalance(menu3, iterations, embezzlers, adventures) {
    var fullMenu = potionMenu(menu3, baseEmbezzlers + embezzlers, estimatedGarboTurns() + adventures);
    if (iterations <= 0) {
      return fullMenu;
    } else {
      var balancingDiet = dietPlanner(fullMenu);
      return rebalance(menu3, iterations - 1, countCopies(balancingDiet), balancingDiet.expectedAdventures());
    }
  }
  var baseDiet = dietPlanner(baseMenu);
  return rebalance(baseMenu, 5, 0, baseDiet.expectedAdventures());
}
function computeDiet() {
  var orEmpty = function(diet) {
    return diet.expectedValue(MPA, "net") < 0 ? new Diet() : diet;
  };
  var fullDietPlanner = function(menu3) {
    return orEmpty(Diet.plan(MPA, menu3));
  };
  var shotglassDietPlanner = function(menu3) {
    return orEmpty(Diet.plan(MPA, menu3, {
      booze: 1
    }));
  };
  var pantsgivingDietPlanner = function(menu3) {
    return orEmpty(Diet.plan(MPA, menu3, {
      food: 1
    }));
  };
  var sweatpantsDietPlanner = function(menu3) {
    return orEmpty(Diet.plan(MPA, menu3, {
      booze: getRemainingLiver()
    }));
  };
  return {
    diet: function() {
      return fullDietPlanner(balanceMenu(menu().filter(function(menuItem) {
        return !priceCaps[menuItem.item.name] || priceCaps[menuItem.item.name] >= (0, import_kolmafia81.mallPrice)(menuItem.item);
      }), fullDietPlanner));
    },
    shotglass: function() {
      return shotglassDietPlanner(balanceMenu(menu().filter(function(menuItem) {
        return (0, import_kolmafia81.itemType)(menuItem.item) === "booze" && menuItem.size === 1;
      }), shotglassDietPlanner));
    },
    pantsgiving: function() {
      return pantsgivingDietPlanner(balanceMenu(menu().filter(function(menuItem) {
        return (0, import_kolmafia81.itemType)(menuItem.item) === "food" && menuItem.size === 1 || [Mayo2.flex, Mayo2.zapine, $item(_templateObject1802 || (_templateObject1802 = _taggedTemplateLiteral71(["Special Seasoning"])))].includes(menuItem.item);
      }), pantsgivingDietPlanner));
    },
    sweatpants: function() {
      return sweatpantsDietPlanner(balanceMenu(menu().filter(function(menuItem) {
        return (0, import_kolmafia81.itemType)(menuItem.item) === "booze" && menuItem.size <= 3;
      }), sweatpantsDietPlanner));
    }
  };
}
function printDiet(diet, name) {
  (0, import_kolmafia81.print)("===== ".concat(name, " DIET ====="));
  if (diet.entries.length === 0)
    return;
  diet = diet.copy();
  diet.entries.sort(function(a, b) {
    return itemPriority(b.menuItems) - itemPriority(a.menuItems);
  });
  var embezzlers = Math.floor(embezzlerCount() + countCopies(diet));
  var adventures = Math.floor(estimatedGarboTurns() + diet.expectedAdventures());
  (0, import_kolmafia81.print)("Planning to fight ".concat(embezzlers, " embezzlers and run ").concat(adventures, " adventures"));
  var _iterator = _createForOfIteratorHelper25(diet.entries), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var dietEntry = _step.value;
      if (dietEntry.quantity === 0)
        continue;
      var target = dietEntry.target();
      var datastr = target.data ? "(".concat(target.data, ")") : "";
      var maxstr = target.maximum ? " (max ".concat(target.maximum, ")") : "";
      var helpersstr = dietEntry.helpers().length > 0 ? " helpers: ".concat(dietEntry.helpers().join(", ")) : "";
      var addvalstr = target.additionalValue ? " (additional value: ".concat(target.additionalValue, ")") : "";
      var valuestr = "value: ".concat(Math.floor(dietEntry.expectedValue(MPA, diet))).concat(addvalstr, " price: ").concat(Math.floor(dietEntry.expectedPrice()));
      (0, import_kolmafia81.print)("".concat(dietEntry.quantity).concat(maxstr, " ").concat(target).concat(datastr).concat(helpersstr, " ").concat(valuestr));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var totalValue = diet.expectedValue(MPA);
  var totalCost = diet.expectedPrice();
  var netValue = totalValue - totalCost;
  (0, import_kolmafia81.print)("Assuming MPA of ".concat(MPA, ", Total Cost ").concat(totalCost, ", Total Value ").concat(totalValue, ", Net Value ").concat(netValue));
}
function itemPriority(menuItems) {
  var menuItem = menuItems[menuItems.length - 1];
  if (menuItem === void 0) {
    throw "Shouldn't have an empty menu item.";
  }
  if (menuItem.item === $item(_templateObject18110 || (_templateObject18110 = _taggedTemplateLiteral71(["spaghetti breakfast"]))))
    return 200;
  if ($items(_templateObject1822 || (_templateObject1822 = _taggedTemplateLiteral71(["pocket wish, toasted brie"]))).includes(menuItem.item) || spleenCleaners.get(menuItem.item) || stomachLiverCleaners.get(menuItem.item)) {
    return 100;
  } else {
    return 0;
  }
}
function consumeDiet(diet, name) {
  if (diet.entries.length === 0)
    return;
  diet = diet.copy();
  diet.entries.sort(function(a, b) {
    return itemPriority(b.menuItems) - itemPriority(a.menuItems);
  });
  (0, import_kolmafia81.print)();
  printDiet(diet, name);
  (0, import_kolmafia81.print)();
  var seasoningCount = sum(diet.entries, function(_ref4) {
    var menuItems2 = _ref4.menuItems, quantity2 = _ref4.quantity;
    return menuItems2.some(function(menuItem) {
      return menuItem.item === $item(_templateObject1832 || (_templateObject1832 = _taggedTemplateLiteral71(["Special Seasoning"])));
    }) ? quantity2 : 0;
  });
  acquire(seasoningCount, $item(_templateObject1842 || (_templateObject1842 = _taggedTemplateLiteral71(["Special Seasoning"]))), MPA);
  var organs2 = function() {
    return [(0, import_kolmafia81.myFullness)(), (0, import_kolmafia81.myInebriety)(), (0, import_kolmafia81.mySpleenUse)()];
  };
  var lastOrgans = [-1, -1, -1];
  var capacities = function() {
    return [(0, import_kolmafia81.fullnessLimit)(), (0, import_kolmafia81.inebrietyLimit)(), (0, import_kolmafia81.spleenLimit)()];
  };
  var lastCapacities = [-1, -1, -1];
  var currentQuantity = sum(diet.entries, function(_ref5) {
    var quantity2 = _ref5.quantity;
    return quantity2;
  });
  var lastQuantity = -1;
  while (currentQuantity > 0) {
    if (arrayEquals2(lastOrgans, organs2()) && arrayEquals2(lastCapacities, capacities()) && lastQuantity === currentQuantity) {
      (0, import_kolmafia81.print)();
      printDiet(diet, "REMAINING");
      (0, import_kolmafia81.print)();
      throw "Failed to consume some diet item.";
    }
    lastOrgans = organs2();
    lastCapacities = capacities();
    lastQuantity = currentQuantity;
    var _iterator2 = _createForOfIteratorHelper25(diet.entries), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var dietEntry = _step2.value;
        var menuItems = dietEntry.menuItems, quantity = dietEntry.quantity;
        if (quantity === 0)
          continue;
        var countToConsume = quantity;
        var capacity = {
          food: (0, import_kolmafia81.fullnessLimit)() - (0, import_kolmafia81.myFullness)(),
          booze: (0, import_kolmafia81.inebrietyLimit)() - (0, import_kolmafia81.myInebriety)(),
          "spleen item": (0, import_kolmafia81.spleenLimit)() - (0, import_kolmafia81.mySpleenUse)()
        };
        var _iterator3 = _createForOfIteratorHelper25(menuItems), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var _menuItem = _step3.value;
            (0, import_kolmafia81.logprint)("Considering item ".concat(_menuItem.item, "."));
            if (_menuItem.organ === "booze" && _menuItem.size === 1 && !get("_mimeArmyShotglassUsed")) {
              countToConsume = 1;
            } else if (_menuItem.organ && _menuItem.size > 0) {
              countToConsume = Math.min(countToConsume, Math.floor(capacity[_menuItem.organ] / _menuItem.size));
            }
            (0, import_kolmafia81.logprint)("Based on organ size, planning to consume ".concat(countToConsume, "."));
            var cleaning = stomachLiverCleaners.get(_menuItem.item);
            if (cleaning) {
              var _cleaning = _slicedToArray27(cleaning, 2), fullness = _cleaning[0], inebriety = _cleaning[1];
              countToConsume = Math.min(fullness < 0 ? Math.floor(-(0, import_kolmafia81.myFullness)() / fullness) : quantity, inebriety < 0 ? Math.floor(-(0, import_kolmafia81.myInebriety)() / inebriety) : quantity, countToConsume);
              (0, import_kolmafia81.logprint)("Based on organ-cleaning, planning to consume ".concat(countToConsume, "."));
            }
            var spleenCleaned = spleenCleaners.get(_menuItem.item);
            if (spleenCleaned) {
              countToConsume = Math.min(countToConsume, Math.floor((0, import_kolmafia81.mySpleenUse)() / spleenCleaned));
              (0, import_kolmafia81.logprint)("Based on organ-cleaning, planning to consume ".concat(countToConsume, "."));
            }
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
        if (countToConsume === 0)
          continue;
        var elementalResistAction = function(element) {
          return function(countToConsume2, menuItem) {
            if ((0, import_kolmafia81.myMaxhp)() < 1e3 * (1 - (0, import_kolmafia81.elementalResistance)(element) / 100)) {
              maximizeCached(["0.05 HP", "".concat(element, " Resistance")]);
              if ((0, import_kolmafia81.myMaxhp)() < 1e3 * (1 - (0, import_kolmafia81.elementalResistance)(element) / 100)) {
                throw "Could not achieve enough ".concat(element, " resistance for ").concat(menuItem.item, ".");
              }
            }
            consumeSafe(countToConsume2, menuItem.item);
          };
        };
        var speakeasyDrinks = Object.keys((0, import_kolmafia81.getClanLounge)()).map(function(s) {
          return (0, import_kolmafia81.toItem)(s);
        }).filter(function(i) {
          return i.inebriety > 0;
        }).map(function(drink3) {
          return [drink3, function(countToConsume2, menuItem) {
            (0, import_kolmafia81.cliExecute)("drink ".concat(countToConsume2, " ").concat(menuItem.item));
          }];
        });
        var mayoActions = Object.values(Mayo2).map(function(i) {
          return [i, function(countToConsume2, menuItem) {
            MayoClinic_exports.setMayoMinder(menuItem.item, countToConsume2);
          }];
        });
        var itemActions = new Map([[saladFork, elementalResistAction($element(_templateObject1852 || (_templateObject1852 = _taggedTemplateLiteral71(["hot"]))))], [frostyMug, elementalResistAction($element(_templateObject1862 || (_templateObject1862 = _taggedTemplateLiteral71(["cold"]))))], [$item(_templateObject1872 || (_templateObject1872 = _taggedTemplateLiteral71(["pocket wish"]))), function(countToConsume2, menuItem) {
          return acquire(countToConsume2, $item(_templateObject1882 || (_templateObject1882 = _taggedTemplateLiteral71(["pocket wish"]))), 6e4) && (0, import_kolmafia81.cliExecute)("genie effect ".concat(menuItem.effect));
        }], [$item(_templateObject1892 || (_templateObject1892 = _taggedTemplateLiteral71(["campfire hot dog"]))), function(countToConsume2, menuItem) {
          if (!have($item(_templateObject1902 || (_templateObject1902 = _taggedTemplateLiteral71(["stick of firewood"]))))) {
            (0, import_kolmafia81.buy)(1, $item(_templateObject19110 || (_templateObject19110 = _taggedTemplateLiteral71(["stick of firewood"]))), ingredientCost($item(_templateObject1922 || (_templateObject1922 = _taggedTemplateLiteral71(["stick of firewood"])))));
          }
          consumeSafe(countToConsume2, menuItem.item);
        }], [$item(_templateObject1932 || (_templateObject1932 = _taggedTemplateLiteral71(["Special Seasoning"]))), "skip"], [$item(_templateObject1942 || (_templateObject1942 = _taggedTemplateLiteral71(["Rethinking Candy"]))), function(countToConsume2, menuItem) {
          var _menuItem$effect;
          return synthesize(countToConsume2, (_menuItem$effect = menuItem.effect) !== null && _menuItem$effect !== void 0 ? _menuItem$effect : $effect(_templateObject1952 || (_templateObject1952 = _taggedTemplateLiteral71(["Synthesis: Greed"]))));
        }]].concat(_toConsumableArray28(mayoActions), _toConsumableArray28(speakeasyDrinks), [[$item(_templateObject1962 || (_templateObject1962 = _taggedTemplateLiteral71(["broberry brogurt"]))), function(countToConsume2, menuItem) {
          var amountNeeded = countToConsume2 - (0, import_kolmafia81.availableAmount)($item(_templateObject1972 || (_templateObject1972 = _taggedTemplateLiteral71(["broberry brogurt"]))));
          if (amountNeeded > 0) {
            var coinmasterPrice2 = realmAvailable("sleaze") && (0, import_kolmafia81.sellsItem)($coinmaster(_templateObject1982 || (_templateObject1982 = _taggedTemplateLiteral71(["The Frozen Brogurt Stand"]))), $item(_templateObject1992 || (_templateObject1992 = _taggedTemplateLiteral71(["broberry brogurt"])))) ? 10 * garboValue($item(_templateObject2002 || (_templateObject2002 = _taggedTemplateLiteral71(["Beach Buck"])))) : Infinity;
            var regularPrice = (0, import_kolmafia81.mallPrice)($item(_templateObject20110 || (_templateObject20110 = _taggedTemplateLiteral71(["broberry brogurt"]))));
            if (coinmasterPrice2 < regularPrice) {
              var amountToBuy = Math.min(amountNeeded, Math.floor((0, import_kolmafia81.itemAmount)($item(_templateObject2022 || (_templateObject2022 = _taggedTemplateLiteral71(["Beach Buck"]))))));
              (0, import_kolmafia81.buy)($coinmaster(_templateObject2032 || (_templateObject2032 = _taggedTemplateLiteral71(["The Frozen Brogurt Stand"]))), amountToBuy, $item(_templateObject2042 || (_templateObject2042 = _taggedTemplateLiteral71(["broberry brogurt"]))));
            }
            (0, import_kolmafia81.buy)(countToConsume2 - (0, import_kolmafia81.availableAmount)($item(_templateObject2052 || (_templateObject2052 = _taggedTemplateLiteral71(["broberry brogurt"])))), $item(_templateObject2062 || (_templateObject2062 = _taggedTemplateLiteral71(["broberry brogurt"]))));
          }
          consumeSafe(countToConsume2, menuItem.item, menuItem.additionalValue);
        }], [$item(_templateObject2072 || (_templateObject2072 = _taggedTemplateLiteral71(["designer sweatpants"]))), function(countToConsume2) {
          for (var n = 1; n <= countToConsume2; n++) {
            (0, import_kolmafia81.useSkill)($skill(_templateObject2082 || (_templateObject2082 = _taggedTemplateLiteral71(["Sweat Out Some Booze"]))));
          }
        }], [$item(_templateObject2092 || (_templateObject2092 = _taggedTemplateLiteral71(["august scepter"]))), function() {
          return (0, import_kolmafia81.useSkill)($skill(_templateObject21010 || (_templateObject21010 = _taggedTemplateLiteral71(["Aug. 16th: Roller Coaster Day!"]))));
        }]]));
        var _iterator4 = _createForOfIteratorHelper25(menuItems), _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
            var _menuItem2 = _step4.value;
            var itemAction = itemActions.get(_menuItem2.item);
            if (itemAction === "skip") {
              continue;
            } else if (itemAction) {
              itemAction(countToConsume, _menuItem2);
            } else {
              consumeSafe(countToConsume, _menuItem2.item, _menuItem2.additionalValue);
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
        dietEntry.quantity -= countToConsume;
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    currentQuantity = sum(diet.entries, function(_ref6) {
      var quantity2 = _ref6.quantity;
      return quantity2;
    });
  }
}
var completedDiet = globalOptions.nodiet;
function dietCompleted() {
  return completedDiet;
}
function runDiet() {
  withVIPClan(function() {
    if ((0, import_kolmafia81.myFamiliar)() === $familiar(_templateObject21110 || (_templateObject21110 = _taggedTemplateLiteral71(["Stooper"])))) {
      (0, import_kolmafia81.useFamiliar)($familiar.none);
    }
    MenuItem.defaultPriceFunction = function(item10) {
      var prices = [(0, import_kolmafia81.retrievePrice)(item10), (0, import_kolmafia81.mallPrice)(item10), (0, import_kolmafia81.npcPrice)(item10)].filter(function(p) {
        return p > 0 && p < Number.MAX_SAFE_INTEGER;
      });
      if (prices.length > 0) {
        return Math.min.apply(Math, _toConsumableArray28(prices));
      }
      return !item10.tradeable && have(item10) ? 0 : Infinity;
    };
    var dietBuilder = computeDiet();
    if (globalOptions.simdiet) {
      (0, import_kolmafia81.print)("===== SIMULATED DIET =====");
      if (!get("_mimeArmyShotglassUsed") && have($item(_templateObject21210 || (_templateObject21210 = _taggedTemplateLiteral71(["mime army shotglass"]))))) {
        printDiet(dietBuilder.shotglass(), "SHOTGLASS");
      }
      printDiet(dietBuilder.diet(), "FULL");
    } else {
      pillCheck();
      nonOrganAdventures();
      if (have($item(_templateObject21310 || (_templateObject21310 = _taggedTemplateLiteral71(["astral six-pack"]))))) {
        (0, import_kolmafia81.use)($item(_templateObject2145 || (_templateObject2145 = _taggedTemplateLiteral71(["astral six-pack"]))));
      }
      if (!get("_mimeArmyShotglassUsed") && have($item(_templateObject2152 || (_templateObject2152 = _taggedTemplateLiteral71(["mime army shotglass"]))))) {
        consumeDiet(dietBuilder.shotglass(), "SHOTGLASS");
      }
      if (get("barrelShrineUnlocked") && !get("_barrelPrayer") && $classes(_templateObject2162 || (_templateObject2162 = _taggedTemplateLiteral71(["Turtle Tamer, Accordion Thief"]))).includes((0, import_kolmafia81.myClass)())) {
        (0, import_kolmafia81.cliExecute)("barrelprayer buff");
      }
      consumeDiet(dietBuilder.diet(), "FULL");
      shrugBadEffects();
    }
  });
  completedDiet = true;
}

// src/outfit/dropsgear.ts
var _templateObject600;
var _templateObject2146;
var _templateObject3131;
var _templateObject4118;
var _templateObject5101;
var _templateObject661;
var _templateObject755;
var _templateObject848;
var _templateObject940;
var _templateObject1036;
var _templateObject1131;
var _templateObject1230;
var _templateObject1329;
var _templateObject1426;
var _templateObject1524;
var _templateObject1623;
var _templateObject1723;
var _templateObject1823;
var _templateObject1923;
var _templateObject2023;
var _templateObject2147;
var _templateObject2224;
var _templateObject2323;
var _templateObject2421;
var _templateObject2521;
var _templateObject2621;
var _templateObject2721;
var _templateObject2819;
var _templateObject2917;
var _templateObject3017;
var _templateObject3132;
var _templateObject3219;
var _templateObject3319;
var _templateObject3416;
var _templateObject3516;
var _templateObject3616;
var _templateObject3716;
var _templateObject3816;
var _templateObject3916;
var _templateObject4016;
function _toConsumableArray29(arr) {
  return _arrayWithoutHoles29(arr) || _iterableToArray29(arr) || _unsupportedIterableToArray49(arr) || _nonIterableSpread29();
}
function _nonIterableSpread29() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray49(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray49(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray49(o, minLen);
}
function _iterableToArray29(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles29(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray49(arr);
}
function _arrayLikeToArray49(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral72(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var pantsgivingBonuses = /* @__PURE__ */ new Map();
function pantsgiving(mode) {
  if (!have($item(_templateObject600 || (_templateObject600 = _taggedTemplateLiteral72(["Pantsgiving"])))) || !modeUseLimitedDrops(mode)) {
    return /* @__PURE__ */ new Map();
  }
  var count = get("_pantsgivingCount");
  var turnArray = [5, 50, 500, 5e3];
  var index = (0, import_kolmafia82.myFullness)() === (0, import_kolmafia82.fullnessLimit)() ? get("_pantsgivingFullness") : turnArray.findIndex(function(x) {
    return count < x;
  });
  var turns = turnArray[index] || 5e4;
  if (turns - count > estimatedGarboTurns())
    return /* @__PURE__ */ new Map();
  var cachedBonus = pantsgivingBonuses.get(turns);
  if (cachedBonus)
    return /* @__PURE__ */ new Map([[$item(_templateObject2146 || (_templateObject2146 = _taggedTemplateLiteral72(["Pantsgiving"]))), cachedBonus]]);
  var expectedSinusTurns = (0, import_kolmafia82.getWorkshed)() === $item(_templateObject3131 || (_templateObject3131 = _taggedTemplateLiteral72(["portable Mayo Clinic"]))) ? 100 : 50;
  var expectedUseableSinusTurns = globalOptions.ascend ? clamp(estimatedGarboTurns() - (turns - count) - (0, import_kolmafia82.haveEffect)($effect(_templateObject4118 || (_templateObject4118 = _taggedTemplateLiteral72(["Kicked in the Sinuses"])))), 0, expectedSinusTurns) : expectedSinusTurns;
  var sinusVal = expectedUseableSinusTurns * 1 * baseMeat;
  var fullnessValue = sinusVal + get("valueOfAdventure") * 6.5 - ((0, import_kolmafia82.mallPrice)($item(_templateObject5101 || (_templateObject5101 = _taggedTemplateLiteral72(["jumping horseradish"])))) + (0, import_kolmafia82.mallPrice)($item(_templateObject661 || (_templateObject661 = _taggedTemplateLiteral72(["Special Seasoning"])))));
  var pantsgivingBonus = fullnessValue / (turns * 0.9);
  pantsgivingBonuses.set(turns, pantsgivingBonus);
  return /* @__PURE__ */ new Map([[$item(_templateObject755 || (_templateObject755 = _taggedTemplateLiteral72(["Pantsgiving"]))), pantsgivingBonus]]);
}
function sweatpants(mode) {
  if (!have($item(_templateObject848 || (_templateObject848 = _taggedTemplateLiteral72(["designer sweatpants"])))) || mode === BonusEquipMode.EMBEZZLER) {
    return /* @__PURE__ */ new Map();
  }
  var needSweat = !globalOptions.ascend && get("sweat") < 75 || get("sweat") < 25 * (3 - get("_sweatOutSomeBoozeUsed"));
  if (!needSweat)
    return /* @__PURE__ */ new Map();
  var VOA = get("valueOfAdventure");
  var bestPerfectDrink = mallMin($items(_templateObject940 || (_templateObject940 = _taggedTemplateLiteral72(["perfect cosmopolitan, perfect negroni, perfect dark and stormy, perfect mimosa, perfect old-fashioned, perfect paloma"]))));
  var perfectDrinkValuePerDrunk = ((getAverageAdventures(bestPerfectDrink) + 3) * VOA - (0, import_kolmafia82.mallPrice)(bestPerfectDrink)) / 3;
  var splendidMartiniValuePerDrunk = (getAverageAdventures($item(_templateObject1036 || (_templateObject1036 = _taggedTemplateLiteral72(["splendid martini"])))) + 2) * VOA;
  var bonus = Math.max(perfectDrinkValuePerDrunk, splendidMartiniValuePerDrunk) * 2 / 25;
  return /* @__PURE__ */ new Map([[$item(_templateObject1131 || (_templateObject1131 = _taggedTemplateLiteral72(["designer sweatpants"]))), bonus]]);
}
var alternativePants = import_kolmafia82.Item.all().filter(function(item10) {
  return (0, import_kolmafia82.toSlot)(item10) === $slot(_templateObject1230 || (_templateObject1230 = _taggedTemplateLiteral72(["pants"]))) && have(item10) && (0, import_kolmafia82.numericModifier)(item10, "Adventures") > 0;
}).map(function(pants2) {
  return (0, import_kolmafia82.numericModifier)(pants2, "Adventures");
});
var bestAdventuresFromPants = Math.max.apply(Math, [0].concat(_toConsumableArray29(alternativePants)));
var haveSomeCheese = getFoldGroup($item(_templateObject1329 || (_templateObject1329 = _taggedTemplateLiteral72(["stinky cheese diaper"])))).some(function(item10) {
  return have(item10);
});
function cheeses(mode) {
  return haveSomeCheese && !globalOptions.ascend && get("_stinkyCheeseCount") < 100 && estimatedGarboTurns() >= 100 - get("_stinkyCheeseCount") && mode !== BonusEquipMode.EMBEZZLER ? new Map(getFoldGroup($item(_templateObject1426 || (_templateObject1426 = _taggedTemplateLiteral72(["stinky cheese diaper"])))).filter(function(item10) {
    return (0, import_kolmafia82.toSlot)(item10) !== $slot(_templateObject1524 || (_templateObject1524 = _taggedTemplateLiteral72(["weapon"])));
  }).map(function(item10) {
    return [item10, get("valueOfAdventure") * (10 - bestAdventuresFromPants) * (1 / 100)];
  })) : [];
}
function pantogramPants() {
  if (!have($item(_templateObject1623 || (_templateObject1623 = _taggedTemplateLiteral72(["pantogram pants"])))) || !get("_pantogramModifier").includes("Drops Items")) {
    return /* @__PURE__ */ new Map([]);
  }
  return /* @__PURE__ */ new Map([[$item(_templateObject1723 || (_templateObject1723 = _taggedTemplateLiteral72(["pantogram pants"]))), 100]]);
}
function bagOfManyConfections() {
  if (!have($item(_templateObject1823 || (_templateObject1823 = _taggedTemplateLiteral72(["bag of many confections"])))) || !have($familiar(_templateObject1923 || (_templateObject1923 = _taggedTemplateLiteral72(["Stocking Mimic"]))))) {
    return /* @__PURE__ */ new Map([]);
  }
  return /* @__PURE__ */ new Map([[$item(_templateObject2023 || (_templateObject2023 = _taggedTemplateLiteral72(["bag of many confections"]))), garboAverageValue.apply(void 0, _toConsumableArray29($items(_templateObject2147 || (_templateObject2147 = _taggedTemplateLiteral72(["Polka Pop, BitterSweetTarts, Piddles"]))))) / 6]]);
}
function snowSuit(mode) {
  if (!have($item(_templateObject2224 || (_templateObject2224 = _taggedTemplateLiteral72(["Snow Suit"])))) || get("_carrotNoseDrops") >= 3 || !modeUseLimitedDrops(mode)) {
    return /* @__PURE__ */ new Map([]);
  }
  return /* @__PURE__ */ new Map([[$item(_templateObject2323 || (_templateObject2323 = _taggedTemplateLiteral72(["Snow Suit"]))), garboValue($item(_templateObject2421 || (_templateObject2421 = _taggedTemplateLiteral72(["carrot nose"])))) / 10]]);
}
function mayflowerBouquet(mode) {
  if (!have($item(_templateObject2521 || (_templateObject2521 = _taggedTemplateLiteral72(["Mayflower bouquet"])))) || !modeUseLimitedDrops(mode)) {
    return /* @__PURE__ */ new Map([]);
  }
  var sporadicMeatBonus = 40 * 0.125 * modeValueOfMeat(mode) / 100;
  var averageFlowerValue = garboAverageValue.apply(void 0, _toConsumableArray29($items(_templateObject2621 || (_templateObject2621 = _taggedTemplateLiteral72(["tin magnolia, upsy daisy, lesser grodulated violet, half-orchid, begpwnia"]))))) * Math.max(0.01, 0.5 - get("_mayflowerDrops") * 0.11);
  return /* @__PURE__ */ new Map([[$item(_templateObject2721 || (_templateObject2721 = _taggedTemplateLiteral72(["Mayflower bouquet"]))), (get("_mayflowerDrops") < 10 ? averageFlowerValue : 0) + sporadicMeatBonus]]);
}
function magnifyingGlass() {
  if (!have($item(_templateObject2819 || (_templateObject2819 = _taggedTemplateLiteral72(["cursed magnifying glass"])))) || get("_voidFreeFights") >= 5 || get("cursedMagnifyingGlassCount") >= 13) {
    return /* @__PURE__ */ new Map();
  }
  return /* @__PURE__ */ new Map([[$item(_templateObject2917 || (_templateObject2917 = _taggedTemplateLiteral72(["cursed magnifying glass"]))), globalOptions.prefs.valueOfFreeFight / 13]]);
}
function bonusGear(mode) {
  var valueCircumstantialBonus = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  return new Map([].concat(_toConsumableArray29(cheeses(mode)), _toConsumableArray29(bonusAccessories(mode)), _toConsumableArray29(pantogramPants()), _toConsumableArray29(bagOfManyConfections()), _toConsumableArray29(stickers2(mode)), _toConsumableArray29(powerGlove()), _toConsumableArray29(valueCircumstantialBonus ? new Map([].concat(_toConsumableArray29(pantsgiving(mode)), _toConsumableArray29(sweatpants(mode)), _toConsumableArray29(shavingBonus()), _toConsumableArray29(snowSuit(mode)), _toConsumableArray29(mayflowerBouquet(mode)), _toConsumableArray29(mode === BonusEquipMode.BARF ? magnifyingGlass() : []), _toConsumableArray29(juneCleaver(mode)))) : [])));
}
function shavingBonus() {
  var _DaylightShavings$buf;
  if (!DaylightShavings_exports.have() || DaylightShavings_exports.buffs.some(function(buff) {
    return have(buff, 2);
  })) {
    return /* @__PURE__ */ new Map();
  }
  var timeToMeatBuff = 11 * ((_DaylightShavings$buf = DaylightShavings_exports.buffsUntil($effect(_templateObject3017 || (_templateObject3017 = _taggedTemplateLiteral72(["Friendly Chops"]))))) !== null && _DaylightShavings$buf !== void 0 ? _DaylightShavings$buf : Infinity);
  if (globalOptions.ascend && timeToMeatBuff > estimatedGarboTurns()) {
    return /* @__PURE__ */ new Map();
  }
  if (!globalOptions.ascend && DaylightShavings_exports.nextBuff() === $effect(_templateObject3132 || (_templateObject3132 = _taggedTemplateLiteral72(["Friendly Chops"]))) && estimatedGarboTurns() < 11 * 11) {
    return /* @__PURE__ */ new Map();
  }
  var bonusValue = (baseMeat * 100 + 72 * 50) / 100;
  return /* @__PURE__ */ new Map([[$item(_templateObject3219 || (_templateObject3219 = _taggedTemplateLiteral72(["Daylight Shavings Helmet"]))), bonusValue]]);
}
var juneCleaverEV = null;
function juneCleaver(mode) {
  var estimatedJuneCleaverTurns = remainingUserTurns() + estimatedGarboTurns();
  if (!have($item(_templateObject3319 || (_templateObject3319 = _taggedTemplateLiteral72(["June cleaver"])))) || get("_juneCleaverFightsLeft") > estimatedJuneCleaverTurns || !get("_juneCleaverFightsLeft")) {
    return /* @__PURE__ */ new Map();
  }
  if (!juneCleaverEV) {
    juneCleaverEV = sum(_toConsumableArray29(JuneCleaver_exports.choices), function(choice) {
      return valueJuneCleaverOption(juneCleaverChoiceValues[choice][bestJuneCleaverOption(choice)]);
    }) / JuneCleaver_exports.choices.length;
  }
  if (globalOptions.ascend && estimatedJuneCleaverTurns <= 180 && JuneCleaver_exports.getInterval() === 30) {
    var availEV = sum(_toConsumableArray29(JuneCleaver_exports.choicesAvailable()), function(choice) {
      return valueJuneCleaverOption(juneCleaverChoiceValues[choice][bestJuneCleaverOption(choice)]);
    }) / JuneCleaver_exports.choicesAvailable().length;
    var queueEV = sum(_toConsumableArray29(JuneCleaver_exports.queue()), function(choice) {
      var choiceValue = valueJuneCleaverOption(juneCleaverChoiceValues[choice][bestJuneCleaverOption(choice)]);
      var cleaverEncountersLeft = Math.floor(estimatedJuneCleaverTurns / 30);
      var encountersToQueueExit = 1 + JuneCleaver_exports.queue().indexOf(choice);
      var chancesLeft = Math.max(0, cleaverEncountersLeft - encountersToQueueExit);
      var encounterProbability = 1 - Math.pow(2 / 3, chancesLeft);
      return choiceValue * encounterProbability;
    }) / JuneCleaver_exports.queue().length;
    juneCleaverEV = queueEV + availEV;
  }
  var interval = mode === BonusEquipMode.EMBEZZLER ? 30 : JuneCleaver_exports.getInterval();
  return /* @__PURE__ */ new Map([[$item(_templateObject3416 || (_templateObject3416 = _taggedTemplateLiteral72(["June cleaver"]))), juneCleaverEV / interval]]);
}
function stickers2(mode) {
  if (mode === BonusEquipMode.EMBEZZLER)
    return /* @__PURE__ */ new Map();
  var cost = sumNumbers($slots(_templateObject3516 || (_templateObject3516 = _taggedTemplateLiteral72(["sticker1, sticker2, sticker3"]))).map(function(s) {
    return (0, import_kolmafia82.mallPrice)((0, import_kolmafia82.equippedItem)(s)) / 20;
  }));
  return /* @__PURE__ */ new Map([[$item(_templateObject3616 || (_templateObject3616 = _taggedTemplateLiteral72(["scratch 'n' sniff sword"]))), -1 * cost], [$item(_templateObject3716 || (_templateObject3716 = _taggedTemplateLiteral72(["scratch 'n' sniff crossbow"]))), -1 * cost]]);
}
function powerGlove() {
  if (!have($item(_templateObject3816 || (_templateObject3816 = _taggedTemplateLiteral72(["Powerful Glove"])))))
    return /* @__PURE__ */ new Map();
  return /* @__PURE__ */ new Map([[$item(_templateObject3916 || (_templateObject3916 = _taggedTemplateLiteral72(["Powerful Glove"]))), 0.25 * garboAverageValue.apply(void 0, _toConsumableArray29($items(_templateObject4016 || (_templateObject4016 = _taggedTemplateLiteral72(["blue pixel, green pixel, red pixel, white pixel"])))))]]);
}

// src/outfit/lib.ts
var import_kolmafia83 = require("kolmafia");
init_dist();
var _templateObject601;
var _templateObject2148;
var _templateObject3133;
var _templateObject4119;
var _templateObject5102;
var _templateObject668;
var _templateObject756;
var _templateObject849;
var _templateObject941;
var _templateObject1037;
var _templateObject1133;
var _templateObject1231;
var _templateObject1330;
var _templateObject1427;
var _templateObject1525;
var _templateObject1624;
var _templateObject1724;
var _templateObject1824;
var _templateObject1924;
var _templateObject2024;
var _templateObject2149;
var _templateObject2225;
var _templateObject2324;
var _templateObject2422;
var _templateObject2522;
var _templateObject2622;
var _templateObject2722;
function _createForOfIteratorHelper26(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray50(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray50(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray50(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray50(o, minLen);
}
function _arrayLikeToArray50(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral73(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function bestBjornalike(outfit3) {
  var bjornalikes = $items(_templateObject601 || (_templateObject601 = _taggedTemplateLiteral73(["Buddy Bjorn, Crown of Thrones"]))).filter(function(item10) {
    return outfit3.canEquip(item10);
  });
  if (bjornalikes.length === 0)
    return null;
  if (bjornalikes.length === 1)
    return bjornalikes[0];
  var hasStrongLep = findLeprechaunMultiplier(meatFamiliar()) >= 2;
  var goodRobortHats = $items(_templateObject2148 || (_templateObject2148 = _taggedTemplateLiteral73(["crumpled felt fedora"])));
  if ((0, import_kolmafia83.myClass)() === $class(_templateObject3133 || (_templateObject3133 = _taggedTemplateLiteral73(["Turtle Tamer"])))) {
    goodRobortHats.push($item(_templateObject4119 || (_templateObject4119 = _taggedTemplateLiteral73(["warbear foil hat"]))));
  }
  if ((0, import_kolmafia83.numericModifier)($item(_templateObject5102 || (_templateObject5102 = _taggedTemplateLiteral73(["shining star cap"]))), "Familiar Weight") === 10) {
    goodRobortHats.push($item(_templateObject668 || (_templateObject668 = _taggedTemplateLiteral73(["shining star cap"]))));
  }
  if (have($item(_templateObject756 || (_templateObject756 = _taggedTemplateLiteral73(["carpe"])))) && (!hasStrongLep || !goodRobortHats.some(function(hat) {
    return have(hat) && (0, import_kolmafia83.canEquip)(hat);
  }))) {
    return $item(_templateObject849 || (_templateObject849 = _taggedTemplateLiteral73(["Crown of Thrones"])));
  }
  return $item(_templateObject941 || (_templateObject941 = _taggedTemplateLiteral73(["Buddy Bjorn"])));
}
function cleaverCheck() {
  if ((0, import_kolmafia83.availableAmount)($item(_templateObject1037 || (_templateObject1037 = _taggedTemplateLiteral73(["June cleaver"])))) > 1)
    (0, import_kolmafia83.cliExecute)("refresh inventory");
}
function useUPCs() {
  var UPC2 = $item(_templateObject1133 || (_templateObject1133 = _taggedTemplateLiteral73(["scratch 'n' sniff UPC sticker"])));
  if ($items(_templateObject1231 || (_templateObject1231 = _taggedTemplateLiteral73(["scratch 'n' sniff sword, scratch 'n' sniff crossbow"]))).every(function(i) {
    return !have(i);
  })) {
    (0, import_kolmafia83.visitUrl)("bedazzle.php?action=juststick&sticker=".concat((0, import_kolmafia83.toInt)(UPC2), "&pwd"));
  }
  for (var slotNumber = 1; slotNumber <= 3; slotNumber++) {
    var slot = (0, import_kolmafia83.toSlot)("sticker".concat(slotNumber));
    var sticker = (0, import_kolmafia83.equippedItem)(slot);
    if (sticker === UPC2)
      continue;
    (0, import_kolmafia83.visitUrl)("bedazzle.php");
    if (sticker !== $item.none) {
      (0, import_kolmafia83.visitUrl)("bedazzle.php?action=peel&pwd&slot=".concat(slotNumber));
    }
    (0, import_kolmafia83.visitUrl)("bedazzle.php?action=stick&pwd&slot=".concat(slotNumber, "&sticker=").concat((0, import_kolmafia83.toInt)(UPC2)));
  }
}
var stickerSlots = $slots(_templateObject1330 || (_templateObject1330 = _taggedTemplateLiteral73(["sticker1, sticker2, sticker3"])));
var UPC = $item(_templateObject1427 || (_templateObject1427 = _taggedTemplateLiteral73(["scratch 'n' sniff UPC sticker"])));
function useUPCsIfNeeded(_ref) {
  var familiar7 = _ref.familiar;
  var currentWeapon = 25 * (familiar7 ? findLeprechaunMultiplier(familiar7) : 0);
  var embezzlers = globalOptions.ascend ? Math.min(20, embezzlerCount() || digitizedMonstersRemaining()) : 20;
  var addedValueOfFullSword = embezzlers * ((75 - currentWeapon) * (750 + baseMeat)) / 100;
  if (addedValueOfFullSword > 3 * (0, import_kolmafia83.mallPrice)(UPC)) {
    var needed = 3 - stickerSlots.filter(function(sticker) {
      return (0, import_kolmafia83.equippedItem)(sticker) === UPC;
    }).length;
    if (needed)
      acquire(needed, UPC, addedValueOfFullSword / 3, false);
    useUPCs();
  }
}
var waterBreathingEquipment = $items(_templateObject1525 || (_templateObject1525 = _taggedTemplateLiteral73(["The Crown of Ed the Undying, aerated diving helmet, crappy Mer-kin mask, Mer-kin gladiator mask, Mer-kin scholar mask, old SCUBA tank"])));
var familiarWaterBreathingEquipment = $items(_templateObject1624 || (_templateObject1624 = _taggedTemplateLiteral73(["das boot, little bitty bathysphere"])));
function latteFilled() {
  return !(have($item(_templateObject1724 || (_templateObject1724 = _taggedTemplateLiteral73(["latte lovers member's mug"])))) && get("_latteRefillsUsed") < 3 && (get("_latteCopyUsed") || get("latteUnlocks").includes("cajun") && get("latteUnlocks").includes("rawhide") && ((0, import_kolmafia83.numericModifier)($item(_templateObject1824 || (_templateObject1824 = _taggedTemplateLiteral73(["latte lovers member's mug"]))), "Familiar Weight") !== 5 || (0, import_kolmafia83.numericModifier)($item(_templateObject1924 || (_templateObject1924 = _taggedTemplateLiteral73(["latte lovers member's mug"]))), "Meat Drop") !== 40 || get("latteUnlocks").includes("carrot") && (0, import_kolmafia83.numericModifier)($item(_templateObject2024 || (_templateObject2024 = _taggedTemplateLiteral73(["latte lovers member's mug"]))), "Item Drop") !== 20)));
}
function tryFillLatte() {
  if (!latteFilled()) {
    var goodLatteIngredients = ["cajun", "rawhide", "carrot"];
    var latteIngredients = goodLatteIngredients.filter(function(ingredient) {
      return get("latteUnlocks").includes(ingredient);
    });
    if (latteIngredients.length < 3)
      latteIngredients.push("pumpkin");
    if (latteIngredients.length < 3)
      latteIngredients.push("vanilla");
    if (latteIngredients.length < 3)
      latteIngredients.push("cinnamon");
    (0, import_kolmafia83.cliExecute)("latte refill ".concat(latteIngredients.join(" ")));
  }
  return (0, import_kolmafia83.numericModifier)($item(_templateObject2149 || (_templateObject2149 = _taggedTemplateLiteral73(["latte lovers member's mug"]))), "Familiar Weight") === 5 && (0, import_kolmafia83.numericModifier)($item(_templateObject2225 || (_templateObject2225 = _taggedTemplateLiteral73(["latte lovers member's mug"]))), "Meat Drop") === 40;
}
function toSpec(source) {
  if (!source)
    return {};
  if (source instanceof Requirement) {
    var _source$maximizeOptio;
    var result = {};
    if (source.maximizeParameters.length) {
      result.modifier = source.maximizeParameters;
    }
    if ((_source$maximizeOptio = source.maximizeOptions.forceEquip) !== null && _source$maximizeOptio !== void 0 && _source$maximizeOptio.length) {
      result.equip = source.maximizeOptions.forceEquip;
    }
    if (source.maximizeOptions.preventEquip) {
      result.avoid = source.maximizeOptions.preventEquip;
    }
    return result;
  } else {
    var _source$constraints$e, _source$constraints, _source$constraints$f, _source$constraints2;
    var req = (_source$constraints$e = (_source$constraints = source.constraints).equipmentRequirements) === null || _source$constraints$e === void 0 ? void 0 : _source$constraints$e.call(_source$constraints);
    var spec = req ? toSpec(req) : {};
    var familiar7 = (_source$constraints$f = (_source$constraints2 = source.constraints).familiar) === null || _source$constraints$f === void 0 ? void 0 : _source$constraints$f.call(_source$constraints2);
    if (familiar7)
      spec.familiar = familiar7;
    return spec;
  }
}
var cachedUsingPurse = null;
function usingPurse() {
  if (cachedUsingPurse === null) {
    cachedUsingPurse = (0, import_kolmafia83.myInebriety)() <= (0, import_kolmafia83.inebrietyLimit)() && (!have($item(_templateObject2324 || (_templateObject2324 = _taggedTemplateLiteral73(["latte lovers member's mug"])))) || !have($familiar(_templateObject2422 || (_templateObject2422 = _taggedTemplateLiteral73(["Robortender"])))) && !have($familiar(_templateObject2522 || (_templateObject2522 = _taggedTemplateLiteral73(["Hobo Monkey"])))) || !(0, import_kolmafia83.canAdventure)($location(_templateObject2622 || (_templateObject2622 = _taggedTemplateLiteral73(["The Black Forest"])))));
  }
  return cachedUsingPurse;
}
function validateGarbageFoldable(spec) {
  var garbageItems = getFoldGroup($item(_templateObject2722 || (_templateObject2722 = _taggedTemplateLiteral73(["January's Garbage Tote"]))));
  var _iterator = _createForOfIteratorHelper26(garbageItems), _step;
  try {
    var _loop = function _loop2() {
      var garbageItem = _step.value;
      if (Object.values(spec).some(function(specEntry) {
        return specEntry === garbageItem || Array.isArray(specEntry) && specEntry.includes(garbageItem);
      })) {
        if (!have(garbageItem))
          (0, import_kolmafia83.cliExecute)("fold ".concat(garbageItem));
        return 1;
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      if (_loop())
        break;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}

// src/outfit/barf.ts
var _templateObject669;
var _templateObject2150;
var _templateObject3134;
var _templateObject4120;
var _templateObject5103;
var _templateObject670;
var _templateObject757;
var _templateObject850;
var _templateObject944;
var _templateObject1038;
var _templateObject1134;
var _templateObject1233;
var _templateObject1331;
var _templateObject1428;
var _templateObject1526;
var _templateObject1625;
var _templateObject1725;
var _templateObject1825;
var _templateObject1925;
var _templateObject2025;
var _templateObject2151;
var _templateObject2226;
var _templateObject2325;
var _templateObject2423;
var _templateObject2523;
var _templateObject2623;
function _createForOfIteratorHelper27(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray51(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray51(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray51(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray51(o, minLen);
}
function _arrayLikeToArray51(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral74(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function chooseGun(_ref) {
  var familiar7 = _ref.familiar;
  if (familiar7 === $familiar(_templateObject669 || (_templateObject669 = _taggedTemplateLiteral74(["Robortender"]))) && have($item(_templateObject2150 || (_templateObject2150 = _taggedTemplateLiteral74(["love"]))))) {
    return $item(_templateObject3134 || (_templateObject3134 = _taggedTemplateLiteral74(["love"])));
  }
  if (!have($item(_templateObject4120 || (_templateObject4120 = _taggedTemplateLiteral74(["ice nine"]))))) {
    (0, import_kolmafia84.cliExecute)("refresh inventory");
    (0, import_kolmafia84.retrieveItem)($item(_templateObject5103 || (_templateObject5103 = _taggedTemplateLiteral74(["ice nine"]))));
  }
  return have($item(_templateObject670 || (_templateObject670 = _taggedTemplateLiteral74(["ice nine"])))) ? $item(_templateObject757 || (_templateObject757 = _taggedTemplateLiteral74(["ice nine"]))) : null;
}
function gunSpec(outfit3) {
  if (!outfit3.canEquip($item(_templateObject850 || (_templateObject850 = _taggedTemplateLiteral74(["unwrapped knock-off retro superhero cape"]))))) {
    return {
      available: false,
      items: []
    };
  }
  var gun = chooseGun(outfit3);
  if (!gun)
    return {
      available: false,
      items: []
    };
  return {
    available: true,
    items: {
      back: $item(_templateObject944 || (_templateObject944 = _taggedTemplateLiteral74(["unwrapped knock-off retro superhero cape"]))),
      weapon: gun,
      equip: $items(_templateObject1038 || (_templateObject1038 = _taggedTemplateLiteral74(["mafia pointer finger ring"]))),
      modes: {
        retrocape: ["robot", "kill"]
      }
    }
  };
}
var POINTER_RING_SPECS = function(outfit3) {
  return [{
    available: have($skill(_templateObject1134 || (_templateObject1134 = _taggedTemplateLiteral74(["Furious Wallop"])))) && (0, import_kolmafia84.myFury)() > 0,
    items: $items(_templateObject1233 || (_templateObject1233 = _taggedTemplateLiteral74(["mafia pointer finger ring"])))
  }, {
    available: have($skill(_templateObject1331 || (_templateObject1331 = _taggedTemplateLiteral74(["Head in the Game"])))),
    items: $items(_templateObject1428 || (_templateObject1428 = _taggedTemplateLiteral74(["mafia pointer finger ring"])))
  }, {
    available: (0, import_kolmafia84.myClass)() === $class(_templateObject1526 || (_templateObject1526 = _taggedTemplateLiteral74(["Turtle Tamer"]))),
    items: $items(_templateObject1625 || (_templateObject1625 = _taggedTemplateLiteral74(["Operation Patriot Shield, mafia pointer finger ring"])))
  }, {
    available: true,
    items: $items(_templateObject1725 || (_templateObject1725 = _taggedTemplateLiteral74(["haiku katana, mafia pointer finger ring"])))
  }, function() {
    return gunSpec(outfit3);
  }, {
    available: true,
    items: $items(_templateObject1825 || (_templateObject1825 = _taggedTemplateLiteral74(["Operation Patriot Shield, mafia pointer finger ring"])))
  }];
};
var trueInebrietyLimit = function() {
  return (0, import_kolmafia84.inebrietyLimit)() - ((0, import_kolmafia84.myFamiliar)() === $familiar(_templateObject1925 || (_templateObject1925 = _taggedTemplateLiteral74(["Stooper"]))) ? 1 : 0);
};
function barfOutfit() {
  var _outfit$familiar;
  var spec = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var sim = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  cleaverCheck();
  validateGarbageFoldable(spec);
  var outfit3 = Outfit.from(spec, new Error("Failed to construct outfit from spec ".concat((0, import_kolmafia84.toJson)(spec), "!")));
  (_outfit$familiar = outfit3.familiar) !== null && _outfit$familiar !== void 0 ? _outfit$familiar : outfit3.familiar = barfFamiliar();
  var bjornChoice = chooseBjorn(BonusEquipMode.BARF, outfit3.familiar, sim);
  outfit3.modifier.push("".concat(modeValueOfMeat(BonusEquipMode.BARF), " Meat Drop"), "".concat(modeValueOfItem(BonusEquipMode.BARF), " Item Drop"), "-tie");
  if ((0, import_kolmafia84.myInebriety)() > trueInebrietyLimit()) {
    if (!outfit3.equip($item(_templateObject2025 || (_templateObject2025 = _taggedTemplateLiteral74(["Drunkula's wineglass"]))))) {
      throw new Error("We're overdrunk but have found ourself unable to equip a wineglass!");
    }
  } else {
    if (have($item(_templateObject2151 || (_templateObject2151 = _taggedTemplateLiteral74(["protonic accelerator pack"])))) && get("questPAGhost") === "unstarted" && get("nextParanormalActivity") <= (0, import_kolmafia84.totalTurnsPlayed)()) {
      outfit3.equip($item(_templateObject2226 || (_templateObject2226 = _taggedTemplateLiteral74(["protonic accelerator pack"]))));
    }
    var _iterator = _createForOfIteratorHelper27(POINTER_RING_SPECS(outfit3)), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var _spec = _step.value;
        var _undelay = undelay(_spec), available4 = _undelay.available, items = _undelay.items;
        if (available4 && outfit3.tryEquip(items))
          break;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  if (getKramcoWandererChance() > 0.05) {
    outfit3.equip($item(_templateObject2325 || (_templateObject2325 = _taggedTemplateLiteral74(["Kramco Sausage-o-Matic\u2122"]))));
  }
  outfit3.bonuses = bonusGear(BonusEquipMode.BARF, !sim);
  var bjornalike = bestBjornalike(outfit3);
  if (bjornalike) {
    outfit3.setBonus(bjornalike, bjornChoice.value);
    var other = $items(_templateObject2423 || (_templateObject2423 = _taggedTemplateLiteral74(["Buddy Bjorn, Crown of Thrones"]))).filter(function(i) {
      return i !== bjornalike;
    })[0];
    outfit3.avoid.push(other);
    switch (bjornalike) {
      case $item(_templateObject2523 || (_templateObject2523 = _taggedTemplateLiteral74(["Buddy Bjorn"]))):
        outfit3.bjornify(bjornChoice.familiar);
        break;
      case $item(_templateObject2623 || (_templateObject2623 = _taggedTemplateLiteral74(["Crown of Thrones"]))):
        outfit3.enthrone(bjornChoice.familiar);
        break;
    }
  }
  outfit3.setModes({
    snowsuit: "nose",
    parka: "kachungasaur"
  });
  return outfit3;
}

// src/outfit/embezzler.ts
var import_kolmafia85 = require("kolmafia");
init_dist();
var _templateObject671;
var _templateObject2153;
var _templateObject3135;
var _templateObject4121;
var _templateObject5104;
function _taggedTemplateLiteral75(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function embezzlerOutfit() {
  var _outfit$familiar;
  var spec = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var target = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : $location.none;
  cleaverCheck();
  validateGarbageFoldable(spec);
  var outfit3 = Outfit.from(spec, new Error("Failed to construct outfit from spec ".concat((0, import_kolmafia85.toJson)(spec))));
  outfit3.modifier.push("".concat(modeValueOfMeat(BonusEquipMode.EMBEZZLER), " Meat Drop"), "-tie");
  outfit3.avoid.push($item(_templateObject671 || (_templateObject671 = _taggedTemplateLiteral75(["cheap sunglasses"]))));
  (_outfit$familiar = outfit3.familiar) !== null && _outfit$familiar !== void 0 ? _outfit$familiar : outfit3.familiar = meatFamiliar();
  var bjornChoice = chooseBjorn(BonusEquipMode.EMBEZZLER, outfit3.familiar);
  var underwater = target.environment === "underwater";
  if (underwater) {
    if (!outfit3.familiar.underwater) {
      outfit3.equipFirst(familiarWaterBreathingEquipment);
    }
    if (!outfit3.equipFirst(waterBreathingEquipment)) {
      outfit3.modifier.push("sea");
    }
  }
  useUPCsIfNeeded(outfit3);
  outfit3.bonuses = bonusGear(BonusEquipMode.EMBEZZLER);
  var bjornalike = bestBjornalike(outfit3);
  if (target === Guzzlr_exports.getLocation() && Guzzlr_exports.turnsLeftOnQuest(false) === 1 && Guzzlr_exports.haveBooze()) {
    outfit3.addBonus($item(_templateObject2153 || (_templateObject2153 = _taggedTemplateLiteral75(["Guzzlr pants"]))), Guzzlr_exports.expectedReward(true) - Guzzlr_exports.expectedReward(false));
  }
  if (bjornalike) {
    outfit3.setBonus(bjornalike, bjornChoice.value);
    outfit3.equip(bjornalike);
    var other = $items(_templateObject3135 || (_templateObject3135 = _taggedTemplateLiteral75(["Buddy Bjorn, Crown of Thrones"]))).filter(function(i) {
      return i !== bjornalike;
    })[0];
    outfit3.avoid.push(other);
    switch (bjornalike) {
      case $item(_templateObject4121 || (_templateObject4121 = _taggedTemplateLiteral75(["Buddy Bjorn"]))):
        outfit3.bjornify(bjornChoice.familiar);
        break;
      case $item(_templateObject5104 || (_templateObject5104 = _taggedTemplateLiteral75(["Crown of Thrones"]))):
        outfit3.enthrone(bjornChoice.familiar);
        break;
    }
  }
  outfit3.setModes({
    snowsuit: "nose",
    parka: "kachungasaur",
    edpiece: "fish"
  });
  return outfit3;
}

// src/outfit/free.ts
var import_kolmafia91 = require("kolmafia");
init_dist();

// src/garboWanderer.ts
var import_kolmafia90 = require("kolmafia");
var import_garbo_lib2 = __toESM(require_dist());

// src/familiar/freeFightFamiliar.ts
var import_kolmafia89 = require("kolmafia");
init_dist();

// src/familiar/constantValueFamiliars.ts
var import_kolmafia86 = require("kolmafia");
init_dist();
var _templateObject678;
var _templateObject2154;
var _templateObject3136;
var _templateObject4122;
var _templateObject5105;
var _templateObject679;
var _templateObject758;
var _templateObject851;
var _templateObject945;
var _templateObject1039;
var _templateObject1135;
var _templateObject1234;
var _templateObject1333;
var _templateObject1429;
var _templateObject1527;
var _templateObject1626;
var _templateObject1726;
var _templateObject1826;
var _templateObject1926;
var _templateObject2026;
var _templateObject2155;
var _templateObject2227;
var _templateObject2326;
var _templateObject2424;
var _templateObject2524;
var _templateObject2624;
var _templateObject2723;
var _templateObject2820;
function _toConsumableArray30(arr) {
  return _arrayWithoutHoles30(arr) || _iterableToArray30(arr) || _unsupportedIterableToArray52(arr) || _nonIterableSpread30();
}
function _nonIterableSpread30() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray52(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray52(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray52(o, minLen);
}
function _iterableToArray30(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles30(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray52(arr);
}
function _arrayLikeToArray52(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral76(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var bestAlternative = get2("Meat Drop", $item(_templateObject678 || (_templateObject678 = _taggedTemplateLiteral76(["amulet coin"]))));
var standardFamiliars = [{
  familiar: $familiar(_templateObject2154 || (_templateObject2154 = _taggedTemplateLiteral76(["Obtuse Angel"]))),
  value: function() {
    return 0.02 * garboValue($item(_templateObject3136 || (_templateObject3136 = _taggedTemplateLiteral76(["time's arrow"]))));
  }
}, {
  familiar: $familiar(_templateObject4122 || (_templateObject4122 = _taggedTemplateLiteral76(["Stocking Mimic"]))),
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray30($items(_templateObject5105 || (_templateObject5105 = _taggedTemplateLiteral76(["Polka Pop, BitterSweetTarts, Piddles"]))))) / 6 - // We can't equip an amulet coin if we equip the bag of many confections
    bestAlternative * baseMeat / 100 + (1 / 3 + (have($effect(_templateObject679 || (_templateObject679 = _taggedTemplateLiteral76(["Jingle Jangle Jingle"])))) ? 0.1 : 0)) * ((0, import_kolmafia86.familiarWeight)($familiar(_templateObject758 || (_templateObject758 = _taggedTemplateLiteral76(["Stocking Mimic"])))) + (0, import_kolmafia86.weightAdjustment)());
  }
}, {
  familiar: $familiar(_templateObject851 || (_templateObject851 = _taggedTemplateLiteral76(["Shorter-Order Cook"]))),
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray30($items(_templateObject945 || (_templateObject945 = _taggedTemplateLiteral76(["short beer, short stack of pancakes, short stick of butter, short glass of water, short white"]))))) / 11;
  }
  // 9 with blue plate
}, {
  familiar: $familiar(_templateObject1039 || (_templateObject1039 = _taggedTemplateLiteral76(["Robortender"]))),
  value: function() {
    return garboValue($item(_templateObject1135 || (_templateObject1135 = _taggedTemplateLiteral76(["elemental sugarcube"])))) / 5 + (Robortender_exports.currentDrinks().includes($item(_templateObject1234 || (_templateObject1234 = _taggedTemplateLiteral76(["Feliz Navidad"])))) ? felizValue() * 0.25 : 0) + (Robortender_exports.currentDrinks().includes($item(_templateObject1333 || (_templateObject1333 = _taggedTemplateLiteral76(["Newark"])))) ? newarkValue() * 0.25 : 0);
  }
}, {
  familiar: $familiar(_templateObject1429 || (_templateObject1429 = _taggedTemplateLiteral76(["Twitching Space Critter"]))),
  // Item is ludicrously overvalued and incredibly low-volume.
  // We can remove this cap once the price reaches a lower equilibrium
  // we probably won't, but we can.
  value: function() {
    return Math.min(garboValue($item(_templateObject1527 || (_templateObject1527 = _taggedTemplateLiteral76(["twitching space egg"])))) * 2e-4, 690);
  }
}, {
  familiar: $familiar(_templateObject1626 || (_templateObject1626 = _taggedTemplateLiteral76(["Hobo Monkey"]))),
  value: function() {
    return 75;
  }
}, {
  familiar: $familiar(_templateObject1726 || (_templateObject1726 = _taggedTemplateLiteral76(["Trick-or-Treating Tot"]))),
  // This is the value of getting a pirate costume over getting an amulet coin or whatever
  value: function() {
    return have($item(_templateObject1826 || (_templateObject1826 = _taggedTemplateLiteral76(["li'l pirate costume"])))) ? baseMeat * (300 - bestAlternative) / 100 : 0;
  }
}, {
  familiar: $familiar(_templateObject1926 || (_templateObject1926 = _taggedTemplateLiteral76(["Rockin' Robin"]))),
  value: function() {
    return garboValue($item(_templateObject2026 || (_templateObject2026 = _taggedTemplateLiteral76(["robin's egg"])))) / clamp(30 - get("rockinRobinProgress"), 1, 30);
  }
}, {
  familiar: $familiar(_templateObject2155 || (_templateObject2155 = _taggedTemplateLiteral76(["Optimistic Candle"]))),
  value: function() {
    return garboValue($item(_templateObject2227 || (_templateObject2227 = _taggedTemplateLiteral76(["glob of melted wax"])))) / clamp(30 - get("optimisticCandleProgress"), 1, 30);
  }
}, {
  familiar: $familiar(_templateObject2326 || (_templateObject2326 = _taggedTemplateLiteral76(["Garbage Fire"]))),
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray30($items(_templateObject2424 || (_templateObject2424 = _taggedTemplateLiteral76(["burning newspaper, extra-toasted half sandwich, mulled hobo wine"]))))) / clamp(30 - get("garbageFireProgress"), 1, 30);
  }
}, {
  familiar: $familiar(_templateObject2524 || (_templateObject2524 = _taggedTemplateLiteral76(["Cookbookbat"]))),
  value: function() {
    return 3 * garboAverageValue.apply(void 0, _toConsumableArray30($items(_templateObject2624 || (_templateObject2624 = _taggedTemplateLiteral76(["Vegetable of Jarlsberg, Yeast of Boris, St. Sneaky Pete's Whey"]))))) / 11;
  }
}, {
  familiar: $familiar(_templateObject2723 || (_templateObject2723 = _taggedTemplateLiteral76(["Patriotic Eagle"]))),
  value: function() {
    return (0, import_kolmafia86.holiday)().includes("Dependence Day") ? 0.05 * garboValue($item(_templateObject2820 || (_templateObject2820 = _taggedTemplateLiteral76(["souvenir flag"])))) : 0;
  }
}];
function getConstantValueFamiliars() {
  return standardFamiliars.filter(function(_ref) {
    var familiar7 = _ref.familiar;
    return have(familiar7);
  }).map(function(_ref2) {
    var familiar7 = _ref2.familiar, value = _ref2.value;
    return {
      familiar: familiar7,
      expectedValue: value(),
      leprechaunMultiplier: findLeprechaunMultiplier(familiar7),
      limit: "none"
    };
  });
}

// src/familiar/dropFamiliars.ts
var import_kolmafia87 = require("kolmafia");
init_dist();
var _templateObject680;
var _templateObject2156;
var _templateObject3137;
var _templateObject4123;
var _templateObject5106;
var _templateObject681;
var _templateObject759;
var _templateObject855;
var _templateObject946;
var _templateObject1040;
var _templateObject1136;
var _templateObject1235;
var _templateObject1334;
var _templateObject1430;
var _templateObject1528;
var _templateObject1627;
var _templateObject1727;
var _templateObject1827;
var _templateObject1927;
var _templateObject2027;
var _templateObject2157;
var _templateObject2228;
var _templateObject2327;
var _templateObject2425;
var _templateObject2525;
var _templateObject2625;
var _templateObject2724;
var _templateObject2821;
var _templateObject2918;
var _templateObject3018;
var _templateObject3138;
var _templateObject3220;
var _templateObject3320;
var _templateObject3417;
var _templateObject3517;
var _templateObject3617;
var _templateObject3717;
var _templateObject3817;
var _templateObject3917;
var _templateObject4017;
var _templateObject4124;
var _templateObject4217;
var _templateObject4317;
var _templateObject4416;
var _templateObject4516;
var _templateObject4616;
var _templateObject4716;
var _templateObject4816;
var _templateObject4915;
var _templateObject5014;
var _templateObject5117;
var _templateObject5216;
var _templateObject5316;
var _templateObject5416;
var _templateObject5515;
var _templateObject5614;
var _templateObject5713;
var _templateObject5811;
var _templateObject5911;
var _templateObject6010;
var _templateObject6116;
var _templateObject6215;
function _taggedTemplateLiteral77(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray31(arr) {
  return _arrayWithoutHoles31(arr) || _iterableToArray31(arr) || _unsupportedIterableToArray53(arr) || _nonIterableSpread31();
}
function _nonIterableSpread31() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray53(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray53(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray53(o, minLen);
}
function _iterableToArray31(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles31(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray53(arr);
}
function _arrayLikeToArray53(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function expectedTurnsValue(expected8, index) {
  return Array.isArray(expected8) ? expected8[index] : expected8(index);
}
function dropValue(drop) {
  return drop instanceof import_kolmafia87.Item ? garboValue(drop) : garboAverageValue.apply(void 0, _toConsumableArray31(drop));
}
function valueStandardDropFamiliar(_ref) {
  var _additionalValue;
  var familiar7 = _ref.familiar, expected8 = _ref.expected, drop = _ref.drop, additionalValue = _ref.additionalValue;
  var expectedTurns = expectedTurnsValue(expected8, familiar7.dropsToday) || Infinity;
  var expectedValue = dropValue(drop) / expectedTurns + ((_additionalValue = additionalValue === null || additionalValue === void 0 ? void 0 : additionalValue()) !== null && _additionalValue !== void 0 ? _additionalValue : 0);
  return {
    familiar: familiar7,
    expectedValue: expectedValue,
    leprechaunMultiplier: findLeprechaunMultiplier(familiar7),
    limit: "drops"
  };
}
var rotatingFamiliars = [{
  familiar: $familiar(_templateObject680 || (_templateObject680 = _taggedTemplateLiteral77(["Fist Turkey"]))),
  expected: [3.91, 4.52, 4.52, 5.29, 5.29],
  drop: $item(_templateObject2156 || (_templateObject2156 = _taggedTemplateLiteral77(["Ambitious Turkey"])))
}, {
  familiar: $familiar(_templateObject3137 || (_templateObject3137 = _taggedTemplateLiteral77(["Llama Lama"]))),
  expected: [3.42, 3.91, 4.52, 5.29, 5.29],
  drop: $item(_templateObject4123 || (_templateObject4123 = _taggedTemplateLiteral77(["llama lama gong"])))
}, {
  familiar: $familiar(_templateObject5106 || (_templateObject5106 = _taggedTemplateLiteral77(["Astral Badger"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject681 || (_templateObject681 = _taggedTemplateLiteral77(["astral mushroom"])))
}, {
  familiar: $familiar(_templateObject759 || (_templateObject759 = _taggedTemplateLiteral77(["Li'l Xenomorph"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject855 || (_templateObject855 = _taggedTemplateLiteral77(["transporter transponder"])))
}, {
  familiar: $familiar(_templateObject946 || (_templateObject946 = _taggedTemplateLiteral77(["Rogue Program"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1040 || (_templateObject1040 = _taggedTemplateLiteral77(["Game Grid token"])))
}, {
  familiar: $familiar(_templateObject1136 || (_templateObject1136 = _taggedTemplateLiteral77(["Bloovian Groose"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1235 || (_templateObject1235 = _taggedTemplateLiteral77(["groose grease"])))
}, {
  familiar: $familiar(_templateObject1334 || (_templateObject1334 = _taggedTemplateLiteral77(["Baby Sandworm"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1430 || (_templateObject1430 = _taggedTemplateLiteral77(["agua de vida"])))
}, {
  familiar: $familiar(_templateObject1528 || (_templateObject1528 = _taggedTemplateLiteral77(["Green Pixie"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1627 || (_templateObject1627 = _taggedTemplateLiteral77(["tiny bottle of absinthe"])))
}, {
  familiar: $familiar(_templateObject1727 || (_templateObject1727 = _taggedTemplateLiteral77(["Blavious Kloop"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject1827 || (_templateObject1827 = _taggedTemplateLiteral77(["devilish folio"])))
}, {
  familiar: $familiar(_templateObject1927 || (_templateObject1927 = _taggedTemplateLiteral77(["Galloping Grill"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject2027 || (_templateObject2027 = _taggedTemplateLiteral77(["hot ashes"])))
}, {
  familiar: $familiar(_templateObject2157 || (_templateObject2157 = _taggedTemplateLiteral77(["Grim Brother"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject2228 || (_templateObject2228 = _taggedTemplateLiteral77(["grim fairy tale"])))
}, {
  familiar: $familiar(_templateObject2327 || (_templateObject2327 = _taggedTemplateLiteral77(["Golden Monkey"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject2425 || (_templateObject2425 = _taggedTemplateLiteral77(["powdered gold"])))
}, {
  familiar: $familiar(_templateObject2525 || (_templateObject2525 = _taggedTemplateLiteral77(["Unconscious Collective"]))),
  expected: [3.03, 3.42, 3.91, 4.52, 5.29],
  drop: $item(_templateObject2625 || (_templateObject2625 = _taggedTemplateLiteral77(["Unconscious Collective Dream Jar"])))
}, {
  familiar: $familiar(_templateObject2724 || (_templateObject2724 = _taggedTemplateLiteral77(["Ms. Puck Man"]))),
  expected: Array($familiar(_templateObject2821 || (_templateObject2821 = _taggedTemplateLiteral77(["Ms. Puck Man"]))).dropsLimit).fill(12.85),
  drop: $item(_templateObject2918 || (_templateObject2918 = _taggedTemplateLiteral77(["power pill"]))),
  additionalValue: function() {
    return garboValue($item(_templateObject3018 || (_templateObject3018 = _taggedTemplateLiteral77(["yellow pixel"]))));
  }
}, {
  familiar: $familiar(_templateObject3138 || (_templateObject3138 = _taggedTemplateLiteral77(["Puck Man"]))),
  expected: Array($familiar(_templateObject3220 || (_templateObject3220 = _taggedTemplateLiteral77(["Puck Man"]))).dropsLimit).fill(12.85),
  drop: $item(_templateObject3320 || (_templateObject3320 = _taggedTemplateLiteral77(["power pill"]))),
  additionalValue: function() {
    return garboValue($item(_templateObject3417 || (_templateObject3417 = _taggedTemplateLiteral77(["yellow pixel"]))));
  }
}, {
  familiar: $familiar(_templateObject3517 || (_templateObject3517 = _taggedTemplateLiteral77(["Adventurous Spelunker"]))),
  expected: [7],
  drop: $item(_templateObject3617 || (_templateObject3617 = _taggedTemplateLiteral77(["Tales of Spelunking"])))
}, {
  familiar: $familiar(_templateObject3717 || (_templateObject3717 = _taggedTemplateLiteral77(["Angry Jung Man"]))),
  expected: [30],
  drop: $item(_templateObject3817 || (_templateObject3817 = _taggedTemplateLiteral77(["psychoanalytic jar"])))
}, {
  familiar: $familiar(_templateObject3917 || (_templateObject3917 = _taggedTemplateLiteral77(["Grimstone Golem"]))),
  expected: [45],
  drop: $item(_templateObject4017 || (_templateObject4017 = _taggedTemplateLiteral77(["grimstone mask"])))
}, {
  familiar: $familiar(_templateObject4124 || (_templateObject4124 = _taggedTemplateLiteral77(["Cookbookbat"]))),
  expected: [33],
  drop: [$item(_templateObject4217 || (_templateObject4217 = _taggedTemplateLiteral77(["Recipe of Before Yore: Deep Dish of Legend"]))), $item(_templateObject4317 || (_templateObject4317 = _taggedTemplateLiteral77(["Recipe of Before Yore: Pizza of Legend"]))), $item(_templateObject4416 || (_templateObject4416 = _taggedTemplateLiteral77(["Recipe of Before Yore: Calzone of Legend"]))), $item(_templateObject4516 || (_templateObject4516 = _taggedTemplateLiteral77(["Recipe of Before Yore: plain calzone"]))), $item(_templateObject4616 || (_templateObject4616 = _taggedTemplateLiteral77(["Recipe of Before Yore: roasted vegetable focaccia"]))), $item(_templateObject4716 || (_templateObject4716 = _taggedTemplateLiteral77(["Recipe of Before Yore: baked veggie ricotta"]))), $item(_templateObject4816 || (_templateObject4816 = _taggedTemplateLiteral77(["Recipe of Before Yore: roasted vegetable of J."]))), $item(_templateObject4915 || (_templateObject4915 = _taggedTemplateLiteral77(["Recipe of Before Yore: Pete's rich ricotta"]))), $item(_templateObject5014 || (_templateObject5014 = _taggedTemplateLiteral77(["Recipe of Before Yore: Boris's bread"]))), $item(_templateObject5117 || (_templateObject5117 = _taggedTemplateLiteral77(["Recipe of Before Yore: Boris's beer"]))), $item(_templateObject5216 || (_templateObject5216 = _taggedTemplateLiteral77(["Recipe of Before Yore: honey bun of Boris"]))), $item(_templateObject5316 || (_templateObject5316 = _taggedTemplateLiteral77(["Recipe of Before Yore: ratatouille de Jarlsberg"]))), $item(_templateObject5416 || (_templateObject5416 = _taggedTemplateLiteral77(["Recipe of Before Yore: Jarlsberg's vegetable soup"]))), $item(_templateObject5515 || (_templateObject5515 = _taggedTemplateLiteral77(["Recipe of Before Yore: Pete's wily whey bar"]))), $item(_templateObject5614 || (_templateObject5614 = _taggedTemplateLiteral77(["Recipe of Before Yore: St. Pete's sneaky smoothie"])))],
  additionalValue: function() {
    return 3 * garboAverageValue.apply(void 0, _toConsumableArray31($items(_templateObject5713 || (_templateObject5713 = _taggedTemplateLiteral77(["Vegetable of Jarlsberg, Yeast of Boris, St. Sneaky Pete's Whey"]))))) / 11;
  }
}, {
  familiar: $familiar(_templateObject5811 || (_templateObject5811 = _taggedTemplateLiteral77(["Hobo in Sheep's Clothing"]))),
  expected: function(i) {
    return 10 * i + 10;
  },
  // faster with half-height cigar
  drop: $item(_templateObject5911 || (_templateObject5911 = _taggedTemplateLiteral77(["grubby wool"])))
}, {
  familiar: $familiar(_templateObject6010 || (_templateObject6010 = _taggedTemplateLiteral77(["Jill-of-All-Trades"]))),
  expected: function(i) {
    return 3 * Math.pow(20, i);
  },
  drop: $item(_templateObject6116 || (_templateObject6116 = _taggedTemplateLiteral77(["map to a candy-rich block"]))),
  additionalValue: function() {
    return (6 + 4 * (0, import_kolmafia87.familiarWeight)($familiar(_templateObject6215 || (_templateObject6215 = _taggedTemplateLiteral77(["Jill-of-All-Trades"]))))) * 0.33;
  }
}];
function getDropFamiliars() {
  return rotatingFamiliars.map(valueStandardDropFamiliar).filter(function(_ref2) {
    var familiar7 = _ref2.familiar, expectedValue = _ref2.expectedValue, leprechaunMultiplier = _ref2.leprechaunMultiplier;
    return have(familiar7) && (expectedValue || leprechaunMultiplier);
  });
}
function getAllDrops(fam2) {
  var target = rotatingFamiliars.find(function(_ref3) {
    var familiar7 = _ref3.familiar;
    return familiar7 === fam2;
  });
  if (!have(fam2) || !target)
    return [];
  var expected8 = target.expected, drop = target.drop, additionalValue = target.additionalValue;
  var current2 = fam2.dropsToday;
  var returnValue = [];
  var length = Array.isArray(expected8) ? expected8.length : 11;
  for (var i = current2; i < length; i++) {
    var _additionalValue2;
    var turns = expectedTurnsValue(target.expected, i);
    returnValue.push({
      expectedValue: dropValue(drop) / turns + ((_additionalValue2 = additionalValue === null || additionalValue === void 0 ? void 0 : additionalValue()) !== null && _additionalValue2 !== void 0 ? _additionalValue2 : 0),
      expectedTurns: turns
    });
  }
  return returnValue;
}

// src/familiar/experienceFamiliars.ts
init_dist();
var _templateObject688;
var _templateObject2158;
var _templateObject3139;
function _taggedTemplateLiteral78(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var experienceFamiliars = [{
  familiar: $familiar(_templateObject688 || (_templateObject688 = _taggedTemplateLiteral78(["Pocket Professor"]))),
  used: "_thesisDelivered",
  useValue: 11 * get("valueOfAdventure"),
  baseExp: 200
}, {
  familiar: $familiar(_templateObject2158 || (_templateObject2158 = _taggedTemplateLiteral78(["Grey Goose"]))),
  used: "_meatifyMatterUsed",
  useValue: Math.pow(15, 4),
  baseExp: 25
}];
function valueExperienceFamiliar(_ref) {
  var familiar7 = _ref.familiar, useValue = _ref.useValue, baseExp = _ref.baseExp;
  var currentExp = familiar7.experience || (have($familiar(_templateObject3139 || (_templateObject3139 = _taggedTemplateLiteral78(["Shorter-Order Cook"])))) ? 100 : 0);
  var experienceNeeded = 400 - (globalOptions.ascend ? currentExp : baseExp);
  var estimatedExperience = 12;
  return {
    familiar: familiar7,
    expectedValue: useValue / (experienceNeeded / estimatedExperience),
    leprechaunMultiplier: findLeprechaunMultiplier(familiar7),
    limit: "experience"
  };
}
function getExperienceFamiliars() {
  return experienceFamiliars.filter(function(_ref2) {
    var used = _ref2.used, familiar7 = _ref2.familiar;
    return have(familiar7) && !get(used) && familiar7.experience < 400;
  }).map(valueExperienceFamiliar);
}
function getExperienceFamiliarLimit(fam2) {
  var target = experienceFamiliars.find(function(_ref3) {
    var familiar7 = _ref3.familiar;
    return familiar7 === fam2;
  });
  if (!have(fam2) || !target)
    return 0;
  return (400 - fam2.experience) / 5;
}

// src/familiar/meatFamiliar.ts
var import_kolmafia88 = require("kolmafia");
init_dist();
var _templateObject689;
var _templateObject2159;
var _templateObject3140;
function _taggedTemplateLiteral79(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var fam;
function findBestLeprechauns() {
  var validFamiliars = import_kolmafia88.Familiar.all().filter(function(f) {
    return have(f) && f !== $familiar(_templateObject689 || (_templateObject689 = _taggedTemplateLiteral79(["Ghost of Crimbo Commerce"])));
  });
  validFamiliars.sort(function(a, b) {
    return findLeprechaunMultiplier(b) - findLeprechaunMultiplier(a);
  });
  var bestLepMult = findLeprechaunMultiplier(validFamiliars[0]);
  var firstBadLeprechaun = validFamiliars.findIndex(function(f) {
    return findLeprechaunMultiplier(f) < bestLepMult;
  });
  if (firstBadLeprechaun === -1)
    return validFamiliars;
  return validFamiliars.slice(0, firstBadLeprechaun);
}
function findBestLeprechaun() {
  return maxBy(findBestLeprechauns(), findFairyMultiplier);
}
function setBestLeprechaunAsMeatFamiliar() {
  fam = findBestLeprechaun();
}
function meatFamiliar() {
  if (!fam) {
    if (have($familiar(_templateObject2159 || (_templateObject2159 = _taggedTemplateLiteral79(["Robortender"]))))) {
      fam = $familiar(_templateObject3140 || (_templateObject3140 = _taggedTemplateLiteral79(["Robortender"])));
    } else {
      setBestLeprechaunAsMeatFamiliar();
    }
  }
  return fam;
}

// src/familiar/freeFightFamiliar.ts
var _templateObject690;
var _templateObject2160;
var _templateObject3141;
var _templateObject4125;
var _templateObject5107;
var _templateObject691;
var _templateObject760;
var _templateObject856;
var _templateObject947;
function _toConsumableArray32(arr) {
  return _arrayWithoutHoles32(arr) || _iterableToArray32(arr) || _unsupportedIterableToArray54(arr) || _nonIterableSpread32();
}
function _nonIterableSpread32() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray54(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray54(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray54(o, minLen);
}
function _iterableToArray32(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles32(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray54(arr);
}
function _arrayLikeToArray54(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys14(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread14(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys14(Object(t), true).forEach(function(r2) {
      _defineProperty30(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys14(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty30(obj, key, value) {
  key = _toPropertyKey33(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey33(arg) {
  var key = _toPrimitive33(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive33(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral80(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var DEFAULT_MENU_OPTIONS = {
  canChooseMacro: true,
  location: $location(_templateObject690 || (_templateObject690 = _taggedTemplateLiteral80(["none"]))),
  extraFamiliars: [],
  includeExperienceFamiliars: true,
  allowAttackFamiliars: true
};
function menu2() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _DEFAULT_MENU_OPTIONS = _objectSpread14(_objectSpread14({}, DEFAULT_MENU_OPTIONS), options), includeExperienceFamiliars = _DEFAULT_MENU_OPTIONS.includeExperienceFamiliars, canChooseMacro = _DEFAULT_MENU_OPTIONS.canChooseMacro, location = _DEFAULT_MENU_OPTIONS.location, extraFamiliars = _DEFAULT_MENU_OPTIONS.extraFamiliars, allowAttackFamiliars = _DEFAULT_MENU_OPTIONS.allowAttackFamiliars;
  var familiarMenu = [].concat(_toConsumableArray32(getConstantValueFamiliars()), _toConsumableArray32(getDropFamiliars()), _toConsumableArray32(includeExperienceFamiliars ? getExperienceFamiliars() : []), _toConsumableArray32(extraFamiliars));
  if (canChooseMacro && (0, import_kolmafia89.myInebriety)() <= (0, import_kolmafia89.inebrietyLimit)()) {
    if (timeToMeatify()) {
      familiarMenu.push({
        familiar: $familiar(_templateObject2160 || (_templateObject2160 = _taggedTemplateLiteral80(["Grey Goose"]))),
        expectedValue: Math.pow((Math.max((0, import_kolmafia89.familiarWeight)($familiar(_templateObject3141 || (_templateObject3141 = _taggedTemplateLiteral80(["Grey Goose"])))) - 5), 0), 4),
        leprechaunMultiplier: 0,
        limit: "experience"
      });
    }
    if (canOpenRedPresent()) {
      familiarMenu.push({
        familiar: $familiar(_templateObject4125 || (_templateObject4125 = _taggedTemplateLiteral80(["Crimbo Shrub"]))),
        expectedValue: 2500,
        leprechaunMultiplier: 0,
        limit: "special"
      });
    }
    if (location.zone === "Dinseylandfill" && have($familiar(_templateObject5107 || (_templateObject5107 = _taggedTemplateLiteral80(["Space Jellyfish"]))))) {
      familiarMenu.push({
        familiar: $familiar(_templateObject691 || (_templateObject691 = _taggedTemplateLiteral80(["Space Jellyfish"]))),
        expectedValue: garboValue($item(_templateObject760 || (_templateObject760 = _taggedTemplateLiteral80(["stench jelly"])))) / (get("_spaceJellyfishDrops") < 5 ? get("_spaceJellyfishDrops") + 1 : 20),
        leprechaunMultiplier: 0,
        limit: "special"
      });
    }
  }
  var meatFam = meatFamiliar();
  if (!familiarMenu.some(function(_ref) {
    var familiar7 = _ref.familiar;
    return familiar7 === meatFam;
  })) {
    familiarMenu.push({
      familiar: meatFam,
      expectedValue: 0,
      leprechaunMultiplier: findLeprechaunMultiplier(meatFam),
      limit: "none"
    });
  }
  if (!allowAttackFamiliars) {
    return familiarMenu.filter(function(fam2) {
      return !(fam2.familiar.physicalDamage || fam2.familiar.elementalDamage);
    });
  }
  return familiarMenu;
}
function getAllJellyfishDrops() {
  if (!have($familiar(_templateObject856 || (_templateObject856 = _taggedTemplateLiteral80(["Space Jellyfish"]))))) {
    return [{
      expectedValue: 0,
      turnsAtValue: 0
    }];
  }
  var current2 = get("_spaceJellyfishDrops");
  var returnValue = [];
  for (var dropNumber = clamp(current2 + 1, 0, 6); dropNumber <= 6; dropNumber++) {
    returnValue.push({
      expectedValue: garboValue($item(_templateObject947 || (_templateObject947 = _taggedTemplateLiteral80(["stench jelly"])))) / (dropNumber > 5 ? 20 : dropNumber),
      turnsAtValue: dropNumber > 5 ? Infinity : dropNumber
    });
  }
  return returnValue;
}
function freeFightFamiliarData() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var compareFamiliars = function(a, b) {
    if (a === null)
      return b;
    if (a.expectedValue === b.expectedValue) {
      return a.leprechaunMultiplier > b.leprechaunMultiplier ? a : b;
    }
    return a.expectedValue > b.expectedValue ? a : b;
  };
  return menu2(options).reduce(compareFamiliars, {
    familiar: $familiar.none,
    expectedValue: 0,
    leprechaunMultiplier: 0,
    limit: "none"
  });
}
function freeFightFamiliar() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return freeFightFamiliarData(options).familiar;
}

// src/garboWanderer.ts
init_dist();
var _templateObject697;
var _templateObject2161;
var _templateObject3142;
var _templateObject4126;
function _taggedTemplateLiteral81(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray33(arr) {
  return _arrayWithoutHoles33(arr) || _iterableToArray33(arr) || _unsupportedIterableToArray55(arr) || _nonIterableSpread33();
}
function _nonIterableSpread33() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray55(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray55(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray55(o, minLen);
}
function _iterableToArray33(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles33(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray55(arr);
}
function _arrayLikeToArray55(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _wanderer;
function wanderer() {
  if (!_wanderer) {
    _wanderer = new import_garbo_lib2.WandererManager({
      ascend: globalOptions.ascend,
      estimatedTurns: estimatedGarboTurns,
      itemValue: garboValue,
      effectValue: function(effect2, duration) {
        return new Potion($item.none, {
          effect: effect2,
          duration: duration
        }).gross(embezzlerCount());
      },
      prioritizeCappingGuzzlr: get("garbo_prioritizeCappingGuzzlr", false),
      freeFightExtraValue: function(location) {
        return freeFightFamiliarData({
          location: location
        }).expectedValue;
      },
      digitzesRemaining: digitizedMonstersRemainingForTurns,
      plentifulMonsters: [$monster(_templateObject697 || (_templateObject697 = _taggedTemplateLiteral81(["Knob Goblin Embezzler"])))].concat(_toConsumableArray33(globalOptions.nobarf ? [] : (0, import_kolmafia90.getMonsters)($location(_templateObject2161 || (_templateObject2161 = _taggedTemplateLiteral81(["Barf Mountain"]))))), _toConsumableArray33(have($item(_templateObject3142 || (_templateObject3142 = _taggedTemplateLiteral81(["Kramco Sausage-o-Matic\u2122"])))) ? $monsters(_templateObject4126 || (_templateObject4126 = _taggedTemplateLiteral81(["sausage goblin"]))) : []))
    });
  }
  return _wanderer;
}

// src/outfit/free.ts
var _templateObject698;
var _templateObject2163;
var _templateObject3143;
var _templateObject4127;
var _templateObject5108;
var _templateObject699;
var _templateObject761;
var _templateObject857;
var _templateObject948;
var _templateObject1041;
var _templateObject1137;
function _toConsumableArray34(arr) {
  return _arrayWithoutHoles34(arr) || _iterableToArray34(arr) || _unsupportedIterableToArray56(arr) || _nonIterableSpread34();
}
function _nonIterableSpread34() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray56(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray56(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray56(o, minLen);
}
function _iterableToArray34(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles34(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray56(arr);
}
function _arrayLikeToArray56(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral82(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function ownKeys15(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread15(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys15(Object(t), true).forEach(function(r2) {
      _defineProperty31(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys15(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty31(obj, key, value) {
  key = _toPropertyKey34(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey34(arg) {
  var key = _toPrimitive34(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive34(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function freeFightOutfit() {
  var _outfit$familiar;
  var spec = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  cleaverCheck();
  var computedSpec = computeOutfitSpec(spec, options);
  validateGarbageFoldable(computedSpec);
  var outfit3 = Outfit.from(computedSpec, new Error("Failed to construct outfit from spec ".concat((0, import_kolmafia91.toJson)(spec), "!")));
  (_outfit$familiar = outfit3.familiar) !== null && _outfit$familiar !== void 0 ? _outfit$familiar : outfit3.familiar = freeFightFamiliar(_objectSpread15(_objectSpread15({}, options), {}, {
    allowAttackFamiliars: computeAllowAttackFamiliars(options)
  }));
  var mode = outfit3.familiar === $familiar(_templateObject698 || (_templateObject698 = _taggedTemplateLiteral82(["Machine Elf"]))) ? BonusEquipMode.DMT : BonusEquipMode.FREE;
  if (outfit3.familiar !== $familiar(_templateObject2163 || (_templateObject2163 = _taggedTemplateLiteral82(["Patriotic Eagle"])))) {
    outfit3.modifier.push($familiars(_templateObject3143 || (_templateObject3143 = _taggedTemplateLiteral82(["Pocket Professor, Grey Goose"]))).includes(outfit3.familiar) ? "Familiar Experience" : "Familiar Weight");
  }
  var bjornChoice = chooseBjorn(mode, outfit3.familiar);
  if (get("_vampyreCloakeFormUses") < 10) {
    outfit3.setBonus($item(_templateObject4127 || (_templateObject4127 = _taggedTemplateLiteral82(["vampyric cloake"]))), 500);
  }
  bonusGear(mode).forEach(function(value, item10) {
    return outfit3.addBonus(item10, value);
  });
  if (outfit3.familiar !== $familiar(_templateObject5108 || (_templateObject5108 = _taggedTemplateLiteral82(["Grey Goose"])))) {
    outfit3.setBonus($item(_templateObject699 || (_templateObject699 = _taggedTemplateLiteral82(["tiny stillsuit"]))), 500);
  }
  if (computeLocation(options) === Guzzlr_exports.getLocation() && Guzzlr_exports.turnsLeftOnQuest(false) === 1 && Guzzlr_exports.haveBooze()) {
    outfit3.addBonus($item(_templateObject761 || (_templateObject761 = _taggedTemplateLiteral82(["Guzzlr pants"]))), Guzzlr_exports.expectedReward(true) - Guzzlr_exports.expectedReward(false));
  }
  var bjornalike = $items(_templateObject857 || (_templateObject857 = _taggedTemplateLiteral82(["Crown of Thrones, Buddy Bjorn"]))).find(function(item10) {
    return outfit3.canEquip(item10);
  });
  if (bjornalike) {
    outfit3.setBonus(bjornalike, bjornChoice.value);
    var other = $items(_templateObject948 || (_templateObject948 = _taggedTemplateLiteral82(["Buddy Bjorn, Crown of Thrones"]))).filter(function(i) {
      return i !== bjornalike;
    })[0];
    outfit3.avoid.push(other);
    switch (bjornalike) {
      case $item(_templateObject1041 || (_templateObject1041 = _taggedTemplateLiteral82(["Buddy Bjorn"]))):
        outfit3.bjornify(bjornChoice.familiar);
        break;
      case $item(_templateObject1137 || (_templateObject1137 = _taggedTemplateLiteral82(["Crown of Thrones"]))):
        outfit3.enthrone(bjornChoice.familiar);
        break;
    }
  }
  outfit3.setModes({
    snowsuit: "nose",
    parka: "dilophosaur"
  });
  return outfit3;
}
function computeOutfitSpec(spec, options) {
  if (options.wanderOptions) {
    var _spec$equip;
    return _objectSpread15(_objectSpread15({}, spec), {}, {
      equip: [].concat(_toConsumableArray34((_spec$equip = spec.equip) !== null && _spec$equip !== void 0 ? _spec$equip : []), _toConsumableArray34(wanderer().getEquipment(options.wanderOptions)))
    });
  }
  return spec;
}
function computeLocation(options) {
  if (options.location) {
    return options.location;
  }
  if (options.wanderOptions) {
    return wanderer().getTarget(options.wanderOptions);
  }
  return void 0;
}
function computeAllowAttackFamiliars(options) {
  if (options.allowAttackFamiliars !== void 0) {
    return options.allowAttackFamiliars;
  }
  if (options.duplicate) {
    return !SourceTerminal_exports.have() || SourceTerminal_exports.duplicateUsesRemaining() === 0;
  }
  return void 0;
}

// src/potions.ts
var _templateObject700;
var _templateObject2164;
var _templateObject3144;
var _templateObject4128;
var _templateObject5109;
var _templateObject6100;
var _templateObject765;
var _templateObject858;
var _templateObject949;
var _templateObject1043;
var _templateObject1138;
var _templateObject1236;
var _templateObject1335;
var _templateObject1431;
var _templateObject1529;
var _templateObject1628;
var _templateObject1728;
var _templateObject1828;
var _templateObject1928;
var _templateObject2028;
var _templateObject2165;
var _templateObject2229;
var _templateObject2328;
var _templateObject2426;
var _templateObject2526;
var _templateObject2626;
var _templateObject2725;
var _templateObject2822;
var _templateObject2919;
var _templateObject3019;
var _templateObject3145;
var _templateObject3221;
var _templateObject3321;
var _templateObject3418;
var _templateObject3518;
function _slicedToArray28(arr, i) {
  return _arrayWithHoles28(arr) || _iterableToArrayLimit28(arr, i) || _unsupportedIterableToArray57(arr, i) || _nonIterableRest28();
}
function _nonIterableRest28() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit28(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles28(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck25(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties25(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey35(descriptor.key), descriptor);
  }
}
function _createClass25(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties25(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties25(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty32(obj, key, value) {
  key = _toPropertyKey35(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey35(arg) {
  var key = _toPrimitive35(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive35(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toConsumableArray35(arr) {
  return _arrayWithoutHoles35(arr) || _iterableToArray35(arr) || _unsupportedIterableToArray57(arr) || _nonIterableSpread35();
}
function _nonIterableSpread35() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray35(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles35(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray57(arr);
}
function _createForOfIteratorHelper28(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray57(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray57(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray57(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray57(o, minLen);
}
function _arrayLikeToArray57(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral83(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var banned = $items(_templateObject700 || (_templateObject700 = _taggedTemplateLiteral83(["Uncle Greenspan's Bathroom Finance Guide"])));
var failedWishes = [];
var mutuallyExclusiveList = [$effects(_templateObject2164 || (_templateObject2164 = _taggedTemplateLiteral83(["Blue Tongue, Green Tongue, Orange Tongue, Purple Tongue, Red Tongue, Black Tongue"]))), $effects(_templateObject3144 || (_templateObject3144 = _taggedTemplateLiteral83(["Cupcake of Choice, The Cupcake of Wrath, Shiny Happy Cupcake, Your Cupcake Senses Are Tingling, Tiny Bubbles in the Cupcake"]))), $effects(_templateObject4128 || (_templateObject4128 = _taggedTemplateLiteral83(["Broken Heart, Fiery Heart, Cold Hearted, Sweet Heart, Withered Heart, Lustful Heart"]))), $effects(_templateObject5109 || (_templateObject5109 = _taggedTemplateLiteral83(["Coldform, Hotform, Sleazeform, Spookyform, Stenchform"])))];
var mutuallyExclusive = /* @__PURE__ */ new Map();
for (_i = 0, _mutuallyExclusiveLis = mutuallyExclusiveList; _i < _mutuallyExclusiveLis.length; _i++) {
  effectGroup = _mutuallyExclusiveLis[_i];
  _iterator = _createForOfIteratorHelper28(effectGroup);
  try {
    _loop = function _loop2() {
      var _mutuallyExclusive$ge;
      var effect2 = _step.value;
      mutuallyExclusive.set(effect2, [].concat(_toConsumableArray35((_mutuallyExclusive$ge = mutuallyExclusive.get(effect2)) !== null && _mutuallyExclusive$ge !== void 0 ? _mutuallyExclusive$ge : []), _toConsumableArray35(effectGroup.filter(function(other) {
        return other !== effect2;
      }))));
    };
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
var effectGroup;
var _iterator;
var _step;
var _loop;
var _i;
var _mutuallyExclusiveLis;
var INVALID_CHARS_REGEX = /[.',]/g;
var wishableEffects = import_kolmafia92.Effect.all().filter(function(e) {
  return !e.attributes.includes("nohookah");
});
var wishableEffectData = wishableEffects.map(function(e) {
  var name = e.name.toLowerCase();
  var splitName = name.split(INVALID_CHARS_REGEX);
  return {
    e: e,
    name: name,
    splitName: splitName
  };
});
var invalidWishStrings = wishableEffectData.filter(function(_ref) {
  var name = _ref.name;
  return name.match(INVALID_CHARS_REGEX);
}).filter(function(_ref2) {
  var name = _ref2.name, splitName = _ref2.splitName;
  return splitName.every(function(s) {
    return wishableEffectData.some(function(n) {
      return n.name !== name && n.splitName.some(function(x) {
        return x.includes(s);
      });
    });
  });
}).map(function(_ref3) {
  var name = _ref3.name;
  return name;
});
var availableItems = _toConsumableArray35(new Set(import_kolmafia92.Location.all().filter(function(l) {
  return (0, import_kolmafia92.canAdventure)(l);
}).map(function(l) {
  return (0, import_kolmafia92.getMonsters)(l).filter(function(m) {
    return m.copyable;
  }).map(function(m) {
    return (0, import_kolmafia92.itemDropsArray)(m).filter(function(_ref4) {
      var rate = _ref4.rate;
      return rate > 1;
    });
  }).flat();
}).flat().map(function(_ref5) {
  var drop = _ref5.drop;
  return drop;
}))).map(function(i) {
  return i.name;
});
var validPawWishes = new Map(wishableEffectData.filter(
  function(_ref6) {
    var e = _ref6.e, name = _ref6.name;
    return !invalidWishStrings.includes(name) && (globalOptions.prefs.yachtzeechain ? e !== $effect(_templateObject6100 || (_templateObject6100 = _taggedTemplateLiteral83(["Eau d' Clochard"]))) : true);
  }
  // hardcoded heuristics
).map(function(_ref7) {
  var e = _ref7.e, name = _ref7.name, splitName = _ref7.splitName;
  if (!name.match(INVALID_CHARS_REGEX))
    return [e, name];
  return [e, splitName.filter(function(s) {
    return !availableItems.includes(s) && !wishableEffectData.some(function(n) {
      return n.name !== name && n.splitName.some(function(x) {
        return x.includes(s);
      });
    });
  })[0]];
}));
function retrieveUntradeablePrice(it) {
  return (0, import_kolmafia92.retrievePrice)(it, (0, import_kolmafia92.availableAmount)(it) + 1) - (0, import_kolmafia92.autosellPrice)(it) * (0, import_kolmafia92.availableAmount)(it);
}
var Potion = /* @__PURE__ */ function() {
  function Potion2(potion) {
    var _options$canDouble, _options$acquire;
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    _classCallCheck25(this, Potion2);
    _defineProperty32(this, "potion", void 0);
    _defineProperty32(this, "providesDoubleDuration", void 0);
    _defineProperty32(this, "canDouble", void 0);
    _defineProperty32(this, "overrideEffect", void 0);
    _defineProperty32(this, "overrideDuration", void 0);
    _defineProperty32(this, "priceOverride", void 0);
    _defineProperty32(this, "useOverride", void 0);
    _defineProperty32(this, "acquire", void 0);
    _defineProperty32(this, "effectValues", void 0);
    this.potion = potion;
    this.providesDoubleDuration = options.providesDoubleDuration;
    this.canDouble = (_options$canDouble = options.canDouble) !== null && _options$canDouble !== void 0 ? _options$canDouble : true;
    this.overrideDuration = options.duration;
    this.overrideEffect = options.effect;
    this.priceOverride = options.price;
    this.useOverride = options.use;
    this.acquire = (_options$acquire = options.acquire) !== null && _options$acquire !== void 0 ? _options$acquire : acquire;
    this.effectValues = options.effectValues;
  }
  _createClass25(Potion2, [{
    key: "doubleDuration",
    value: function doubleDuration() {
      if (this.canDouble) {
        return new Potion2(this.potion, {
          providesDoubleDuration: true,
          canDouble: this.canDouble,
          duration: this.overrideDuration,
          effect: this.overrideEffect,
          price: this.priceOverride,
          use: this.useOverride,
          acquire: this.acquire
        });
      }
      return this;
    }
  }, {
    key: "effect",
    value: function effect2() {
      var _this$overrideEffect;
      return (_this$overrideEffect = this.overrideEffect) !== null && _this$overrideEffect !== void 0 ? _this$overrideEffect : (0, import_kolmafia92.effectModifier)(this.potion, "Effect");
    }
  }, {
    key: "effectDuration",
    value: function effectDuration() {
      var _this$overrideDuratio;
      return ((_this$overrideDuratio = this.overrideDuration) !== null && _this$overrideDuratio !== void 0 ? _this$overrideDuratio : get2("Effect Duration", this.potion)) * (this.providesDoubleDuration ? 2 : 1);
    }
  }, {
    key: "smithsness",
    value: function smithsness() {
      var _this$effectValues$sm, _this$effectValues;
      return (_this$effectValues$sm = (_this$effectValues = this.effectValues) === null || _this$effectValues === void 0 ? void 0 : _this$effectValues.smithsness) !== null && _this$effectValues$sm !== void 0 ? _this$effectValues$sm : get2("Smithsness", this.effect());
    }
  }, {
    key: "meatDrop",
    value: function meatDrop() {
      var _this$effectValues$me, _this$effectValues2;
      return (_this$effectValues$me = (_this$effectValues2 = this.effectValues) === null || _this$effectValues2 === void 0 ? void 0 : _this$effectValues2.meatDrop) !== null && _this$effectValues$me !== void 0 ? _this$effectValues$me : get2("Meat Drop", this.effect()) + 2 * (usingPurse() ? this.smithsness() : 0);
    }
  }, {
    key: "familiarWeight",
    value: function familiarWeight12() {
      var _this$effectValues$fa, _this$effectValues3;
      return (_this$effectValues$fa = (_this$effectValues3 = this.effectValues) === null || _this$effectValues3 === void 0 ? void 0 : _this$effectValues3.famWeight) !== null && _this$effectValues$fa !== void 0 ? _this$effectValues$fa : get2("Familiar Weight", this.effect());
    }
  }, {
    key: "bonusMeat",
    value: function bonusMeat() {
      var familiarMultiplier = have($familiar(_templateObject765 || (_templateObject765 = _taggedTemplateLiteral83(["Robortender"])))) ? 2 : have($familiar(_templateObject858 || (_templateObject858 = _taggedTemplateLiteral83(["Hobo Monkey"])))) ? 1.25 : 1;
      var assumedBaseWeight = 100;
      var marginalValue = 2 * familiarMultiplier + Math.sqrt(220 * familiarMultiplier) / (2 * Math.sqrt(assumedBaseWeight));
      return this.familiarWeight() * marginalValue + this.meatDrop();
    }
  }, {
    key: "gross",
    value: function gross(embezzlers, maxTurns) {
      var bonusMeat = this.bonusMeat();
      var duration = Math.max(this.effectDuration(), maxTurns !== null && maxTurns !== void 0 ? maxTurns : 0);
      var embezzlersApplied = Math.max(Math.min(duration, embezzlers - (0, import_kolmafia92.haveEffect)(this.effect())), 0);
      return bonusMeat / 100 * (baseMeat * duration + 750 * embezzlersApplied);
    }
  }, {
    key: "price",
    value: function price2(historical) {
      if (this.priceOverride)
        return this.priceOverride(historical);
      return this.potion.tradeable ? historical && (0, import_kolmafia92.historicalAge)(this.potion) < 14 ? (0, import_kolmafia92.historicalPrice)(this.potion) : (0, import_kolmafia92.mallPrice)(this.potion) : retrieveUntradeablePrice(this.potion);
    }
  }, {
    key: "net",
    value: function net(embezzlers) {
      var historical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      return this.gross(embezzlers) - this.price(historical);
    }
  }, {
    key: "doublingValue",
    value: function doublingValue(embezzlers) {
      var historical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      return Math.min(Math.max(this.doubleDuration().net(embezzlers, historical), 0) - Math.max(this.net(embezzlers, historical), 0), this.price(true));
    }
  }, {
    key: "usesToCover",
    value: (
      /**
       * Compute how many times to use this potion to cover the range of turns
       * @param turns the number of turns to cover
       * @param allowOverage whether or not to allow the potion to extend past this number of turns
       * @returns the number of uses required by this potion to cover thatrange
       */
      function usesToCover(turns, allowOverage) {
        if (allowOverage) {
          return Math.ceil(turns / this.effectDuration());
        } else {
          return Math.floor(turns / this.effectDuration());
        }
      }
    )
  }, {
    key: "overage",
    value: (
      /**
       * Compute how many fewer or more turns we are from the desired turn count based on the input usage
       * @param turns the number of turns to cover
       * @param uses the number of uses of hte potion
       * @returns negative number of the number of turns short, positive number of the number of extra turns
       */
      function overage(turns, uses) {
        return this.effectDuration() * uses - turns;
      }
    )
  }, {
    key: "value",
    value: (
      /**
       * Compute up to 4 possible value thresholds for this potion based on the number of embezzlers to fight at the start of the day
       * - using it to only cover embezzlers
       * - using it to cover both barf and embezzlers (this is max 1 use)
       * - using it to only cover barf
       * - using it to cover turns in barf and those that would be lost at the end of the day
       * @param embezzlers The number of embezzlers expected to be fought in a block at the start of the day
       * @returns
       */
      function value(embezzlers, turns, limit) {
        var startingTurns = (0, import_kolmafia92.haveEffect)(this.effect());
        var ascending = globalOptions.ascend;
        var totalTurns = turns !== null && turns !== void 0 ? turns : estimatedGarboTurns();
        var values = [];
        var limitFunction = limit ? function(quantity) {
          return clamp(limit - sum(values, function(_ref8) {
            var quantity2 = _ref8.quantity;
            return quantity2;
          }), 0, quantity);
        } : function(quantity) {
          return quantity;
        };
        var embezzlerTurns = Math.max(0, embezzlers - startingTurns);
        var embezzlerQuantity = this.usesToCover(embezzlerTurns, false);
        var embezzlerValue = embezzlerQuantity ? this.gross(embezzlers) : 0;
        values.push({
          name: "embezzler",
          quantity: limitFunction(embezzlerQuantity),
          value: embezzlerValue
        });
        var overlapEmbezzlers = -this.overage(embezzlerTurns, embezzlerQuantity);
        if (overlapEmbezzlers > 0) {
          values.push({
            name: "overlap",
            quantity: limitFunction(1),
            value: this.gross(overlapEmbezzlers, globalOptions.nobarf ? overlapEmbezzlers : void 0)
          });
        }
        var embezzlerCoverage = embezzlerQuantity + (overlapEmbezzlers > 0 ? 1 : 0) * this.effectDuration();
        if (!globalOptions.nobarf) {
          var remainingTurns = Math.max(0, totalTurns - embezzlerCoverage - startingTurns);
          var barfQuantity = this.usesToCover(remainingTurns, !ascending);
          values.push({
            name: "barf",
            quantity: limitFunction(barfQuantity),
            value: this.gross(0)
          });
          if (ascending && this.overage(remainingTurns, barfQuantity) < 0) {
            var ascendingTurns = Math.max(0, remainingTurns - barfQuantity * this.effectDuration());
            values.push({
              name: "ascending",
              quantity: limitFunction(1),
              value: this.gross(0, ascendingTurns)
            });
          }
        }
        return values.filter(function(tier) {
          return tier.quantity > 0;
        });
      }
    )
  }, {
    key: "_use",
    value: function _use(quantity) {
      if (this.useOverride) {
        return this.useOverride(quantity);
      } else if ((0, import_kolmafia92.itemType)(this.potion) === "potion") {
        return (0, import_kolmafia92.use)(quantity, this.potion);
      } else {
        return false;
      }
    }
  }, {
    key: "use",
    value: function use30(quantity) {
      var effectTurns = (0, import_kolmafia92.haveEffect)(this.effect());
      var result = this._use(quantity);
      if (this.potion === $item(_templateObject949 || (_templateObject949 = _taggedTemplateLiteral83(["pocket wish"]))) && (0, import_kolmafia92.haveEffect)(this.effect()) <= effectTurns) {
        failedWishes.push(this.effect());
      }
      return result;
    }
  }], [{
    key: "bonusMeat",
    value: function bonusMeat(item10) {
      return new Potion2(item10).bonusMeat();
    }
  }, {
    key: "gross",
    value: function gross(item10, embezzlers) {
      return new Potion2(item10).gross(embezzlers);
    }
  }, {
    key: "net",
    value: function net(item10, embezzlers) {
      var historical = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
      return new Potion2(item10).net(embezzlers, historical);
    }
  }, {
    key: "doublingValue",
    value: function doublingValue(item10, embezzlers) {
      var historical = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
      return new Potion2(item10).doublingValue(embezzlers, historical);
    }
  }, {
    key: "usesToCover",
    value: function usesToCover(item10, turns, allowOverage) {
      return new Potion2(item10).usesToCover(turns, allowOverage);
    }
  }, {
    key: "overage",
    value: function overage(item10, turns, uses) {
      return new Potion2(item10).overage(turns, uses);
    }
  }]);
  return Potion2;
}();
function useAsValuable(potion, embezzlers, embezzlersOnly) {
  var value = potion.value(embezzlers);
  var price2 = potion.price(false);
  var amountsAcquired = value.map(function(value2) {
    return (!embezzlersOnly || value2.name === "embezzler") && value2.value - price2 > 0 ? potion.acquire(value2.quantity, potion.potion, value2.value, false, void 0, true) : 0;
  });
  var total = sumNumbers(amountsAcquired);
  if (total > 0) {
    var effect2 = potion.effect();
    if (isSong(effect2) && !have(effect2)) {
      var _iterator2 = _createForOfIteratorHelper28(getActiveSongs()), _step2;
      try {
        var _loop2 = function _loop22() {
          var song2 = _step2.value;
          var slot = Mood.defaultOptions.songSlots.find(function(slot2) {
            return slot2.includes(song2);
          });
          if (!slot || slot.includes(effect2)) {
            (0, import_kolmafia92.cliExecute)("shrug ".concat(song2));
          }
        };
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          _loop2();
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    (0, import_kolmafia92.print)("Using ".concat(total, " ").concat(potion.potion.plural));
    potion.use(total);
  }
  return total;
}
var rufusPotion = new Potion($item(_templateObject1043 || (_templateObject1043 = _taggedTemplateLiteral83(["closed-circuit pay phone"]))), {
  providesDoubleDuration: false,
  canDouble: false,
  effect: $effect(_templateObject1138 || (_templateObject1138 = _taggedTemplateLiteral83(["Shadow Waters"]))),
  duration: 30,
  price: function(historical) {
    if (!have($item(_templateObject1236 || (_templateObject1236 = _taggedTemplateLiteral83(["closed-circuit pay phone"])))))
      return Infinity;
    var target = ClosedCircuitPayphone_exports.rufusTarget();
    var haveItemQuest = get("rufusQuestType") === "items" && target instanceof import_kolmafia92.Item;
    var haveArtifact = get("rufusQuestType") === "artifact" && target instanceof import_kolmafia92.Item && have(target);
    if (!(!target || haveItemQuest || haveArtifact || have($item(_templateObject1335 || (_templateObject1335 = _taggedTemplateLiteral83(["Rufus's shadow lodestone"])))))) {
      return Infinity;
    }
    if ((0, import_kolmafia92.myInebriety)() > (0, import_kolmafia92.inebrietyLimit)() && (!have($item(_templateObject1431 || (_templateObject1431 = _taggedTemplateLiteral83(["Drunkula's wineglass"])))) || !(0, import_kolmafia92.canEquip)($item(_templateObject1529 || (_templateObject1529 = _taggedTemplateLiteral83(["Drunkula's wineglass"])))))) {
      return Infinity;
    }
    var shadowItems = $items(_templateObject1628 || (_templateObject1628 = _taggedTemplateLiteral83(["shadow brick, shadow ice, shadow sinew, shadow glass, shadow stick, shadow skin, shadow flame, shadow fluid, shadow sausage, shadow bread, shadow venom, shadow nectar"])));
    var averagePrice = sum(shadowItems, function(it) {
      return historical && (0, import_kolmafia92.historicalAge)(it) < 14 ? (0, import_kolmafia92.historicalPrice)(it) : (0, import_kolmafia92.mallPrice)(it);
    }) / shadowItems.length;
    return 3 * averagePrice;
  },
  acquire: function(qty) {
    if ((0, import_kolmafia92.myInebriety)() > (0, import_kolmafia92.inebrietyLimit)()) {
      (0, import_kolmafia92.equip)($slot(_templateObject1728 || (_templateObject1728 = _taggedTemplateLiteral83(["weapon"]))), $item.none);
      (0, import_kolmafia92.equip)($slot(_templateObject1828 || (_templateObject1828 = _taggedTemplateLiteral83(["off-hand"]))), $item(_templateObject1928 || (_templateObject1928 = _taggedTemplateLiteral83(["Drunkula's wineglass"]))));
    }
    for (var iteration = 0; iteration < qty; iteration++) {
      if (!have($item(_templateObject2028 || (_templateObject2028 = _taggedTemplateLiteral83(["Rufus's shadow lodestone"]))))) {
        ClosedCircuitPayphone_exports.chooseQuest(function() {
          return 3;
        });
        var target = ClosedCircuitPayphone_exports.rufusTarget();
        if (get("rufusQuestType") === "items") {
          if (acquire(3, target, 2 * (0, import_kolmafia92.mallPrice)(target), false, 1e5)) {
            withChoice(1498, 1, function() {
              return (0, import_kolmafia92.use)($item(_templateObject2165 || (_templateObject2165 = _taggedTemplateLiteral83(["closed-circuit pay phone"]))));
            });
          } else
            break;
        } else if (get("rufusQuestType") === "artifact") {
          if (have(target)) {
            withChoice(1498, 1, function() {
              return (0, import_kolmafia92.use)($item(_templateObject2229 || (_templateObject2229 = _taggedTemplateLiteral83(["closed-circuit pay phone"]))));
            });
          } else
            break;
        }
      }
      var curTurncount = (0, import_kolmafia92.myTurncount)();
      if (have($item(_templateObject2328 || (_templateObject2328 = _taggedTemplateLiteral83(["Rufus's shadow lodestone"]))))) {
        withChoice(1500, 2, function() {
          return (0, import_kolmafia92.adv1)(bestShadowRift(), -1, "");
        });
      }
      if ((0, import_kolmafia92.myTurncount)() > curTurncount) {
        throw new Error("Failed to acquire Shadow Waters and spent a turn!");
      }
    }
    (0, import_kolmafia92.setLocation)($location.none);
    return 0;
  },
  use: function() {
    return false;
  }
});
var wishPotions = wishableEffects.map(function(effect2) {
  return new Potion($item(_templateObject2426 || (_templateObject2426 = _taggedTemplateLiteral83(["pocket wish"]))), {
    effect: effect2,
    canDouble: false,
    duration: 20,
    use: function(quantity) {
      for (var i = 0; i < quantity; i++) {
        var madeValidWish = (0, import_kolmafia92.cliExecute)("genie effect ".concat(effect2));
        if (!madeValidWish)
          return false;
      }
      return true;
    }
  });
});
var pawPotions = Array.from(validPawWishes.keys()).filter(function(effect2) {
  return (0, import_kolmafia92.numericModifier)(effect2, "Meat Drop") >= 100;
}).map(function(effect2) {
  return new Potion($item(_templateObject2526 || (_templateObject2526 = _taggedTemplateLiteral83(["cursed monkey's paw"]))), {
    effect: effect2,
    canDouble: false,
    price: function() {
      return !CursedMonkeyPaw_exports.have() || CursedMonkeyPaw_exports.wishes() === 0 || failedWishes.includes(effect2) ? Math.pow(2, 100) : 0;
    },
    duration: 30,
    acquire: function() {
      return CursedMonkeyPaw_exports.wishes() ? 1 : 0;
    },
    use: function() {
      if (!CursedMonkeyPaw_exports.have() || CursedMonkeyPaw_exports.wishes() === 0 || failedWishes.includes(effect2)) {
        return false;
      }
      if (!CursedMonkeyPaw_exports.isWishable(effect2))
        return false;
      if (!(0, import_kolmafia92.monkeyPaw)(effect2)) {
        failedWishes.push(effect2);
        return false;
      }
      return true;
    }
  });
});
var farmingPotions = [].concat(_toConsumableArray35(import_kolmafia92.Item.all().filter(function(item10) {
  return item10.tradeable && !banned.includes(item10) && (0, import_kolmafia92.itemType)(item10) === "potion";
}).map(function(item10) {
  return new Potion(item10);
}).filter(function(potion) {
  return potion.bonusMeat() > 0;
})), _toConsumableArray35(wishPotions), [new Potion($item(_templateObject2626 || (_templateObject2626 = _taggedTemplateLiteral83(["papier-m\xE2ch\xE9 toothpicks"]))))], _toConsumableArray35(have($item(_templateObject2725 || (_templateObject2725 = _taggedTemplateLiteral83(["closed-circuit pay phone"])))) ? [rufusPotion] : []));
function doublingPotions(embezzlers) {
  return farmingPotions.filter(function(potion) {
    return potion.doubleDuration().gross(embezzlers) / potion.price(true) > 0.5;
  }).map(function(potion) {
    return {
      potion: potion,
      value: potion.doublingValue(embezzlers)
    };
  }).sort(function(a, b) {
    return b.value - a.value;
  }).map(function(pair) {
    return pair.potion;
  });
}
function usePawWishes(singleUseValuation) {
  while (CursedMonkeyPaw_exports.wishes() > 0) {
    var madeValidWish = pawPotions.sort(function(a, b) {
      return singleUseValuation(b) - singleUseValuation(a);
    }).some(function(potion) {
      return potion.use(1);
    });
    if (!madeValidWish)
      return;
  }
}
var completedPotionSetup = false;
function potionSetupCompleted() {
  return completedPotionSetup;
}
function potionSetup(embezzlersOnly) {
  castAugustScepterBuffs();
  withLocation($location.none, function() {
    var embezzlers = embezzlerCount();
    if (have($item(_templateObject2822 || (_templateObject2822 = _taggedTemplateLiteral83(["Eight Days a Week Pill Keeper"])))) && !get("_freePillKeeperUsed")) {
      var possibleDoublingPotions = doublingPotions(embezzlers);
      var bestPotion = possibleDoublingPotions.length > 0 ? possibleDoublingPotions[0] : void 0;
      if (bestPotion && bestPotion.doubleDuration().net(embezzlers) > pillkeeperOpportunityCost()) {
        (0, import_kolmafia92.print)("Determined that ".concat(bestPotion.potion, " was the best potion to double"), HIGHLIGHT);
        (0, import_kolmafia92.cliExecute)("pillkeeper extend");
        bestPotion.acquire(1, bestPotion.potion, bestPotion.doubleDuration().gross(embezzlers));
        bestPotion.use(1);
      }
    }
    var testPotions = farmingPotions.filter(function(potion) {
      return potion.gross(embezzlers) / potion.price(true) > 0.5;
    });
    var nonWishTestPotions = testPotions.filter(function(potion) {
      return potion.potion !== $item(_templateObject2919 || (_templateObject2919 = _taggedTemplateLiteral83(["pocket wish"])));
    });
    nonWishTestPotions.sort(function(a, b) {
      return b.net(embezzlers) - a.net(embezzlers);
    });
    var excludedEffects = /* @__PURE__ */ new Set();
    var _iterator3 = _createForOfIteratorHelper28(getActiveEffects()), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var _mutuallyExclusive$ge2;
        var effect2 = _step3.value;
        var _iterator6 = _createForOfIteratorHelper28((_mutuallyExclusive$ge2 = mutuallyExclusive.get(effect2)) !== null && _mutuallyExclusive$ge2 !== void 0 ? _mutuallyExclusive$ge2 : []), _step6;
        try {
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
            var excluded = _step6.value;
            excludedEffects.add(excluded);
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    var _iterator4 = _createForOfIteratorHelper28(nonWishTestPotions), _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
        var _potion = _step4.value;
        var _effect = _potion.effect();
        if (!excludedEffects.has(_effect) && useAsValuable(_potion, embezzlers, embezzlersOnly) > 0) {
          var _mutuallyExclusive$ge3;
          var _iterator7 = _createForOfIteratorHelper28((_mutuallyExclusive$ge3 = mutuallyExclusive.get(_effect)) !== null && _mutuallyExclusive$ge3 !== void 0 ? _mutuallyExclusive$ge3 : []), _step7;
          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
              var _excluded = _step7.value;
              excludedEffects.add(_excluded);
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    usePawWishes(function(potion) {
      var value = potion.value(embezzlers);
      return value.length > 0 ? maxBy(value, function(_ref9) {
        var quantity = _ref9.quantity, value2 = _ref9.value;
        return quantity > 0 ? value2 : 0;
      }).value : 0;
    });
    var wishTestPotions = testPotions.filter(function(potion) {
      return potion.potion === $item(_templateObject3019 || (_templateObject3019 = _taggedTemplateLiteral83(["pocket wish"])));
    });
    wishTestPotions.sort(function(a, b) {
      return b.net(embezzlers) - a.net(embezzlers);
    });
    var _iterator5 = _createForOfIteratorHelper28(wishTestPotions), _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
        var _potion2 = _step5.value;
        var _effect2 = _potion2.effect();
        if (!excludedEffects.has(_effect2) && !failedWishes.includes(_effect2) && useAsValuable(_potion2, embezzlers, embezzlersOnly) > 0) {
          var _mutuallyExclusive$ge4;
          var _iterator8 = _createForOfIteratorHelper28((_mutuallyExclusive$ge4 = mutuallyExclusive.get(_effect2)) !== null && _mutuallyExclusive$ge4 !== void 0 ? _mutuallyExclusive$ge4 : []), _step8;
          try {
            for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
              var _excluded2 = _step8.value;
              excludedEffects.add(_excluded2);
            }
          } catch (err) {
            _iterator8.e(err);
          } finally {
            _iterator8.f();
          }
        }
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    variableMeatPotionsSetup(0, embezzlers);
    completedPotionSetup = true;
  });
}
function bathroomFinance(embezzlers) {
  if (have($effect(_templateObject3145 || (_templateObject3145 = _taggedTemplateLiteral83(["Buy!  Sell!  Buy!  Sell!"])))))
    return;
  var averageEmbezzlerGross = (baseMeat + 750) * 2 * (embezzlers + 1) / 2 / 100;
  var embezzlerGross = averageEmbezzlerGross * embezzlers;
  var tourists = 100 - embezzlers;
  var averageTouristGross = baseMeat * 2 * (100 + embezzlers + 1) / 2 / 100;
  var touristGross = averageTouristGross * tourists;
  var greenspan = $item(_templateObject3221 || (_templateObject3221 = _taggedTemplateLiteral83(["Uncle Greenspan's Bathroom Finance Guide"])));
  if (touristGross + embezzlerGross > (0, import_kolmafia92.mallPrice)(greenspan)) {
    acquire(1, greenspan, touristGross + embezzlerGross, false);
    if ((0, import_kolmafia92.itemAmount)(greenspan) > 0) {
      (0, import_kolmafia92.print)("Using ".concat(greenspan, "!"), HIGHLIGHT);
      (0, import_kolmafia92.use)(greenspan);
    }
  }
}
function triangleNumber(b) {
  var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  return 0.5 * (b * (b + 1) - a * (a + 1));
}
var VariableMeatPotion = /* @__PURE__ */ function() {
  function VariableMeatPotion2(potion, softcap, meatBonusPerTurn, duration, effect2) {
    _classCallCheck25(this, VariableMeatPotion2);
    _defineProperty32(this, "potion", void 0);
    _defineProperty32(this, "effect", void 0);
    _defineProperty32(this, "duration", void 0);
    _defineProperty32(this, "softcap", void 0);
    _defineProperty32(this, "meatBonusPerTurn", void 0);
    _defineProperty32(this, "cappedMeatBonus", void 0);
    this.potion = potion;
    this.effect = effect2 !== null && effect2 !== void 0 ? effect2 : (0, import_kolmafia92.effectModifier)(potion, "Effect");
    this.duration = duration !== null && duration !== void 0 ? duration : (0, import_kolmafia92.numericModifier)(potion, "Effect Duration");
    this.softcap = softcap;
    this.meatBonusPerTurn = meatBonusPerTurn;
    this.cappedMeatBonus = softcap * meatBonusPerTurn;
  }
  _createClass25(VariableMeatPotion2, [{
    key: "use",
    value: function use30(quantity) {
      acquire(quantity, this.potion, 1.2 * (0, import_kolmafia92.retrievePrice)(this.potion, quantity) / quantity, false, 2e6);
      if ((0, import_kolmafia92.availableAmount)(this.potion) < quantity)
        return false;
      return (0, import_kolmafia92.use)(quantity, this.potion);
    }
  }, {
    key: "price",
    value: function price2(historical) {
      return this.potion.tradeable ? historical && (0, import_kolmafia92.historicalAge)(this.potion) < 14 ? (0, import_kolmafia92.historicalPrice)(this.potion) : (0, import_kolmafia92.mallPrice)(this.potion) : retrieveUntradeablePrice(this.potion);
    }
  }, {
    key: "getOptimalNumberToUse",
    value: function getOptimalNumberToUse(yachtzees, embezzlers) {
      var _this = this;
      var barfTurns = Math.max(0, estimatedGarboTurns() - yachtzees - embezzlers);
      var potionAmountsToConsider = [];
      var considerSoftcap = [0, this.softcap];
      var considerEmbezzlers = embezzlers > 0 ? [0, embezzlers] : [0];
      for (var _i2 = 0, _arr = [Math.floor, Math.ceil]; _i2 < _arr.length; _i2++) {
        var fn = _arr[_i2];
        var _iterator9 = _createForOfIteratorHelper28(considerSoftcap), _step9;
        try {
          for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
            var sc = _step9.value;
            var _iterator10 = _createForOfIteratorHelper28(considerEmbezzlers), _step10;
            try {
              for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
                var em = _step10.value;
                var considerBarfTurns = em === embezzlers && barfTurns > 0 ? [0, barfTurns] : [0];
                for (var _i3 = 0, _considerBarfTurns = considerBarfTurns; _i3 < _considerBarfTurns.length; _i3++) {
                  var bt = _considerBarfTurns[_i3];
                  var potionAmount = fn((yachtzees + em + bt + sc) / this.duration);
                  if (!potionAmountsToConsider.includes(potionAmount)) {
                    potionAmountsToConsider.push(potionAmount);
                  }
                }
              }
            } catch (err) {
              _iterator10.e(err);
            } finally {
              _iterator10.f();
            }
          }
        } catch (err) {
          _iterator9.e(err);
        } finally {
          _iterator9.f();
        }
      }
      var profitsFromPotions = potionAmountsToConsider.map(function(quantity) {
        return {
          quantity: quantity,
          value: _this.valueNPotions(quantity, yachtzees, embezzlers, barfTurns)
        };
      });
      var bestOption = maxBy(profitsFromPotions, "value");
      if (bestOption.value > 0) {
        (0, import_kolmafia92.print)("Expected to profit ".concat(bestOption.value.toFixed(2), " from ").concat(bestOption.quantity, " ").concat(this.potion.plural), "blue");
        var ascendingOverlap = globalOptions.ascend || globalOptions.nobarf ? 0 : this.softcap / this.duration;
        var potionsToUse = bestOption.quantity + ascendingOverlap - Math.floor((0, import_kolmafia92.haveEffect)(this.effect) / this.duration);
        return Math.max(potionsToUse, 0);
      }
      return 0;
    }
  }, {
    key: "valueNPotions",
    value: function valueNPotions(n, yachtzees, embezzlers, barfTurns) {
      var yachtzeeValue = 2e3;
      var embezzlerValue = baseMeat + 750;
      var barfValue = baseMeat * turnsToNC / 30;
      var totalCosts = (0, import_kolmafia92.retrievePrice)(this.potion, n);
      var totalDuration = n * this.duration;
      var cappedDuration = Math.max(0, totalDuration - this.softcap + 1);
      var decayDuration = Math.min(totalDuration, this.softcap - 1);
      var totalValue = 0;
      var turnTypes = [[yachtzees, yachtzeeValue], [embezzlers, embezzlerValue], [barfTurns, barfValue]];
      for (var _i4 = 0, _turnTypes = turnTypes; _i4 < _turnTypes.length; _i4++) {
        var _turnTypes$_i = _slicedToArray28(_turnTypes[_i4], 2), turns = _turnTypes$_i[0], value = _turnTypes$_i[1];
        var cappedTurns = Math.min(cappedDuration, turns);
        var decayTurns = Math.min(decayDuration, turns - cappedTurns);
        totalValue += value * (cappedTurns * this.cappedMeatBonus + triangleNumber(decayDuration, decayDuration - decayTurns) * this.meatBonusPerTurn) / 100;
        cappedDuration -= cappedTurns;
        decayDuration -= decayTurns;
        if (decayDuration === 0)
          break;
      }
      return totalValue - totalCosts;
    }
  }]);
  return VariableMeatPotion2;
}();
function variableMeatPotionsSetup(yachtzees, embezzlers) {
  var potions = [new VariableMeatPotion($item(_templateObject3321 || (_templateObject3321 = _taggedTemplateLiteral83(["love song of sugary cuteness"]))), 20, 2), new VariableMeatPotion($item(_templateObject3418 || (_templateObject3418 = _taggedTemplateLiteral83(["pulled yellow taffy"]))), 50, 2)].concat(_toConsumableArray35(globalOptions.prefs.candydish ? [new VariableMeatPotion($item(_templateObject3518 || (_templateObject3518 = _taggedTemplateLiteral83(["porcelain candy dish"]))), 500, 1)] : []));
  var excludedEffects = /* @__PURE__ */ new Set();
  var _iterator11 = _createForOfIteratorHelper28(getActiveEffects()), _step11;
  try {
    for (_iterator11.s(); !(_step11 = _iterator11.n()).done; ) {
      var _mutuallyExclusive$ge5;
      var effect2 = _step11.value;
      var _iterator13 = _createForOfIteratorHelper28((_mutuallyExclusive$ge5 = mutuallyExclusive.get(effect2)) !== null && _mutuallyExclusive$ge5 !== void 0 ? _mutuallyExclusive$ge5 : []), _step13;
      try {
        for (_iterator13.s(); !(_step13 = _iterator13.n()).done; ) {
          var excluded = _step13.value;
          excludedEffects.add(excluded);
        }
      } catch (err) {
        _iterator13.e(err);
      } finally {
        _iterator13.f();
      }
    }
  } catch (err) {
    _iterator11.e(err);
  } finally {
    _iterator11.f();
  }
  var _iterator12 = _createForOfIteratorHelper28(potions), _step12;
  try {
    for (_iterator12.s(); !(_step12 = _iterator12.n()).done; ) {
      var _potion3 = _step12.value;
      var _effect3 = (0, import_kolmafia92.effectModifier)(_potion3.potion, "Effect");
      var n = excludedEffects.has(_effect3) ? 0 : _potion3.getOptimalNumberToUse(yachtzees, embezzlers);
      if (n > 0) {
        var _mutuallyExclusive$ge6;
        _potion3.use(n);
        var _iterator14 = _createForOfIteratorHelper28((_mutuallyExclusive$ge6 = mutuallyExclusive.get(_effect3)) !== null && _mutuallyExclusive$ge6 !== void 0 ? _mutuallyExclusive$ge6 : []), _step14;
        try {
          for (_iterator14.s(); !(_step14 = _iterator14.n()).done; ) {
            var _excluded3 = _step14.value;
            excludedEffects.add(_excluded3);
          }
        } catch (err) {
          _iterator14.e(err);
        } finally {
          _iterator14.f();
        }
      }
    }
  } catch (err) {
    _iterator12.e(err);
  } finally {
    _iterator12.f();
  }
}

// src/resources/scepter.ts
var import_kolmafia93 = require("kolmafia");
var _templateObject701;
var _templateObject2166;
var _templateObject3146;
var _templateObject4129;
var _templateObject5118;
var _templateObject6101;
var _templateObject766;
var _templateObject859;
var _templateObject950;
var _templateObject1044;
var _templateObject1139;
var _templateObject1237;
var _templateObject1336;
var _templateObject1433;
var _templateObject1530;
var _templateObject1629;
var _templateObject1729;
var _templateObject1829;
var _templateObject1929;
var _templateObject2029;
var _templateObject2167;
var _templateObject2230;
var _templateObject2329;
var _templateObject2427;
var _templateObject2527;
var _templateObject2627;
var _templateObject2726;
var _templateObject2823;
var _templateObject2920;
var _templateObject3020;
var _templateObject3147;
var _templateObject3222;
function _createForOfIteratorHelper29(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray58(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray36(arr) {
  return _arrayWithoutHoles36(arr) || _iterableToArray36(arr) || _unsupportedIterableToArray58(arr) || _nonIterableSpread36();
}
function _nonIterableSpread36() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray58(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray58(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray58(o, minLen);
}
function _iterableToArray36(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles36(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray58(arr);
}
function _arrayLikeToArray58(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral84(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var SKILL_OPTIONS = [
  // August 1 deliberately omitted; does not trigger on monster replacers
  {
    skill: $skill(_templateObject701 || (_templateObject701 = _taggedTemplateLiteral84(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))),
    value: function() {
      return (0, import_kolmafia93.canAdventure)($location(_templateObject2166 || (_templateObject2166 = _taggedTemplateLiteral84(["Cobb's Knob Treasury"])))) ? EMBEZZLER_MULTIPLIER() * get("valueOfAdventure") : 0;
    },
    type: "special"
  },
  {
    skill: $skill(_templateObject3146 || (_templateObject3146 = _taggedTemplateLiteral84(["Aug. 3rd: Watermelon Day!"]))),
    value: function() {
      return garboValue($item(_templateObject4129 || (_templateObject4129 = _taggedTemplateLiteral84(["watermelon"]))));
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject5118 || (_templateObject5118 = _taggedTemplateLiteral84(["Aug. 4th: Water Balloon Day!"]))),
    value: function() {
      return 3 * garboValue($item(_templateObject6101 || (_templateObject6101 = _taggedTemplateLiteral84(["water balloon"]))));
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject766 || (_templateObject766 = _taggedTemplateLiteral84(["Aug. 5th: Oyster Day!"]))),
    value: function() {
      return 3 * garboAverageValue.apply(void 0, _toConsumableArray36($items(_templateObject859 || (_templateObject859 = _taggedTemplateLiteral84(["brilliant oyster egg, gleaming oyster egg, glistening oyster egg, lustrous oyster egg, magnificent oyster egg, pearlescent oyster egg, scintillating oyster egg"])))));
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject950 || (_templateObject950 = _taggedTemplateLiteral84(["Aug. 7th: Lighthouse Day!"]))),
    value: function() {
      return new Potion($item(_templateObject1044 || (_templateObject1044 = _taggedTemplateLiteral84(["august scepter"]))), {
        effect: $effect(_templateObject1139 || (_templateObject1139 = _taggedTemplateLiteral84(["Incredibly Well Lit"]))),
        duration: 30
      }).gross(embezzlerCount());
    },
    // TODO: Yachtzee
    type: "buff"
  },
  {
    skill: $skill(_templateObject1237 || (_templateObject1237 = _taggedTemplateLiteral84(["Aug. 13th: Left/Off Hander's Day!"]))),
    value: function() {
      return new Potion($item(_templateObject1336 || (_templateObject1336 = _taggedTemplateLiteral84(["august scepter"]))), {
        effect: $effect(_templateObject1433 || (_templateObject1433 = _taggedTemplateLiteral84(["Offhand Remarkable"]))),
        duration: 30,
        effectValues: {
          meatDrop: 80
        }
        // Half a purse
      }).gross(embezzlerCount()) + (globalOptions.ascend ? 0 : (5 + (have($familiar(_templateObject1530 || (_templateObject1530 = _taggedTemplateLiteral84(["Left-Hand Man"])))) ? 5 : 0)) * get("valueOfAdventure"));
    },
    type: "special"
    // Don't want to cast right away
  },
  {
    skill: $skill(_templateObject1629 || (_templateObject1629 = _taggedTemplateLiteral84(["Aug. 14th: Financial Awareness  Day!"]))),
    value: function() {
      return Math.min(100 * (0, import_kolmafia93.myLevel)(), 1500, (0, import_kolmafia93.myMeat)()) / 2;
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject1729 || (_templateObject1729 = _taggedTemplateLiteral84(["Aug. 16th: Roller Coaster Day!"]))),
    value: function() {
      return 8 * get("valueOfAdventure");
    },
    type: "special"
  },
  {
    skill: $skill(_templateObject1829 || (_templateObject1829 = _taggedTemplateLiteral84(["Aug. 18th: Serendipity Day!"]))),
    value: function() {
      return 3e3;
    },
    // Dummy value; we should some day calculate this based on free fight count, careful to avoid circular imports
    type: "buff"
  },
  {
    skill: $skill(_templateObject1929 || (_templateObject1929 = _taggedTemplateLiteral84(["Aug. 24th: Waffle Day!"]))),
    value: function() {
      return 3 * garboValue($item(_templateObject2029 || (_templateObject2029 = _taggedTemplateLiteral84(["waffle"]))));
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject2167 || (_templateObject2167 = _taggedTemplateLiteral84(["Aug. 25th: Banana Split Day!"]))),
    value: function() {
      return garboValue($item(_templateObject2230 || (_templateObject2230 = _taggedTemplateLiteral84(["banana split"]))));
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject2329 || (_templateObject2329 = _taggedTemplateLiteral84(["Aug. 26th: Toilet Paper Day!"]))),
    value: function() {
      return garboValue($item(_templateObject2427 || (_templateObject2427 = _taggedTemplateLiteral84(["handful of toilet paper"]))));
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject2527 || (_templateObject2527 = _taggedTemplateLiteral84(["Aug. 29th: More Herbs, Less Salt  Day!"]))),
    value: function() {
      return 3 * garboValue($item(_templateObject2627 || (_templateObject2627 = _taggedTemplateLiteral84(["Mrs. Rush"]))));
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject2726 || (_templateObject2726 = _taggedTemplateLiteral84(["Aug. 30th: Beach Day!"]))),
    value: function() {
      var _Item$all$filter$sort;
      return 100 + (globalOptions.ascend ? 0 : clamp(7 - get2("Adventures", (_Item$all$filter$sort = import_kolmafia93.Item.all().filter(function(i) {
        return have(i) && (0, import_kolmafia93.toSlot)(i) === $slot(_templateObject2823 || (_templateObject2823 = _taggedTemplateLiteral84(["acc1"]))) && (0, import_kolmafia93.canEquip)(i);
      }).sort(function(a, b) {
        return get2("Adventures", b) - get2("Adventures", a);
      })[2]) !== null && _Item$all$filter$sort !== void 0 ? _Item$all$filter$sort : $item.none), 0, 7) * get("valueOfAdventure"));
    },
    type: "summon"
  },
  {
    skill: $skill(_templateObject2920 || (_templateObject2920 = _taggedTemplateLiteral84(["Aug. 31st: Cabernet Sauvignon  Day!"]))),
    value: function() {
      return 2 * garboValue($item(_templateObject3020 || (_templateObject3020 = _taggedTemplateLiteral84(["bottle of Cabernet Sauvignon"]))));
    },
    type: "summon"
  }
];
var bestScepterSkills = null;
function getBestScepterSkills() {
  var _bestScepterSkills;
  return (_bestScepterSkills = bestScepterSkills) !== null && _bestScepterSkills !== void 0 ? _bestScepterSkills : bestScepterSkills = SKILL_OPTIONS.filter(function(_ref) {
    var skill = _ref.skill;
    return AugustScepter_exports.todaysSkill() !== skill && skill.dailylimit > 0;
  }).sort(function(a, b) {
    return b.value() - a.value();
  }).splice(0, clamp(5 - get("_augSkillsCast"), 0, 5));
}
function shouldAugustCast(skill) {
  return AugustScepter_exports.have() && (getBestScepterSkills().some(function(s) {
    return skill === s.skill;
  }) && skill.dailylimit && get("_augSkillsCast") < 5 || AugustScepter_exports.todaysSkill() === skill && !AugustScepter_exports.getTodayCast());
}
function summonTask(_ref2) {
  var skill = _ref2.skill;
  return {
    name: skill.name,
    completed: function() {
      return !shouldAugustCast(skill);
    },
    do: function() {
      return (0, import_kolmafia93.useSkill)(skill);
    },
    spendsTurn: false
  };
}
function augustSummonTasks() {
  return AugustScepter_exports.have() ? SKILL_OPTIONS.filter(function(_ref3) {
    var type = _ref3.type;
    return type === "summon";
  }).map(summonTask) : [];
}
function castAugustScepterBuffs() {
  if (AugustScepter_exports.have()) {
    var _iterator = _createForOfIteratorHelper29(SKILL_OPTIONS.filter(function(_ref5) {
      var skill2 = _ref5.skill, type = _ref5.type;
      return shouldAugustCast(skill2) && type === "buff";
    })), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var skill = _step.value.skill;
        (0, import_kolmafia93.useSkill)(skill);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var today = SKILL_OPTIONS.find(function(_ref4) {
      var skill2 = _ref4.skill, type = _ref4.type;
      return type === "buff" && skill2 === AugustScepter_exports.todaysSkill();
    });
    if (today && !AugustScepter_exports.getTodayCast())
      (0, import_kolmafia93.useSkill)(today.skill);
    if (globalOptions.ascend && shouldAugustCast($skill(_templateObject3147 || (_templateObject3147 = _taggedTemplateLiteral84(["Aug. 13th: Left/Off Hander's Day!"]))))) {
      (0, import_kolmafia93.useSkill)($skill(_templateObject3222 || (_templateObject3222 = _taggedTemplateLiteral84(["Aug. 13th: Left/Off Hander's Day!"]))));
    }
  }
}

// src/resources/candyMap.ts
init_dist();
var import_kolmafia94 = require("kolmafia");
var _templateObject706;
var _templateObject2168;
var _templateObject3148;
var _templateObject4130;
var _templateObject5119;
var _templateObject6102;
var _templateObject767;
var _templateObject860;
var _templateObject951;
function _taggedTemplateLiteral85(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper30(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray59(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray29(arr, i) {
  return _arrayWithHoles29(arr) || _iterableToArrayLimit29(arr, i) || _unsupportedIterableToArray59(arr, i) || _nonIterableRest29();
}
function _nonIterableRest29() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray59(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray59(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray59(o, minLen);
}
function _arrayLikeToArray59(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit29(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles29(arr) {
  if (Array.isArray(arr))
    return arr;
}
var HOUSE_NUMBERS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
var blockHtml = "";
function getBlockHtml() {
  blockHtml || (blockHtml = (0, import_kolmafia94.visitUrl)("place.php?whichplace=town&action=town_trickortreat"));
  return blockHtml;
}
function treatValue(outfit3) {
  return sum(Object.entries((0, import_kolmafia94.outfitTreats)(outfit3)), function(_ref) {
    var _ref2 = _slicedToArray29(_ref, 2), candyName = _ref2[0], probability = _ref2[1];
    return probability * garboValue((0, import_kolmafia94.toItem)(candyName));
  });
}
function getTreatOutfit() {
  var availableOutfits = (0, import_kolmafia94.getOutfits)().filter(function(name) {
    return (0, import_kolmafia94.outfitPieces)(name).every(function(piece) {
      return (0, import_kolmafia94.canEquip)(piece);
    });
  });
  if (!availableOutfits.length) {
    (0, import_kolmafia94.print)("You don't seem to actually have any trick-or-treating outfits available, my friend!");
  }
  return maxBy(availableOutfits, treatValue);
}
function treatOutfit() {
  var outfit3 = new Outfit();
  var bestTreatOutfit = getTreatOutfit();
  var pieces3 = (0, import_kolmafia94.outfitPieces)(bestTreatOutfit);
  var _iterator = _createForOfIteratorHelper30(pieces3), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var piece = _step.value;
      if (!outfit3.equip(piece)) {
        (0, import_kolmafia94.print)("Could not equip all pieces of trick-or-treating outfit ".concat(bestTreatOutfit, ": aborted on ").concat(piece));
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  outfit3.equip($familiar(_templateObject706 || (_templateObject706 = _taggedTemplateLiteral85(["Trick-or-Treating Tot"]))));
  return outfit3;
}
function candyRichBlockValue() {
  var outfitCandyValue = treatValue(getTreatOutfit());
  var totOutfitCandyMultiplier = have($familiar(_templateObject2168 || (_templateObject2168 = _taggedTemplateLiteral85(["Trick-or-Treating Tot"])))) ? 1.6 : 1;
  var bowlValue = 1 / 5 * getSaleValue($item(_templateObject3148 || (_templateObject3148 = _taggedTemplateLiteral85(["huge bowl of candy"]))));
  var prunetsValue = have($familiar(_templateObject4130 || (_templateObject4130 = _taggedTemplateLiteral85(["Trick-or-Treating Tot"])))) ? 4 * 0.2 * getSaleValue($item(_templateObject5119 || (_templateObject5119 = _taggedTemplateLiteral85(["Prunets"])))) : 0;
  var outfitCandyTotal = 3 * outfitCandyValue * totOutfitCandyMultiplier;
  return outfitCandyTotal + bowlValue + prunetsValue;
}
function shouldAcquireCandyMap() {
  return !(0, import_kolmafia94.holiday)().includes("Halloween") && (0, import_kolmafia94.mallPrice)($item(_templateObject6102 || (_templateObject6102 = _taggedTemplateLiteral85(["map to a candy-rich block"])))) < 5e4 && // Sanity value to prevent mall shenanigans
  candyRichBlockValue() > (0, import_kolmafia94.mallPrice)($item(_templateObject767 || (_templateObject767 = _taggedTemplateLiteral85(["map to a candy-rich block"]))));
}
function useCandyMapTask() {
  return {
    name: "Acquire Candy Map",
    ready: function() {
      return shouldAcquireCandyMap();
    },
    completed: function() {
      return get("_mapToACandyRichBlockUsed");
    },
    do: function() {
      if (acquire(1, $item(_templateObject860 || (_templateObject860 = _taggedTemplateLiteral85(["map to a candy-rich block"]))), candyRichBlockValue() - 1, false)) {
        (0, import_kolmafia94.use)($item(_templateObject951 || (_templateObject951 = _taggedTemplateLiteral85(["map to a candy-rich block"]))));
      }
    },
    limit: {
      skip: 1
    },
    spendsTurn: false
  };
}
function doCandyTreat() {
  return {
    name: "Treat",
    completed: function() {
      return !get("_mapToACandyRichBlockUsed") || (0, import_kolmafia94.holiday)().includes("Halloween");
    },
    outfit: treatOutfit,
    do: function() {
      var _iterator2 = _createForOfIteratorHelper30(HOUSE_NUMBERS), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var house = _step2.value;
          if (getBlockHtml().match(RegExp("whichhouse=".concat(house, ">[^>]*?house_l")))) {
            (0, import_kolmafia94.visitUrl)("choice.php?whichchoice=804&option=3&whichhouse=".concat(house, "&pwd"));
          } else if (getBlockHtml().match(RegExp("whichhouse=".concat(house, ">[^>]*?starhouse")))) {
            (0, import_kolmafia94.visitUrl)("choice.php?whichchoice=804&option=3&whichhouse=".concat(house, "&pwd"));
            (0, import_kolmafia94.runChoice)(2);
            (0, import_kolmafia94.visitUrl)("place.php?whichplace=town&action=town_trickortreat");
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    },
    limit: {
      skip: 1
    },
    spendsTurn: false,
    combat: new GarboStrategy(Macro2.abort())
  };
}
function candyMapTasks() {
  return [useCandyMapTask(), doCandyTreat()];
}

// src/embezzler/lib.ts
var import_kolmafia95 = require("kolmafia");
init_dist();
var _templateObject707;
var _templateObject2169;
var _templateObject3149;
var _templateObject4131;
var _templateObject5120;
var _templateObject6103;
var _templateObject768;
var _templateObject861;
var _templateObject954;
var _templateObject1045;
var _templateObject1140;
function ownKeys16(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread16(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys16(Object(t), true).forEach(function(r2) {
      _defineProperty33(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys16(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty33(obj, key, value) {
  key = _toPropertyKey36(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey36(arg) {
  var key = _toPrimitive36(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive36(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral86(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function checkUnderwater() {
  if (questStep("questS01OldGuy") >= 0 && !(get("_envyfishEggUsed") || have($item(_templateObject707 || (_templateObject707 = _taggedTemplateLiteral86(["envyfish egg"]))))) && (get("_garbo_weightChain", false) || !have($familiar(_templateObject2169 || (_templateObject2169 = _taggedTemplateLiteral86(["Pocket Professor"]))))) && ((0, import_kolmafia95.booleanModifier)("Adventure Underwater") || waterBreathingEquipment.some(function(item10) {
    return have(item10) && (0, import_kolmafia95.canEquip)(item10);
  })) && (have($effect(_templateObject3149 || (_templateObject3149 = _taggedTemplateLiteral86(["Fishy"])))) || have($item(_templateObject4131 || (_templateObject4131 = _taggedTemplateLiteral86(["fishy pipe"])))) && !get("_fishyPipeUsed"))) {
    if (!have($effect(_templateObject5120 || (_templateObject5120 = _taggedTemplateLiteral86(["Fishy"])))) && !get("_fishyPipeUsed"))
      (0, import_kolmafia95.use)($item(_templateObject6103 || (_templateObject6103 = _taggedTemplateLiteral86(["fishy pipe"]))));
    return have($effect(_templateObject768 || (_templateObject768 = _taggedTemplateLiteral86(["Fishy"]))));
  }
  return false;
}
function getChangeLastAdvLocationMethod() {
  if (questStep("questL11Worship") > 3) {
    return "hiddencity";
  } else {
    return "dailydungeon";
  }
}
function changeLastAdvLocationTask() {
  var base = {
    ready: function() {
      return CrystalBall_exports.ponder().get($location(_templateObject861 || (_templateObject861 = _taggedTemplateLiteral86(["The Dire Warren"])))) !== embezzler;
    },
    completed: function() {
      return (0, import_kolmafia95.myLocation)() !== $location(_templateObject954 || (_templateObject954 = _taggedTemplateLiteral86(["The Dire Warren"])));
    }
  };
  switch (getChangeLastAdvLocationMethod()) {
    case "hiddencity":
      return _objectSpread16(_objectSpread16({}, base), {}, {
        do: function() {
          return withChoice(785, 6, function() {
            return (0, import_kolmafia95.adv1)($location(_templateObject1045 || (_templateObject1045 = _taggedTemplateLiteral86(["An Overgrown Shrine (Northeast)"]))), -1, "");
          });
        }
      });
    case "dailydungeon":
      return _objectSpread16(_objectSpread16({}, base), {}, {
        do: function() {
          return (
            // at this point, we're either at an NC we can walk away from or the whole DD is done
            // only track the choices we need to walk away since hitting it when it is done does nothing
            withChoices({
              692: 8,
              693: 3
            }, function() {
              return (0, import_kolmafia95.adv1)($location(_templateObject1140 || (_templateObject1140 = _taggedTemplateLiteral86(["The Daily Dungeon"]))), -1, "");
            })
          );
        }
      });
  }
}

// src/embezzler/fights.ts
var _templateObject708;
var _templateObject2170;
var _templateObject3150;
var _templateObject4132;
var _templateObject5121;
var _templateObject6104;
var _templateObject769;
var _templateObject864;
var _templateObject955;
var _templateObject1046;
var _templateObject1141;
var _templateObject1238;
var _templateObject1337;
var _templateObject1434;
var _templateObject1531;
var _templateObject1630;
var _templateObject1730;
var _templateObject1830;
var _templateObject1930;
var _templateObject2030;
var _templateObject2171;
var _templateObject2231;
var _templateObject2330;
var _templateObject2428;
var _templateObject2528;
var _templateObject2628;
var _templateObject2727;
var _templateObject2824;
var _templateObject2921;
var _templateObject3021;
var _templateObject3151;
var _templateObject3223;
var _templateObject3322;
var _templateObject3419;
var _templateObject3519;
var _templateObject3618;
var _templateObject3718;
var _templateObject3818;
var _templateObject3918;
var _templateObject4018;
var _templateObject4133;
var _templateObject4218;
var _templateObject4318;
var _templateObject4417;
var _templateObject4517;
var _templateObject4617;
var _templateObject4717;
var _templateObject4817;
var _templateObject4916;
var _templateObject5015;
var _templateObject5122;
var _templateObject5217;
var _templateObject5317;
var _templateObject5417;
var _templateObject5516;
var _templateObject5615;
var _templateObject5714;
var _templateObject5812;
var _templateObject5912;
var _templateObject6011;
var _templateObject6117;
var _templateObject6216;
var _templateObject6314;
var _templateObject6414;
var _templateObject6511;
var _templateObject6610;
var _templateObject6710;
var _templateObject6810;
var _templateObject6910;
var _templateObject709;
var _templateObject7112;
var _templateObject7212;
var _templateObject7311;
var _templateObject7411;
var _templateObject7510;
var _templateObject7610;
var _templateObject775;
var _templateObject784;
var _templateObject794;
var _templateObject804;
var _templateObject8111;
var _templateObject8211;
var _templateObject8311;
var _templateObject8410;
var _templateObject8510;
var _templateObject865;
var _templateObject874;
var _templateObject883;
var _templateObject893;
var _templateObject903;
var _templateObject9111;
var _templateObject9211;
var _templateObject9310;
var _templateObject9410;
var _templateObject956;
var _templateObject964;
var _templateObject974;
var _templateObject983;
var _templateObject993;
var _templateObject1003;
var _templateObject10111;
var _templateObject10211;
var _templateObject10310;
var _templateObject1047;
var _templateObject1053;
var _templateObject1063;
var _templateObject1073;
var _templateObject1083;
var _templateObject1093;
var _templateObject1103;
var _templateObject11111;
var _templateObject11211;
var _templateObject11310;
var _templateObject1143;
var _templateObject1153;
var _templateObject1163;
var _templateObject1173;
var _templateObject1183;
function _slicedToArray30(arr, i) {
  return _arrayWithHoles30(arr) || _iterableToArrayLimit30(arr, i) || _unsupportedIterableToArray60(arr, i) || _nonIterableRest30();
}
function _nonIterableRest30() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit30(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles30(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray37(arr) {
  return _arrayWithoutHoles37(arr) || _iterableToArray37(arr) || _unsupportedIterableToArray60(arr) || _nonIterableSpread37();
}
function _nonIterableSpread37() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray60(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray60(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray60(o, minLen);
}
function _iterableToArray37(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles37(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray60(arr);
}
function _arrayLikeToArray60(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral87(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck26(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties26(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey37(descriptor.key), descriptor);
  }
}
function _createClass26(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties26(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties26(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty34(obj, key, value) {
  key = _toPropertyKey37(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey37(arg) {
  var key = _toPrimitive37(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive37(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var EmbezzlerFight = /* @__PURE__ */ function() {
  function EmbezzlerFight2(name, available4, potential) {
    var _options$spec, _options$canInitializ, _options$gregariousRe, _options$wrongEncount;
    var execute = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : function(options2) {
      var adventureFunction = options2.useAuto ? garboAdventureAuto : garboAdventure;
      adventureFunction(options2.location, options2.macro, options2.macro);
    };
    var options = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
    _classCallCheck26(this, EmbezzlerFight2);
    _defineProperty34(this, "name", void 0);
    _defineProperty34(this, "available", void 0);
    _defineProperty34(this, "potential", void 0);
    _defineProperty34(this, "execute", void 0);
    _defineProperty34(this, "spec", void 0);
    _defineProperty34(this, "draggable", void 0);
    _defineProperty34(this, "canInitializeWandererCounters", void 0);
    _defineProperty34(this, "wrongEncounterName", void 0);
    _defineProperty34(this, "gregariousReplace", void 0);
    _defineProperty34(this, "location", void 0);
    this.name = name;
    this.available = available4;
    this.potential = potential;
    this.execute = execute;
    this.spec = (_options$spec = options.spec) !== null && _options$spec !== void 0 ? _options$spec : {};
    this.draggable = options.draggable;
    this.canInitializeWandererCounters = (_options$canInitializ = options.canInitializeWandererCounters) !== null && _options$canInitializ !== void 0 ? _options$canInitializ : false;
    this.gregariousReplace = (_options$gregariousRe = options.gregariousReplace) !== null && _options$gregariousRe !== void 0 ? _options$gregariousRe : false;
    this.wrongEncounterName = (_options$wrongEncount = options.wrongEncounterName) !== null && _options$wrongEncount !== void 0 ? _options$wrongEncount : this.gregariousReplace;
    this.location = options.location;
  }
  _createClass26(EmbezzlerFight2, [{
    key: "run",
    value: function run(options) {
      if (!this.available() || !(0, import_kolmafia96.myAdventures)())
        return;
      (0, import_kolmafia96.print)("Now running Embezzler fight: ".concat(this.name, ". Stay tuned for details."));
      this.execute(options);
    }
  }]);
  return EmbezzlerFight2;
}();
var chainStarters = [new EmbezzlerFight("Chateau Painting", function() {
  return ChateauMantegna_exports.have() && !ChateauMantegna_exports.paintingFought() && ChateauMantegna_exports.paintingMonster() === embezzler;
}, function() {
  return ChateauMantegna_exports.have() && !ChateauMantegna_exports.paintingFought() && ChateauMantegna_exports.paintingMonster() === embezzler ? 1 : 0;
}, function(options) {
  withMacro(options.macro, function() {
    return ChateauMantegna_exports.fightPainting();
  }, options.useAuto);
}), new EmbezzlerFight("Combat Lover's Locket", function() {
  return CombatLoversLocket_exports.availableLocketMonsters().includes(embezzler);
}, function() {
  return CombatLoversLocket_exports.availableLocketMonsters().includes(embezzler) ? 1 : 0;
}, function(options) {
  withMacro(options.macro, function() {
    return CombatLoversLocket_exports.reminisce(embezzler);
  }, options.useAuto);
}), new EmbezzlerFight("Fax", function() {
  return have($item(_templateObject708 || (_templateObject708 = _taggedTemplateLiteral87(["Clan VIP Lounge key"])))) && !get("_photocopyUsed") && have($item(_templateObject2170 || (_templateObject2170 = _taggedTemplateLiteral87(["photocopied monster"])))) && property_exports.getString("photocopyMonster") === "Knob Goblin Embezzler" && (0, import_kolmafia96.getClanLounge)()["deluxe fax machine"] !== void 0;
}, function() {
  return have($item(_templateObject3150 || (_templateObject3150 = _taggedTemplateLiteral87(["Clan VIP Lounge key"])))) && !get("_photocopyUsed") && have($item(_templateObject4132 || (_templateObject4132 = _taggedTemplateLiteral87(["photocopied monster"])))) && property_exports.getString("photocopyMonster") === "Knob Goblin Embezzler" && (0, import_kolmafia96.getClanLounge)()["deluxe fax machine"] !== void 0 ? 1 : 0;
}, function(options) {
  withMacro(options.macro, function() {
    return (0, import_kolmafia96.use)($item(_templateObject5121 || (_templateObject5121 = _taggedTemplateLiteral87(["photocopied monster"]))));
  }, options.useAuto);
}), new EmbezzlerFight(
  "Scepter Semirare",
  function() {
    return (0, import_kolmafia96.canAdventure)($location(_templateObject6104 || (_templateObject6104 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"])))) && shouldAugustCast($skill(_templateObject769 || (_templateObject769 = _taggedTemplateLiteral87(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
  },
  function() {
    return 0;
  },
  // prevent circular reference
  function(options) {
    (0, import_kolmafia96.retrieveItem)($item(_templateObject864 || (_templateObject864 = _taggedTemplateLiteral87(["august scepter"]))));
    (0, import_kolmafia96.useSkill)($skill(_templateObject955 || (_templateObject955 = _taggedTemplateLiteral87(["Aug. 2nd: Find an Eleven-Leaf Clover Day"]))));
    if (!have($effect(_templateObject1046 || (_templateObject1046 = _taggedTemplateLiteral87(["Lucky!"]))))) {
      _set("_aug2Cast", true);
      return;
    }
    var adventureFunction = options.useAuto ? garboAdventureAuto : garboAdventure;
    adventureFunction($location(_templateObject1141 || (_templateObject1141 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"]))), options.macro, options.macro);
  }
), new EmbezzlerFight("Pillkeeper Semirare", function() {
  return have($item(_templateObject1238 || (_templateObject1238 = _taggedTemplateLiteral87(["Eight Days a Week Pill Keeper"])))) && (0, import_kolmafia96.canAdventure)($location(_templateObject1337 || (_templateObject1337 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"])))) && !get("_freePillKeeperUsed") && !have($effect(_templateObject1434 || (_templateObject1434 = _taggedTemplateLiteral87(["Lucky!"]))));
}, function() {
  return have($item(_templateObject1531 || (_templateObject1531 = _taggedTemplateLiteral87(["Eight Days a Week Pill Keeper"])))) && (0, import_kolmafia96.canAdventure)($location(_templateObject1630 || (_templateObject1630 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"])))) && !get("_freePillKeeperUsed") && !have($effect(_templateObject1730 || (_templateObject1730 = _taggedTemplateLiteral87(["Lucky!"])))) ? 1 : 0;
}, function(options) {
  (0, import_kolmafia96.retrieveItem)($item(_templateObject1830 || (_templateObject1830 = _taggedTemplateLiteral87(["Eight Days a Week Pill Keeper"]))));
  (0, import_kolmafia96.cliExecute)("pillkeeper semirare");
  if (!have($effect(_templateObject1930 || (_templateObject1930 = _taggedTemplateLiteral87(["Lucky!"]))))) {
    _set("_freePillKeeperUsed", true);
    return;
  }
  var adventureFunction = options.useAuto ? garboAdventureAuto : garboAdventure;
  adventureFunction($location(_templateObject2030 || (_templateObject2030 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"]))), options.macro, options.macro);
})];
var copySources = [new EmbezzlerFight("Time-Spinner", function() {
  return have($item(_templateObject2171 || (_templateObject2171 = _taggedTemplateLiteral87(["Time-Spinner"])))) && $locations(_templateObject2231 || (_templateObject2231 = _taggedTemplateLiteral87(["Noob Cave, The Dire Warren, The Haunted Kitchen"]))).some(function(location) {
    return location.combatQueue.includes(embezzler.name);
  }) && get("_timeSpinnerMinutesUsed") <= 7;
}, function() {
  return have($item(_templateObject2330 || (_templateObject2330 = _taggedTemplateLiteral87(["Time-Spinner"])))) && $locations(_templateObject2428 || (_templateObject2428 = _taggedTemplateLiteral87(["Noob Cave, The Dire Warren, The Haunted Kitchen"]))).some(function(location) {
    return location.combatQueue.includes(embezzler.name) || get("beGregariousCharges") > 0;
  }) ? Math.floor((10 - get("_timeSpinnerMinutesUsed")) / 3) : 0;
}, function(options) {
  withMacro(options.macro, function() {
    (0, import_kolmafia96.visitUrl)("inv_use.php?whichitem=".concat((0, import_kolmafia96.toInt)($item(_templateObject2528 || (_templateObject2528 = _taggedTemplateLiteral87(["Time-Spinner"]))))));
    (0, import_kolmafia96.runChoice)(1);
    (0, import_kolmafia96.visitUrl)("choice.php?whichchoice=1196&monid=".concat(embezzler.id, "&option=1"));
    (0, import_kolmafia96.runCombat)();
  }, options.useAuto);
}), new EmbezzlerFight("Spooky Putty & Rain-Doh", function() {
  return have($item(_templateObject2628 || (_templateObject2628 = _taggedTemplateLiteral87(["Spooky Putty monster"])))) && get("spookyPuttyMonster") === embezzler || have($item(_templateObject2727 || (_templateObject2727 = _taggedTemplateLiteral87(["Rain-Doh box full of monster"])))) && get("rainDohMonster") === embezzler;
}, function() {
  var havePutty = have($item(_templateObject2824 || (_templateObject2824 = _taggedTemplateLiteral87(["Spooky Putty sheet"]))));
  var havePuttyMonster = have($item(_templateObject2921 || (_templateObject2921 = _taggedTemplateLiteral87(["Spooky Putty monster"]))));
  var haveRainDoh = have($item(_templateObject3021 || (_templateObject3021 = _taggedTemplateLiteral87(["Rain-Doh black box"]))));
  var haveRainDohMonster = have($item(_templateObject3151 || (_templateObject3151 = _taggedTemplateLiteral87(["Rain-Doh box full of monster"]))));
  var puttyUsed = get("spookyPuttyCopiesMade");
  var rainDohUsed = get("_raindohCopiesMade");
  var hardLimit = 6 - puttyUsed - rainDohUsed;
  var monsterCount = 0;
  var puttyLeft = 5 - puttyUsed;
  var rainDohLeft = 5 - rainDohUsed;
  if (!havePutty && !havePuttyMonster) {
    puttyLeft = 0;
  }
  if (!haveRainDoh && !haveRainDohMonster) {
    rainDohLeft = 0;
  }
  if (havePuttyMonster) {
    if (get("spookyPuttyMonster") === embezzler) {
      monsterCount++;
    } else {
      puttyLeft = 0;
    }
  }
  if (haveRainDohMonster) {
    if (get("rainDohMonster") === embezzler) {
      monsterCount++;
    } else {
      rainDohLeft = 0;
    }
  }
  var naiveLimit = Math.min(puttyLeft + rainDohLeft, hardLimit);
  return naiveLimit + monsterCount;
}, function(options) {
  var macro = options.macro;
  withMacro(macro, function() {
    if (have($item(_templateObject3223 || (_templateObject3223 = _taggedTemplateLiteral87(["Spooky Putty monster"]))))) {
      return (0, import_kolmafia96.use)($item(_templateObject3322 || (_templateObject3322 = _taggedTemplateLiteral87(["Spooky Putty monster"]))));
    }
    return (0, import_kolmafia96.use)($item(_templateObject3419 || (_templateObject3419 = _taggedTemplateLiteral87(["Rain-Doh box full of monster"]))));
  }, options.useAuto);
}), new EmbezzlerFight("4-d Camera", function() {
  return have($item(_templateObject3519 || (_templateObject3519 = _taggedTemplateLiteral87(["shaking 4-d camera"])))) && get("cameraMonster") === embezzler && !get("_cameraUsed");
}, function() {
  return have($item(_templateObject3618 || (_templateObject3618 = _taggedTemplateLiteral87(["shaking 4-d camera"])))) && get("cameraMonster") === embezzler && !get("_cameraUsed") ? 1 : 0;
}, function(options) {
  withMacro(options.macro, function() {
    return (0, import_kolmafia96.use)($item(_templateObject3718 || (_templateObject3718 = _taggedTemplateLiteral87(["shaking 4-d camera"]))));
  }, options.useAuto);
}), new EmbezzlerFight("Ice Sculpture", function() {
  return have($item(_templateObject3818 || (_templateObject3818 = _taggedTemplateLiteral87(["ice sculpture"])))) && get("iceSculptureMonster") === embezzler && !get("_iceSculptureUsed");
}, function() {
  return have($item(_templateObject3918 || (_templateObject3918 = _taggedTemplateLiteral87(["ice sculpture"])))) && get("iceSculptureMonster") === embezzler && !get("_iceSculptureUsed") ? 1 : 0;
}, function(options) {
  withMacro(options.macro, function() {
    return (0, import_kolmafia96.use)($item(_templateObject4018 || (_templateObject4018 = _taggedTemplateLiteral87(["ice sculpture"]))));
  }, options.useAuto);
}), new EmbezzlerFight("Green Taffy", function() {
  return have($item(_templateObject4133 || (_templateObject4133 = _taggedTemplateLiteral87(["envyfish egg"])))) && get("envyfishMonster") === embezzler && !get("_envyfishEggUsed");
}, function() {
  return have($item(_templateObject4218 || (_templateObject4218 = _taggedTemplateLiteral87(["envyfish egg"])))) && get("envyfishMonster") === embezzler && !get("_envyfishEggUsed") ? 1 : 0;
}, function(options) {
  withMacro(options.macro, function() {
    return (0, import_kolmafia96.use)($item(_templateObject4318 || (_templateObject4318 = _taggedTemplateLiteral87(["envyfish egg"]))));
  }), options.useAuto;
}), new EmbezzlerFight("Screencapped Monster", function() {
  return have($item(_templateObject4417 || (_templateObject4417 = _taggedTemplateLiteral87(["screencapped monster"])))) && property_exports.getString("screencappedMonster") === "Knob Goblin Embezzler";
}, function() {
  return property_exports.getString("screencappedMonster") === "Knob Goblin Embezzler" ? (0, import_kolmafia96.itemAmount)($item(_templateObject4517 || (_templateObject4517 = _taggedTemplateLiteral87(["screencapped monster"])))) : 0;
}, function(options) {
  withMacro(options.macro, function() {
    return (0, import_kolmafia96.use)($item(_templateObject4617 || (_templateObject4617 = _taggedTemplateLiteral87(["screencapped monster"]))));
  }, options.useAuto);
}), new EmbezzlerFight("Sticky Clay Homunculus", function() {
  return have($item(_templateObject4717 || (_templateObject4717 = _taggedTemplateLiteral87(["sticky clay homunculus"])))) && property_exports.getString("crudeMonster") === "Knob Goblin Embezzler";
}, function() {
  return property_exports.getString("crudeMonster") === "Knob Goblin Embezzler" ? (0, import_kolmafia96.itemAmount)($item(_templateObject4817 || (_templateObject4817 = _taggedTemplateLiteral87(["sticky clay homunculus"])))) : 0;
}, function(options) {
  return withMacro(options.macro, function() {
    return (0, import_kolmafia96.use)($item(_templateObject4916 || (_templateObject4916 = _taggedTemplateLiteral87(["sticky clay homunculus"]))));
  }, options.useAuto);
})];
var wanderSources = [new EmbezzlerFight("Lucky!", function() {
  return (0, import_kolmafia96.canAdventure)($location(_templateObject5015 || (_templateObject5015 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"])))) && have($effect(_templateObject5122 || (_templateObject5122 = _taggedTemplateLiteral87(["Lucky!"]))));
}, function() {
  return (0, import_kolmafia96.canAdventure)($location(_templateObject5217 || (_templateObject5217 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"])))) && have($effect(_templateObject5317 || (_templateObject5317 = _taggedTemplateLiteral87(["Lucky!"])))) ? 1 : 0;
}, void 0, {
  location: $location(_templateObject5417 || (_templateObject5417 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"])))
}), new EmbezzlerFight("Digitize", function() {
  return get("_sourceTerminalDigitizeMonster") === embezzler && counter_exports.get("Digitize Monster") <= 0;
}, function() {
  return SourceTerminal_exports.have() && SourceTerminal_exports.getDigitizeUses() === 0 ? 1 : 0;
}, void 0, {
  draggable: "wanderer"
}), new EmbezzlerFight("Guaranteed Romantic Monster", function() {
  return get("_romanticFightsLeft") > 0 && counter_exports.get("Romantic Monster window begin") <= 0 && counter_exports.get("Romantic Monster window end") <= 0;
}, function() {
  return 0;
}, void 0, {
  draggable: "wanderer"
}), new EmbezzlerFight("Enamorang", function() {
  return counter_exports.get("Enamorang") <= 0 && get("enamorangMonster") === embezzler;
}, function() {
  return counter_exports.get("Enamorang") <= 0 && get("enamorangMonster") === embezzler || have($item(_templateObject5516 || (_templateObject5516 = _taggedTemplateLiteral87(["LOV Enamorang"])))) && !get("_enamorangs") ? 1 : 0;
}, void 0, {
  draggable: "wanderer"
})];
function changeLastAdvLocation() {
  var task = changeLastAdvLocationTask();
  if (task.ready() && !task.completed()) {
    task.do();
  }
  (0, import_kolmafia96.visitUrl)("main.php");
}
var gregFights = function(name, haveCheck, monsterProp, fightsProp, totalCharges) {
  function runGregFight(options) {
    var _run$constraints$prep, _run$constraints;
    var run = ltbRun();
    var runMacro = getUsingFreeBunnyBanish() ? Macro2.skill($skill(_templateObject5615 || (_templateObject5615 = _taggedTemplateLiteral87(["Snokebomb"])))) : ltbRun().macro;
    (_run$constraints$prep = (_run$constraints = run.constraints).preparation) === null || _run$constraints$prep === void 0 || _run$constraints$prep.call(_run$constraints);
    var bunnyIsBanished = (0, import_kolmafia96.isBanished)($monster(_templateObject5714 || (_templateObject5714 = _taggedTemplateLiteral87(["fluffy bunny"]))));
    var adventureFunction = options.useAuto ? garboAdventureAuto : garboAdventure;
    adventureFunction($location(_templateObject5812 || (_templateObject5812 = _taggedTemplateLiteral87(["The Dire Warren"]))), Macro2.if_($monster(_templateObject5912 || (_templateObject5912 = _taggedTemplateLiteral87(["fluffy bunny"]))), runMacro).step(options.macro), Macro2.if_($monster(_templateObject6011 || (_templateObject6011 = _taggedTemplateLiteral87(["fluffy bunny"]))), runMacro).step(options.macro));
    if (get("lastEncounter") === $monster(_templateObject6117 || (_templateObject6117 = _taggedTemplateLiteral87(["fluffy bunny"]))).name && bunnyIsBanished) {
      var _find;
      var bunnyBanish = (_find = _toConsumableArray37(getBanishedMonsters().entries()).find(function(_ref) {
        var _ref2 = _slicedToArray30(_ref, 2), monster = _ref2[1];
        return monster === $monster(_templateObject6216 || (_templateObject6216 = _taggedTemplateLiteral87(["fluffy bunny"])));
      })) === null || _find === void 0 ? void 0 : _find[0];
      (0, import_kolmafia96.abort)("Fluffy bunny is supposedly banished by ".concat(bunnyBanish, ", but this appears not to be the case; the most likely issue is that your ").concat(monsterProp, " preference is nonzero and should probably be zero."));
    }
  }
  var resourceIsOccupied = function() {
    return get(fightsProp) > 0 && ![null, embezzler].includes(get(monsterProp));
  };
  return [new EmbezzlerFight(name, function() {
    return haveCheck() && !resourceIsOccupied() && get(fightsProp) > (have($item(_templateObject6314 || (_templateObject6314 = _taggedTemplateLiteral87(["miniature crystal ball"])))) ? 1 : 0);
  }, function() {
    return !resourceIsOccupied() ? totalCharges() : 0;
  }, function(options) {
    runGregFight(options);
    if (get(fightsProp) === 1 && have($item(_templateObject6414 || (_templateObject6414 = _taggedTemplateLiteral87(["miniature crystal ball"]))))) {
      var warrenPrediction = CrystalBall_exports.ponder().get($location(_templateObject6511 || (_templateObject6511 = _taggedTemplateLiteral87(["The Dire Warren"]))));
      if (warrenPrediction !== embezzler)
        changeLastAdvLocation();
    }
  }, {
    canInitializeWandererCounters: true
  }), new EmbezzlerFight("".concat(name, " (Set Up Crystal Ball)"), function() {
    return get(monsterProp) === embezzler && get(fightsProp) === 1 && have($item(_templateObject6610 || (_templateObject6610 = _taggedTemplateLiteral87(["miniature crystal ball"])))) && !CrystalBall_exports.ponder().get($location(_templateObject6710 || (_templateObject6710 = _taggedTemplateLiteral87(["The Dire Warren"]))));
  }, function() {
    return get(monsterProp) === embezzler && get(fightsProp) > 0 || totalCharges() > 0 ? 1 : 0;
  }, runGregFight, {
    spec: {
      equip: $items(_templateObject6810 || (_templateObject6810 = _taggedTemplateLiteral87(["miniature crystal ball"]))).filter(function(item10) {
        return have(item10);
      })
    },
    canInitializeWandererCounters: true
  })];
};
var gregLikeFights = [].concat(_toConsumableArray37(gregFights(
  "Be Gregarious",
  function() {
    return true;
  },
  // we can always use extrovermectin
  "beGregariousMonster",
  "beGregariousFightsLeft",
  function() {
    return get("beGregariousCharges") * 3 + get("beGregariousFightsLeft");
  }
)), _toConsumableArray37(gregFights("Habitats Monster", function() {
  return have($skill(_templateObject6910 || (_templateObject6910 = _taggedTemplateLiteral87(["Just the Facts"]))));
}, "_monsterHabitatsMonster", "_monsterHabitatsFightsLeft", function() {
  return have($skill(_templateObject709 || (_templateObject709 = _taggedTemplateLiteral87(["Just the Facts"])))) ? (3 - get("_monsterHabitatsRecalled")) * 5 + get("_monsterHabitatsFightsLeft") : 0;
})));
function proceedWithOrb() {
  var strat = crateStrategy();
  if (!have($item(_templateObject7112 || (_templateObject7112 = _taggedTemplateLiteral87(["miniature crystal ball"])))) || strat !== "Orb")
    return true;
  var gregFightNames = ["Macrometeorite", "Powerful Glove", "Habitats Monster", "Be Gregarious", "Orb Prediction"];
  if (CrystalBall_exports.ponder().get($location(_templateObject7212 || (_templateObject7212 = _taggedTemplateLiteral87(["Noob Cave"])))) === embezzler && embezzlerSources.filter(function(source) {
    return !gregFightNames.some(function(name) {
      return source.name.includes(name);
    });
  }).find(function(source) {
    return source.available();
  })) {
    return false;
  }
  return true;
}
var conditionalSources = [new EmbezzlerFight("Orb Prediction", function() {
  return have($item(_templateObject7311 || (_templateObject7311 = _taggedTemplateLiteral87(["miniature crystal ball"])))) && !get("_garbo_doneGregging", false) && CrystalBall_exports.ponder().get($location(_templateObject7411 || (_templateObject7411 = _taggedTemplateLiteral87(["The Dire Warren"])))) === embezzler;
}, function() {
  return possibleGregCrystalBall();
}, function(options) {
  (0, import_kolmafia96.visitUrl)("inventory.php?ponder=1");
  if (CrystalBall_exports.ponder().get($location(_templateObject7510 || (_templateObject7510 = _taggedTemplateLiteral87(["The Dire Warren"])))) !== $monster(_templateObject7610 || (_templateObject7610 = _taggedTemplateLiteral87(["Knob Goblin Embezzler"])))) {
    return;
  }
  var adventureFunction = options.useAuto ? garboAdventureAuto : garboAdventure;
  adventureFunction($location(_templateObject775 || (_templateObject775 = _taggedTemplateLiteral87(["The Dire Warren"]))), options.macro, options.macro);
  changeLastAdvLocation();
  if (!doingGregFight())
    _set("_garbo_doneGregging", true);
}, {
  spec: {
    equip: $items(_templateObject784 || (_templateObject784 = _taggedTemplateLiteral87(["miniature crystal ball"])))
  },
  canInitializeWandererCounters: true
}), new EmbezzlerFight("Macrometeorite", function() {
  return gregReady() && have($skill(_templateObject794 || (_templateObject794 = _taggedTemplateLiteral87(["Meteor Lore"])))) && get("_macrometeoriteUses") < 10 && proceedWithOrb();
}, function() {
  return doingGregFight() && have($skill(_templateObject804 || (_templateObject804 = _taggedTemplateLiteral87(["Meteor Lore"])))) ? 10 - get("_macrometeoriteUses") : 0;
}, function(options) {
  equipOrbIfDesired();
  var crateIsSabered = get("_saberForceMonster") === $monster(_templateObject8111 || (_templateObject8111 = _taggedTemplateLiteral87(["crate"])));
  var notEnoughCratesSabered = get("_saberForceMonsterCount") < 2;
  var weWantToSaberCrates = !crateIsSabered || notEnoughCratesSabered;
  setChoice(1387, 2);
  var macro = Macro2.if_($monster(_templateObject8211 || (_templateObject8211 = _taggedTemplateLiteral87(["crate"]))), Macro2.externalIf(crateStrategy() !== "Saber" && !have($effect(_templateObject8311 || (_templateObject8311 = _taggedTemplateLiteral87(["On the Trail"])))) && get("_olfactionsUsed") < 2, Macro2.tryHaveSkill($skill(_templateObject8410 || (_templateObject8410 = _taggedTemplateLiteral87(["Transcendent Olfaction"]))))).externalIf((0, import_kolmafia96.haveEquipped)($item(_templateObject8510 || (_templateObject8510 = _taggedTemplateLiteral87(["Fourth of May Cosplay Saber"])))) && weWantToSaberCrates && get("_saberForceUses") < 5, Macro2.trySkill($skill(_templateObject865 || (_templateObject865 = _taggedTemplateLiteral87(["Use the Force"]))))).skill($skill(_templateObject874 || (_templateObject874 = _taggedTemplateLiteral87(["Macrometeorite"]))))).step(options.macro);
  var adventureFunction = options.useAuto ? garboAdventureAuto : garboAdventure;
  adventureFunction($location(_templateObject883 || (_templateObject883 = _taggedTemplateLiteral87(["Noob Cave"]))), macro, macro);
  if (CrystalBall_exports.ponder().get($location(_templateObject893 || (_templateObject893 = _taggedTemplateLiteral87(["Noob Cave"])))) === embezzler) {
    changeLastAdvLocation();
  }
}, {
  gregariousReplace: true
}), new EmbezzlerFight("Powerful Glove", function() {
  return gregReady() && have($item(_templateObject903 || (_templateObject903 = _taggedTemplateLiteral87(["Powerful Glove"])))) && get("_powerfulGloveBatteryPowerUsed") <= 90 && proceedWithOrb();
}, function() {
  return doingGregFight() && have($item(_templateObject9111 || (_templateObject9111 = _taggedTemplateLiteral87(["Powerful Glove"])))) ? Math.min((100 - get("_powerfulGloveBatteryPowerUsed")) / 10) : 0;
}, function(options) {
  equipOrbIfDesired();
  var crateIsSabered = get("_saberForceMonster") === $monster(_templateObject9211 || (_templateObject9211 = _taggedTemplateLiteral87(["crate"])));
  var notEnoughCratesSabered = get("_saberForceMonsterCount") < 2;
  var weWantToSaberCrates = !crateIsSabered || notEnoughCratesSabered;
  setChoice(1387, 2);
  var macro = Macro2.if_($monster(_templateObject9310 || (_templateObject9310 = _taggedTemplateLiteral87(["crate"]))), Macro2.externalIf(crateStrategy() !== "Saber" && !have($effect(_templateObject9410 || (_templateObject9410 = _taggedTemplateLiteral87(["On the Trail"])))) && get("_olfactionsUsed") < 2, Macro2.tryHaveSkill($skill(_templateObject956 || (_templateObject956 = _taggedTemplateLiteral87(["Transcendent Olfaction"]))))).externalIf((0, import_kolmafia96.haveEquipped)($item(_templateObject964 || (_templateObject964 = _taggedTemplateLiteral87(["Fourth of May Cosplay Saber"])))) && weWantToSaberCrates && get("_saberForceUses") < 5, Macro2.trySkill($skill(_templateObject974 || (_templateObject974 = _taggedTemplateLiteral87(["Use the Force"]))))).skill($skill(_templateObject983 || (_templateObject983 = _taggedTemplateLiteral87(["CHEAT CODE: Replace Enemy"]))))).step(options.macro);
  var adventureFunction = options.useAuto ? garboAdventureAuto : garboAdventure;
  adventureFunction($location(_templateObject993 || (_templateObject993 = _taggedTemplateLiteral87(["Noob Cave"]))), macro, macro);
  if (CrystalBall_exports.ponder().get($location(_templateObject1003 || (_templateObject1003 = _taggedTemplateLiteral87(["Noob Cave"])))) === embezzler) {
    changeLastAdvLocation();
  }
}, {
  spec: {
    equip: $items(_templateObject10111 || (_templateObject10111 = _taggedTemplateLiteral87(["Powerful Glove"])))
  },
  gregariousReplace: true
})].concat(_toConsumableArray37(gregLikeFights), [new EmbezzlerFight("Backup", function() {
  return get("lastCopyableMonster") === embezzler && have($item(_templateObject10211 || (_templateObject10211 = _taggedTemplateLiteral87(["backup camera"])))) && get("_backUpUses") < 11;
}, function() {
  return have($item(_templateObject10310 || (_templateObject10310 = _taggedTemplateLiteral87(["backup camera"])))) ? 11 - get("_backUpUses") : 0;
}, function(options) {
  var adventureFunction = options.useAuto ? garboAdventureAuto : garboAdventure;
  adventureFunction(options.location, Macro2.if_("!monsterid ".concat(embezzler.id), Macro2.skill($skill(_templateObject1047 || (_templateObject1047 = _taggedTemplateLiteral87(["Back-Up to your Last Enemy"]))))).step(options.macro), Macro2.if_("!monsterid ".concat(embezzler.id), Macro2.skill($skill(_templateObject1053 || (_templateObject1053 = _taggedTemplateLiteral87(["Back-Up to your Last Enemy"]))))).step(options.macro));
}, {
  spec: {
    equip: $items(_templateObject1063 || (_templateObject1063 = _taggedTemplateLiteral87(["backup camera"]))),
    modes: {
      backupcamera: "meat"
    }
  },
  draggable: "backup",
  wrongEncounterName: true,
  canInitializeWandererCounters: true
})]);
var fakeSources = [new EmbezzlerFight("Professor MeatChain", function() {
  return false;
}, function() {
  return have($familiar(_templateObject1073 || (_templateObject1073 = _taggedTemplateLiteral87(["Pocket Professor"])))) && !get("_garbo_meatChain", false) ? Math.max(10 - get("_pocketProfessorLectures"), 0) : 0;
}, function() {
  return;
}), new EmbezzlerFight("Professor WeightChain", function() {
  return false;
}, function() {
  return have($familiar(_templateObject1083 || (_templateObject1083 = _taggedTemplateLiteral87(["Pocket Professor"])))) && !get("_garbo_weightChain", false) ? Math.min(15 - get("_pocketProfessorLectures"), 5) : 0;
}, function() {
  return;
})];
function embezzlerConfirmInvocation(msg) {
  if (!globalOptions.prefs.autoUserConfirm) {
    return (0, import_kolmafia96.userConfirm)(msg);
  }
  var invocatedCount = get("_garbo_autoUserConfirm_embezzlerInvocatedCount", 0);
  if (invocatedCount >= globalOptions.prefs.autoUserConfirm_embezzlerInvocationsThreshold) {
    return false;
  }
  _set("_garbo_autoUserConfirm_embezzlerInvocatedCount", invocatedCount + 1);
  return true;
}
var emergencyChainStarters = [
  // These are very deliberately the last embezzler fights.
  new EmbezzlerFight("11-leaf clover (untapped potential)", function() {
    var potential = Math.floor(embezzlerCount());
    if (potential < 1)
      return false;
    if (!(0, import_kolmafia96.canAdventure)($location(_templateObject1093 || (_templateObject1093 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"]))))) {
      return false;
    }
    if (get("_genieFightsUsed") < 3 && (0, import_kolmafia96.mallPrice)($item(_templateObject1103 || (_templateObject1103 = _taggedTemplateLiteral87(["11-leaf clover"])))) >= WISH_VALUE) {
      return false;
    }
    if (globalOptions.askedAboutWish)
      return globalOptions.wishAnswer;
    var profit = (potential + 1) * averageEmbezzlerNet() - (0, import_kolmafia96.mallPrice)($item(_templateObject11111 || (_templateObject11111 = _taggedTemplateLiteral87(["11-leaf clover"]))));
    if (profit < 0)
      return false;
    (0, import_kolmafia96.print)("You have the following embezzler-sources untapped right now:", HIGHLIGHT);
    embezzlerSources.filter(function(source) {
      return source.potential() > 0;
    }).map(function(source) {
      return "".concat(source.potential(), " from ").concat(source.name);
    }).forEach(function(text) {
      return (0, import_kolmafia96.print)(text, HIGHLIGHT);
    });
    globalOptions.askedAboutWish = true;
    globalOptions.wishAnswer = embezzlerConfirmInvocation("Garbo has detected you have ".concat(potential, " potential ways to copy an Embezzler, but no way to start a fight with one. Current embezzler net (before potions) is ").concat(averageEmbezzlerNet(), ", so we expect to earn ").concat(profit, " meat, after the cost of a 11-leaf clover. Should we get Lucky! for an Embezzler?"));
    return globalOptions.wishAnswer;
  }, function() {
    return 0;
  }, function(options) {
    globalOptions.askedAboutWish = false;
    property_exports.withProperty("autoSatisfyWithCloset", true, function() {
      return (0, import_kolmafia96.retrieveItem)($item(_templateObject11211 || (_templateObject11211 = _taggedTemplateLiteral87(["11-leaf clover"]))));
    });
    (0, import_kolmafia96.use)($item(_templateObject11310 || (_templateObject11310 = _taggedTemplateLiteral87(["11-leaf clover"]))));
    if (have($effect(_templateObject1143 || (_templateObject1143 = _taggedTemplateLiteral87(["Lucky!"]))))) {
      var adventureFunction = options.useAuto ? garboAdventureAuto : garboAdventure;
      adventureFunction($location(_templateObject1153 || (_templateObject1153 = _taggedTemplateLiteral87(["Cobb's Knob Treasury"]))), options.macro, options.macro);
    }
    globalOptions.askedAboutWish = false;
  }),
  new EmbezzlerFight("Pocket Wish (untapped potential)", function() {
    var potential = Math.floor(embezzlerCount());
    if (potential < 1)
      return false;
    if (get("_genieFightsUsed") >= 3)
      return false;
    if (globalOptions.askedAboutWish)
      return globalOptions.wishAnswer;
    var profit = (potential + 1) * averageEmbezzlerNet() - WISH_VALUE;
    if (profit < 0)
      return false;
    (0, import_kolmafia96.print)("You have the following embezzler-sources untapped right now:", HIGHLIGHT);
    embezzlerSources.filter(function(source) {
      return source.potential() > 0;
    }).map(function(source) {
      return "".concat(source.potential(), " from ").concat(source.name);
    }).forEach(function(text) {
      return (0, import_kolmafia96.print)(text, HIGHLIGHT);
    });
    globalOptions.askedAboutWish = true;
    globalOptions.wishAnswer = embezzlerConfirmInvocation("Garbo has detected you have ".concat(potential, " potential ways to copy an Embezzler, but no way to start a fight with one. Current embezzler net (before potions) is ").concat(averageEmbezzlerNet(), ", so we expect to earn ").concat(profit, " meat, after the cost of a wish. Should we wish for an Embezzler?"));
    return globalOptions.wishAnswer;
  }, function() {
    return 0;
  }, function(options) {
    globalOptions.askedAboutWish = false;
    withMacro(options.macro, function() {
      acquire(1, $item(_templateObject1163 || (_templateObject1163 = _taggedTemplateLiteral87(["pocket wish"]))), WISH_VALUE);
      (0, import_kolmafia96.visitUrl)("inv_use.php?pwd=".concat((0, import_kolmafia96.myHash)(), "&which=3&whichitem=9537"), false, true);
      (0, import_kolmafia96.visitUrl)("choice.php?pwd&whichchoice=1267&option=1&wish=to fight a Knob Goblin Embezzler ", true, true);
      (0, import_kolmafia96.visitUrl)("main.php", false);
      (0, import_kolmafia96.runCombat)();
      globalOptions.askedAboutWish = false;
    }, options.useAuto);
  })
];
var embezzlerSources = [].concat(wanderSources, _toConsumableArray37(conditionalSources), copySources, chainStarters, emergencyChainStarters, fakeSources);
function embezzlerCount() {
  return sum(embezzlerSources, function(source) {
    return source.potential();
  });
}
function getNextEmbezzlerFight() {
  var _ref3;
  var wanderer2 = wanderSources.find(function(fight) {
    return fight.available();
  });
  if (wanderer2)
    return wanderer2;
  var conditional = conditionalSources.find(function(fight) {
    return fight.available();
  });
  if (conditional) {
    var leftoverReplacers = (have($skill(_templateObject1173 || (_templateObject1173 = _taggedTemplateLiteral87(["Meteor Lore"])))) ? 10 - get("_macrometeoriteUses") : 0) + (have($item(_templateObject1183 || (_templateObject1183 = _taggedTemplateLiteral87(["Powerful Glove"])))) ? Math.floor((100 - get("_powerfulGloveBatteryPowerUsed")) / 10) : 0);
    var skip = conditional.name === "Be Gregarious" && crateStrategy() === "Orb" && leftoverReplacers;
    if (!skip)
      return conditional;
  }
  var copy = copySources.find(function(fight) {
    return fight.available();
  });
  if (copy)
    return copy;
  var chainStart = chainStarters.find(function(fight) {
    return fight.available();
  });
  if (chainStart)
    return chainStart;
  return (_ref3 = conditional !== null && conditional !== void 0 ? conditional : emergencyChainStarters.find(function(fight) {
    return fight.available();
  })) !== null && _ref3 !== void 0 ? _ref3 : null;
}

// src/embezzler/staging.ts
var import_kolmafia97 = require("kolmafia");
init_dist();
var _templateObject770;
var _templateObject2172;
var _templateObject3152;
var _templateObject4134;
var _templateObject5123;
var _templateObject6105;
function _classCallCheck27(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties27(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey38(descriptor.key), descriptor);
  }
}
function _createClass27(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties27(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties27(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classPrivateFieldInitSpec2(obj, privateMap, value) {
  _checkPrivateRedeclaration2(obj, privateMap);
  privateMap.set(obj, value);
}
function _checkPrivateRedeclaration2(obj, privateCollection) {
  if (privateCollection.has(obj)) {
    throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
}
function _defineProperty35(obj, key, value) {
  key = _toPropertyKey38(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey38(arg) {
  var key = _toPrimitive38(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive38(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _classPrivateFieldGet2(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor2(receiver, privateMap, "get");
  return _classApplyDescriptorGet2(receiver, descriptor);
}
function _classApplyDescriptorGet2(receiver, descriptor) {
  if (descriptor.get) {
    return descriptor.get.call(receiver);
  }
  return descriptor.value;
}
function _classPrivateFieldSet2(receiver, privateMap, value) {
  var descriptor = _classExtractFieldDescriptor2(receiver, privateMap, "set");
  _classApplyDescriptorSet2(receiver, descriptor, value);
  return value;
}
function _classExtractFieldDescriptor2(receiver, privateMap, action) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to " + action + " private field on non-instance");
  }
  return privateMap.get(receiver);
}
function _classApplyDescriptorSet2(receiver, descriptor, value) {
  if (descriptor.set) {
    descriptor.set.call(receiver, value);
  } else {
    if (!descriptor.writable) {
      throw new TypeError("attempted to set read only private field");
    }
    descriptor.value = value;
  }
}
function _taggedTemplateLiteral88(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var taffyIsWorthIt = function() {
  return (0, import_kolmafia97.mallPrice)($item(_templateObject770 || (_templateObject770 = _taggedTemplateLiteral88(["pulled green taffy"])))) < EMBEZZLER_MULTIPLIER() * get("valueOfAdventure") && (0, import_kolmafia97.retrieveItem)($item(_templateObject2172 || (_templateObject2172 = _taggedTemplateLiteral88(["pulled green taffy"]))));
};
var wandererFailsafeMacro = function() {
  return Macro2.externalIf((0, import_kolmafia97.haveEquipped)($item(_templateObject3152 || (_templateObject3152 = _taggedTemplateLiteral88(["backup camera"])))) && get("_backUpUses") < 11 && get("lastCopyableMonster") === embezzler, Macro2.if_("!monsterid ".concat(embezzler.id), Macro2.skill($skill(_templateObject4134 || (_templateObject4134 = _taggedTemplateLiteral88(["Back-Up to your Last Enemy"]))))));
};
var _macro = /* @__PURE__ */ new WeakMap();
var _location = /* @__PURE__ */ new WeakMap();
var _useAuto = /* @__PURE__ */ new WeakMap();
var EmbezzlerFightRunOptions = /* @__PURE__ */ function() {
  function EmbezzlerFightRunOptions2(configOptions) {
    var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, macro = _ref.macro, location = _ref.location, useAuto = _ref.useAuto;
    _classCallCheck27(this, EmbezzlerFightRunOptions2);
    _defineProperty35(this, "configOptions", void 0);
    _classPrivateFieldInitSpec2(this, _macro, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec2(this, _location, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec2(this, _useAuto, {
      writable: true,
      value: void 0
    });
    this.configOptions = configOptions;
    _classPrivateFieldSet2(this, _macro, macro);
    _classPrivateFieldSet2(this, _location, location);
    _classPrivateFieldSet2(this, _useAuto, useAuto);
  }
  _createClass27(EmbezzlerFightRunOptions2, [{
    key: "location",
    get: function get4() {
      if (this.configOptions.location)
        return this.configOptions.location;
      var suggestion = this.configOptions.draggable && !_classPrivateFieldGet2(this, _location) && checkUnderwater() && taffyIsWorthIt() ? $location(_templateObject5123 || (_templateObject5123 = _taggedTemplateLiteral88(["The Briny Deeps"]))) : _classPrivateFieldGet2(this, _location);
      if (this.configOptions.draggable && !suggestion || this.configOptions.draggable === "backup" && suggestion && suggestion.combatPercent < 100) {
        var wanderOptions = {
          wanderer: this.configOptions.draggable,
          allowEquipment: false
        };
        propertyManager.setChoices(wanderer().getChoices(wanderOptions));
        return wanderer().getTarget(wanderOptions);
      }
      return suggestion !== null && suggestion !== void 0 ? suggestion : $location(_templateObject6105 || (_templateObject6105 = _taggedTemplateLiteral88(["Noob Cave"])));
    }
  }, {
    key: "macro",
    get: function get4() {
      var _classPrivateFieldGet22;
      var baseMacro = (_classPrivateFieldGet22 = _classPrivateFieldGet2(this, _macro)) !== null && _classPrivateFieldGet22 !== void 0 ? _classPrivateFieldGet22 : Macro2.embezzler();
      return this.configOptions.draggable === "wanderer" ? wandererFailsafeMacro().step(baseMacro) : baseMacro;
    }
  }, {
    key: "useAuto",
    get: function get4() {
      var _classPrivateFieldGet3;
      return (_classPrivateFieldGet3 = _classPrivateFieldGet2(this, _useAuto)) !== null && _classPrivateFieldGet3 !== void 0 ? _classPrivateFieldGet3 : true;
    }
  }]);
  return EmbezzlerFightRunOptions2;
}();

// src/turns.ts
var _templateObject771;
var _templateObject2173;
var _templateObject3153;
var _templateObject4135;
var _templateObject5124;
var _templateObject6106;
var _templateObject776;
function _taggedTemplateLiteral89(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function estimatedGarboTurns() {
  var pantsgivingAdventures = have($item(_templateObject771 || (_templateObject771 = _taggedTemplateLiteral89(["Pantsgiving"])))) ? Math.max(0, 2 - get("_pantsgivingFullness")) * 8 : 0;
  var sausageAdventures = howManySausagesCouldIEat();
  var thesisAdventures = have($familiar(_templateObject2173 || (_templateObject2173 = _taggedTemplateLiteral89(["Pocket Professor"])))) && !get("_thesisDelivered") ? 11 : 0;
  var nightcapAdventures = globalOptions.ascend && (0, import_kolmafia98.myInebriety)() <= (0, import_kolmafia98.inebrietyLimit)() && have($item(_templateObject3153 || (_templateObject3153 = _taggedTemplateLiteral89(["Drunkula's wineglass"])))) ? ESTIMATED_OVERDRUNK_TURNS : 0;
  var thumbRingMultiplier = usingThumbRing() ? 1 / 0.96 : 1;
  var yachtzeeTurns = 30;
  var adventuresAfterChaining = globalOptions.prefs.yachtzeechain && !get("_garboYachtzeeChainCompleted") ? Math.max(potentialFullnessAdventures() + potentialInebrietyAdventures() + potentialNonOrganAdventures() - yachtzeeTurns, 0) : 0;
  var turns;
  if (globalOptions.stopTurncount) {
    turns = globalOptions.stopTurncount - (0, import_kolmafia98.myTurncount)();
  } else if (globalOptions.nobarf)
    turns = embezzlerCount();
  else if (globalOptions.saveTurns > 0 || !globalOptions.ascend) {
    turns = ((0, import_kolmafia98.myAdventures)() + sausageAdventures + pantsgivingAdventures + thesisAdventures + adventuresAfterChaining - globalOptions.saveTurns) * thumbRingMultiplier;
  } else {
    turns = ((0, import_kolmafia98.myAdventures)() + sausageAdventures + pantsgivingAdventures + nightcapAdventures + thesisAdventures + adventuresAfterChaining) * thumbRingMultiplier;
  }
  return turns;
}
function remainingUserTurns() {
  var dietAdventures = Math.max(potentialFullnessAdventures() + potentialInebrietyAdventures() + potentialNonOrganAdventures(), 0);
  var turns = (0, import_kolmafia98.myAdventures)() + dietAdventures - estimatedGarboTurns() + globalOptions.saveTurns;
  return turns;
}
var estimatedTurnsTomorrow = 400 + clamp((get("valueOfAdventure") - 4e3) / 8, 0, 600);
function potentialFullnessAdventures() {
  var distentionPillSpace = have($item(_templateObject4135 || (_templateObject4135 = _taggedTemplateLiteral89(["distention pill"])))) && !get("_distentionPillUsed") ? 1 : 0;
  return ((0, import_kolmafia98.fullnessLimit)() - (0, import_kolmafia98.myFullness)() + distentionPillSpace) * 8;
}
function potentialInebrietyAdventures() {
  var syntheticPillSpace = have($item(_templateObject5124 || (_templateObject5124 = _taggedTemplateLiteral89(["synthetic dog hair pill"])))) && !get("_syntheticDogHairPillUsed") ? 1 : 0;
  var shotglassSpace = have($item(_templateObject6106 || (_templateObject6106 = _taggedTemplateLiteral89(["mime army shotglass"])))) && !get("_mimeArmyShotglassUsed") ? 1 : 0;
  var sweatSpace = have($item(_templateObject776 || (_templateObject776 = _taggedTemplateLiteral89(["designer sweatpants"])))) ? 3 - get("_sweatOutSomeBoozeUsed") : 0;
  return ((0, import_kolmafia98.inebrietyLimit)() - (0, import_kolmafia98.myInebriety)() + syntheticPillSpace + sweatSpace + shotglassSpace) * 7;
}
function potentialNonOrganAdventures() {
  var borrowedTimeAdventures = globalOptions.ascend && !get("_borrowedTimeUsed") ? 20 : 0;
  var chocolateAdventures = (3 - get("_chocolatesUsed")) * (4 - get("_chocolatesUsed")) / 2;
  var bufferAdventures = 30;
  return borrowedTimeAdventures + chocolateAdventures + bufferAdventures;
}
function digitizedMonstersRemaining() {
  return digitizedMonstersRemainingForTurns(estimatedGarboTurns());
}

// src/familiar/lib.ts
var _templateObject777;
var _templateObject2174;
var _templateObject3154;
var _templateObject4136;
var _templateObject5125;
var _templateObject6107;
var _templateObject778;
var _templateObject866;
var _templateObject957;
var _templateObject1048;
var _templateObject1144;
var _templateObject1239;
function _taggedTemplateLiteral90(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function timeToMeatify() {
  if (!have($familiar(_templateObject777 || (_templateObject777 = _taggedTemplateLiteral90(["Grey Goose"])))) || get("_meatifyMatterUsed") || (0, import_kolmafia99.myInebriety)() > (0, import_kolmafia99.inebrietyLimit)()) {
    return false;
  } else if ($familiar(_templateObject2174 || (_templateObject2174 = _taggedTemplateLiteral90(["Grey Goose"]))).experience >= 400)
    return true;
  else if (!globalOptions.ascend || (0, import_kolmafia99.myAdventures)() > 50)
    return false;
  var totalTurns = (0, import_kolmafia99.totalTurnsPlayed)();
  var usingLatte = have($item(_templateObject3154 || (_templateObject3154 = _taggedTemplateLiteral90(["latte lovers member's mug"])))) && get("latteModifier").split(",").includes("Meat Drop: 40");
  var nextProtonicGhost = have($item(_templateObject4136 || (_templateObject4136 = _taggedTemplateLiteral90(["protonic accelerator pack"])))) ? Math.max(1, get("nextParanormalActivity") - totalTurns) : Infinity;
  var nextVoteMonster = have($item(_templateObject5125 || (_templateObject5125 = _taggedTemplateLiteral90(['"I Voted!" sticker'])))) && get("_voteFreeFights") < 3 ? Math.max(0, (totalTurns % 11 - 1) % 11) : Infinity;
  var nextVoidMonster = have($item(_templateObject6107 || (_templateObject6107 = _taggedTemplateLiteral90(["cursed magnifying glass"])))) && get("_voidFreeFights") < 5 && globalOptions.prefs.valueOfFreeFight / 13 > baseMeat * (usingLatte ? 0.75 : 0.6) ? -get("cursedMagnifyingGlassCount") % 13 : Infinity;
  var freeFightNow = get("questPAGhost") !== "unstarted" || nextVoteMonster === 0 || nextVoidMonster === 0;
  var delay = Math.min(nextProtonicGhost, nextVoteMonster === 0 ? get("_voteFreeFights") < 2 ? 11 : Infinity : nextVoteMonster, nextVoidMonster === 0 ? 13 : nextVoidMonster);
  if (delay < (0, import_kolmafia99.myAdventures)())
    return false;
  else if (freeFightNow || $familiar(_templateObject778 || (_templateObject778 = _taggedTemplateLiteral90(["Grey Goose"]))).experience >= 121)
    return true;
  return false;
}
function pocketProfessorLectures() {
  return 2 + Math.ceil(Math.sqrt((0, import_kolmafia99.familiarWeight)($familiar(_templateObject866 || (_templateObject866 = _taggedTemplateLiteral90(["Pocket Professor"])))) + (0, import_kolmafia99.weightAdjustment)()));
}
function canOpenRedPresent() {
  return have($familiar(_templateObject957 || (_templateObject957 = _taggedTemplateLiteral90(["Crimbo Shrub"])))) && !have($effect(_templateObject1048 || (_templateObject1048 = _taggedTemplateLiteral90(["Everything Looks Red"])))) && !have($skill(_templateObject1144 || (_templateObject1144 = _taggedTemplateLiteral90(["Free-For-All"])))) && get("shrubGifts") === "meat" && (0, import_kolmafia99.myInebriety)() <= (0, import_kolmafia99.inebrietyLimit)();
}
function turnsAvailable() {
  var baseTurns = estimatedGarboTurns();
  var digitizes = digitizedMonstersRemaining();
  var mapTurns = globalOptions.ascend ? clamp((0, import_kolmafia99.availableAmount)($item(_templateObject1239 || (_templateObject1239 = _taggedTemplateLiteral90(["Map to Safety Shelter Grimace Prime"])))), 0, ESTIMATED_OVERDRUNK_TURNS) : 0;
  var barfTurns = baseTurns - digitizes - mapTurns;
  var barfCombatRate = 1 - 1 / turnsToNC;
  return barfTurns * barfCombatRate;
}

// src/familiar/barfFamiliar.ts
var import_kolmafia101 = require("kolmafia");
init_dist();

// src/session.ts
var import_kolmafia100 = require("kolmafia");
init_dist();
var _templateObject779;
function _toConsumableArray38(arr) {
  return _arrayWithoutHoles38(arr) || _iterableToArray38(arr) || _unsupportedIterableToArray61(arr) || _nonIterableSpread38();
}
function _nonIterableSpread38() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray38(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles38(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray61(arr);
}
function _taggedTemplateLiteral91(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper31(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray61(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray61(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray61(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray61(o, minLen);
}
function _arrayLikeToArray61(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var session = null;
function startSession() {
  session = Session.current();
}
function sessionSinceStart() {
  if (session) {
    return Session.current().diff(session);
  }
  return Session.current();
}
var marginalSessionDiff = null;
var barfSession = null;
var barfSessionStartTurns = (0, import_kolmafia100.totalTurnsPlayed)();
var numTrackedItemTurns = null;
var marginalFamiliarsExcessValue = 0;
function setMarginalFamiliarsExcessValue(val) {
  marginalFamiliarsExcessValue = Math.max(0, val);
}
var marginalFamiliarsExcessTotal = 0;
var outlierItemList = $items(_templateObject779 || (_templateObject779 = _taggedTemplateLiteral91(["Extrovermectin\u2122, Volcoino, Pok\xE9-Gro fertilizer"])));
function printMarginalSession() {
  if ((0, import_kolmafia100.myInebriety)() > (0, import_kolmafia100.inebrietyLimit)() || (0, import_kolmafia100.myAdventures)() > globalOptions.saveTurns) {
    return;
  }
  if (get("_garboMarginalMeatValue") && get("_garboMarginalMeatTurns")) {
    var meat = get("_garboMarginalMeatValue", 0);
    var meatTurns = get("_garboMarginalMeatTurns", 0);
    if (meatTurns <= 0) {
      (0, import_kolmafia100.print)("Error in estimating marginal MPA - meat turns tracked = 0", "red");
      return;
    }
    var MPA2 = meat / meatTurns;
    if (marginalSessionDiff && barfSession && numTrackedItemTurns && numTrackedItemTurns >= Math.max(50, meatTurns)) {
      var _marginalSessionDiff$ = marginalSessionDiff.value(garboValue), items = _marginalSessionDiff$.items, itemDetails = _marginalSessionDiff$.itemDetails;
      var barfItemDetails = Session.current().diff(barfSession).value(garboValue).itemDetails;
      var outlierItemDetails = itemDetails.filter(function(detail2) {
        return outlierItemList.includes(detail2.item) || detail2.quantity === 1 && detail2.value >= 5e3 && barfItemDetails.some(function(d) {
          return d.item === detail2.item && d.quantity <= 2;
        });
      }).sort(function(a, b) {
        return b.value - a.value;
      });
      (0, import_kolmafia100.print)("Outliers:", HIGHLIGHT);
      var outlierItems = 0;
      var _iterator2 = _createForOfIteratorHelper31(outlierItemDetails), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var detail = _step2.value;
          (0, import_kolmafia100.print)("".concat(detail.quantity, " ").concat(detail.item, " worth ").concat(detail.value.toFixed(0), " total"), HIGHLIGHT);
          outlierItems += detail.value;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      var outlierIPA = (items - marginalFamiliarsExcessTotal) / numTrackedItemTurns;
      var IPA = (items - marginalFamiliarsExcessTotal - outlierItems) / numTrackedItemTurns;
      var totalOutlierMPA = MPA2 + outlierIPA;
      var totalMPA = MPA2 + IPA;
      (0, import_kolmafia100.print)("Marginal MPA: ".concat(formatNumber(Math.round(MPA2 * 100) / 100), " [raw] + ").concat(formatNumber(Math.round(IPA * 100) / 100), " [items] (").concat(formatNumber(Math.round(outlierIPA * 100) / 100), " [outliers]) = ").concat(formatNumber(Math.round(totalMPA * 100) / 100), " [total] (").concat(formatNumber(Math.round(totalOutlierMPA * 100) / 100), " [w/ outliers])"), HIGHLIGHT);
    } else if (get("_garboMarginalItemValue")) {
      var _items2 = get("_garboMarginalItemValue", 0);
      var _IPA = _items2 / meatTurns;
      var _totalMPA = MPA2 + _IPA;
      (0, import_kolmafia100.print)("Warning: Insufficient turns were run, so this estimate is subject to large variance. Be careful when using these values as is.", "red");
      (0, import_kolmafia100.print)("Marginal MPA: ".concat(formatNumber(Math.round(MPA2 * 100) / 100), " [raw] + ").concat(formatNumber(Math.round(_IPA * 100) / 100), " [items] = ").concat(formatNumber(Math.round(_totalMPA * 100) / 100), " [total]"), HIGHLIGHT);
    }
  }
}
var garboResultsProperties = ["garboResultsMeat", "garboResultsItems", "garboResultsTurns"];
function getGarboDaily(property) {
  return get(property, 0);
}
function setGarboDaily(property, value) {
  _set(property, value);
}
function resetGarboDaily() {
  if (resetDailyPreference("garboResultsDate")) {
    var _iterator3 = _createForOfIteratorHelper31(garboResultsProperties), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var prop = _step3.value;
        setGarboDaily(prop, 0);
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  }
}
function endSession() {
  var printLog2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  resetGarboDaily();
  var message = function(head2, turns2, meat2, items2) {
    return (0, import_kolmafia100.print)("".concat(head2, ", across ").concat(formatNumber(turns2), " turns you generated ").concat(formatNumber(meat2 + items2), " meat, with ").concat(formatNumber(meat2), " raw meat and ").concat(formatNumber(items2), " from items"), HIGHLIGHT);
  };
  var _sessionSinceStart$va3 = sessionSinceStart().value(garboValue), meat = _sessionSinceStart$va3.meat, items = _sessionSinceStart$va3.items, itemDetails = _sessionSinceStart$va3.itemDetails, turns = _sessionSinceStart$va3.turns;
  var totalMeat = meat + getGarboDaily("garboResultsMeat");
  var totalItems = items + getGarboDaily("garboResultsItems");
  var totalTurns = turns + getGarboDaily("garboResultsTurns");
  if (printLog2) {
    var losers = itemDetails.sort(function(a, b) {
      return a.value - b.value;
    }).slice(0, 3);
    var winners = itemDetails.reverse().slice(0, 3);
    (0, import_kolmafia100.print)("Extreme Items:", HIGHLIGHT);
    for (var _i = 0, _arr = [].concat(_toConsumableArray38(winners), _toConsumableArray38(losers)); _i < _arr.length; _i++) {
      var detail = _arr[_i];
      (0, import_kolmafia100.print)("".concat(detail.quantity, " ").concat(detail.item, " worth ").concat(detail.value.toFixed(0), " total"), HIGHLIGHT);
    }
  }
  setGarboDaily("garboResultsMeat", totalMeat);
  setGarboDaily("garboResultsItems", totalItems);
  setGarboDaily("garboResultsTurns", totalTurns);
  if (printLog2) {
    message("This run of garbo", turns, meat, items);
    message("So far today", totalTurns, totalMeat, totalItems);
    printMarginalSession();
  }
  if (globalOptions.loginvalidwishes) {
    if (failedWishes.length === 0) {
      (0, import_kolmafia100.print)("No invalid wishes found.");
    } else {
      (0, import_kolmafia100.print)("Found the following unwishable effects:");
      failedWishes.forEach(function(effect2) {
        return (0, import_kolmafia100.print)("".concat(effect2));
      });
    }
  }
}

// src/familiar/barfFamiliar.ts
var _templateObject780;
var _templateObject2175;
var _templateObject3155;
var _templateObject4137;
var _templateObject5126;
var _templateObject6108;
var _templateObject781;
var _templateObject867;
var _templateObject958;
var _templateObject1049;
function ownKeys17(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread17(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys17(Object(t), true).forEach(function(r2) {
      _defineProperty36(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys17(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty36(obj, key, value) {
  key = _toPropertyKey39(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey39(arg) {
  var key = _toPrimitive39(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive39(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral92(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var ITEM_DROP_VALUE = 0.72;
var MEAT_DROP_VALUE = baseMeat / 100;
var outfitCache2 = /* @__PURE__ */ new Map();
var outfitSlots2 = $slots(_templateObject780 || (_templateObject780 = _taggedTemplateLiteral92(["hat, back, shirt, weapon, off-hand, pants, acc1, acc2, acc3, familiar"])));
function getCachedOutfitValues(fam2) {
  var lepMult = findLeprechaunMultiplier(fam2);
  var currentValue = outfitCache2.get(lepMult);
  if (currentValue)
    return currentValue;
  var current2 = (0, import_kolmafia101.myFamiliar)();
  (0, import_kolmafia101.cliExecute)("checkpoint");
  try {
    barfOutfit({
      familiar: fam2,
      avoid: $items(_templateObject2175 || (_templateObject2175 = _taggedTemplateLiteral92(['Kramco Sausage-o-Matic\u2122, cursed magnifying glass, protonic accelerator pack, "I Voted!" sticker, li\'l pirate costume, bag of many confections'])))
    }, true).dress();
    var outfit3 = outfitSlots2.map(function(slot) {
      return (0, import_kolmafia101.equippedItem)(slot);
    });
    var bonuses = bonusGear(BonusEquipMode.EMBEZZLER, false);
    var values = {
      weight: sum(outfit3, function(eq) {
        return get2("Familiar Weight", eq);
      }),
      meat: sum(outfit3, function(eq) {
        return get2("Meat Drop", eq);
      }),
      item: sum(outfit3, function(eq) {
        return get2("Item Drop", eq);
      }),
      bonus: sum(outfit3, function(eq) {
        var _bonuses$get;
        return (_bonuses$get = bonuses.get(eq)) !== null && _bonuses$get !== void 0 ? _bonuses$get : 0;
      })
    };
    outfitCache2.set(lepMult, values);
    return values;
  } finally {
    (0, import_kolmafia101.useFamiliar)(current2);
    (0, import_kolmafia101.cliExecute)("outfit checkpoint");
  }
}
var nonOutfitWeightBonus = function() {
  return (0, import_kolmafia101.weightAdjustment)() - sum(outfitSlots2, function(slot) {
    return get2("Familiar Weight", (0, import_kolmafia101.equippedItem)(slot));
  });
};
function familiarModifier(familiar7, modifier) {
  var cachedOutfitWeight = getCachedOutfitValues(familiar7).weight;
  var totalWeight = (0, import_kolmafia101.familiarWeight)(familiar7) + nonOutfitWeightBonus() + cachedOutfitWeight;
  return (0, import_kolmafia101.numericModifier)(familiar7, modifier, totalWeight, $item.none);
}
function familiarAbilityValue(familiar7) {
  return familiarModifier(familiar7, "Meat Drop") * MEAT_DROP_VALUE + familiarModifier(familiar7, "Item Drop") * ITEM_DROP_VALUE;
}
function totalFamiliarValue(_ref) {
  var expectedValue = _ref.expectedValue, outfitValue = _ref.outfitValue, familiar7 = _ref.familiar;
  return expectedValue + outfitValue + familiarAbilityValue(familiar7);
}
function turnsNeededForFamiliar(_ref2, baselineToCompareAgainst) {
  var familiar7 = _ref2.familiar, limit = _ref2.limit, outfitValue = _ref2.outfitValue;
  switch (limit) {
    case "drops":
      return sum(getAllDrops(familiar7).filter(function(_ref3) {
        var expectedValue = _ref3.expectedValue;
        return outfitValue + familiarAbilityValue(familiar7) + expectedValue > totalFamiliarValue(baselineToCompareAgainst);
      }), function(_ref4) {
        var expectedTurns = _ref4.expectedTurns;
        return expectedTurns;
      });
    case "experience":
      return getExperienceFamiliarLimit(familiar7);
    case "none":
      return 0;
    case "special":
      return getSpecialFamiliarLimit({
        familiar: familiar7,
        outfitValue: outfitValue,
        baselineToCompareAgainst: baselineToCompareAgainst
      });
  }
}
function calculateOutfitValue(f) {
  var outfit3 = getCachedOutfitValues(f.familiar);
  var outfitValue = outfit3.bonus + outfit3.meat * MEAT_DROP_VALUE + outfit3.item * ITEM_DROP_VALUE;
  var outfitWeight = outfit3.weight;
  return _objectSpread17(_objectSpread17({}, f), {}, {
    outfitValue: outfitValue,
    outfitWeight: outfitWeight
  });
}
function barfFamiliar() {
  if (timeToMeatify())
    return $familiar(_templateObject3155 || (_templateObject3155 = _taggedTemplateLiteral92(["Grey Goose"])));
  if (get("garbo_IgnoreMarginalFamiliars", false))
    return meatFamiliar();
  var fullMenu = menu2({
    canChooseMacro: true,
    location: $location(_templateObject4137 || (_templateObject4137 = _taggedTemplateLiteral92(["Barf Mountain"]))),
    includeExperienceFamiliars: false
  }).map(calculateOutfitValue);
  var meatFamiliarEntry = fullMenu.find(function(_ref5) {
    var familiar7 = _ref5.familiar;
    return familiar7 === meatFamiliar();
  });
  if (!meatFamiliarEntry) {
    throw new Error("Something went wrong when initializing familiars!");
  }
  var meatFamiliarValue = totalFamiliarValue(meatFamiliarEntry);
  var viableMenu = fullMenu.filter(function(f) {
    return totalFamiliarValue(f) > meatFamiliarValue;
  });
  if (viableMenu.every(function(_ref6) {
    var limit = _ref6.limit;
    return limit !== "none";
  })) {
    var turnsNeeded = sum(viableMenu, function(option) {
      return turnsNeededForFamiliar(option, meatFamiliarEntry);
    });
    if (turnsNeeded < turnsAvailable()) {
      var shrubAvailable = viableMenu.some(function(_ref7) {
        var familiar7 = _ref7.familiar;
        return familiar7 === $familiar(_templateObject5126 || (_templateObject5126 = _taggedTemplateLiteral92(["Crimbo Shrub"])));
      });
      return shrubAvailable ? $familiar(_templateObject6108 || (_templateObject6108 = _taggedTemplateLiteral92(["Crimbo Shrub"]))) : meatFamiliar();
    }
  }
  if (viableMenu.length === 0) {
    setMarginalFamiliarsExcessValue(0);
    return meatFamiliar();
  }
  var best = maxBy(viableMenu, totalFamiliarValue);
  var jellyfish = fullMenu.find(function(_ref8) {
    var familiar7 = _ref8.familiar;
    return familiar7 === $familiar(_templateObject781 || (_templateObject781 = _taggedTemplateLiteral92(["Space Jellyfish"])));
  });
  var jellyfishValue = jellyfish ? garboValue($item(_templateObject867 || (_templateObject867 = _taggedTemplateLiteral92(["stench jelly"])))) / 20 + familiarAbilityValue(jellyfish.familiar) + jellyfish.outfitValue : 0;
  var excessValue = Math.max(best.expectedValue + best.outfitValue + familiarAbilityValue(best.familiar) - Math.max(meatFamiliarValue, jellyfishValue), 0);
  setMarginalFamiliarsExcessValue(excessValue);
  var familiarPrintout = function(x) {
    return "(expected value of ".concat(x.expectedValue.toFixed(1), " from familiar drops, ").concat(familiarAbilityValue(x.familiar).toFixed(1), " from familiar abilities and ").concat(x.outfitValue.toFixed(1), " from outfit)");
  };
  (0, import_kolmafia101.print)("Choosing to use ".concat(best.familiar, " ").concat(familiarPrintout(best), " over ").concat(meatFamiliarEntry.familiar, " ").concat(familiarPrintout(meatFamiliarEntry), "."), HIGHLIGHT);
  return best.familiar;
}
function getSpecialFamiliarLimit(_ref9) {
  var familiar7 = _ref9.familiar, outfitValue = _ref9.outfitValue, baselineToCompareAgainst = _ref9.baselineToCompareAgainst;
  switch (familiar7) {
    case $familiar(_templateObject958 || (_templateObject958 = _taggedTemplateLiteral92(["Space Jellyfish"]))):
      return sum(getAllJellyfishDrops().filter(function(_ref10) {
        var expectedValue = _ref10.expectedValue;
        return outfitValue + familiarAbilityValue(familiar7) + expectedValue > totalFamiliarValue(baselineToCompareAgainst);
      }), function(_ref11) {
        var turnsAtValue = _ref11.turnsAtValue;
        return turnsAtValue;
      });
    case $familiar(_templateObject1049 || (_templateObject1049 = _taggedTemplateLiteral92(["Crimbo Shrub"]))):
      return Math.ceil(estimatedGarboTurns() / 100);
    default:
      return 0;
  }
}

// src/familiar/itemFamiliar.ts
var import_kolmafia102 = require("kolmafia");
init_dist();
var _templateObject785;
var _templateObject2176;
var _templateObject3156;
var _templateObject4138;
var _templateObject5127;
var _templateObject6109;
var _templateObject786;
var _templateObject868;
var _templateObject959;
var _templateObject1050;
var _templateObject1145;
var _templateObject1240;
var _templateObject1338;
function _toConsumableArray39(arr) {
  return _arrayWithoutHoles39(arr) || _iterableToArray39(arr) || _unsupportedIterableToArray62(arr) || _nonIterableSpread39();
}
function _nonIterableSpread39() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray62(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray62(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray62(o, minLen);
}
function _iterableToArray39(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles39(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray62(arr);
}
function _arrayLikeToArray62(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral93(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var bestNonCheerleaderFairy;
function bestFairy() {
  if (have($familiar(_templateObject785 || (_templateObject785 = _taggedTemplateLiteral93(["Trick-or-Treating Tot"])))) && have($item(_templateObject2176 || (_templateObject2176 = _taggedTemplateLiteral93(["li'l ninja costume"]))))) {
    return $familiar(_templateObject3156 || (_templateObject3156 = _taggedTemplateLiteral93(["Trick-or-Treating Tot"])));
  }
  if (!bestNonCheerleaderFairy) {
    var viableFairies = import_kolmafia102.Familiar.all().filter(function(f) {
      return have(f) && findFairyMultiplier(f) && f !== $familiar(_templateObject4138 || (_templateObject4138 = _taggedTemplateLiteral93(["Steam-Powered Cheerleader"]))) && !f.physicalDamage && !f.elementalDamage;
    });
    var highestFairyMult = findFairyMultiplier(maxBy(viableFairies, findFairyMultiplier));
    var goodFairies = viableFairies.filter(function(f) {
      return findFairyMultiplier(f) === highestFairyMult;
    });
    if (have($familiar(_templateObject5127 || (_templateObject5127 = _taggedTemplateLiteral93(["Reagnimated Gnome"])))) && !have($item(_templateObject6109 || (_templateObject6109 = _taggedTemplateLiteral93(["gnomish housemaid's kgnee"])))) && !get("_garbo_triedForKgnee", false)) {
      var current2 = (0, import_kolmafia102.myFamiliar)();
      (0, import_kolmafia102.useFamiliar)($familiar(_templateObject786 || (_templateObject786 = _taggedTemplateLiteral93(["Reagnimated Gnome"]))));
      (0, import_kolmafia102.visitUrl)("arena.php");
      (0, import_kolmafia102.runChoice)(4);
      (0, import_kolmafia102.useFamiliar)(current2);
      _set("_garbo_triedForKgnee", true);
    }
    if (have($item(_templateObject868 || (_templateObject868 = _taggedTemplateLiteral93(["gnomish housemaid's kgnee"])))) && highestFairyMult === 1) {
      goodFairies.push($familiar(_templateObject959 || (_templateObject959 = _taggedTemplateLiteral93(["Reagnimated Gnome"]))));
    }
    var bonuses = [].concat(_toConsumableArray39(menu2({
      includeExperienceFamiliars: false
    })), [{
      familiar: $familiar(_templateObject1050 || (_templateObject1050 = _taggedTemplateLiteral93(["Reagnimated Gnome"]))),
      expectedValue: get("valueOfAdventure") * 70 / 1e3,
      leprechaunMultiplier: 0,
      limit: "none"
    }]);
    bestNonCheerleaderFairy = maxBy(goodFairies, function(f) {
      var _bonuses$find$expecte, _bonuses$find;
      return (_bonuses$find$expecte = (_bonuses$find = bonuses.find(function(_ref) {
        var familiar7 = _ref.familiar;
        return familiar7 === f;
      })) === null || _bonuses$find === void 0 ? void 0 : _bonuses$find.expectedValue) !== null && _bonuses$find$expecte !== void 0 ? _bonuses$find$expecte : 0;
    });
  }
  if (have($familiar(_templateObject1145 || (_templateObject1145 = _taggedTemplateLiteral93(["Steam-Powered Cheerleader"])))) && findFairyMultiplier($familiar(_templateObject1240 || (_templateObject1240 = _taggedTemplateLiteral93(["Steam-Powered Cheerleader"])))) > findFairyMultiplier(bestNonCheerleaderFairy)) {
    return $familiar(_templateObject1338 || (_templateObject1338 = _taggedTemplateLiteral93(["Steam-Powered Cheerleader"])));
  }
  return bestNonCheerleaderFairy;
}

// src/combat.ts
var _templateObject787;
var _templateObject2177;
var _templateObject3157;
var _templateObject4139;
var _templateObject5128;
var _templateObject6118;
var _templateObject788;
var _templateObject869;
var _templateObject960;
var _templateObject1051;
var _templateObject1146;
var _templateObject1241;
var _templateObject1339;
var _templateObject1435;
var _templateObject1533;
var _templateObject1631;
var _templateObject1731;
var _templateObject1831;
var _templateObject1931;
var _templateObject2031;
var _templateObject2178;
var _templateObject2232;
var _templateObject2331;
var _templateObject2429;
var _templateObject2529;
var _templateObject2629;
var _templateObject2728;
var _templateObject2825;
var _templateObject2922;
var _templateObject3022;
var _templateObject3158;
var _templateObject3224;
var _templateObject3323;
var _templateObject3420;
var _templateObject3520;
var _templateObject3619;
var _templateObject3719;
var _templateObject3819;
var _templateObject3919;
var _templateObject4019;
var _templateObject4140;
var _templateObject4219;
var _templateObject4319;
var _templateObject4418;
var _templateObject4518;
var _templateObject4618;
var _templateObject4718;
var _templateObject4818;
var _templateObject4917;
var _templateObject5016;
var _templateObject5129;
var _templateObject5218;
var _templateObject5318;
var _templateObject5418;
var _templateObject5517;
var _templateObject5616;
var _templateObject5715;
var _templateObject5813;
var _templateObject5913;
var _templateObject6012;
var _templateObject6119;
var _templateObject6217;
var _templateObject6315;
var _templateObject6415;
var _templateObject6512;
var _templateObject6611;
var _templateObject6711;
var _templateObject6811;
var _templateObject6911;
var _templateObject7010;
var _templateObject7113;
var _templateObject7213;
var _templateObject7312;
var _templateObject7412;
var _templateObject7511;
var _templateObject7611;
var _templateObject7710;
var _templateObject789;
var _templateObject795;
var _templateObject805;
var _templateObject8112;
var _templateObject8212;
var _templateObject8312;
var _templateObject8411;
var _templateObject8511;
var _templateObject8610;
var _templateObject875;
var _templateObject884;
var _templateObject894;
var _templateObject904;
var _templateObject9112;
var _templateObject9212;
var _templateObject9311;
var _templateObject9411;
var _templateObject9510;
var _templateObject965;
var _templateObject975;
var _templateObject984;
var _templateObject994;
var _templateObject1004;
var _templateObject10112;
var _templateObject10212;
var _templateObject10311;
var _templateObject10410;
var _templateObject1054;
var _templateObject1064;
var _templateObject1074;
var _templateObject1084;
var _templateObject1094;
var _templateObject1104;
var _templateObject11112;
var _templateObject11212;
var _templateObject11311;
var _templateObject1147;
var _templateObject1154;
var _templateObject1164;
var _templateObject1174;
var _templateObject1184;
var _templateObject1193;
var _templateObject1203;
var _templateObject12111;
var _templateObject12211;
var _templateObject12310;
var _templateObject1243;
var _templateObject1253;
var _templateObject1263;
var _templateObject1273;
var _templateObject1283;
var _templateObject1293;
var _templateObject1303;
var _templateObject13111;
var _templateObject13210;
var _templateObject13310;
var _templateObject1343;
var _templateObject1353;
var _templateObject1363;
var _templateObject1373;
var _templateObject1383;
var _templateObject1393;
var _templateObject1403;
var _templateObject14111;
var _templateObject14210;
var _templateObject1436;
var _templateObject1443;
var _templateObject1453;
var _templateObject1463;
var _templateObject1473;
var _templateObject1483;
var _templateObject1493;
var _templateObject1503;
var _templateObject15111;
var _templateObject15210;
var _templateObject1534;
var _templateObject1543;
var _templateObject1553;
var _templateObject1563;
var _templateObject1573;
var _templateObject1583;
var _templateObject1593;
var _templateObject1603;
var _templateObject16111;
var _templateObject16210;
var _templateObject1633;
var _templateObject1643;
var _templateObject1653;
var _templateObject1663;
var _templateObject1673;
var _templateObject1683;
var _templateObject1693;
var _templateObject1703;
var _templateObject17111;
var _templateObject17210;
var _templateObject1733;
var _templateObject1743;
var _templateObject1753;
var _templateObject1763;
var _templateObject1773;
var _templateObject1783;
var _templateObject1793;
var _templateObject1803;
var _templateObject18111;
var _templateObject18210;
var _templateObject1833;
var _templateObject1843;
var _templateObject1853;
var _templateObject1863;
var _templateObject1873;
var _templateObject1883;
var _templateObject1893;
var _templateObject1903;
var _templateObject19111;
var _templateObject19210;
var _templateObject1933;
var _templateObject1943;
var _templateObject1953;
var _templateObject1963;
var _templateObject1973;
var _templateObject1983;
var _templateObject1993;
var _templateObject2003;
var _templateObject20111;
var _templateObject20210;
var _templateObject2033;
var _templateObject2043;
var _templateObject2053;
function _taggedTemplateLiteral94(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck28(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties28(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey40(descriptor.key), descriptor);
  }
}
function _createClass28(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties28(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties28(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey40(arg) {
  var key = _toPrimitive40(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive40(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _inherits8(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf8(subClass, superClass);
}
function _setPrototypeOf8(o, p) {
  _setPrototypeOf8 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf8(o, p);
}
function _createSuper7(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct7();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf7(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf7(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn7(this, result);
  };
}
function _possibleConstructorReturn7(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized7(self2);
}
function _assertThisInitialized7(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct7() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf7(o) {
  _getPrototypeOf7 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf7(o);
}
function shouldRedigitize() {
  var digitizesLeft = SourceTerminal_exports.getDigitizeUsesRemaining();
  var monsterCount = SourceTerminal_exports.getDigitizeMonsterCount() + 1;
  var digitizeAdventuresUsed = monsterCount * (monsterCount + 1) * 5 - 3;
  return SourceTerminal_exports.have() && SourceTerminal_exports.canDigitize() && (0, import_kolmafia103.myAdventures)() * 1.04 < digitizesLeft * digitizeAdventuresUsed;
}
var Macro2 = /* @__PURE__ */ function(_StrictMacro) {
  _inherits8(Macro3, _StrictMacro);
  var _super = _createSuper7(Macro3);
  function Macro3() {
    _classCallCheck28(this, Macro3);
    return _super.apply(this, arguments);
  }
  _createClass28(Macro3, [{
    key: "abortWithMsg",
    value: function abortWithMsg(errorMessage) {
      return this.step('abort "'.concat(errorMessage, '"'));
    }
  }, {
    key: "tryHaveSkill",
    value: function tryHaveSkill(skill) {
      if (!skill)
        return this;
      return this.externalIf((0, import_kolmafia103.haveSkill)(skill), Macro3.trySkill(skill));
    }
  }, {
    key: "tryHaveItem",
    value: function tryHaveItem(item10) {
      if (!item10)
        return this;
      return this.externalIf(have(item10), Macro3.tryItem(item10));
    }
  }, {
    key: "trySingAlong",
    value: function trySingAlong() {
      if (!SongBoom_exports.have() || SongBoom_exports.song() !== "Total Eclipse of Your Meat") {
        return this;
      }
      return this.tryHaveSkill($skill(_templateObject787 || (_templateObject787 = _taggedTemplateLiteral94(["Sing Along"]))));
    }
  }, {
    key: "familiarActions",
    value: function familiarActions() {
      return this.externalIf((0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject2177 || (_templateObject2177 = _taggedTemplateLiteral94(["Grey Goose"]))) && timeToMeatify(), Macro3.trySkill($skill(_templateObject3157 || (_templateObject3157 = _taggedTemplateLiteral94(["Meatify Matter"]))))).externalIf(canOpenRedPresent() && (0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject4139 || (_templateObject4139 = _taggedTemplateLiteral94(["Crimbo Shrub"]))), Macro3.trySkill($skill(_templateObject5128 || (_templateObject5128 = _taggedTemplateLiteral94(["Open a Big Red Present"]))))).externalIf((0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject6118 || (_templateObject6118 = _taggedTemplateLiteral94(["Space Jellyfish"]))), Macro3.externalIf(get("_spaceJellyfishDrops") < 5, Macro3.if_($locations(_templateObject788 || (_templateObject788 = _taggedTemplateLiteral94(["Barf Mountain, Pirates of the Garbage Barges, Uncle Gator's Country Fun-Time Liquid Waste Sluice, The Toxic Teacups"]))).map(function(l) {
        return (0, import_kolmafia103.getMonsters)(l);
      }).flat(), Macro3.trySkill($skill(_templateObject869 || (_templateObject869 = _taggedTemplateLiteral94(["Extract Jelly"]))))), Macro3.trySkill($skill(_templateObject960 || (_templateObject960 = _taggedTemplateLiteral94(["Extract Jelly"]))))));
    }
  }, {
    key: "tryCopier",
    value: function tryCopier(itemOrSkill) {
      switch (itemOrSkill) {
        case $item(_templateObject1051 || (_templateObject1051 = _taggedTemplateLiteral94(["Spooky Putty sheet"]))):
          return this.externalIf(get("spookyPuttyCopiesMade") + Math.max(1, get("_raindohCopiesMade")) < 6 && $items(_templateObject1146 || (_templateObject1146 = _taggedTemplateLiteral94(["Spooky Putty sheet, Spooky Putty monster"]))).some(function(item10) {
            return have(item10);
          }), Macro3.tryItem(itemOrSkill));
        case $item(_templateObject1241 || (_templateObject1241 = _taggedTemplateLiteral94(["Rain-Doh black box"]))):
          return this.externalIf(get("_raindohCopiesMade") + Math.max(1, get("spookyPuttyCopiesMade")) < 6 && $items(_templateObject1339 || (_templateObject1339 = _taggedTemplateLiteral94(["Rain-Doh black box, Rain-Doh box full of monster"]))).some(function(item10) {
            return have(item10);
          }), Macro3.tryItem(itemOrSkill));
        case $item(_templateObject1435 || (_templateObject1435 = _taggedTemplateLiteral94(["4-d camera"]))):
          return this.externalIf(!get("_cameraUsed") && !have($item(_templateObject1533 || (_templateObject1533 = _taggedTemplateLiteral94(["shaking 4-d camera"])))), Macro3.tryHaveItem(itemOrSkill));
        case $item(_templateObject1631 || (_templateObject1631 = _taggedTemplateLiteral94(["crappy camera"]))):
          return this.externalIf(!get("_crappyCameraUsed") && !have($item(_templateObject1731 || (_templateObject1731 = _taggedTemplateLiteral94(["shaking crappy camera"])))), Macro3.tryHaveItem(itemOrSkill));
        case $item(_templateObject1831 || (_templateObject1831 = _taggedTemplateLiteral94(["unfinished ice sculpture"]))):
          return this.externalIf(!get("_iceSculptureUsed") && !have($item(_templateObject1931 || (_templateObject1931 = _taggedTemplateLiteral94(["ice sculpture"])))), Macro3.tryHaveItem(itemOrSkill));
        case $item(_templateObject2031 || (_templateObject2031 = _taggedTemplateLiteral94(["pulled green taffy"]))):
          return this.externalIf(!get("_envyfishEggUsed") && !have($item(_templateObject2178 || (_templateObject2178 = _taggedTemplateLiteral94(["envyfish egg"])))), Macro3.tryHaveItem(itemOrSkill));
        case $item(_templateObject2232 || (_templateObject2232 = _taggedTemplateLiteral94(["print screen button"]))):
          return this.tryHaveItem(itemOrSkill);
        case $item(_templateObject2331 || (_templateObject2331 = _taggedTemplateLiteral94(["alpine watercolor set"]))):
          return this.tryHaveItem(itemOrSkill);
        case $item(_templateObject2429 || (_templateObject2429 = _taggedTemplateLiteral94(["LOV Enamorang"]))):
          return this.externalIf(get("_enamorangs") < 5 && !get("enamorangMonster"), Macro3.tryHaveItem(itemOrSkill));
        case $skill(_templateObject2529 || (_templateObject2529 = _taggedTemplateLiteral94(["Digitize"]))):
          return this.externalIf(SourceTerminal_exports.canDigitize(), Macro3.trySkill(itemOrSkill));
      }
      return this;
    }
  }, {
    key: "meatKill",
    value: function meatKill() {
      var sealClubberSetup = (0, import_kolmafia103.myClass)() === $class(_templateObject2629 || (_templateObject2629 = _taggedTemplateLiteral94(["Seal Clubber"]))) && have($skill(_templateObject2728 || (_templateObject2728 = _taggedTemplateLiteral94(["Furious Wallop"]))));
      var opsSetup = (0, import_kolmafia103.equippedAmount)($item(_templateObject2825 || (_templateObject2825 = _taggedTemplateLiteral94(["Operation Patriot Shield"])))) > 0;
      var katanaSetup = (0, import_kolmafia103.equippedAmount)($item(_templateObject2922 || (_templateObject2922 = _taggedTemplateLiteral94(["haiku katana"])))) > 0;
      var capeSetup = get("retroCapeSuperhero") === "robot" && get("retroCapeWashingInstructions") === "kill" && (0, import_kolmafia103.itemType)((0, import_kolmafia103.equippedItem)($slot(_templateObject3022 || (_templateObject3022 = _taggedTemplateLiteral94(["weapon"]))))) === "pistol";
      var pigSkinnerSetup = have($skill(_templateObject3158 || (_templateObject3158 = _taggedTemplateLiteral94(["Head in the Game"]))));
      var willCrit = (0, import_kolmafia103.equippedAmount)($item(_templateObject3224 || (_templateObject3224 = _taggedTemplateLiteral94(["mafia pointer finger ring"])))) > 0 && (sealClubberSetup || opsSetup || katanaSetup || capeSetup || pigSkinnerSetup);
      return this.externalIf(shouldRedigitize(), Macro3.if_($monster(_templateObject3323 || (_templateObject3323 = _taggedTemplateLiteral94(["Knob Goblin Embezzler"]))), Macro3.trySkill($skill(_templateObject3420 || (_templateObject3420 = _taggedTemplateLiteral94(["Digitize"])))))).trySingAlong().familiarActions().externalIf(have($skill(_templateObject3520 || (_templateObject3520 = _taggedTemplateLiteral94(["Extract Oil"])))) && get("_oilExtracted") < 15, Macro3.if_($monster(_templateObject3619 || (_templateObject3619 = _taggedTemplateLiteral94(["garbage tourist"]))), Macro3.trySkill($skill(_templateObject3719 || (_templateObject3719 = _taggedTemplateLiteral94(["Extract Oil"])))))).externalIf(digitizedMonstersRemaining() <= 5 - get("_meteorShowerUses") && have($skill(_templateObject3819 || (_templateObject3819 = _taggedTemplateLiteral94(["Meteor Lore"])))) && get("_meteorShowerUses") < 5, Macro3.if_($monster(_templateObject3919 || (_templateObject3919 = _taggedTemplateLiteral94(["Knob Goblin Embezzler"]))), Macro3.trySkill($skill(_templateObject4019 || (_templateObject4019 = _taggedTemplateLiteral94(["Meteor Shower"])))))).externalIf(get("cosmicBowlingBallReturnCombats") < 1, Macro3.trySkill($skill(_templateObject4140 || (_templateObject4140 = _taggedTemplateLiteral94(["Bowl Straight Up"]))))).externalIf(have($skill(_templateObject4219 || (_templateObject4219 = _taggedTemplateLiteral94(["Transcendent Olfaction"])))) && (get("olfactedMonster") !== $monster(_templateObject4319 || (_templateObject4319 = _taggedTemplateLiteral94(["garbage tourist"]))) || !have($effect(_templateObject4418 || (_templateObject4418 = _taggedTemplateLiteral94(["On the Trail"]))))) && get("_olfactionsUsed") < 3, Macro3.if_($monster(_templateObject4518 || (_templateObject4518 = _taggedTemplateLiteral94(["garbage tourist"]))), Macro3.trySkill($skill(_templateObject4618 || (_templateObject4618 = _taggedTemplateLiteral94(["Transcendent Olfaction"])))))).externalIf(get("_gallapagosMonster") !== $monster(_templateObject4718 || (_templateObject4718 = _taggedTemplateLiteral94(["garbage tourist"]))) && have($skill(_templateObject4818 || (_templateObject4818 = _taggedTemplateLiteral94(["Gallapagosian Mating Call"])))), Macro3.if_($monster(_templateObject4917 || (_templateObject4917 = _taggedTemplateLiteral94(["garbage tourist"]))), Macro3.trySkill($skill(_templateObject5016 || (_templateObject5016 = _taggedTemplateLiteral94(["Gallapagosian Mating Call"])))))).externalIf(get("longConMonster") !== $monster(_templateObject5129 || (_templateObject5129 = _taggedTemplateLiteral94(["garbage tourist"]))) && get("_longConUsed") < 5 && have($skill(_templateObject5218 || (_templateObject5218 = _taggedTemplateLiteral94(["Long Con"])))), Macro3.if_($monster(_templateObject5318 || (_templateObject5318 = _taggedTemplateLiteral94(["garbage tourist"]))), Macro3.trySkill($skill(_templateObject5418 || (_templateObject5418 = _taggedTemplateLiteral94(["Long Con"])))))).externalIf(get("motifMonster") !== $monster(_templateObject5517 || (_templateObject5517 = _taggedTemplateLiteral94(["garbage tourist"]))) && have($skill(_templateObject5616 || (_templateObject5616 = _taggedTemplateLiteral94(["Motif"])))) && !have($effect(_templateObject5715 || (_templateObject5715 = _taggedTemplateLiteral94(["Everything Looks Blue"])))), Macro3.if_($monster(_templateObject5813 || (_templateObject5813 = _taggedTemplateLiteral94(["garbage tourist"]))), Macro3.trySkill($skill(_templateObject5913 || (_templateObject5913 = _taggedTemplateLiteral94(["Motif"])))))).externalIf(!get("_latteCopyUsed") && (get("_latteMonster") !== $monster(_templateObject6012 || (_templateObject6012 = _taggedTemplateLiteral94(["garbage tourist"]))) || counter_exports.get("Latte Monster") > 30) && have($item(_templateObject6119 || (_templateObject6119 = _taggedTemplateLiteral94(["latte lovers member's mug"])))), Macro3.if_($monster(_templateObject6217 || (_templateObject6217 = _taggedTemplateLiteral94(["garbage tourist"]))), Macro3.trySkill($skill(_templateObject6315 || (_templateObject6315 = _taggedTemplateLiteral94(["Offer Latte to Opponent"])))))).externalIf(get("_feelNostalgicUsed") < 3 && get("lastCopyableMonster") === $monster(_templateObject6415 || (_templateObject6415 = _taggedTemplateLiteral94(["garbage tourist"]))) && have($skill(_templateObject6512 || (_templateObject6512 = _taggedTemplateLiteral94(["Feel Nostalgic"])))), Macro3.if_("!monsterid ".concat($monster(_templateObject6611 || (_templateObject6611 = _taggedTemplateLiteral94(["garbage tourist"]))).id), Macro3.trySkill($skill(_templateObject6711 || (_templateObject6711 = _taggedTemplateLiteral94(["Feel Nostalgic"])))))).externalIf(opsSetup, Macro3.trySkill($skill(_templateObject6811 || (_templateObject6811 = _taggedTemplateLiteral94(["Throw Shield"]))))).meatStasis(willCrit).externalIf((0, import_kolmafia103.hippyStoneBroken)() && monsterManuelAvailable(), Macro3.if_("(monsterid 1758 || monsterid 1759 || monsterid 1760) && monsterhpbelow ".concat(Math.floor((100 + (0, import_kolmafia103.numericModifier)("Monster Level")) / 5)), Macro3.trySkill($skill(_templateObject6911 || (_templateObject6911 = _taggedTemplateLiteral94(["Feel Superior"])))))).externalIf(sealClubberSetup, Macro3.trySkill($skill(_templateObject7010 || (_templateObject7010 = _taggedTemplateLiteral94(["Furious Wallop"]))))).externalIf(opsSetup, Macro3.attack()).externalIf(katanaSetup, Macro3.trySkill($skill(_templateObject7113 || (_templateObject7113 = _taggedTemplateLiteral94(["Summer Siesta"]))))).externalIf(capeSetup, Macro3.trySkill($skill(_templateObject7213 || (_templateObject7213 = _taggedTemplateLiteral94(["Precision Shot"]))))).externalIf(pigSkinnerSetup, Macro3.attack()).externalIf((0, import_kolmafia103.myClass)() === $class(_templateObject7312 || (_templateObject7312 = _taggedTemplateLiteral94(["Disco Bandit"]))), Macro3.trySkill($skill(_templateObject7412 || (_templateObject7412 = _taggedTemplateLiteral94(["Disco Dance of Doom"])))).trySkill($skill(_templateObject7511 || (_templateObject7511 = _taggedTemplateLiteral94(["Disco Dance II: Electric Boogaloo"])))).trySkill($skill(_templateObject7611 || (_templateObject7611 = _taggedTemplateLiteral94(["Disco Dance 3: Back in the Habit"]))))).externalIf((0, import_kolmafia103.myClass)() === $class(_templateObject7710 || (_templateObject7710 = _taggedTemplateLiteral94(["Cheese Wizard"]))) && (0, import_kolmafia103.myFamiliar)().experience < 400, Macro3.trySkill($skill(_templateObject789 || (_templateObject789 = _taggedTemplateLiteral94(["Stilton Splatter"]))))).kill();
    }
  }, {
    key: "meatStasis",
    value: function meatStasis(checkPassive) {
      if (checkPassive && !monsterManuelAvailable()) {
        return this;
      }
      var checkGet = function(i) {
        return have(i) && ((0, import_kolmafia103.itemAmount)(i) > 0 || (0, import_kolmafia103.retrieveItem)(i));
      };
      var stasisItem = $items(_templateObject795 || (_templateObject795 = _taggedTemplateLiteral94(["facsimile dictionary, dictionary, seal tooth"]))).find(checkGet);
      var pinataCastsAvailable = Math.floor(CinchoDeMayo_exports.currentCinch() / 5);
      var canPinata = CinchoDeMayo_exports.have() && pinataCastsAvailable > 0 && monsterManuelAvailable();
      if (!stasisItem) {
        throw new Error("Acquire a seal tooth and run garbo again.");
      }
      var passiveDamage = maxPassiveDamage() + 5;
      var hpCheck = checkPassive ? "!hppercentbelow 25 && monsterhpabove ".concat(passiveDamage) : "!hppercentbelow 25";
      var hpCheckSixgun = checkPassive ? "!hppercentbelow 25 && monsterhpabove ".concat(passiveDamage + 40) : "!hppercentbelow 25";
      var hpCheckCincho = checkPassive ? "!hppercentbelow 25 && monsterhpabove ".concat(passiveDamage + 50) : "!hppercentbelow 25";
      var stasisRounds = 0;
      if ([$familiar(_templateObject805 || (_templateObject805 = _taggedTemplateLiteral94(["Cocoabo"]))), $familiar(_templateObject8112 || (_templateObject8112 = _taggedTemplateLiteral94(["Feather Boa Constrictor"]))), $familiar(_templateObject8212 || (_templateObject8212 = _taggedTemplateLiteral94(["Ninja Pirate Zombie Robot"]))), $familiar(_templateObject8312 || (_templateObject8312 = _taggedTemplateLiteral94(["Stocking Mimic"])))].includes((0, import_kolmafia103.myFamiliar)())) {
        stasisRounds = 10;
      }
      if ((0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject8411 || (_templateObject8411 = _taggedTemplateLiteral94(["Hobo Monkey"]))) || (0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject8511 || (_templateObject8511 = _taggedTemplateLiteral94(["Jill-of-All-Trades"]))) || (0, import_kolmafia103.haveEquipped)($item(_templateObject8610 || (_templateObject8610 = _taggedTemplateLiteral94(["Buddy Bjorn"])))) || (0, import_kolmafia103.haveEquipped)($item(_templateObject875 || (_templateObject875 = _taggedTemplateLiteral94(["Crown of Thrones"])))) || get("_bittycar")) {
        stasisRounds = 20;
      }
      if (isQuickCombat()) {
        stasisRounds = Math.min(5, stasisRounds);
      }
      return this.if_("monstername angry tourist || monstername garbage tourist || monstername horrible tourist family || monstername Knob Goblin Embezzler || monstername sausage goblin", Macro3.externalIf(have($item(_templateObject884 || (_templateObject884 = _taggedTemplateLiteral94(["Time-Spinner"])))), Macro3.if_("".concat(hpCheck, " && monstername sausage goblin"), Macro3.tryHaveItem($item(_templateObject894 || (_templateObject894 = _taggedTemplateLiteral94(["Time-Spinner"])))))).externalIf(have($skill(_templateObject904 || (_templateObject904 = _taggedTemplateLiteral94(["Meteor Lore"])))), Macro3.if_("".concat(hpCheck, " && monstername sausage goblin"), Macro3.tryHaveSkill($skill(_templateObject9112 || (_templateObject9112 = _taggedTemplateLiteral94(["Micrometeorite"])))))).externalIf((0, import_kolmafia103.haveEquipped)($item(_templateObject9212 || (_templateObject9212 = _taggedTemplateLiteral94(["Pantsgiving"])))), Macro3.if_("".concat(hpCheck), Macro3.trySkill($skill(_templateObject9311 || (_templateObject9311 = _taggedTemplateLiteral94(["Pocket Crumbs"])))))).externalIf(SourceTerminal_exports.getSkills().includes($skill(_templateObject9411 || (_templateObject9411 = _taggedTemplateLiteral94(["Extract"])))), Macro3.if_("".concat(hpCheck), Macro3.trySkill($skill(_templateObject9510 || (_templateObject9510 = _taggedTemplateLiteral94(["Extract"])))))).externalIf((0, import_kolmafia103.haveEquipped)($item(_templateObject965 || (_templateObject965 = _taggedTemplateLiteral94(["vampyric cloake"])))) && get("_vampyreCloakeFormUses") < 10, Macro3.if_("".concat(hpCheck), Macro3.tryHaveSkill($skill(_templateObject975 || (_templateObject975 = _taggedTemplateLiteral94(["Become a Wolf"])))))).externalIf((0, import_kolmafia103.haveEquipped)($item(_templateObject984 || (_templateObject984 = _taggedTemplateLiteral94(["Cincho de Mayo"])))) && canPinata, Macro3.while_("".concat(hpCheckCincho, " && hasskill ").concat($skill(_templateObject994 || (_templateObject994 = _taggedTemplateLiteral94(["Cincho: Projectile Pi\xF1ata"]))).id), Macro3.trySkill($skill(_templateObject1004 || (_templateObject1004 = _taggedTemplateLiteral94(["Cincho: Projectile Pi\xF1ata"])))))).externalIf(have($item(_templateObject10112 || (_templateObject10112 = _taggedTemplateLiteral94(["porquoise-handled sixgun"])))), Macro3.if_("".concat(hpCheckSixgun), Macro3.tryItem($item(_templateObject10212 || (_templateObject10212 = _taggedTemplateLiteral94(["porquoise-handled sixgun"])))))).while_("".concat(hpCheck, " && !pastround ").concat(stasisRounds), Macro3.item(stasisItem)));
    }
  }, {
    key: "startCombat",
    value: function startCombat() {
      return this.trySingAlong().tryHaveSkill($skill(_templateObject10311 || (_templateObject10311 = _taggedTemplateLiteral94(["Curse of Weaksauce"])))).familiarActions().externalIf(get("cosmicBowlingBallReturnCombats") < 1, Macro3.trySkill($skill(_templateObject10410 || (_templateObject10410 = _taggedTemplateLiteral94(["Bowl Straight Up"]))))).externalIf((0, import_kolmafia103.haveEquipped)($item(_templateObject1054 || (_templateObject1054 = _taggedTemplateLiteral94(["vampyric cloake"])))) && get("_vampyreCloakeFormUses") < 10, Macro3.tryHaveSkill($skill(_templateObject1064 || (_templateObject1064 = _taggedTemplateLiteral94(["Become a Wolf"]))))).externalIf((0, import_kolmafia103.haveEquipped)($item(_templateObject1074 || (_templateObject1074 = _taggedTemplateLiteral94(["Pantsgiving"])))), Macro3.trySkill($skill(_templateObject1084 || (_templateObject1084 = _taggedTemplateLiteral94(["Pocket Crumbs"]))))).externalIf(SourceTerminal_exports.getSkills().includes($skill(_templateObject1094 || (_templateObject1094 = _taggedTemplateLiteral94(["Extract"])))), Macro3.trySkill($skill(_templateObject1104 || (_templateObject1104 = _taggedTemplateLiteral94(["Extract"]))))).tryHaveItem($item(_templateObject11112 || (_templateObject11112 = _taggedTemplateLiteral94(["porquoise-handled sixgun"])))).externalIf(have($skill(_templateObject11212 || (_templateObject11212 = _taggedTemplateLiteral94(["Meteor Lore"])))), Macro3.trySkill($skill(_templateObject11311 || (_templateObject11311 = _taggedTemplateLiteral94(["Micrometeorite"]))))).tryHaveItem($item(_templateObject1147 || (_templateObject1147 = _taggedTemplateLiteral94(["Time-Spinner"])))).tryHaveItem($item(_templateObject1154 || (_templateObject1154 = _taggedTemplateLiteral94(["Rain-Doh indigo cup"])))).tryHaveItem($item(_templateObject1164 || (_templateObject1164 = _taggedTemplateLiteral94(["Rain-Doh blue balls"])))).externalIf((0, import_kolmafia103.haveEquipped)($item(_templateObject1174 || (_templateObject1174 = _taggedTemplateLiteral94(["Buddy Bjorn"])))) || (0, import_kolmafia103.haveEquipped)($item(_templateObject1184 || (_templateObject1184 = _taggedTemplateLiteral94(["Crown of Thrones"])))), Macro3.while_("!pastround 3 && !hppercentbelow 25", Macro3.item($item(_templateObject1193 || (_templateObject1193 = _taggedTemplateLiteral94(["seal tooth"])))))).externalIf([$familiar(_templateObject1203 || (_templateObject1203 = _taggedTemplateLiteral94(["Cocoabo"]))), $familiar(_templateObject12111 || (_templateObject12111 = _taggedTemplateLiteral94(["Feather Boa Constrictor"]))), $familiar(_templateObject12211 || (_templateObject12211 = _taggedTemplateLiteral94(["Ninja Pirate Zombie Robot"]))), $familiar(_templateObject12310 || (_templateObject12310 = _taggedTemplateLiteral94(["Stocking Mimic"])))].some(function(familiar7) {
        return (0, import_kolmafia103.myFamiliar)() === familiar7;
      }), Macro3.while_("!pastround 10 && !hppercentbelow 25", Macro3.item($item(_templateObject1243 || (_templateObject1243 = _taggedTemplateLiteral94(["seal tooth"])))))).externalIf((0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject1253 || (_templateObject1253 = _taggedTemplateLiteral94(["Hobo Monkey"]))), Macro3.while_('!match "shoulder, and hands you some Meat." && !pastround 5 && !hppercentbelow 25', Macro3.item($item(_templateObject1263 || (_templateObject1263 = _taggedTemplateLiteral94(["seal tooth"]))))));
    }
  }, {
    key: "kill",
    value: function kill() {
      var riftId = (0, import_kolmafia103.toInt)($location(_templateObject1273 || (_templateObject1273 = _taggedTemplateLiteral94(["Shadow Rift"]))));
      var doingYachtzee = globalOptions.prefs.yachtzeechain && !get("_garboYachtzeeChainCompleted");
      var canPinata = (0, import_kolmafia103.haveEquipped)($item(_templateObject1283 || (_templateObject1283 = _taggedTemplateLiteral94(["Cincho de Mayo"])))) && CinchoDeMayo_exports.currentCinch() >= 5;
      return this.externalIf((0, import_kolmafia103.myClass)() === $class(_templateObject1293 || (_templateObject1293 = _taggedTemplateLiteral94(["Sauceror"]))) && have($skill(_templateObject1303 || (_templateObject1303 = _taggedTemplateLiteral94(["Curse of Weaksauce"])))), Macro3.trySkill($skill(_templateObject13111 || (_templateObject13111 = _taggedTemplateLiteral94(["Curse of Weaksauce"]))))).externalIf(!doingYachtzee && canPinata, Macro3.while_("hasskill ".concat($skill(_templateObject13210 || (_templateObject13210 = _taggedTemplateLiteral94(["Cincho: Projectile Pi\xF1ata"]))).id, " && !pastround 24 && !hppercentbelow 25"), Macro3.trySkill($skill(_templateObject13310 || (_templateObject13310 = _taggedTemplateLiteral94(["Cincho: Projectile Pi\xF1ata"])))))).tryHaveSkill($skill(_templateObject1343 || (_templateObject1343 = _taggedTemplateLiteral94(["Become a Wolf"])))).externalIf(!((0, import_kolmafia103.myClass)() === $class(_templateObject1353 || (_templateObject1353 = _taggedTemplateLiteral94(["Sauceror"]))) && have($skill(_templateObject1363 || (_templateObject1363 = _taggedTemplateLiteral94(["Curse of Weaksauce"]))))), Macro3.while_("!pastround 24 && !hppercentbelow 25 && !missed 1 && !snarfblat ".concat(riftId), Macro3.attack())).while_("hasskill Saucegeyser", Macro3.skill($skill(_templateObject1373 || (_templateObject1373 = _taggedTemplateLiteral94(["Saucegeyser"]))))).while_("hasskill Weapon of the Pastalord", Macro3.skill($skill(_templateObject1383 || (_templateObject1383 = _taggedTemplateLiteral94(["Weapon of the Pastalord"]))))).while_("hasskill Cannelloni Cannon", Macro3.skill($skill(_templateObject1393 || (_templateObject1393 = _taggedTemplateLiteral94(["Cannelloni Cannon"]))))).while_("hasskill Wave of Sauce", Macro3.skill($skill(_templateObject1403 || (_templateObject1403 = _taggedTemplateLiteral94(["Wave of Sauce"]))))).while_("hasskill Saucestorm", Macro3.skill($skill(_templateObject14111 || (_templateObject14111 = _taggedTemplateLiteral94(["Saucestorm"]))))).while_("hasskill Northern Explosion && snarfblat ".concat(riftId), Macro3.skill($skill(_templateObject14210 || (_templateObject14210 = _taggedTemplateLiteral94(["Northern Explosion"]))))).while_("hasskill Lunging Thrust-Smack && !snarfblat ".concat(riftId), Macro3.skill($skill(_templateObject1436 || (_templateObject1436 = _taggedTemplateLiteral94(["Lunging Thrust-Smack"]))))).attack().repeat();
    }
  }, {
    key: "basicCombat",
    value: function basicCombat() {
      return this.startCombat().kill();
    }
  }, {
    key: "ghostBustin",
    value: function ghostBustin() {
      var _classStun;
      var stunRounds = 0;
      var classStun = null;
      var extraStun = null;
      if (have($item(_templateObject1443 || (_templateObject1443 = _taggedTemplateLiteral94(["Rain-Doh blue balls"])))))
        stunRounds++;
      if (get("lovebugsUnlocked"))
        stunRounds++;
      if ((0, import_kolmafia103.myClass)() === $class(_templateObject1453 || (_templateObject1453 = _taggedTemplateLiteral94(["Seal Clubber"]))) && have($skill(_templateObject1463 || (_templateObject1463 = _taggedTemplateLiteral94(["Club Foot"])))) && (0, import_kolmafia103.myMp)() >= (0, import_kolmafia103.mpCost)($skill(_templateObject1473 || (_templateObject1473 = _taggedTemplateLiteral94(["Club Foot"]))))) {
        var clubRounds = Math.min((0, import_kolmafia103.myFury)(), 3) + ((0, import_kolmafia103.itemType)((0, import_kolmafia103.equippedItem)($slot(_templateObject1483 || (_templateObject1483 = _taggedTemplateLiteral94(["weapon"]))))) === "club" ? 1 : 0) - 1;
        if (stunRounds > 0) {
          classStun = $skill(_templateObject1493 || (_templateObject1493 = _taggedTemplateLiteral94(["Club Foot"])));
          stunRounds += clubRounds;
        }
      } else if ((0, import_kolmafia103.myClass)() === $class(_templateObject1503 || (_templateObject1503 = _taggedTemplateLiteral94(["Turtle Tamer"]))) && have($skill(_templateObject15111 || (_templateObject15111 = _taggedTemplateLiteral94(["Shell Up"])))) && (0, import_kolmafia103.myMp)() >= (0, import_kolmafia103.mpCost)($skill(_templateObject15210 || (_templateObject15210 = _taggedTemplateLiteral94(["Shell Up"]))))) {
        var shellRounds = (have($effect(_templateObject1534 || (_templateObject1534 = _taggedTemplateLiteral94(["Blessing of the Storm Tortoise"])))) ? 2 : 0) + (have($effect(_templateObject1543 || (_templateObject1543 = _taggedTemplateLiteral94(["Grand Blessing of the Storm Tortoise"])))) ? 3 : 0) + (have($effect(_templateObject1553 || (_templateObject1553 = _taggedTemplateLiteral94(["Glorious Blessing of the Storm Tortoise"])))) ? 4 : 0);
        if (shellRounds > 0) {
          classStun = $skill(_templateObject1563 || (_templateObject1563 = _taggedTemplateLiteral94(["Shell Up"])));
          stunRounds += shellRounds;
        }
      } else if ((0, import_kolmafia103.myClass)() === $class(_templateObject1573 || (_templateObject1573 = _taggedTemplateLiteral94(["Pastamancer"]))) && have($skill(_templateObject1583 || (_templateObject1583 = _taggedTemplateLiteral94(["Entangling Noodles"])))) && (0, import_kolmafia103.myMp)() >= (0, import_kolmafia103.mpCost)($skill(_templateObject1593 || (_templateObject1593 = _taggedTemplateLiteral94(["Entangling Noodles"]))))) {
        classStun = $skill(_templateObject1603 || (_templateObject1603 = _taggedTemplateLiteral94(["Entangling Noodles"])));
        stunRounds += 2;
      } else if ((0, import_kolmafia103.myClass)() === $class(_templateObject16111 || (_templateObject16111 = _taggedTemplateLiteral94(["Sauceror"]))) && have($skill(_templateObject16210 || (_templateObject16210 = _taggedTemplateLiteral94(["Soul Bubble"])))) && (0, import_kolmafia103.mySoulsauce)() >= 5) {
        classStun = $skill(_templateObject1633 || (_templateObject1633 = _taggedTemplateLiteral94(["Soul Bubble"])));
        stunRounds += 2;
      } else if ((0, import_kolmafia103.myClass)() === $class(_templateObject1643 || (_templateObject1643 = _taggedTemplateLiteral94(["Accordion Thief"]))) && have($skill(_templateObject1653 || (_templateObject1653 = _taggedTemplateLiteral94(["Accordion Bash"])))) && (0, import_kolmafia103.itemType)((0, import_kolmafia103.equippedItem)($slot(_templateObject1663 || (_templateObject1663 = _taggedTemplateLiteral94(["weapon"]))))) === "accordion" && (0, import_kolmafia103.myMp)() >= (0, import_kolmafia103.mpCost)($skill(_templateObject1673 || (_templateObject1673 = _taggedTemplateLiteral94(["Accordion Bash"]))))) {
        classStun = $skill(_templateObject1683 || (_templateObject1683 = _taggedTemplateLiteral94(["Accordion Bash"])));
        stunRounds += 2;
      } else if ((0, import_kolmafia103.myClass)() === $class(_templateObject1693 || (_templateObject1693 = _taggedTemplateLiteral94(["Disco Bandit"])))) {
      }
      if (stunRounds < 3 && classStun !== $skill(_templateObject1703 || (_templateObject1703 = _taggedTemplateLiteral94(["Entangling Noodles"]))) && have($skill(_templateObject17111 || (_templateObject17111 = _taggedTemplateLiteral94(["Shadow Noodles"])))) && (0, import_kolmafia103.myMp)() >= (0, import_kolmafia103.mpCost)((_classStun = classStun) !== null && _classStun !== void 0 ? _classStun : $skill.none) + (0, import_kolmafia103.mpCost)($skill(_templateObject17210 || (_templateObject17210 = _taggedTemplateLiteral94(["Shadow Noodles"]))))) {
        extraStun = $skill(_templateObject1733 || (_templateObject1733 = _taggedTemplateLiteral94(["Shadow Noodles"])));
        stunRounds += 2;
      }
      if (stunRounds < 3) {
        return this.basicCombat();
      }
      return this.trySingAlong().familiarActions().tryHaveItem($item(_templateObject1743 || (_templateObject1743 = _taggedTemplateLiteral94(["Rain-Doh blue balls"])))).externalIf(get("lovebugsUnlocked"), Macro3.trySkill($skill(_templateObject1753 || (_templateObject1753 = _taggedTemplateLiteral94(["Summon Love Gnats"]))))).tryHaveSkill(classStun).tryHaveSkill(extraStun).trySkill($skill(_templateObject1763 || (_templateObject1763 = _taggedTemplateLiteral94(["Shoot Ghost"])))).trySkill($skill(_templateObject1773 || (_templateObject1773 = _taggedTemplateLiteral94(["Shoot Ghost"])))).trySkill($skill(_templateObject1783 || (_templateObject1783 = _taggedTemplateLiteral94(["Shoot Ghost"])))).trySkill($skill(_templateObject1793 || (_templateObject1793 = _taggedTemplateLiteral94(["Trap Ghost"])))).kill();
    }
  }, {
    key: "embezzler",
    value: function embezzler3() {
      var doneHabitat = !have($skill(_templateObject1803 || (_templateObject1803 = _taggedTemplateLiteral94(["Just the Facts"])))) || get("_monsterHabitatsRecalled") === 3 && get("_monsterHabitatsFightsLeft") <= 1;
      return this.if_(embezzler, Macro3.if_($location(_templateObject18111 || (_templateObject18111 = _taggedTemplateLiteral94(["The Briny Deeps"]))), Macro3.tryCopier($item(_templateObject18210 || (_templateObject18210 = _taggedTemplateLiteral94(["pulled green taffy"]))))).externalIf((0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject1833 || (_templateObject1833 = _taggedTemplateLiteral94(["Reanimated Reanimator"]))), Macro3.trySkill($skill(_templateObject1843 || (_templateObject1843 = _taggedTemplateLiteral94(["Wink at"]))))).externalIf((0, import_kolmafia103.myFamiliar)() === $familiar(_templateObject1853 || (_templateObject1853 = _taggedTemplateLiteral94(["Obtuse Angel"]))), Macro3.trySkill($skill(_templateObject1863 || (_templateObject1863 = _taggedTemplateLiteral94(["Fire a badly romantic arrow"]))))).externalIf(doneHabitat && get("beGregariousCharges") > 0 && (get("beGregariousMonster") !== embezzler || have($item(_templateObject1873 || (_templateObject1873 = _taggedTemplateLiteral94(["miniature crystal ball"])))) ? get("beGregariousFightsLeft") === 0 : get("beGregariousFightsLeft") <= 1), Macro3.trySkill($skill(_templateObject1883 || (_templateObject1883 = _taggedTemplateLiteral94(["Be Gregarious"]))))).externalIf(have($skill(_templateObject1893 || (_templateObject1893 = _taggedTemplateLiteral94(["Just the Facts"])))) && get("_monsterHabitatsRecalled") < 3 && (get("_monsterHabitatsMonster") !== embezzler || have($item(_templateObject1903 || (_templateObject1903 = _taggedTemplateLiteral94(["miniature crystal ball"])))) ? get("_monsterHabitatsFightsLeft") === 0 : get("_monsterHabitatsFightsLeft") <= 1), Macro3.trySkill($skill(_templateObject19111 || (_templateObject19111 = _taggedTemplateLiteral94(["Recall Facts: Monster Habitats"]))))).externalIf(have($skill(_templateObject19210 || (_templateObject19210 = _taggedTemplateLiteral94(["Recall Facts: %phylum Circadian Rhythms"])))) && !get("_circadianRhythmsRecalled"), Macro3.trySkill($skill(_templateObject1933 || (_templateObject1933 = _taggedTemplateLiteral94(["Recall Facts: %phylum Circadian Rhythms"]))))).externalIf(SourceTerminal_exports.getDigitizeMonster() !== embezzler || shouldRedigitize(), Macro3.tryCopier($skill(_templateObject1943 || (_templateObject1943 = _taggedTemplateLiteral94(["Digitize"]))))).tryCopier($item(_templateObject1953 || (_templateObject1953 = _taggedTemplateLiteral94(["Spooky Putty sheet"])))).tryCopier($item(_templateObject1963 || (_templateObject1963 = _taggedTemplateLiteral94(["Rain-Doh black box"])))).tryCopier($item(_templateObject1973 || (_templateObject1973 = _taggedTemplateLiteral94(["4-d camera"])))).tryCopier($item(_templateObject1983 || (_templateObject1983 = _taggedTemplateLiteral94(["unfinished ice sculpture"])))).externalIf(get("_enamorangs") === 0, Macro3.tryCopier($item(_templateObject1993 || (_templateObject1993 = _taggedTemplateLiteral94(["LOV Enamorang"]))))).meatKill()).abortWithMsg("Expected ".concat(embezzler, " but encountered something else."));
    }
  }], [{
    key: "abortWithMsg",
    value: function abortWithMsg(errorMessage) {
      return new Macro3().step('abort "'.concat(errorMessage, '"'));
    }
  }, {
    key: "tryHaveSkill",
    value: function tryHaveSkill(skill) {
      return new Macro3().tryHaveSkill(skill);
    }
  }, {
    key: "tryHaveItem",
    value: function tryHaveItem(item10) {
      return new Macro3().tryHaveItem(item10);
    }
  }, {
    key: "trySingAlong",
    value: function trySingAlong() {
      return new Macro3().trySingAlong();
    }
  }, {
    key: "familiarActions",
    value: function familiarActions() {
      return new Macro3().familiarActions();
    }
  }, {
    key: "tryCopier",
    value: function tryCopier(itemOrSkill) {
      return new Macro3().tryCopier(itemOrSkill);
    }
  }, {
    key: "meatKill",
    value: function meatKill() {
      return new Macro3().meatKill();
    }
  }, {
    key: "meatStasis",
    value: function meatStasis(checkPassive) {
      return new Macro3().meatStasis(checkPassive);
    }
  }, {
    key: "startCombat",
    value: function startCombat() {
      return new Macro3().startCombat();
    }
  }, {
    key: "kill",
    value: function kill() {
      return new Macro3().kill();
    }
  }, {
    key: "basicCombat",
    value: function basicCombat() {
      return new Macro3().basicCombat();
    }
  }, {
    key: "ghostBustin",
    value: function ghostBustin() {
      return new Macro3().ghostBustin();
    }
  }, {
    key: "embezzler",
    value: function embezzler3() {
      return new Macro3().embezzler();
    }
  }]);
  return Macro3;
}(StrictMacro);
function customizeMacro(macro) {
  return Macro2.if_($monsters(_templateObject2003 || (_templateObject2003 = _taggedTemplateLiteral94(["giant rubber spider, time-spinner prank"]))), Macro2.kill()).externalIf(have($effect(_templateObject20111 || (_templateObject20111 = _taggedTemplateLiteral94(["Eldritch Attunement"])))), Macro2.if_($monster(_templateObject20210 || (_templateObject20210 = _taggedTemplateLiteral94(["Eldritch Tentacle"]))), Macro2.basicCombat())).ifHolidayWanderer(Macro2.externalIf((0, import_kolmafia103.haveEquipped)($item(_templateObject2033 || (_templateObject2033 = _taggedTemplateLiteral94(["backup camera"])))) && get("_backUpUses") < 11 && get("lastCopyableMonster") === $monster(_templateObject2043 || (_templateObject2043 = _taggedTemplateLiteral94(["Knob Goblin Embezzler"]))) && (0, import_kolmafia103.myFamiliar)() === meatFamiliar(), Macro2.skill($skill(_templateObject2053 || (_templateObject2053 = _taggedTemplateLiteral94(["Back-Up to your Last Enemy"])))).step(macro), Macro2.basicCombat())).step(macro);
}
function makeCcs(macro) {
  (0, import_kolmafia103.writeCcs)('[default]\n"'.concat(customizeMacro(macro).toString(), '"'), "garbo");
  (0, import_kolmafia103.setCcs)("garbo");
}
function runCombatBy(initiateCombatAction) {
  try {
    var result = initiateCombatAction();
    while ((0, import_kolmafia103.inMultiFight)())
      (0, import_kolmafia103.runCombat)();
    if ((0, import_kolmafia103.choiceFollowsFight)())
      (0, import_kolmafia103.visitUrl)("choice.php");
    return result;
  } catch (e) {
    throw "Combat exception! Last macro error: ".concat(get("lastMacroError"), ". Exception ").concat(e, ".");
  }
}
function withMacro(macro, action) {
  var tryAuto = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if ((0, import_kolmafia103.getAutoAttack)() !== 0)
    (0, import_kolmafia103.setAutoAttack)(0);
  if (tryAuto)
    customizeMacro(macro).setAutoAttack();
  makeCcs(macro);
  try {
    return runCombatBy(action);
  } finally {
    if (tryAuto)
      (0, import_kolmafia103.setAutoAttack)(0);
  }
}
function garboAdventure(loc, macro) {
  if ((0, import_kolmafia103.getAutoAttack)() !== 0)
    (0, import_kolmafia103.setAutoAttack)(0);
  makeCcs(macro);
  runCombatBy(function() {
    return (0, import_kolmafia103.adv1)(loc, -1, "");
  });
}
function garboAdventureAuto(loc, autoMacro) {
  var nextMacro = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Macro2.abort();
  autoMacro.setAutoAttack();
  makeCcs(nextMacro);
  runCombatBy(function() {
    return (0, import_kolmafia103.adv1)(loc, -1, "");
  });
}
var GarboStrategy = /* @__PURE__ */ function(_CombatStrategy) {
  _inherits8(GarboStrategy2, _CombatStrategy);
  var _super2 = _createSuper7(GarboStrategy2);
  function GarboStrategy2(autoattack) {
    var _this;
    var postAuto = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : autoattack;
    _classCallCheck28(this, GarboStrategy2);
    _this = _super2.call(this);
    _this.autoattack(autoattack).macro(postAuto);
    return _this;
  }
  return _createClass28(GarboStrategy2);
}(CombatStrategy);

// src/clan.ts
var _templateObject790;
var _templateObject2179;
var _templateObject3159;
var _templateObject4141;
var _templateObject5130;
var _templateObject6120;
var _templateObject791;
function _createForOfIteratorHelper32(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray63(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _classCallCheck29(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties29(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey41(descriptor.key), descriptor);
  }
}
function _createClass29(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties29(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties29(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty37(obj, key, value) {
  key = _toPropertyKey41(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey41(arg) {
  var key = _toPrimitive41(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive41(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral95(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray40(arr) {
  return _arrayWithoutHoles40(arr) || _iterableToArray40(arr) || _unsupportedIterableToArray63(arr) || _nonIterableSpread40();
}
function _nonIterableSpread40() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray63(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray63(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray63(o, minLen);
}
function _iterableToArray40(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles40(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray63(arr);
}
function _arrayLikeToArray63(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var stashItems = get("garboStashItems", "").split(",").filter(function(x) {
  return x.trim().length > 0;
}).map(function(id) {
  return (0, import_kolmafia104.toItem)(id);
});
function withStash(itemsToTake, action) {
  var manager = new StashManager();
  try {
    manager.take.apply(manager, _toConsumableArray40(itemsToTake));
    return action();
  } finally {
    manager.putBackAll();
  }
}
function withVIPClan(action) {
  var clanIdOrNameString = globalOptions.prefs.vipClan;
  var clanIdOrName = clanIdOrNameString.match(/^\d+$/) ? parseInt(clanIdOrNameString) : clanIdOrNameString;
  if (clanIdOrName === "" && have($item(_templateObject790 || (_templateObject790 = _taggedTemplateLiteral95(["Clan VIP Lounge key"]))))) {
    if (userConfirmDialog("The preference 'garbo_vipClan' is not set. Use the current clan as a VIP clan? (Defaults to yes in 15 seconds)", true, 15e3)) {
      clanIdOrName = (0, import_kolmafia104.getClanId)();
      globalOptions.prefs.vipClan = "".concat(clanIdOrName);
      _set("garbo_vipClan", clanIdOrName);
    }
  }
  return withClan(clanIdOrName || (0, import_kolmafia104.getClanId)(), action);
}
function withClan(clanIdOrName, action) {
  var startingClanId = (0, import_kolmafia104.getClanId)();
  Clan.join(clanIdOrName);
  try {
    return action();
  } finally {
    Clan.join(startingClanId);
  }
}
var StashManager = /* @__PURE__ */ function() {
  function StashManager2() {
    var _this = this;
    _classCallCheck29(this, StashManager2);
    _defineProperty37(this, "clanIdOrName", void 0);
    _defineProperty37(this, "enabled", void 0);
    _defineProperty37(this, "taken", /* @__PURE__ */ new Map());
    var clanIdOrName = globalOptions.prefs.stashClan;
    this.clanIdOrName = clanIdOrName.match(/^\d+$/) ? parseInt(clanIdOrName) : clanIdOrName;
    this.enabled = ![0, "", "none"].some(function(id) {
      return id === _this.clanIdOrName;
    });
  }
  _createClass29(StashManager2, [{
    key: "take",
    value: function take() {
      var _this = this;
      for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
        items[_key] = arguments[_key];
      }
      if (items.length === 0) {
        return;
      }
      if (!this.enabled) {
        (0, import_kolmafia104.print)('Stash access is disabled. Ignoring request to borrow "'.concat(items.map(function(value) {
          return value.name;
        }).join(", "), '" from clan stash.'), HIGHLIGHT);
        return;
      }
      withClan(this.clanIdOrName, function() {
        for (var _i = 0, _items = items; _i < _items.length; _i++) {
          var item10 = _items[_i];
          if (have(item10))
            continue;
          if (getFoldGroup(item10).some(function(fold2) {
            return have(fold2);
          })) {
            (0, import_kolmafia104.cliExecute)("fold ".concat(item10.name));
            continue;
          }
          var foldArray = [item10].concat(_toConsumableArray40(getFoldGroup(item10)));
          (0, import_kolmafia104.refreshStash)();
          var _iterator = _createForOfIteratorHelper32(foldArray), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var fold = _step.value;
              if ((0, import_kolmafia104.stashAmount)(fold) > 0) {
                try {
                  if ((0, import_kolmafia104.takeStash)(1, fold)) {
                    var _this$taken$get;
                    (0, import_kolmafia104.print)("Took ".concat(fold.name, " from stash in ").concat((0, import_kolmafia104.getClanName)(), "."), HIGHLIGHT);
                    if (fold !== item10)
                      (0, import_kolmafia104.cliExecute)("fold ".concat(item10.name));
                    _this.taken.set(item10, ((_this$taken$get = _this.taken.get(item10)) !== null && _this$taken$get !== void 0 ? _this$taken$get : 0) + 1);
                    stashItems.push(fold);
                    break;
                  } else {
                    (0, import_kolmafia104.print)("Failed to take ".concat(fold.name, " from the stash. Do you have stash access in ").concat((0, import_kolmafia104.getClanName)(), "?"), "red");
                  }
                } catch (_unused) {
                  (0, import_kolmafia104.print)("Failed to take ".concat(fold.name, " from stash in ").concat((0, import_kolmafia104.getClanName)(), "."), "red");
                }
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          if (have(item10))
            continue;
        }
      });
    }
    /**
     * Ensure at least one of each of {items} in inventory.
     * @param items Items to take from the stash.
     */
  }, {
    key: "ensure",
    value: function ensure() {
      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        items[_key2] = arguments[_key2];
      }
      this.take.apply(this, _toConsumableArray40(items.filter(function(item10) {
        return (0, import_kolmafia104.availableAmount)(item10) === 0;
      })));
    }
  }, {
    key: "putBack",
    value: function putBack() {
      var _this = this;
      for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        items[_key3] = arguments[_key3];
      }
      if (items.length === 0)
        return;
      if ((0, import_kolmafia104.visitUrl)("fight.php").includes("You're fighting")) {
        var _Macro$if_;
        (0, import_kolmafia104.print)("In fight, trying to get away to return items to stash...", HIGHLIGHT);
        (_Macro$if_ = Macro2.if_($monster(_templateObject2179 || (_templateObject2179 = _taggedTemplateLiteral95(["Knob Goblin Embezzler"]))), Macro2.attack().repeat())).tryItem.apply(_Macro$if_, _toConsumableArray40($items(_templateObject3159 || (_templateObject3159 = _taggedTemplateLiteral95(["Louder Than Bomb, divine champagne popper"]))))).step("runaway").submit();
      } else {
        (0, import_kolmafia104.visitUrl)("main.php");
        if ((0, import_kolmafia104.handlingChoice)()) {
          (0, import_kolmafia104.print)("I'm stuck in a choice, unfortunately, but were I not, I'd like to return the following items to your clan stash:", "red");
          items.forEach(function(item10) {
            return (0, import_kolmafia104.print)("".concat(item10.name, ","), "red");
          });
        }
      }
      withClan(this.clanIdOrName, function() {
        var _loop = function _loop2() {
          var _this$taken$get2;
          var item10 = _items2[_i2];
          var count = (_this$taken$get2 = _this.taken.get(item10)) !== null && _this$taken$get2 !== void 0 ? _this$taken$get2 : 0;
          if (count > 0) {
            (0, import_kolmafia104.retrieveItem)(count, item10);
            if (item10 === $item(_templateObject4141 || (_templateObject4141 = _taggedTemplateLiteral95(["Buddy Bjorn"])))) {
              (0, import_kolmafia104.visitUrl)("desc_item.php?whichitem=".concat($item(_templateObject5130 || (_templateObject5130 = _taggedTemplateLiteral95(["Buddy Bjorn"]))).descid));
              (0, import_kolmafia104.bjornifyFamiliar)($familiar.none);
            }
            if (item10 === $item(_templateObject6120 || (_templateObject6120 = _taggedTemplateLiteral95(["Crown of Thrones"])))) {
              (0, import_kolmafia104.visitUrl)("desc_item.php?whichitem=".concat($item(_templateObject791 || (_templateObject791 = _taggedTemplateLiteral95(["Crown of Thrones"]))).descid));
              (0, import_kolmafia104.enthroneFamiliar)($familiar.none);
            }
            if ((0, import_kolmafia104.equippedAmount)(item10) > 0) {
              var slots = import_kolmafia104.Slot.all().filter(function(s) {
                return (0, import_kolmafia104.equippedItem)(s) === item10;
              });
              slots.forEach(function(s) {
                return (0, import_kolmafia104.equip)(s, $item.none);
              });
            }
            if ((0, import_kolmafia104.itemAmount)(item10) >= count && (0, import_kolmafia104.putStash)(count, item10)) {
              var index = stashItems.indexOf(item10);
              if (index >= 0)
                stashItems.splice(stashItems.indexOf(item10), 1);
              (0, import_kolmafia104.print)("Returned ".concat(item10.name, " to stash in ").concat((0, import_kolmafia104.getClanName)(), "."), HIGHLIGHT);
              _this.taken.delete(item10);
            } else {
              throw "Failed to return ".concat(item10.name, " to stash.");
            }
          }
        };
        for (var _i2 = 0, _items2 = items; _i2 < _items2.length; _i2++) {
          _loop();
        }
      });
    }
    /**
     * Put all items back in the stash.
     */
  }, {
    key: "putBackAll",
    value: function putBackAll() {
      this.putBack.apply(this, _toConsumableArray40(this.taken.keys()));
    }
  }]);
  return StashManager2;
}();

// src/tasks/ascending.ts
var import_kolmafia105 = require("kolmafia");
init_dist();
var _templateObject796;
var _templateObject2180;
var _templateObject3160;
var _templateObject4142;
var _templateObject5131;
var _templateObject6121;
var _templateObject797;
var _templateObject870;
var _templateObject961;
var _templateObject1055;
var _templateObject1148;
var _templateObject1244;
var _templateObject1340;
function _toConsumableArray41(arr) {
  return _arrayWithoutHoles41(arr) || _iterableToArray41(arr) || _unsupportedIterableToArray64(arr) || _nonIterableSpread41();
}
function _nonIterableSpread41() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray64(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray64(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray64(o, minLen);
}
function _iterableToArray41(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles41(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray64(arr);
}
function _arrayLikeToArray64(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral96(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function bestLockPickChoice() {
  return 1 + (0, import_kolmafia105.toInt)(maxBy($items(_templateObject796 || (_templateObject796 = _taggedTemplateLiteral96(["Boris's key lime, Jarlsberg's key lime, Sneaky Pete's key lime"]))), garboValue)) - (0, import_kolmafia105.toInt)($item(_templateObject2180 || (_templateObject2180 = _taggedTemplateLiteral96(["Boris's key lime"]))));
}
var AscendingTasks = [{
  name: "Lock Picking",
  ready: function() {
    return have($skill(_templateObject3160 || (_templateObject3160 = _taggedTemplateLiteral96(["Lock Picking"])))) && globalOptions.ascend;
  },
  completed: function() {
    return get("lockPicked");
  },
  do: function() {
    (0, import_kolmafia105.useSkill)($skill(_templateObject4142 || (_templateObject4142 = _taggedTemplateLiteral96(["Lock Picking"]))));
    if ((0, import_kolmafia105.handlingChoice)())
      (0, import_kolmafia105.runChoice)(-1);
  },
  choices: function() {
    return {
      1414: bestLockPickChoice()
    };
  },
  spendsTurn: false
}].concat(_toConsumableArray41([{
  key: $item(_templateObject5131 || (_templateObject5131 = _taggedTemplateLiteral96(["Boris's key"]))),
  lime: $item(_templateObject6121 || (_templateObject6121 = _taggedTemplateLiteral96(["Boris's key lime"])))
}, {
  key: $item(_templateObject797 || (_templateObject797 = _taggedTemplateLiteral96(["Jarlsberg's key"]))),
  lime: $item(_templateObject870 || (_templateObject870 = _taggedTemplateLiteral96(["Jarlsberg's key lime"])))
}, {
  key: $item(_templateObject961 || (_templateObject961 = _taggedTemplateLiteral96(["Sneaky Pete's key"]))),
  lime: $item(_templateObject1055 || (_templateObject1055 = _taggedTemplateLiteral96(["Sneaky Pete's key lime"])))
}, {
  key: $item(_templateObject1148 || (_templateObject1148 = _taggedTemplateLiteral96(["Richard's star key"]))),
  lime: $item(_templateObject1244 || (_templateObject1244 = _taggedTemplateLiteral96(["star key lime"])))
}].map(function(_ref) {
  var key = _ref.key, lime = _ref.lime;
  return {
    name: "Cook ".concat(lime),
    completed: function() {
      return !have(key) || garboValue(lime) < garboValue($item(_templateObject1340 || (_templateObject1340 = _taggedTemplateLiteral96(["lime"]))));
    },
    do: function() {
      return (0, import_kolmafia105.create)(lime);
    },
    ready: function() {
      return globalOptions.ascend && freeCrafts("food") > 0 || get("hasChef");
    },
    spendsTurn: false
  };
})));
var AscendingQuest = {
  name: "Ascend",
  tasks: AscendingTasks
};

// src/tasks/barfTurn.ts
var import_kolmafia114 = require("kolmafia");
init_dist();

// src/fights.ts
var import_kolmafia112 = require("kolmafia");
init_dist();

// src/dailiespost.ts
function postFreeFightDailySetup() {
  runSafeGarboQuests([PostFreeFightQuest]);
}

// src/post/index.ts
var import_kolmafia109 = require("kolmafia");
init_dist();

// src/post/autumnaton.ts
var import_kolmafia106 = require("kolmafia");
init_dist();
var _templateObject798;
var _templateObject2181;
var _templateObject3161;
var _templateObject4143;
var _templateObject5132;
function _toConsumableArray42(arr) {
  return _arrayWithoutHoles42(arr) || _iterableToArray42(arr) || _unsupportedIterableToArray65(arr) || _nonIterableSpread42();
}
function _nonIterableSpread42() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray65(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray65(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray65(o, minLen);
}
function _iterableToArray42(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles42(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray65(arr);
}
function _arrayLikeToArray65(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral97(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var locationBanlist = $locations(_templateObject798 || (_templateObject798 = _taggedTemplateLiteral97(["The Daily Dungeon"])));
var badAttributes = ["LUCKY", "ULTRARARE", "BOSS"];
function bestAutumnatonLocation(locations) {
  return maxBy(mostValuableUpgrade(locations), averageAutumnatonValue);
}
function averageAutumnatonValue(location, acuityOverride, slotOverride) {
  if (location === $location(_templateObject2181 || (_templateObject2181 = _taggedTemplateLiteral97(["Shadow Rift"]))))
    (0, import_kolmafia106.setLocation)($location(_templateObject3161 || (_templateObject3161 = _taggedTemplateLiteral97(["Shadow Rift"]))));
  var rates = (0, import_kolmafia106.appearanceRates)(location);
  var monsters = (0, import_kolmafia106.getMonsters)(location).filter(function(m) {
    return !locationBanlist.includes(location) && !badAttributes.some(function(s) {
      return m.attributes.includes(s);
    }) && rates[m.name] > 0;
  });
  if (monsters.length === 0) {
    return seasonalItemValue(location);
  } else {
    var maximumDrops = slotOverride !== null && slotOverride !== void 0 ? slotOverride : AutumnAton_exports.zoneItems();
    var acuityCutoff = 20 - (acuityOverride !== null && acuityOverride !== void 0 ? acuityOverride : AutumnAton_exports.visualAcuity()) * 5;
    var validDrops = monsters.map(function(m) {
      return (0, import_kolmafia106.itemDropsArray)(m);
    }).flat().map(function(_ref) {
      var rate = _ref.rate, type = _ref.type, drop = _ref.drop;
      return {
        value: !["c", "0"].includes(type) ? garboValue(drop, true) : 0,
        preAcuityExpectation: ["c", "0", ""].includes(type) ? 2 * rate / 100 : 0,
        postAcuityExpectation: rate >= acuityCutoff && ["c", "0", ""].includes(type) ? 8 * rate / 100 : 0
      };
    });
    var overallExpectedDropQuantity = sum(validDrops, function(_ref2) {
      var preAcuityExpectation = _ref2.preAcuityExpectation, postAcuityExpectation = _ref2.postAcuityExpectation;
      return preAcuityExpectation + postAcuityExpectation;
    });
    var expectedCollectionValue = sum(validDrops, function(_ref3) {
      var value = _ref3.value, preAcuityExpectation = _ref3.preAcuityExpectation, postAcuityExpectation = _ref3.postAcuityExpectation;
      var adjustedDropAmount = (preAcuityExpectation + postAcuityExpectation) * Math.min(1, maximumDrops / overallExpectedDropQuantity);
      return adjustedDropAmount * value;
    });
    return seasonalItemValue(location) + expectedCollectionValue;
  }
}
function seasonalItemValue(location, seasonalOverride) {
  var _AutumnAton$getUnique;
  var autumnItems = $items(_templateObject4143 || (_templateObject4143 = _taggedTemplateLiteral97(["autumn leaf, AutumnFest ale, autumn breeze, autumn dollar, autumn years wisdom"])));
  var avgValueOfRandomAutumnItem = garboAverageValue.apply(void 0, _toConsumableArray42(autumnItems));
  var autumnMeltables = $items(_templateObject5132 || (_templateObject5132 = _taggedTemplateLiteral97(["autumn debris shield, autumn leaf pendant, autumn sweater-weather sweater"])));
  var autumnItem = (_AutumnAton$getUnique = AutumnAton_exports.getUniques(location)) === null || _AutumnAton$getUnique === void 0 ? void 0 : _AutumnAton$getUnique.item;
  var seasonalItemDrops = seasonalOverride !== null && seasonalOverride !== void 0 ? seasonalOverride : AutumnAton_exports.seasonalItems();
  if (autumnItem) {
    return (seasonalItemDrops > 1 ? avgValueOfRandomAutumnItem : 0) + (autumnMeltables.includes(autumnItem) ? (
      // If we already have the meltable, then we get a random item, else value at 0
      (0, import_kolmafia106.availableAmount)(autumnItem) > 0 ? avgValueOfRandomAutumnItem : 0
    ) : garboValue(autumnItem, true));
  } else {
    return seasonalItemDrops > 1 ? avgValueOfRandomAutumnItem : 0;
  }
}
function expectedRemainingExpeditions() {
  var legs2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : AutumnAton_exports.legs();
  var availableAutumnatonTurns = estimatedGarboTurns() - AutumnAton_exports.turnsLeft() + (globalOptions.ascend ? 0 : estimatedTurnsTomorrow);
  var quests2 = get("_autumnatonQuests");
  var legOffsetFactor = 11 * Math.max(quests2 - legs2 - 1, 0);
  return Math.floor(Math.sqrt(Math.pow(quests2, 2) + 2 * (availableAutumnatonTurns - legOffsetFactor) / 11));
}
var profitRelevantUpgrades = ["leftarm1", "leftleg1", "rightarm1", "rightleg1", "cowcatcher", "periscope", "radardish"];
function profitFromExtraAcuity(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
  return averageAutumnatonValue(bestLocationContainingUpgrade) + averageAutumnatonValue(bestLocationWithInstalledUpgrade) * Math.max(0, expectedRemainingExpeditions() - 1);
}
function profitFromExtraLeg(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
  return averageAutumnatonValue(bestLocationContainingUpgrade) + averageAutumnatonValue(bestLocationWithInstalledUpgrade) * Math.max(0, expectedRemainingExpeditions(AutumnAton_exports.legs() + 1) - 1);
}
function profitFromExtraArm(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
  return averageAutumnatonValue(bestLocationContainingUpgrade) + averageAutumnatonValue(bestLocationWithInstalledUpgrade) * Math.max(0, expectedRemainingExpeditions() - 1);
}
function profitFromExtraAutumnItem(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
  return averageAutumnatonValue(bestLocationContainingUpgrade) + (seasonalItemValue(bestLocationWithInstalledUpgrade) + averageAutumnatonValue(bestLocationWithInstalledUpgrade)) * Math.max(0, expectedRemainingExpeditions() - 1);
}
function makeUpgradeValuator(fullLocations, currentBestLocation) {
  return function(upgrade2) {
    var upgradeLocations = fullLocations.filter(function(location) {
      var _AutumnAton$getUnique2;
      return ((_AutumnAton$getUnique2 = AutumnAton_exports.getUniques(location)) === null || _AutumnAton$getUnique2 === void 0 ? void 0 : _AutumnAton$getUnique2.upgrade) === upgrade2;
    });
    if (!upgradeLocations.length) {
      return {
        upgrade: upgrade2,
        profit: 0
      };
    }
    var bestLocationContainingUpgrade = maxBy(upgradeLocations, averageAutumnatonValue);
    switch (upgrade2) {
      case "periscope":
      case "radardish": {
        var bestLocationWithInstalledUpgrade = maxBy(fullLocations, function(loc) {
          return averageAutumnatonValue(loc, AutumnAton_exports.visualAcuity() + 1);
        });
        return {
          upgrade: upgrade2,
          profit: profitFromExtraAcuity(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade)
        };
      }
      case "rightleg1":
      case "leftleg1": {
        return {
          upgrade: upgrade2,
          profit: profitFromExtraLeg(bestLocationContainingUpgrade, currentBestLocation)
        };
      }
      case "rightarm1":
      case "leftarm1": {
        var _bestLocationWithInstalledUpgrade = maxBy(fullLocations, function(loc) {
          return averageAutumnatonValue(loc, void 0, AutumnAton_exports.zoneItems() + 1);
        });
        return {
          upgrade: upgrade2,
          profit: profitFromExtraArm(bestLocationContainingUpgrade, _bestLocationWithInstalledUpgrade)
        };
      }
      case "cowcatcher": {
        return {
          upgrade: upgrade2,
          profit: profitFromExtraAutumnItem(bestLocationContainingUpgrade, currentBestLocation)
        };
      }
      default: {
        return {
          upgrade: upgrade2,
          profit: 0
        };
      }
    }
  };
}
function mostValuableUpgrade(fullLocations) {
  var validLocations = fullLocations.filter(function(l) {
    return l.parent !== "Clan Basement";
  });
  if (expectedRemainingExpeditions() < 1) {
    return validLocations;
  }
  var currentUpgrades2 = AutumnAton_exports.currentUpgrades();
  var acquirableUpgrades = profitRelevantUpgrades.filter(function(upgrade2) {
    return !currentUpgrades2.includes(upgrade2);
  });
  if (acquirableUpgrades.length === 0) {
    return validLocations;
  }
  var currentBestLocation = maxBy(validLocations, averageAutumnatonValue);
  var currentExpectedProfit = averageAutumnatonValue(currentBestLocation) * expectedRemainingExpeditions();
  var upgradeValuations = acquirableUpgrades.map(makeUpgradeValuator(validLocations, currentBestLocation));
  var _maxBy = maxBy(upgradeValuations, "profit"), highestValueUpgrade = _maxBy.upgrade, profitFromBestUpgrade = _maxBy.profit;
  if (profitFromBestUpgrade > currentExpectedProfit) {
    var upgradeLocations = validLocations.filter(function(location) {
      var _AutumnAton$getUnique3;
      return ((_AutumnAton$getUnique3 = AutumnAton_exports.getUniques(location)) === null || _AutumnAton$getUnique3 === void 0 ? void 0 : _AutumnAton$getUnique3.upgrade) === highestValueUpgrade;
    });
    return upgradeLocations;
  } else {
    return validLocations;
  }
}

// src/post/workshed.ts
var import_kolmafia108 = require("kolmafia");
init_dist();

// src/post/workshed_utils.ts
var import_kolmafia107 = require("kolmafia");
init_dist();
var _templateObject799;
var _templateObject2182;
var _templateObject3162;
var _templateObject4144;
function _taggedTemplateLiteral98(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray43(arr) {
  return _arrayWithoutHoles43(arr) || _iterableToArray43(arr) || _unsupportedIterableToArray66(arr) || _nonIterableSpread43();
}
function _nonIterableSpread43() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray66(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray66(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray66(o, minLen);
}
function _iterableToArray43(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles43(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray66(arr);
}
function _arrayLikeToArray66(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function candyFactoryValue() {
  var lastCalculated = new Date(get("garbo_candyFactoryValueDate", 0));
  if (!get("garbo_candyFactoryValue", 0) || gameDay().getTime() - lastCalculated.getTime() > 7 * 24 * 60 * 60 * 1e3) {
    var candyFactoryDrops = JSON.parse((0, import_kolmafia107.fileToBuffer)("garbo_item_lists.json"))["trainset"];
    var averageDropValue = sum(candyFactoryDrops, function(name) {
      return garboValue((0, import_kolmafia107.toItem)(name), true);
    }) / candyFactoryDrops.length;
    _set("garbo_candyFactoryValue", averageDropValue);
    _set("garbo_candyFactoryValueDate", gameDay().getTime());
  }
  return get("garbo_candyFactoryValue", 0);
}
var GOOD_TRAIN_STATIONS = [{
  piece: TrainSet_exports.Station.GAIN_MEAT,
  value: function() {
    return 900;
  }
}, {
  // Some day this'll be better
  piece: TrainSet_exports.Station.TRACKSIDE_DINER,
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray43($items(_templateObject799 || (_templateObject799 = _taggedTemplateLiteral98(["bowl of cottage cheese, hot buttered roll, toast"])))));
  }
}, {
  piece: TrainSet_exports.Station.CANDY_FACTORY,
  value: candyFactoryValue
}, {
  piece: TrainSet_exports.Station.GRAIN_SILO,
  value: function() {
    return 2 * garboAverageValue.apply(void 0, _toConsumableArray43($items(_templateObject2182 || (_templateObject2182 = _taggedTemplateLiteral98(["bottle of gin, bottle of vodka, bottle of whiskey, bottle of rum, bottle of tequila, boxed wine"])))));
  }
}, {
  piece: TrainSet_exports.Station.ORE_HOPPER,
  value: function() {
    return garboAverageValue.apply(void 0, _toConsumableArray43($items(_templateObject3162 || (_templateObject3162 = _taggedTemplateLiteral98(["linoleum ore, asbestos ore, chrome ore, teflon ore, vinyl ore, velcro ore, bubblewrap ore, cardboard ore, styrofoam ore"])))));
  }
}];
var trainCycle;
function getBestCycle() {
  if (!trainCycle) {
    var cycle2 = [TrainSet_exports.Station.COAL_HOPPER].concat(_toConsumableArray43(GOOD_TRAIN_STATIONS.sort(function(_ref, _ref2) {
      var a = _ref.value;
      var b = _ref2.value;
      return b() - a();
    }).map(function(_ref3) {
      var piece = _ref3.piece;
      return piece;
    })), [TrainSet_exports.Station.TOWER_FIZZY, TrainSet_exports.Station.VIEWING_PLATFORM]);
    trainCycle = cycle2;
  }
  return _toConsumableArray43(trainCycle);
}
function valueStation(station) {
  var _GOOD_TRAIN_STATIONS$, _GOOD_TRAIN_STATIONS$2;
  if (station === TrainSet_exports.Station.COAL_HOPPER) {
    return valueStation(getBestCycle()[1]);
  }
  return (_GOOD_TRAIN_STATIONS$ = (_GOOD_TRAIN_STATIONS$2 = GOOD_TRAIN_STATIONS.find(function(_ref4) {
    var piece = _ref4.piece;
    return piece === station;
  })) === null || _GOOD_TRAIN_STATIONS$2 === void 0 ? void 0 : _GOOD_TRAIN_STATIONS$2.value()) !== null && _GOOD_TRAIN_STATIONS$ !== void 0 ? _GOOD_TRAIN_STATIONS$ : 0;
}
function valueOffset(offset) {
  var firstFortyTurns = 5 * sum(getBestCycle(), valueStation);
  var extraTurns = sum(getBestCycle().slice(0, offset - 1), valueStation);
  return (firstFortyTurns + extraTurns) / (40 + offset);
}
var bestOffset = null;
function getBestOffset() {
  var _bestOffset;
  return (_bestOffset = bestOffset) !== null && _bestOffset !== void 0 ? _bestOffset : bestOffset = maxBy([2, 3, 4, 5, 6, 7, 8], valueOffset);
}
function getPrioritizedStations() {
  return getBestCycle().slice(0, getBestOffset() - 1);
}
function getRotatedCycle() {
  var offset = get("trainsetPosition") % 8;
  var newPieces = [];
  var defaultPieces = getBestCycle();
  for (var i = 0; i < 8; i++) {
    var newPos = (i + offset) % 8;
    newPieces[newPos] = defaultPieces[i];
  }
  return newPieces;
}
function rotateToOptimalCycle() {
  return TrainSet_exports.setConfiguration(getRotatedCycle());
}
function grabMedicine() {
  var options = (0, import_kolmafia107.visitUrl)("campground.php?action=workshed");
  var i = 0;
  var match;
  var regexp = /descitem\((\d+)\)/g;
  var itemChoices = /* @__PURE__ */ new Map();
  if (!globalOptions.nobarf) {
    itemChoices.set($item(_templateObject4144 || (_templateObject4144 = _taggedTemplateLiteral98(["Extrovermectin\u2122"]))), -1);
  }
  while ((match = regexp.exec(options)) !== null) {
    i++;
    var item10 = (0, import_kolmafia107.descToItem)(match[1]);
    itemChoices.set(item10, i);
  }
  var bestItem = maxBy(_toConsumableArray43(itemChoices.keys()), garboValue);
  var bestChoice = itemChoices.get(bestItem);
  if (bestChoice && bestChoice > 0) {
    (0, import_kolmafia107.visitUrl)("campground.php?action=workshed");
    (0, import_kolmafia107.runChoice)(bestChoice);
  }
  if ((0, import_kolmafia107.handlingChoice)())
    (0, import_kolmafia107.visitUrl)("main.php");
}

// src/post/workshed.ts
var _templateObject800;
var _templateObject2183;
var _templateObject3163;
var _templateObject4145;
var _templateObject5133;
var _templateObject6122;
var _templateObject7100;
var _templateObject871;
var _templateObject966;
var _templateObject1056;
function _taggedTemplateLiteral99(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray44(arr) {
  return _arrayWithoutHoles44(arr) || _iterableToArray44(arr) || _unsupportedIterableToArray67(arr) || _nonIterableSpread44();
}
function _nonIterableSpread44() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray67(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray67(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray67(o, minLen);
}
function _iterableToArray44(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles44(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray67(arr);
}
function _arrayLikeToArray67(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck30(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties30(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey42(descriptor.key), descriptor);
  }
}
function _createClass30(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties30(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties30(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _defineProperty38(obj, key, value) {
  key = _toPropertyKey42(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey42(arg) {
  var key = _toPrimitive42(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive42(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var GarboWorkshed = /* @__PURE__ */ function() {
  function GarboWorkshed2(options) {
    var _options$minTurns;
    _classCallCheck30(this, GarboWorkshed2);
    _defineProperty38(this, "workshed", void 0);
    _defineProperty38(this, "done", void 0);
    _defineProperty38(this, "action", void 0);
    _defineProperty38(this, "minTurns", void 0);
    this.workshed = options.workshed;
    if (options.done)
      this.done = options.done;
    if (options.action)
      this.action = options.action;
    this.minTurns = (_options$minTurns = options.minTurns) !== null && _options$minTurns !== void 0 ? _options$minTurns : 0;
  }
  _createClass30(GarboWorkshed2, [{
    key: "canRemove",
    value: function canRemove() {
      var _this$done, _this$done2, _GarboWorkshed$next$m, _GarboWorkshed$next;
      return ((_this$done = (_this$done2 = this.done) === null || _this$done2 === void 0 ? void 0 : _this$done2.call(this)) !== null && _this$done !== void 0 ? _this$done : true) || estimatedGarboTurns() <= ((_GarboWorkshed$next$m = (_GarboWorkshed$next = GarboWorkshed2.next) === null || _GarboWorkshed$next === void 0 ? void 0 : _GarboWorkshed$next.minTurns) !== null && _GarboWorkshed$next$m !== void 0 ? _GarboWorkshed$next$m : 0);
    }
  }, {
    key: "use",
    value: function use30() {
      var _this$done3, _this$action;
      if (!((_this$done3 = this.done) !== null && _this$done3 !== void 0 && _this$done3.call(this)))
        (_this$action = this.action) === null || _this$action === void 0 || _this$action.call(this);
    }
  }], [{
    key: "get",
    value: function get4(item10) {
      var _worksheds$find;
      return (_worksheds$find = worksheds.find(function(_ref) {
        var workshed = _ref.workshed;
        return workshed === item10;
      })) !== null && _worksheds$find !== void 0 ? _worksheds$find : null;
    }
  }, {
    key: "current",
    get: function get4() {
      var _GarboWorkshed$_curre;
      (_GarboWorkshed$_curre = GarboWorkshed2._currentWorkshed) !== null && _GarboWorkshed$_curre !== void 0 ? _GarboWorkshed$_curre : GarboWorkshed2._currentWorkshed = GarboWorkshed2.get((0, import_kolmafia108.getWorkshed)());
      return GarboWorkshed2._currentWorkshed;
    }
  }, {
    key: "next",
    get: function get4() {
      var _GarboWorkshed$_nextW;
      if (get("_workshedItemUsed"))
        return null;
      (_GarboWorkshed$_nextW = GarboWorkshed2._nextWorkshed) !== null && _GarboWorkshed$_nextW !== void 0 ? _GarboWorkshed$_nextW : GarboWorkshed2._nextWorkshed = GarboWorkshed2.get(globalOptions.workshed);
      return GarboWorkshed2._nextWorkshed;
    }
  }, {
    key: "useNext",
    value: function useNext() {
      if (get("_workshedItemUsed"))
        return null;
      var next2 = GarboWorkshed2.next;
      if (next2 && have(next2.workshed)) {
        (0, import_kolmafia108.use)(next2.workshed);
        if (GarboWorkshed2.get((0, import_kolmafia108.getWorkshed)()) === next2) {
          GarboWorkshed2._nextWorkshed = null;
          GarboWorkshed2._currentWorkshed = next2;
        }
      }
      return GarboWorkshed2._currentWorkshed;
    }
  }]);
  return GarboWorkshed2;
}();
_defineProperty38(GarboWorkshed, "_nextWorkshed", null);
_defineProperty38(GarboWorkshed, "_currentWorkshed", null);
var _attemptedMakingTonics = false;
var worksheds = [new GarboWorkshed({
  workshed: $item(_templateObject800 || (_templateObject800 = _taggedTemplateLiteral99(["model train set"]))),
  done: function() {
    return false;
  },
  action: function() {
    if (!TrainSet_exports.canConfigure())
      return;
    if (!get("trainsetConfiguration")) {
      (0, import_kolmafia108.visitUrl)("campground.php?action=workshed");
      (0, import_kolmafia108.visitUrl)("main.php");
    }
    if (!get("trainsetConfiguration")) {
      (0, import_kolmafia108.print)("Reconfiguring trainset, as it is empty", HIGHLIGHT);
      return rotateToOptimalCycle();
    } else if (globalOptions.ascend && estimatedGarboTurns() <= 40) {
      (0, import_kolmafia108.print)("Refusing to reconfigure trainset, to save a reconfiguration for your upcoming ascension.", HIGHLIGHT);
      return;
    } else {
      var bestStations = getPrioritizedStations();
      if (bestStations.includes(TrainSet_exports.next()))
        return;
      (0, import_kolmafia108.print)("Reconfiguring trainset, as our next station is ".concat(TrainSet_exports.next()), HIGHLIGHT);
      return rotateToOptimalCycle();
    }
  }
}), new GarboWorkshed({
  workshed: $item(_templateObject2183 || (_templateObject2183 = _taggedTemplateLiteral99(["cold medicine cabinet"]))),
  done: function() {
    return get("_coldMedicineConsults") >= 5;
  },
  action: function() {
    if (get("_nextColdMedicineConsult") > (0, import_kolmafia108.totalTurnsPlayed)())
      return;
    grabMedicine();
  },
  minTurns: 80
}), new GarboWorkshed({
  workshed: $item(_templateObject3163 || (_templateObject3163 = _taggedTemplateLiteral99(["Asdon Martin keyfob"]))),
  done: function() {
    return (0, import_kolmafia108.haveEffect)($effect(_templateObject4145 || (_templateObject4145 = _taggedTemplateLiteral99(["Driving Observantly"])))) >= estimatedGarboTurns() + (globalOptions.ascend ? 0 : estimatedTurnsTomorrow);
  },
  action: function() {
    AsdonMartin_exports.drive($effect(_templateObject5133 || (_templateObject5133 = _taggedTemplateLiteral99(["Driving Observantly"]))), estimatedGarboTurns() + (globalOptions.ascend ? 0 : estimatedTurnsTomorrow));
  }
}), new GarboWorkshed({
  workshed: $item(_templateObject6122 || (_templateObject6122 = _taggedTemplateLiteral99(["Little Geneticist DNA-Splicing Lab"]))),
  done: function() {
    return _attemptedMakingTonics || get("_dnaPotionsMade") >= 3;
  },
  action: function() {
    if (get("dnaSyringe"))
      DNALab_exports.makeTonic(3);
    _attemptedMakingTonics = true;
  }
}), new GarboWorkshed({
  workshed: $item(_templateObject7100 || (_templateObject7100 = _taggedTemplateLiteral99(["spinning wheel"]))),
  done: function() {
    return get("_spinningWheel");
  },
  action: function() {
    (0, import_kolmafia108.visitUrl)("campground.php?action=spinningwheel");
  }
})].concat(_toConsumableArray44($items(_templateObject871 || (_templateObject871 = _taggedTemplateLiteral99(["diabolic pizza cube, portable Mayo Clinic, warbear high-efficiency still, warbear induction oven"]))).map(function(item10) {
  return new GarboWorkshed({
    workshed: item10,
    done: dietCompleted
  });
})), _toConsumableArray44($items(_templateObject966 || (_templateObject966 = _taggedTemplateLiteral99(["warbear chemistry lab, warbear LP-ROM burner"]))).map(function(item10) {
  return new GarboWorkshed({
    workshed: item10,
    done: potionSetupCompleted
  });
})), _toConsumableArray44($items(_templateObject1056 || (_templateObject1056 = _taggedTemplateLiteral99(["snow machine, warbear jackhammer drill press, warbear auto-anvil"]))).map(function(item10) {
  return new GarboWorkshed({
    workshed: item10
  });
})));
function handleWorkshed() {
  var _GarboWorkshed$curren, _GarboWorkshed$curren2, _GarboWorkshed$curren3;
  (_GarboWorkshed$curren = GarboWorkshed.current) === null || _GarboWorkshed$curren === void 0 || _GarboWorkshed$curren.use();
  var safetyTurns = 25;
  if (!get("_workshedItemUsed") && ((_GarboWorkshed$curren2 = (_GarboWorkshed$curren3 = GarboWorkshed.current) === null || _GarboWorkshed$curren3 === void 0 ? void 0 : _GarboWorkshed$curren3.canRemove()) !== null && _GarboWorkshed$curren2 !== void 0 ? _GarboWorkshed$curren2 : true) && GarboWorkshed.next && have(GarboWorkshed.next.workshed) && (!GarboWorkshed.next.minTurns || GarboWorkshed.next.minTurns + safetyTurns > estimatedGarboTurns())) {
    var _GarboWorkshed$curren4;
    GarboWorkshed.useNext();
    (_GarboWorkshed$curren4 = GarboWorkshed.current) === null || _GarboWorkshed$curren4 === void 0 || _GarboWorkshed$curren4.use();
  }
}

// src/post/index.ts
var _templateObject801;
var _templateObject2184;
var _templateObject3164;
var _templateObject4146;
var _templateObject5134;
var _templateObject6123;
var _templateObject7101;
var _templateObject876;
var _templateObject967;
var _templateObject1057;
var _templateObject1149;
var _templateObject1245;
var _templateObject1341;
var _templateObject1437;
var _templateObject1535;
var _templateObject1634;
var _templateObject1734;
function _toConsumableArray45(arr) {
  return _arrayWithoutHoles45(arr) || _iterableToArray45(arr) || _unsupportedIterableToArray68(arr) || _nonIterableSpread45();
}
function _nonIterableSpread45() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray45(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles45(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray68(arr);
}
function _taggedTemplateLiteral100(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper33(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray68(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray68(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray68(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray68(o, minLen);
}
function _arrayLikeToArray68(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function closetStuff() {
  var _iterator = _createForOfIteratorHelper33($items(_templateObject801 || (_templateObject801 = _taggedTemplateLiteral100(["bowling ball, funky junk key"])))), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var i = _step.value;
      (0, import_kolmafia109.putCloset)((0, import_kolmafia109.itemAmount)(i), i);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function floristFriars() {
  if (!Florist_exports.have() || (0, import_kolmafia109.myLocation)() !== $location(_templateObject2184 || (_templateObject2184 = _taggedTemplateLiteral100(["Barf Mountain"]))) || Florist_exports.isFull()) {
    return;
  }
  [Florist_exports.StealingMagnolia, Florist_exports.AloeGuvnor, Florist_exports.PitcherPlant].forEach(function(flower) {
    if (flower.available())
      flower.plant();
  });
}
function fillPantsgivingFullness() {
  if (getRemainingStomach() > 0 && (!globalOptions.prefs.yachtzeechain || get("_garboYachtzeeChainCompleted", false))) {
    consumeDiet(computeDiet().pantsgiving(), "PANTSGIVING");
  }
}
function fillSweatyLiver() {
  if (globalOptions.prefs.yachtzeechain && !get("_garboYachtzeeChainCompleted", false)) {
    return;
  }
  var castsWanted = 3 - get("_sweatOutSomeBoozeUsed");
  if (castsWanted <= 0 || !have($item(_templateObject3164 || (_templateObject3164 = _taggedTemplateLiteral100(["designer sweatpants"])))))
    return;
  var sweatNeeded = 25 * castsWanted;
  if (get("sweat") >= sweatNeeded) {
    while (get("_sweatOutSomeBoozeUsed") < 3) {
      (0, import_kolmafia109.useSkill)($skill(_templateObject4146 || (_templateObject4146 = _taggedTemplateLiteral100(["Sweat Out Some Booze"]))));
    }
    consumeDiet(computeDiet().sweatpants(), "SWEATPANTS");
  }
}
function numberology() {
  if ((0, import_kolmafia109.myAdventures)() > 0 && Object.keys((0, import_kolmafia109.reverseNumberology)()).includes("69") && get("_universeCalculated") < get("skillLevel144")) {
    (0, import_kolmafia109.cliExecute)("numberology 69");
  }
}
function updateMallPrices() {
  sessionSinceStart().value(garboValue);
}
var juneCleaverSkipChoices;
function skipJuneCleaverChoices() {
  if (!juneCleaverSkipChoices) {
    juneCleaverSkipChoices = _toConsumableArray45(JuneCleaver_exports.choices).sort(function(a, b) {
      return valueJuneCleaverOption(juneCleaverChoiceValues[a][bestJuneCleaverOption(a)]) - valueJuneCleaverOption(juneCleaverChoiceValues[b][bestJuneCleaverOption(b)]);
    }).splice(0, 3);
  }
  if (JuneCleaver_exports.skipsRemaining() > 0) {
    var _iterator2 = _createForOfIteratorHelper33(juneCleaverSkipChoices), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var choice = _step2.value;
        setChoice(choice, 4);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  } else {
    var _iterator3 = _createForOfIteratorHelper33(juneCleaverSkipChoices), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var _choice = _step3.value;
        setChoice(_choice, bestJuneCleaverOption(_choice));
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  }
}
function juneCleave() {
  if (get("_juneCleaverFightsLeft") <= 0 && teleportEffects.every(function(e) {
    return !have(e);
  })) {
    (0, import_kolmafia109.equip)($slot(_templateObject5134 || (_templateObject5134 = _taggedTemplateLiteral100(["weapon"]))), $item(_templateObject6123 || (_templateObject6123 = _taggedTemplateLiteral100(["June cleaver"]))));
    skipJuneCleaverChoices();
    withProperty("recoveryScript", "", function() {
      garboAdventure($location(_templateObject7101 || (_templateObject7101 = _taggedTemplateLiteral100(["Noob Cave"]))), Macro2.abortWithMsg("Expected June Cleaver non-combat but ended up in combat."));
      if (["Poetic Justice", "Lost and Found"].includes(get("lastEncounter"))) {
        uneffect($effect(_templateObject876 || (_templateObject876 = _taggedTemplateLiteral100(["Beaten Up"]))));
      }
    });
  }
}
function stillsuit() {
  if ((0, import_kolmafia109.itemAmount)($item(_templateObject967 || (_templateObject967 = _taggedTemplateLiteral100(["tiny stillsuit"]))))) {
    var familiarTarget = $familiar(_templateObject1057 || (_templateObject1057 = _taggedTemplateLiteral100(["Blood-Faced Volleyball"])));
    if (have(familiarTarget))
      (0, import_kolmafia109.equip)(familiarTarget, $item(_templateObject1149 || (_templateObject1149 = _taggedTemplateLiteral100(["tiny stillsuit"]))));
  }
}
var funguyWorthIt = true;
function funguySpores() {
  if ((0, import_kolmafia109.myLevel)() >= 15 && // It applies -100 to all stats, and Level 15 seems to be a reasonable place where you will survive -100 to all stats
  !have($effect(_templateObject1245 || (_templateObject1245 = _taggedTemplateLiteral100(["Mush-Mouth"])))) && (!globalOptions.ascend || (0, import_kolmafia109.myAdventures)() > 11) && get("dinseyRollercoasterNext") && // If it were to expire on a rails adventure, you'd waste the cost of the spore. Using it when next turn is rails is easiest way to make sure it won't
  funguyWorthIt) {
    var value = 0.75 * garboAverageValue.apply(void 0, _toConsumableArray45($items(_templateObject1341 || (_templateObject1341 = _taggedTemplateLiteral100(["Boletus Broletus mushroom, Omphalotus Omphaloskepsis mushroom, Gyromitra Dynomita mushroom"]))))) + 0.25 * garboAverageValue.apply(void 0, _toConsumableArray45($items(_templateObject1437 || (_templateObject1437 = _taggedTemplateLiteral100(["Helvella Haemophilia mushroom, Stemonitis Staticus mushroom, Tremella Tarantella mushroom"])))));
    if ((0, import_kolmafia109.mallPrice)($item(_templateObject1535 || (_templateObject1535 = _taggedTemplateLiteral100(["Fun-Guy spore"])))) < value && acquire(1, $item(_templateObject1634 || (_templateObject1634 = _taggedTemplateLiteral100(["Fun-Guy spore"]))), value, false) > 0) {
      (0, import_kolmafia109.use)($item(_templateObject1734 || (_templateObject1734 = _taggedTemplateLiteral100(["Fun-Guy spore"]))));
    } else
      funguyWorthIt = false;
  }
}
function refillCinch() {
  if (!CinchoDeMayo_exports.have())
    return;
  if (get("_garboYachtzeeChainCompleted") || !globalOptions.prefs.yachtzeechain) {
    var missingCinch = function() {
      return 100 - CinchoDeMayo_exports.currentCinch();
    };
    while (missingCinch() > CinchoDeMayo_exports.cinchRestoredBy() && CinchoDeMayo_exports.currentCinch() < CinchoDeMayo_exports.totalAvailableCinch()) {
      if (!freeRest())
        break;
    }
  }
}
var tokenBought = false;
function eightBitFatLoot() {
  if (!tokenBought && get("8BitScore") >= 2e4) {
    (0, import_kolmafia109.visitUrl)("place.php?whichplace=8bit&action=8treasure");
    if ((0, import_kolmafia109.availableChoiceOptions)()[2]) {
      (0, import_kolmafia109.runChoice)(2);
    }
    tokenBought = true;
  }
}
function postCombatActions() {
  var skipDiet = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  closetStuff();
  juneCleave();
  numberology();
  if (!skipDiet && !globalOptions.nodiet) {
    fillPantsgivingFullness();
    fillSweatyLiver();
  }
  floristFriars();
  handleWorkshed();
  safeInterrupt();
  refillCinch();
  safeRestore();
  updateMallPrices();
  stillsuit();
  funguySpores();
  eightBitFatLoot();
  wanderer().clear();
  if (globalOptions.ascend || AutumnAton_exports.turnsForQuest() < estimatedGarboTurns() + remainingUserTurns()) {
    AutumnAton_exports.sendTo(bestAutumnatonLocation);
  }
}

// src/embezzler/execution.ts
function runEmbezzlerFight(fight) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var fullOptions = new EmbezzlerFightRunOptions(fight, options);
  fight.run(fullOptions);
}

// src/resources/fax.ts
var import_kolmafia110 = require("kolmafia");
init_dist();
var _templateObject806;
var _templateObject2185;
var _templateObject3165;
var _templateObject4147;
function _taggedTemplateLiteral101(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function checkFax(monster) {
  if (!have($item(_templateObject806 || (_templateObject806 = _taggedTemplateLiteral101(["photocopied monster"])))))
    (0, import_kolmafia110.cliExecute)("fax receive");
  if (!have($item(_templateObject2185 || (_templateObject2185 = _taggedTemplateLiteral101(["photocopied monster"])))))
    return false;
  if (property_exports.get("photocopyMonster") === monster) {
    return true;
  }
  if (have($item(_templateObject3165 || (_templateObject3165 = _taggedTemplateLiteral101(["photocopied monster"])))))
    (0, import_kolmafia110.cliExecute)("fax send");
  return false;
}
function faxMonster(monster) {
  if (!have($item(_templateObject4147 || (_templateObject4147 = _taggedTemplateLiteral101(["Clan VIP Lounge key"])))))
    return false;
  if ((0, import_kolmafia110.getClanLounge)()["deluxe fax machine"] === void 0)
    return false;
  if (get("_photocopyUsed"))
    return false;
  if (checkFax(monster))
    return true;
  if (!(0, import_kolmafia110.canFaxbot)(monster))
    return false;
  (0, import_kolmafia110.faxbot)(monster);
  for (var i = 0; i < 3; i++) {
    (0, import_kolmafia110.wait)(10);
    if (checkFax(monster))
      return true;
  }
  return false;
}

// src/tasks/freeFight.ts
var import_kolmafia111 = require("kolmafia");
init_dist();
var _templateObject807;
var _templateObject2186;
var _templateObject3166;
var _templateObject4148;
var _templateObject5135;
var _templateObject6124;
var _templateObject7102;
var _templateObject877;
var _templateObject968;
var _templateObject1058;
var _templateObject1150;
var _templateObject1246;
var _templateObject1344;
var _templateObject1438;
var _templateObject1536;
var _templateObject1635;
var _templateObject1735;
var _templateObject1834;
var _templateObject1934;
var _templateObject2034;
var _templateObject2187;
var _templateObject2233;
var _templateObject2332;
var _templateObject2430;
var _templateObject2530;
var _templateObject2630;
var _templateObject2729;
var _templateObject2826;
var _templateObject2923;
var _templateObject3023;
var _templateObject3167;
var _templateObject3225;
var _templateObject3324;
var _templateObject3421;
var _templateObject3521;
var _templateObject3620;
var _templateObject3720;
var _templateObject3820;
var _templateObject3920;
var _templateObject4020;
var _templateObject4149;
var _templateObject4220;
var _templateObject4320;
var _templateObject4419;
var _templateObject4519;
var _templateObject4619;
var _templateObject4719;
var _templateObject4819;
var _templateObject4918;
var _templateObject5017;
var _templateObject5136;
var _templateObject5219;
var _templateObject5319;
var _templateObject5419;
var _templateObject5518;
var _templateObject5617;
var _templateObject5716;
var _templateObject5814;
var _templateObject5914;
var _templateObject6013;
var _templateObject6125;
var _templateObject6218;
var _templateObject6316;
var _templateObject6416;
var _templateObject6513;
var _templateObject6612;
var _templateObject6712;
var _templateObject6812;
var _templateObject6912;
var _templateObject7011;
var _templateObject7114;
var _templateObject7214;
var _templateObject7313;
var _templateObject7413;
var _templateObject7512;
var _templateObject7612;
var _templateObject7711;
var _templateObject7810;
var _templateObject7910;
var _templateObject808;
var _templateObject8113;
var _templateObject8213;
var _templateObject8313;
var _templateObject8412;
var _templateObject8512;
var _templateObject8611;
var _templateObject878;
var _templateObject885;
var _templateObject895;
var _templateObject905;
var _templateObject9113;
var _templateObject9213;
var _templateObject9312;
var _templateObject9412;
var _templateObject9511;
var _templateObject969;
var _templateObject976;
var _templateObject985;
var _templateObject995;
var _templateObject1005;
var _templateObject10113;
var _templateObject10213;
var _templateObject10312;
var _templateObject10411;
var _templateObject1059;
var _templateObject1065;
var _templateObject1075;
var _templateObject1085;
var _templateObject1095;
var _templateObject1105;
var _templateObject11113;
var _templateObject11213;
var _templateObject11312;
var _templateObject11410;
var _templateObject1155;
var _templateObject1165;
var _templateObject1175;
var _templateObject1185;
var _templateObject1194;
var _templateObject1204;
var _templateObject12112;
var _templateObject12212;
var _templateObject12311;
var _templateObject1247;
var _templateObject1254;
var _templateObject1264;
var _templateObject1274;
var _templateObject1284;
var _templateObject1294;
var _templateObject1304;
var _templateObject13112;
var _templateObject13211;
var _templateObject13311;
var _templateObject1345;
var _templateObject1354;
var _templateObject1364;
var _templateObject1374;
var _templateObject1384;
var _templateObject1394;
var _templateObject1404;
var _templateObject14112;
var _templateObject14211;
var _templateObject1439;
var _templateObject1444;
var _templateObject1454;
function _toConsumableArray46(arr) {
  return _arrayWithoutHoles46(arr) || _iterableToArray46(arr) || _unsupportedIterableToArray69(arr) || _nonIterableSpread46();
}
function _nonIterableSpread46() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray46(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles46(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray69(arr);
}
function _slicedToArray31(arr, i) {
  return _arrayWithHoles31(arr) || _iterableToArrayLimit31(arr, i) || _unsupportedIterableToArray69(arr, i) || _nonIterableRest31();
}
function _nonIterableRest31() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit31(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles31(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper34(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray69(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray69(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray69(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray69(o, minLen);
}
function _arrayLikeToArray69(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral102(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function ownKeys18(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread18(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys18(Object(t), true).forEach(function(r2) {
      _defineProperty39(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys18(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty39(obj, key, value) {
  key = _toPropertyKey43(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey43(arg) {
  var key = _toPrimitive43(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive43(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var DEFAULT_FREE_FIGHT_TASK = {
  // GarboTask
  combat: new GarboStrategy(Macro2.basicCombat()),
  outfit: freeFightOutfit,
  spendsTurn: false,
  // GarboFreeFightTask
  combatCount: function() {
    return 1;
  }
};
function freeFightTask(fragment) {
  var fullTask = _objectSpread18(_objectSpread18({}, DEFAULT_FREE_FIGHT_TASK), fragment);
  return _objectSpread18(_objectSpread18({}, fullTask), {}, {
    limit: {
      skip: 5 + fullTask.combatCount()
    }
  });
}
function bestWitchessPiece() {
  return maxBy(Witchess_exports.pieces, function(monster) {
    return sum((0, import_kolmafia111.itemDropsArray)(monster), function(_ref) {
      var drop = _ref.drop;
      return garboValue(drop);
    });
  });
}
var isFree = function(monster) {
  return monster.attributes.includes("FREE");
};
var valueDrops = function(monster) {
  return sum((0, import_kolmafia111.itemDropsArray)(monster), function(_ref2) {
    var drop = _ref2.drop, rate = _ref2.rate, type = _ref2.type;
    return !["c", "0", "p"].includes(type) ? garboValue(drop, true) * rate / 100 : 0;
  });
};
var locketMonster = function() {
  return CombatLoversLocket_exports.findMonster(isFree, valueDrops);
};
var locketsToSave = function() {
  return CombatLoversLocket_exports.availableLocketMonsters().includes($monster(_templateObject807 || (_templateObject807 = _taggedTemplateLiteral102(["Knob Goblin Embezzler"])))) ? 1 : 0;
};
var maxSealsAvailable = function() {
  return (0, import_kolmafia111.retrieveItem)(1, $item(_templateObject2186 || (_templateObject2186 = _taggedTemplateLiteral102(["Claw of the Infernal Seal"])))) ? 10 : 5;
};
function sealsAvailable() {
  var max = maxSealsAvailable();
  var available4 = (0, import_kolmafia111.guildStoreAvailable)() ? Infinity : Math.floor((0, import_kolmafia111.availableAmount)($item(_templateObject3166 || (_templateObject3166 = _taggedTemplateLiteral102(["seal-blubber candle"])))) / 3);
  return Math.min(max, available4);
}
var stunDurations = /* @__PURE__ */ new Map([[$skill(_templateObject4148 || (_templateObject4148 = _taggedTemplateLiteral102(["Blood Bubble"]))), 1], [$skill(_templateObject5135 || (_templateObject5135 = _taggedTemplateLiteral102(["Entangling Noodles"]))), function() {
  return (0, import_kolmafia111.myClass)() === $class(_templateObject6124 || (_templateObject6124 = _taggedTemplateLiteral102(["Pastamancer"]))) && !have($skill(_templateObject7102 || (_templateObject7102 = _taggedTemplateLiteral102(["Shadow Noodles"])))) ? 1 : 0;
}], [$skill(_templateObject877 || (_templateObject877 = _taggedTemplateLiteral102(["Frost Bite"]))), 1], [$skill(_templateObject968 || (_templateObject968 = _taggedTemplateLiteral102(["Shadow Noodles"]))), 2], [$skill(_templateObject1058 || (_templateObject1058 = _taggedTemplateLiteral102(["Shell Up"]))), function() {
  if ((0, import_kolmafia111.myClass)() !== $class(_templateObject1150 || (_templateObject1150 = _taggedTemplateLiteral102(["Turtle Tamer"]))))
    return 0;
  var _iterator = _createForOfIteratorHelper34(/* @__PURE__ */ new Map([[$effect(_templateObject1246 || (_templateObject1246 = _taggedTemplateLiteral102(["Glorious Blessing of the Storm Tortoise"]))), 4], [$effect(_templateObject1344 || (_templateObject1344 = _taggedTemplateLiteral102(["Grand Blessing of the Storm Tortoise"]))), 3], [$effect(_templateObject1438 || (_templateObject1438 = _taggedTemplateLiteral102(["Blessing of the Storm Tortoise"]))), 2]])), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray31(_step.value, 2), effect2 = _step$value[0], duration = _step$value[1];
      if (have(effect2))
        return duration;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return 0;
}], [$skill(_templateObject1536 || (_templateObject1536 = _taggedTemplateLiteral102(["Soul Bubble"]))), function() {
  return (0, import_kolmafia111.mySoulsauce)() >= 5 ? 2 : 0;
}], [$skill(_templateObject1635 || (_templateObject1635 = _taggedTemplateLiteral102(["Summon Love Gnats"]))), 1], [$item(_templateObject1735 || (_templateObject1735 = _taggedTemplateLiteral102(["Rain-Doh blue balls"]))), 1]]);
var FreeFightTasks = [
  {
    name: $item(_templateObject1834 || (_templateObject1834 = _taggedTemplateLiteral102(["protonic accelerator pack"]))).name,
    ready: function() {
      return have($item(_templateObject1934 || (_templateObject1934 = _taggedTemplateLiteral102(["protonic accelerator pack"])))) && get("questPAGhost") !== "unstarted" && get("ghostLocation") !== null;
    },
    completed: function() {
      return get("questPAGhost") === "unstarted";
    },
    do: function() {
      return get("ghostLocation");
    },
    combat: new GarboStrategy(Macro2.ghostBustin()),
    outfit: function() {
      return freeFightOutfit({
        back: $item(_templateObject2034 || (_templateObject2034 = _taggedTemplateLiteral102(["protonic accelerator pack"])))
      });
    },
    tentacle: true
  },
  {
    name: $item(_templateObject2187 || (_templateObject2187 = _taggedTemplateLiteral102(["molehill mountain"]))).name,
    ready: function() {
      return have($item(_templateObject2233 || (_templateObject2233 = _taggedTemplateLiteral102(["molehill mountain"])))) && (get("_thesisDelivered") || !have($familiar(_templateObject2332 || (_templateObject2332 = _taggedTemplateLiteral102(["Pocket Professor"])))));
    },
    completed: function() {
      return get("_molehillMountainUsed");
    },
    do: function() {
      return (0, import_kolmafia111.use)($item(_templateObject2430 || (_templateObject2430 = _taggedTemplateLiteral102(["molehill mountain"]))));
    },
    tentacle: true
  },
  {
    name: "Tunnel of Love",
    ready: TunnelOfLove_exports.have,
    completed: TunnelOfLove_exports.isUsed,
    do: function() {
      return TunnelOfLove_exports.fightAll("LOV Epaulettes", "Open Heart Surgery", "LOV Extraterrestrial Chocolate");
    },
    // TODO: Get drops
    combatCount: function() {
      return 3;
    },
    tentacle: false
  },
  {
    name: "Chateau Mantegna",
    ready: function() {
      var _ChateauMantegna$pain, _ChateauMantegna$pain2;
      return ChateauMantegna_exports.have() && ((_ChateauMantegna$pain = (_ChateauMantegna$pain2 = ChateauMantegna_exports.paintingMonster()) === null || _ChateauMantegna$pain2 === void 0 || (_ChateauMantegna$pain2 = _ChateauMantegna$pain2.attributes) === null || _ChateauMantegna$pain2 === void 0 ? void 0 : _ChateauMantegna$pain2.includes("FREE")) !== null && _ChateauMantegna$pain !== void 0 ? _ChateauMantegna$pain : false);
    },
    completed: ChateauMantegna_exports.paintingFought,
    do: ChateauMantegna_exports.fightPainting,
    outfit: function() {
      return freeFightOutfit(have($familiar(_templateObject2530 || (_templateObject2530 = _taggedTemplateLiteral102(["Robortender"])))) && $phyla(_templateObject2630 || (_templateObject2630 = _taggedTemplateLiteral102(["elf, fish, hobo, penguin, constellation"]))).some(function(phylum) {
        var _ChateauMantegna$pain3;
        return phylum === ((_ChateauMantegna$pain3 = ChateauMantegna_exports.paintingMonster()) === null || _ChateauMantegna$pain3 === void 0 ? void 0 : _ChateauMantegna$pain3.phylum);
      }) ? {
        familiar: $familiar(_templateObject2729 || (_templateObject2729 = _taggedTemplateLiteral102(["Robortender"])))
      } : {});
    },
    tentacle: true
  },
  {
    name: "Eldritch Tentacle",
    ready: function() {
      return get("questL02Larva") !== "unstarted";
    },
    completed: function() {
      return get("_eldritchTentacleFought");
    },
    do: function() {
      var haveEldritchEssence = (0, import_kolmafia111.itemAmount)($item(_templateObject2826 || (_templateObject2826 = _taggedTemplateLiteral102(["eldritch essence"])))) !== 0;
      (0, import_kolmafia111.visitUrl)("place.php?whichplace=forestvillage&action=fv_scientist", false);
      if (!(0, import_kolmafia111.handlingChoice)())
        throw "No choice?";
      (0, import_kolmafia111.runChoice)(haveEldritchEssence ? 2 : 1);
    },
    tentacle: false
  },
  {
    name: $skill(_templateObject2923 || (_templateObject2923 = _taggedTemplateLiteral102(["Evoke Eldritch Horror"]))).name,
    ready: function() {
      return have($skill(_templateObject3023 || (_templateObject3023 = _taggedTemplateLiteral102(["Evoke Eldritch Horror"]))));
    },
    completed: function() {
      return get("_eldritchHorrorEvoked");
    },
    do: function() {
      (0, import_kolmafia111.useSkill)($skill(_templateObject3167 || (_templateObject3167 = _taggedTemplateLiteral102(["Evoke Eldritch Horror"]))));
      if (have($effect(_templateObject3225 || (_templateObject3225 = _taggedTemplateLiteral102(["Beaten Up"])))))
        uneffect($effect(_templateObject3324 || (_templateObject3324 = _taggedTemplateLiteral102(["Beaten Up"]))));
    },
    effects: function() {
      return 11 / 200 * garboValue($item(_templateObject3421 || (_templateObject3421 = _taggedTemplateLiteral102(["eldritch ichor"])))) > (0, import_kolmafia111.mallPrice)($item(_templateObject3521 || (_templateObject3521 = _taggedTemplateLiteral102(["crappy waiter disguise"])))) ? [$effect(_templateObject3620 || (_templateObject3620 = _taggedTemplateLiteral102(["Crappily Disguised as a Waiter"])))] : [];
    },
    combat: new GarboStrategy(Macro2.if_(
      $monster(_templateObject3720 || (_templateObject3720 = _taggedTemplateLiteral102(["Sssshhsssblllrrggghsssssggggrrgglsssshhssslblgl"]))),
      // Using while_ here in case you run out of mp
      Macro2.while_("hasskill Awesome Balls of Fire", Macro2.skill($skill(_templateObject3820 || (_templateObject3820 = _taggedTemplateLiteral102(["Awesome Balls of Fire"]))))).while_("hasskill Eggsplosion", Macro2.skill($skill(_templateObject3920 || (_templateObject3920 = _taggedTemplateLiteral102(["Eggsplosion"]))))).while_("hasskill Saucegeyser", Macro2.skill($skill(_templateObject4020 || (_templateObject4020 = _taggedTemplateLiteral102(["Saucegeyser"]))))).while_("hasskill Weapon of the Pastalord", Macro2.skill($skill(_templateObject4149 || (_templateObject4149 = _taggedTemplateLiteral102(["Weapon of the Pastalord"]))))).while_("hasskill Lunging Thrust-Smack", Macro2.skill($skill(_templateObject4220 || (_templateObject4220 = _taggedTemplateLiteral102(["Lunging Thrust-Smack"]))))).attack().repeat()
    ).basicCombat()),
    tentacle: false
  },
  {
    name: $item(_templateObject4320 || (_templateObject4320 = _taggedTemplateLiteral102(["lynyrd snare"]))).name,
    ready: function() {
      return (0, import_kolmafia111.mallPrice)($item(_templateObject4419 || (_templateObject4419 = _taggedTemplateLiteral102(["lynyrd snare"])))) <= globalOptions.prefs.valueOfFreeFight;
    },
    completed: function() {
      return get("_lynyrdSnareUses") >= 3;
    },
    do: function() {
      return (0, import_kolmafia111.use)($item(_templateObject4519 || (_templateObject4519 = _taggedTemplateLiteral102(["lynyrd snare"]))));
    },
    combat: new GarboStrategy(Macro2.basicCombat()),
    combatCount: function() {
      return clamp(3 - get("_lynyrdSnareUses"), 0, 3);
    },
    tentacle: false
  },
  {
    name: "[glitch season reward name]: retrocape edition",
    ready: function() {
      var _globalOptions$prefs$;
      return ((_globalOptions$prefs$ = globalOptions.prefs.fightGlitch) !== null && _globalOptions$prefs$ !== void 0 ? _globalOptions$prefs$ : false) && have($item(_templateObject4619 || (_templateObject4619 = _taggedTemplateLiteral102(["unwrapped knock-off retro superhero cape"])))) && sum(_toConsumableArray46(stunDurations), function(_ref3) {
        var _ref4 = _slicedToArray31(_ref3, 2), thing = _ref4[0], duration = _ref4[1];
        return have(thing) ? undelay(duration) : 0;
      }) >= 5;
    },
    completed: function() {
      return !!get("_glitchMonsterFights");
    },
    do: function() {
      (0, import_kolmafia111.visitUrl)("inv_eat.php?pwd&whichitem=10207");
      (0, import_kolmafia111.runCombat)();
    },
    combat: new GarboStrategy(Macro2.trySkill($skill(_templateObject4719 || (_templateObject4719 = _taggedTemplateLiteral102(["Curse of Marinara"])))).trySkill($skill(_templateObject4819 || (_templateObject4819 = _taggedTemplateLiteral102(["Shell Up"])))).trySkill($skill(_templateObject4918 || (_templateObject4918 = _taggedTemplateLiteral102(["Shadow Noodles"])))).trySkill($skill(_templateObject5017 || (_templateObject5017 = _taggedTemplateLiteral102(["Entangling Noodles"])))).trySkill($skill(_templateObject5136 || (_templateObject5136 = _taggedTemplateLiteral102(["Summon Love Gnats"])))).trySkill($skill(_templateObject5219 || (_templateObject5219 = _taggedTemplateLiteral102(["Frost Bite"])))).trySkill($skill(_templateObject5319 || (_templateObject5319 = _taggedTemplateLiteral102(["Soul Bubble"])))).tryItem($item(_templateObject5419 || (_templateObject5419 = _taggedTemplateLiteral102(["Rain-Doh blue balls"])))).skill($skill(_templateObject5518 || (_templateObject5518 = _taggedTemplateLiteral102(["Blow a Robo-Kiss"])))).repeat()),
    outfit: function() {
      return freeFightOutfit({
        back: $items(_templateObject5617 || (_templateObject5617 = _taggedTemplateLiteral102(["unwrapped knock-off retro superhero cape"]))),
        modes: {
          retrocape: ["robot", "kiss"]
        },
        avoid: $items(_templateObject5716 || (_templateObject5716 = _taggedTemplateLiteral102(["mutant crown, mutant arm, mutant legs, shield of the Skeleton Lord"])))
      }, {
        canChooseMacro: false
      });
    },
    prepare: function() {
      (0, import_kolmafia111.restoreHp)((0, import_kolmafia111.myMaxhp)());
      if (have($skill(_templateObject5814 || (_templateObject5814 = _taggedTemplateLiteral102(["Ruthless Efficiency"]))))) {
        ensureEffect($effect(_templateObject5914 || (_templateObject5914 = _taggedTemplateLiteral102(["Ruthlessly Efficient"]))));
      }
      if (have($skill(_templateObject6013 || (_templateObject6013 = _taggedTemplateLiteral102(["Mathematical Precision"]))))) {
        ensureEffect($effect(_templateObject6125 || (_templateObject6125 = _taggedTemplateLiteral102(["Mathematically Precise"]))));
      }
      if (have($skill(_templateObject6218 || (_templateObject6218 = _taggedTemplateLiteral102(["Blood Bubble"])))))
        ensureEffect($effect(_templateObject6316 || (_templateObject6316 = _taggedTemplateLiteral102(["Blood Bubble"]))));
      (0, import_kolmafia111.retrieveItem)($item(_templateObject6416 || (_templateObject6416 = _taggedTemplateLiteral102(["[glitch season reward name]"]))));
      if ((0, import_kolmafia111.numericModifier)("Monster Level") >= 50 && // Above 50 ML, monsters resist stuns.
      ((0, import_kolmafia111.canadiaAvailable)() || (0, import_kolmafia111.gnomadsAvailable)() || have($item(_templateObject6513 || (_templateObject6513 = _taggedTemplateLiteral102(["detuned radio"])))))) {
        (0, import_kolmafia111.changeMcd)(0);
      }
      if (have($effect(_templateObject6612 || (_templateObject6612 = _taggedTemplateLiteral102(["Ur-Kel's Aria of Annoyance"]))))) {
        uneffect($effect(_templateObject6712 || (_templateObject6712 = _taggedTemplateLiteral102(["Ur-Kel's Aria of Annoyance"]))));
      }
    },
    tentacle: false
  },
  {
    name: "[glitch season reward name]",
    ready: function() {
      var _globalOptions$prefs$2;
      return (_globalOptions$prefs$2 = globalOptions.prefs.fightGlitch) !== null && _globalOptions$prefs$2 !== void 0 ? _globalOptions$prefs$2 : false;
    },
    completed: function() {
      return !!get("_glitchMonsterFights");
    },
    do: function() {
      (0, import_kolmafia111.visitUrl)("inv_eat.php?pwd&whichitem=10207");
      (0, import_kolmafia111.runCombat)();
    },
    combat: new GarboStrategy(Macro2.trySkill($skill(_templateObject6812 || (_templateObject6812 = _taggedTemplateLiteral102(["Curse of Marinara"])))).trySkill($skill(_templateObject6912 || (_templateObject6912 = _taggedTemplateLiteral102(["Conspiratorial Whispers"])))).trySkill($skill(_templateObject7011 || (_templateObject7011 = _taggedTemplateLiteral102(["Shadow Noodles"])))).externalIf(get("glitchItemImplementationCount") * (0, import_kolmafia111.itemAmount)($item(_templateObject7114 || (_templateObject7114 = _taggedTemplateLiteral102(["[glitch season reward name]"])))) >= 400, Macro2.item([$item(_templateObject7214 || (_templateObject7214 = _taggedTemplateLiteral102(["gas can"]))), $item(_templateObject7313 || (_templateObject7313 = _taggedTemplateLiteral102(["gas can"])))])).externalIf(get("lovebugsUnlocked"), Macro2.trySkill($skill(_templateObject7413 || (_templateObject7413 = _taggedTemplateLiteral102(["Summon Love Gnats"])))).trySkill($skill(_templateObject7512 || (_templateObject7512 = _taggedTemplateLiteral102(["Summon Love Mosquito"]))))).tryItem($item(_templateObject7612 || (_templateObject7612 = _taggedTemplateLiteral102(["train whistle"])))).trySkill($skill(_templateObject7711 || (_templateObject7711 = _taggedTemplateLiteral102(["Micrometeorite"])))).tryItem($item(_templateObject7810 || (_templateObject7810 = _taggedTemplateLiteral102(["Time-Spinner"])))).tryItem($item(_templateObject7910 || (_templateObject7910 = _taggedTemplateLiteral102(["little red book"])))).tryItem($item(_templateObject808 || (_templateObject808 = _taggedTemplateLiteral102(["Rain-Doh blue balls"])))).tryItem($item(_templateObject8113 || (_templateObject8113 = _taggedTemplateLiteral102(["Rain-Doh indigo cup"])))).trySkill($skill(_templateObject8213 || (_templateObject8213 = _taggedTemplateLiteral102(["Entangling Noodles"])))).trySkill($skill(_templateObject8313 || (_templateObject8313 = _taggedTemplateLiteral102(["Frost Bite"])))).kill()),
    outfit: function() {
      return freeFightOutfit({
        modifier: ["1000 mainstat"],
        avoid: $items(_templateObject8412 || (_templateObject8412 = _taggedTemplateLiteral102(["mutant crown, mutant arm, mutant legs, shield of the Skeleton Lord"])))
      }, {
        canChooseMacro: false
      });
    },
    prepare: function() {
      (0, import_kolmafia111.restoreHp)((0, import_kolmafia111.myMaxhp)());
      if (have($skill(_templateObject8512 || (_templateObject8512 = _taggedTemplateLiteral102(["Ruthless Efficiency"]))))) {
        ensureEffect($effect(_templateObject8611 || (_templateObject8611 = _taggedTemplateLiteral102(["Ruthlessly Efficient"]))));
      }
      if (have($skill(_templateObject878 || (_templateObject878 = _taggedTemplateLiteral102(["Mathematical Precision"]))))) {
        ensureEffect($effect(_templateObject885 || (_templateObject885 = _taggedTemplateLiteral102(["Mathematically Precise"]))));
      }
      if (have($skill(_templateObject895 || (_templateObject895 = _taggedTemplateLiteral102(["Blood Bubble"])))))
        ensureEffect($effect(_templateObject905 || (_templateObject905 = _taggedTemplateLiteral102(["Blood Bubble"]))));
      (0, import_kolmafia111.retrieveItem)($item(_templateObject9113 || (_templateObject9113 = _taggedTemplateLiteral102(["[glitch season reward name]"]))));
      if (get("glitchItemImplementationCount") * (0, import_kolmafia111.itemAmount)($item(_templateObject9213 || (_templateObject9213 = _taggedTemplateLiteral102(["[glitch season reward name]"])))) >= 400) {
        (0, import_kolmafia111.retrieveItem)($item(_templateObject9312 || (_templateObject9312 = _taggedTemplateLiteral102(["gas can"]))), 2);
      }
    },
    tentacle: false
  },
  {
    name: "Seal Clubbing",
    ready: function() {
      return (0, import_kolmafia111.myClass)() === $class(_templateObject9412 || (_templateObject9412 = _taggedTemplateLiteral102(["Seal Clubber"])));
    },
    completed: function() {
      return sealsAvailable() <= 0 || get("_sealsSummoned") >= maxSealsAvailable();
    },
    do: function() {
      var _ref5 = (0, import_kolmafia111.guildStoreAvailable)() ? [$item(_templateObject9511 || (_templateObject9511 = _taggedTemplateLiteral102(["figurine of a wretched-looking seal"]))), 1] : [$item(_templateObject969 || (_templateObject969 = _taggedTemplateLiteral102(["figurine of an ancient seal"]))), 3], _ref6 = _slicedToArray31(_ref5, 2), figurine = _ref6[0], candlesNeeded = _ref6[1];
      (0, import_kolmafia111.retrieveItem)(1, figurine);
      (0, import_kolmafia111.retrieveItem)(candlesNeeded, $item(_templateObject976 || (_templateObject976 = _taggedTemplateLiteral102(["seal-blubber candle"]))));
      (0, import_kolmafia111.use)(figurine);
    },
    outfit: function() {
      var _ref7, _clubs$find;
      var clubs = import_kolmafia111.Item.all().filter(function(i) {
        return have(i) && (0, import_kolmafia111.canEquip)(i) && (0, import_kolmafia111.itemType)(i) === "club";
      });
      var club = (_ref7 = (_clubs$find = clubs.find(function(i) {
        return (0, import_kolmafia111.weaponHands)(i) === 1;
      })) !== null && _clubs$find !== void 0 ? _clubs$find : clubs.find(function(i) {
        return (0, import_kolmafia111.weaponHands)(i) === 2;
      })) !== null && _ref7 !== void 0 ? _ref7 : $item(_templateObject985 || (_templateObject985 = _taggedTemplateLiteral102(["seal-clubbing club"])));
      (0, import_kolmafia111.retrieveItem)(club);
      return freeFightOutfit({
        weapon: club
      });
    },
    combat: new GarboStrategy(Macro2.startCombat().trySkill($skill(_templateObject995 || (_templateObject995 = _taggedTemplateLiteral102(["Furious Wallop"])))).while_("hasskill Lunging Thrust-Smack", Macro2.skill($skill(_templateObject1005 || (_templateObject1005 = _taggedTemplateLiteral102(["Lunging Thrust-Smack"]))))).while_("hasskill Thrust-Smack", Macro2.skill($skill(_templateObject10113 || (_templateObject10113 = _taggedTemplateLiteral102(["Thrust-Smack"]))))).while_("hasskill Lunge Smack", Macro2.skill($skill(_templateObject10213 || (_templateObject10213 = _taggedTemplateLiteral102(["Lunge Smack"]))))).attack().repeat()),
    combatCount: sealsAvailable,
    tentacle: false
  },
  {
    name: "BRICKO",
    ready: function() {
      return (0, import_kolmafia111.mallPrice)($item(_templateObject10312 || (_templateObject10312 = _taggedTemplateLiteral102(["BRICKO eye brick"])))) + 2 * (0, import_kolmafia111.mallPrice)($item(_templateObject10411 || (_templateObject10411 = _taggedTemplateLiteral102(["BRICKO brick"])))) <= globalOptions.prefs.valueOfFreeFight;
    },
    completed: function() {
      return get("_brickoFights") >= 10;
    },
    do: function() {
      return (0, import_kolmafia111.use)($item(_templateObject1059 || (_templateObject1059 = _taggedTemplateLiteral102(["BRICKO ooze"]))));
    },
    outfit: function() {
      return freeFightOutfit({}, {
        canChooseMacro: false
      });
    },
    combat: new GarboStrategy(Macro2.basicCombat()),
    combatCount: function() {
      return clamp(10 - get("_brickoFights"), 0, 10);
    },
    tentacle: false
  },
  // First kramco (wanderer)
  // Grimacia
  // Saber
  // Pygmys
  // glark cable
  // mushroom garden
  // portscan
  {
    name: "God Lobster",
    ready: function() {
      return have($familiar(_templateObject1065 || (_templateObject1065 = _taggedTemplateLiteral102(["God Lobster"]))));
    },
    completed: function() {
      return get("_godLobsterFights") >= 3;
    },
    do: function() {
      (0, import_kolmafia111.restoreHp)((0, import_kolmafia111.myMaxhp)());
      (0, import_kolmafia111.visitUrl)("main.php?fightgodlobster=1");
      (0, import_kolmafia111.runCombat)();
      (0, import_kolmafia111.visitUrl)("choice.php");
      if ((0, import_kolmafia111.handlingChoice)())
        (0, import_kolmafia111.runChoice)(-1);
    },
    choices: function() {
      return {
        1310: !have($item(_templateObject1075 || (_templateObject1075 = _taggedTemplateLiteral102(["God Lobster's Crown"])))) ? 1 : 2
      };
    },
    // god lob equipment, then stats
    outfit: function() {
      return freeFightOutfit({
        familiar: $familiar(_templateObject1085 || (_templateObject1085 = _taggedTemplateLiteral102(["God Lobster"]))),
        bonuses: /* @__PURE__ */ new Map([[$item(_templateObject1095 || (_templateObject1095 = _taggedTemplateLiteral102(["God Lobster's Scepter"]))), 1e3], [$item(_templateObject1105 || (_templateObject1105 = _taggedTemplateLiteral102(["God Lobster's Ring"]))), 2e3], [$item(_templateObject11113 || (_templateObject11113 = _taggedTemplateLiteral102(["God Lobster's Rod"]))), 3e3], [$item(_templateObject11213 || (_templateObject11213 = _taggedTemplateLiteral102(["God Lobster's Robe"]))), 4e3], [$item(_templateObject11312 || (_templateObject11312 = _taggedTemplateLiteral102(["God Lobster's Crown"]))), 5e3]])
      });
    },
    combatCount: function() {
      return clamp(3 - get("_godLobsterFights"), 0, 3);
    },
    tentacle: false
  },
  {
    name: "Machine Elf",
    ready: function() {
      return have($familiar(_templateObject11410 || (_templateObject11410 = _taggedTemplateLiteral102(["Machine Elf"]))));
    },
    completed: function() {
      return get("_machineTunnelsAdv") >= 5;
    },
    do: $location(_templateObject1155 || (_templateObject1155 = _taggedTemplateLiteral102(["The Deep Machine Tunnels"]))),
    prepare: function() {
      if (garboValue($item(_templateObject1165 || (_templateObject1165 = _taggedTemplateLiteral102(["abstraction: certainty"])))) >= garboValue($item(_templateObject1175 || (_templateObject1175 = _taggedTemplateLiteral102(["abstraction: thought"]))))) {
        acquire(1, $item(_templateObject1185 || (_templateObject1185 = _taggedTemplateLiteral102(["abstraction: thought"]))), garboValue($item(_templateObject1194 || (_templateObject1194 = _taggedTemplateLiteral102(["abstraction: certainty"])))), false);
      }
      if (garboValue($item(_templateObject1204 || (_templateObject1204 = _taggedTemplateLiteral102(["abstraction: joy"])))) >= garboValue($item(_templateObject12112 || (_templateObject12112 = _taggedTemplateLiteral102(["abstraction: action"]))))) {
        acquire(1, $item(_templateObject12212 || (_templateObject12212 = _taggedTemplateLiteral102(["abstraction: action"]))), garboValue($item(_templateObject12311 || (_templateObject12311 = _taggedTemplateLiteral102(["abstraction: joy"])))), false);
      }
      if (garboValue($item(_templateObject1247 || (_templateObject1247 = _taggedTemplateLiteral102(["abstraction: motion"])))) >= garboValue($item(_templateObject1254 || (_templateObject1254 = _taggedTemplateLiteral102(["abstraction: sensation"]))))) {
        acquire(1, $item(_templateObject1264 || (_templateObject1264 = _taggedTemplateLiteral102(["abstraction: sensation"]))), garboValue($item(_templateObject1274 || (_templateObject1274 = _taggedTemplateLiteral102(["abstraction: motion"])))), false);
      }
    },
    choices: function() {
      return {
        1119: 6
      };
    },
    // escape DMT
    combat: new GarboStrategy(Macro2.externalIf(garboValue($item(_templateObject1284 || (_templateObject1284 = _taggedTemplateLiteral102(["abstraction: certainty"])))) >= garboValue($item(_templateObject1294 || (_templateObject1294 = _taggedTemplateLiteral102(["abstraction: thought"])))), Macro2.if_($monster(_templateObject1304 || (_templateObject1304 = _taggedTemplateLiteral102(["Perceiver of Sensations"]))), Macro2.tryItem($item(_templateObject13112 || (_templateObject13112 = _taggedTemplateLiteral102(["abstraction: thought"])))))).externalIf(garboValue($item(_templateObject13211 || (_templateObject13211 = _taggedTemplateLiteral102(["abstraction: joy"])))) >= garboValue($item(_templateObject13311 || (_templateObject13311 = _taggedTemplateLiteral102(["abstraction: action"])))), Macro2.if_($monster(_templateObject1345 || (_templateObject1345 = _taggedTemplateLiteral102(["Thinker of Thoughts"]))), Macro2.tryItem($item(_templateObject1354 || (_templateObject1354 = _taggedTemplateLiteral102(["abstraction: action"])))))).externalIf(garboValue($item(_templateObject1364 || (_templateObject1364 = _taggedTemplateLiteral102(["abstraction: motion"])))) >= garboValue($item(_templateObject1374 || (_templateObject1374 = _taggedTemplateLiteral102(["abstraction: sensation"])))), Macro2.if_($monster(_templateObject1384 || (_templateObject1384 = _taggedTemplateLiteral102(["Performer of Actions"]))), Macro2.tryItem($item(_templateObject1394 || (_templateObject1394 = _taggedTemplateLiteral102(["abstraction: sensation"])))))).basicCombat()),
    outfit: function() {
      return freeFightOutfit({
        familiar: $familiar(_templateObject1404 || (_templateObject1404 = _taggedTemplateLiteral102(["Machine Elf"])))
      });
    },
    tentacle: false,
    // Marked like this as 2 DMT fights get overriden by tentacles (could add +1 combat)
    combatCount: function() {
      return clamp(5 - get("_machineTunnelsAdv"), 0, 5);
    }
  },
  {
    name: "Witchess",
    ready: function() {
      return Witchess_exports.have();
    },
    completed: function() {
      return Witchess_exports.fightsDone() >= 5;
    },
    do: function() {
      return Witchess_exports.fightPiece(bestWitchessPiece());
    },
    tentacle: true,
    combatCount: function() {
      return clamp(5 - Witchess_exports.fightsDone(), 0, 5);
    }
  },
  {
    name: "The X-32-F Combat Training Snowman",
    ready: function() {
      return get("snojoAvailable");
    },
    completed: function() {
      return get("_snojoFreeFights") >= 10;
    },
    do: $location(_templateObject14112 || (_templateObject14112 = _taggedTemplateLiteral102(["The X-32-F Combat Training Snowman"]))),
    tentacle: false,
    combatCount: function() {
      return clamp(10 - get("_snojoFreeFights"), 0, 10);
    }
  },
  // Neverending party
  {
    name: "An Unusually Quiet Barroom Brawl",
    ready: function() {
      return get("ownsSpeakeasy");
    },
    completed: function() {
      return get("_speakeasyFreeFights") >= 3;
    },
    do: $location(_templateObject14211 || (_templateObject14211 = _taggedTemplateLiteral102(["An Unusually Quiet Barroom Brawl"]))),
    tentacle: true,
    combatCount: function() {
      return clamp(3 - get("_speakeasyFreeFights"), 0, 3);
    }
  },
  // killRobortCreaturesForFree
  {
    name: $item(_templateObject1439 || (_templateObject1439 = _taggedTemplateLiteral102(["combat lover's locket"]))).name,
    ready: function() {
      return CombatLoversLocket_exports.have() && locketMonster() !== null;
    },
    completed: function() {
      return CombatLoversLocket_exports.reminiscesLeft() <= locketsToSave();
    },
    do: function() {
      var monster = locketMonster();
      if (!monster)
        return;
      CombatLoversLocket_exports.reminisce(monster);
    },
    outfit: function() {
      return freeFightOutfit(have($familiar(_templateObject1444 || (_templateObject1444 = _taggedTemplateLiteral102(["Robortender"])))) ? {
        familiar: $familiar(_templateObject1454 || (_templateObject1454 = _taggedTemplateLiteral102(["Robortender"])))
      } : {});
    },
    tentacle: true,
    combatCount: function() {
      return clamp(3 - CombatLoversLocket_exports.reminiscesLeft() - locketsToSave(), 0, 3);
    }
  }
  // li'l ninja costume
  // closed-circuit pay phone (make into it's own Quest)
].map(freeFightTask);
function possibleTentacleFights() {
  var availableFights = FreeFightTasks.filter(function(task) {
    var _task$ready3, _task$ready4;
    return ((_task$ready3 = (_task$ready4 = task.ready) === null || _task$ready4 === void 0 ? void 0 : _task$ready4.call(task)) !== null && _task$ready3 !== void 0 ? _task$ready3 : true) && !task.completed();
  });
  return sum(availableFights, function(_ref9) {
    var combatCount = _ref9.combatCount, tentacle = _ref9.tentacle;
    return combatCount() * (tentacle ? 1 : 0);
  });
}
var FreeFightQuest = {
  name: "Free Fight",
  tasks: FreeFightTasks
};

// src/fights.ts
var _templateObject809;
var _templateObject2188;
var _templateObject3168;
var _templateObject4150;
var _templateObject5137;
var _templateObject6126;
var _templateObject7103;
var _templateObject879;
var _templateObject970;
var _templateObject1060;
var _templateObject1151;
var _templateObject1248;
var _templateObject1346;
var _templateObject1440;
var _templateObject1537;
var _templateObject1636;
var _templateObject1736;
var _templateObject1835;
var _templateObject1935;
var _templateObject2035;
var _templateObject2189;
var _templateObject2234;
var _templateObject2333;
var _templateObject2431;
var _templateObject2531;
var _templateObject2631;
var _templateObject2730;
var _templateObject2827;
var _templateObject2924;
var _templateObject3024;
var _templateObject3169;
var _templateObject3226;
var _templateObject3325;
var _templateObject3422;
var _templateObject3522;
var _templateObject3621;
var _templateObject3721;
var _templateObject3821;
var _templateObject3921;
var _templateObject4021;
var _templateObject4151;
var _templateObject4221;
var _templateObject4321;
var _templateObject4420;
var _templateObject4520;
var _templateObject4620;
var _templateObject4720;
var _templateObject4820;
var _templateObject4919;
var _templateObject5018;
var _templateObject5138;
var _templateObject5220;
var _templateObject5320;
var _templateObject5420;
var _templateObject5519;
var _templateObject5618;
var _templateObject5717;
var _templateObject5815;
var _templateObject5915;
var _templateObject6014;
var _templateObject6127;
var _templateObject6219;
var _templateObject6317;
var _templateObject6417;
var _templateObject6514;
var _templateObject6613;
var _templateObject6713;
var _templateObject6813;
var _templateObject6913;
var _templateObject7012;
var _templateObject7115;
var _templateObject7215;
var _templateObject7314;
var _templateObject7414;
var _templateObject7513;
var _templateObject7613;
var _templateObject7712;
var _templateObject7811;
var _templateObject7911;
var _templateObject8010;
var _templateObject8114;
var _templateObject8214;
var _templateObject8314;
var _templateObject8413;
var _templateObject8513;
var _templateObject8612;
var _templateObject8710;
var _templateObject886;
var _templateObject896;
var _templateObject906;
var _templateObject9114;
var _templateObject9214;
var _templateObject9313;
var _templateObject9413;
var _templateObject9512;
var _templateObject9610;
var _templateObject977;
var _templateObject986;
var _templateObject996;
var _templateObject1006;
var _templateObject10114;
var _templateObject10214;
var _templateObject10313;
var _templateObject10412;
var _templateObject10510;
var _templateObject1066;
var _templateObject1076;
var _templateObject1086;
var _templateObject1096;
var _templateObject1106;
var _templateObject11114;
var _templateObject11214;
var _templateObject11313;
var _templateObject11411;
var _templateObject1156;
var _templateObject1166;
var _templateObject1176;
var _templateObject1186;
var _templateObject1195;
var _templateObject1205;
var _templateObject12113;
var _templateObject12213;
var _templateObject12312;
var _templateObject1249;
var _templateObject1255;
var _templateObject1265;
var _templateObject1275;
var _templateObject1285;
var _templateObject1295;
var _templateObject1305;
var _templateObject13113;
var _templateObject13212;
var _templateObject13312;
var _templateObject1347;
var _templateObject1355;
var _templateObject1365;
var _templateObject1375;
var _templateObject1385;
var _templateObject1395;
var _templateObject1405;
var _templateObject14113;
var _templateObject14212;
var _templateObject14310;
var _templateObject1445;
var _templateObject1455;
var _templateObject1464;
var _templateObject1474;
var _templateObject1484;
var _templateObject1494;
var _templateObject1504;
var _templateObject15112;
var _templateObject15211;
var _templateObject1538;
var _templateObject1544;
var _templateObject1554;
var _templateObject1564;
var _templateObject1574;
var _templateObject1584;
var _templateObject1594;
var _templateObject1604;
var _templateObject16112;
var _templateObject16211;
var _templateObject1637;
var _templateObject1644;
var _templateObject1654;
var _templateObject1664;
var _templateObject1674;
var _templateObject1684;
var _templateObject1694;
var _templateObject1704;
var _templateObject17112;
var _templateObject17211;
var _templateObject1737;
var _templateObject1744;
var _templateObject1754;
var _templateObject1764;
var _templateObject1774;
var _templateObject1784;
var _templateObject1794;
var _templateObject1804;
var _templateObject18112;
var _templateObject18211;
var _templateObject1836;
var _templateObject1844;
var _templateObject1854;
var _templateObject1864;
var _templateObject1874;
var _templateObject1884;
var _templateObject1894;
var _templateObject1904;
var _templateObject19112;
var _templateObject19211;
var _templateObject1936;
var _templateObject1944;
var _templateObject1954;
var _templateObject1964;
var _templateObject1974;
var _templateObject1984;
var _templateObject1994;
var _templateObject2004;
var _templateObject20112;
var _templateObject20211;
var _templateObject2036;
var _templateObject2044;
var _templateObject2054;
var _templateObject2063;
var _templateObject2073;
var _templateObject2083;
var _templateObject2093;
var _templateObject21011;
var _templateObject21111;
var _templateObject21211;
var _templateObject21311;
var _templateObject21410;
var _templateObject21510;
var _templateObject21610;
var _templateObject21710;
var _templateObject21810;
var _templateObject2192;
var _templateObject2202;
var _templateObject22110;
var _templateObject22210;
var _templateObject2235;
var _templateObject2242;
var _templateObject2252;
var _templateObject2262;
var _templateObject2272;
var _templateObject2282;
var _templateObject2292;
var _templateObject2302;
var _templateObject23110;
var _templateObject23210;
var _templateObject2334;
var _templateObject2342;
var _templateObject2352;
var _templateObject2362;
var _templateObject2372;
var _templateObject2382;
var _templateObject2392;
var _templateObject2402;
var _templateObject24110;
var _templateObject24210;
var _templateObject2432;
var _templateObject2442;
var _templateObject2452;
var _templateObject2462;
var _templateObject2472;
var _templateObject2482;
var _templateObject2492;
var _templateObject2502;
var _templateObject25110;
var _templateObject25210;
var _templateObject2532;
var _templateObject2542;
var _templateObject2552;
var _templateObject2562;
var _templateObject2572;
var _templateObject2582;
var _templateObject2592;
var _templateObject2602;
var _templateObject26110;
var _templateObject26210;
var _templateObject2632;
var _templateObject2642;
var _templateObject2652;
var _templateObject2662;
var _templateObject2672;
var _templateObject2682;
var _templateObject2692;
var _templateObject2702;
var _templateObject27110;
var _templateObject27210;
var _templateObject2732;
var _templateObject2742;
var _templateObject2752;
var _templateObject2762;
var _templateObject2772;
var _templateObject2782;
var _templateObject2792;
var _templateObject2802;
var _templateObject28110;
var _templateObject2828;
var _templateObject2832;
var _templateObject2842;
var _templateObject2852;
var _templateObject2862;
var _templateObject2872;
var _templateObject2882;
var _templateObject2892;
var _templateObject2902;
var _templateObject29110;
var _templateObject2925;
var _templateObject2932;
var _templateObject2942;
var _templateObject2952;
var _templateObject2962;
var _templateObject2972;
var _templateObject2982;
var _templateObject2992;
var _templateObject3002;
var _templateObject30110;
var _templateObject3025;
var _templateObject3032;
var _templateObject3042;
var _templateObject3052;
var _templateObject3062;
var _templateObject3072;
var _templateObject3082;
var _templateObject3092;
var _templateObject31010;
var _templateObject31110;
var _templateObject31210;
var _templateObject31310;
var _templateObject31410;
var _templateObject31510;
var _templateObject31610;
var _templateObject3172;
var _templateObject3182;
var _templateObject3192;
var _templateObject3202;
var _templateObject32110;
var _templateObject3227;
var _templateObject3232;
var _templateObject3242;
var _templateObject3252;
var _templateObject3262;
var _templateObject3272;
var _templateObject3282;
var _templateObject3292;
var _templateObject3302;
var _templateObject33110;
var _templateObject3326;
var _templateObject3332;
var _templateObject3342;
var _templateObject3352;
var _templateObject3362;
var _templateObject3372;
var _templateObject3382;
var _templateObject3392;
var _templateObject3402;
var _templateObject34110;
var _templateObject3423;
var _templateObject3432;
var _templateObject3442;
var _templateObject3452;
var _templateObject3462;
var _templateObject3472;
var _templateObject3482;
var _templateObject3492;
var _templateObject3502;
var _templateObject35110;
var _templateObject3523;
var _templateObject3532;
var _templateObject3542;
var _templateObject3552;
var _templateObject3562;
var _templateObject3572;
var _templateObject3582;
var _templateObject3592;
var _templateObject3602;
var _templateObject36110;
var _templateObject3622;
var _templateObject3632;
var _templateObject3642;
var _templateObject3652;
var _templateObject3662;
var _templateObject3672;
var _templateObject3682;
var _templateObject3692;
var _templateObject3702;
var _templateObject37110;
var _templateObject3722;
var _templateObject3732;
var _templateObject3742;
var _templateObject3752;
var _templateObject3762;
var _templateObject3772;
var _templateObject3782;
var _templateObject3792;
var _templateObject3802;
var _templateObject38110;
var _templateObject3822;
var _templateObject3832;
var _templateObject3842;
var _templateObject3852;
var _templateObject3862;
var _templateObject3872;
var _templateObject3882;
var _templateObject3892;
var _templateObject3902;
var _templateObject39110;
var _templateObject3922;
var _templateObject3932;
var _templateObject3942;
var _templateObject3952;
var _templateObject3962;
var _templateObject3972;
var _templateObject3982;
var _templateObject3992;
var _templateObject4002;
var _templateObject40110;
var _templateObject4022;
var _templateObject4032;
var _templateObject4042;
var _templateObject4052;
var _templateObject4062;
var _templateObject4072;
var _templateObject4082;
var _templateObject4092;
var _templateObject41010;
var _templateObject41110;
var _templateObject41210;
var _templateObject41310;
var _templateObject41410;
var _templateObject4152;
var _templateObject4162;
var _templateObject4172;
var _templateObject4182;
var _templateObject4192;
var _templateObject4202;
var _templateObject42110;
var _templateObject4222;
var _templateObject4232;
var _templateObject4242;
var _templateObject4252;
var _templateObject4262;
var _templateObject4272;
var _templateObject4282;
var _templateObject4292;
var _templateObject4302;
var _templateObject43110;
var _templateObject4322;
var _templateObject4332;
var _templateObject4342;
var _templateObject4352;
var _templateObject4362;
var _templateObject4372;
var _templateObject4382;
var _templateObject4392;
var _templateObject4402;
var _templateObject44110;
var _templateObject4422;
var _templateObject4432;
var _templateObject4442;
var _templateObject4452;
var _templateObject4462;
var _templateObject4472;
var _templateObject4482;
var _templateObject4492;
var _templateObject4502;
var _templateObject45110;
var _templateObject4522;
var _templateObject4532;
var _templateObject4542;
var _templateObject4552;
var _templateObject4562;
var _templateObject4572;
var _templateObject4582;
var _templateObject4592;
var _templateObject4602;
var _templateObject46110;
var _templateObject4622;
var _templateObject4632;
var _templateObject4642;
var _templateObject4652;
var _templateObject4662;
var _templateObject4672;
var _templateObject4682;
var _templateObject4692;
var _templateObject4702;
var _templateObject47110;
var _templateObject4722;
var _templateObject4732;
var _templateObject4742;
var _templateObject4752;
var _templateObject4762;
var _templateObject4772;
var _templateObject4782;
var _templateObject4792;
var _templateObject4802;
var _templateObject48110;
var _templateObject4822;
var _templateObject4832;
var _templateObject4842;
var _templateObject4852;
var _templateObject4862;
var _templateObject4872;
var _templateObject4882;
var _templateObject4892;
var _templateObject4902;
var _templateObject49110;
var _templateObject4922;
var _templateObject4932;
var _templateObject4942;
var _templateObject4952;
function _createForOfIteratorHelper35(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray70(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _inherits9(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf9(subClass, superClass);
}
function _setPrototypeOf9(o, p) {
  _setPrototypeOf9 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf9(o, p);
}
function _createSuper8(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct8();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf8(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf8(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn8(this, result);
  };
}
function _possibleConstructorReturn8(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized8(self2);
}
function _assertThisInitialized8(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct8() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf8(o) {
  _getPrototypeOf8 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf8(o);
}
function _classCallCheck31(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties31(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey44(descriptor.key), descriptor);
  }
}
function _createClass31(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties31(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties31(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function ownKeys19(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread19(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys19(Object(t), true).forEach(function(r2) {
      _defineProperty40(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys19(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty40(obj, key, value) {
  key = _toPropertyKey44(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey44(arg) {
  var key = _toPrimitive44(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive44(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toConsumableArray47(arr) {
  return _arrayWithoutHoles47(arr) || _iterableToArray47(arr) || _unsupportedIterableToArray70(arr) || _nonIterableSpread47();
}
function _nonIterableSpread47() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray70(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray70(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray70(o, minLen);
}
function _iterableToArray47(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles47(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray70(arr);
}
function _arrayLikeToArray70(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral103(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var firstChainMacro = function() {
  return Macro2.if_($monster(_templateObject809 || (_templateObject809 = _taggedTemplateLiteral103(["Knob Goblin Embezzler"]))), Macro2.if_("!hasskill Lecture on Relativity", Macro2.externalIf(SourceTerminal_exports.getDigitizeMonster() !== $monster(_templateObject2188 || (_templateObject2188 = _taggedTemplateLiteral103(["Knob Goblin Embezzler"]))), Macro2.tryCopier($skill(_templateObject3168 || (_templateObject3168 = _taggedTemplateLiteral103(["Digitize"]))))).tryCopier($item(_templateObject4150 || (_templateObject4150 = _taggedTemplateLiteral103(["Spooky Putty sheet"])))).tryCopier($item(_templateObject5137 || (_templateObject5137 = _taggedTemplateLiteral103(["Rain-Doh black box"])))).tryCopier($item(_templateObject6126 || (_templateObject6126 = _taggedTemplateLiteral103(["4-d camera"])))).tryCopier($item(_templateObject7103 || (_templateObject7103 = _taggedTemplateLiteral103(["unfinished ice sculpture"])))).externalIf(get("_enamorangs") === 0, Macro2.tryCopier($item(_templateObject879 || (_templateObject879 = _taggedTemplateLiteral103(["LOV Enamorang"])))))).trySkill($skill(_templateObject970 || (_templateObject970 = _taggedTemplateLiteral103(["lecture on relativity"])))).meatKill()).abort();
};
var secondChainMacro = function() {
  return Macro2.if_($monster(_templateObject1060 || (_templateObject1060 = _taggedTemplateLiteral103(["Knob Goblin Embezzler"]))), Macro2.if_("!hasskill Lecture on Relativity", Macro2.trySkill($skill(_templateObject1151 || (_templateObject1151 = _taggedTemplateLiteral103(["Meteor Shower"]))))).if_("!hasskill Lecture on Relativity", Macro2.externalIf(get("_sourceTerminalDigitizeMonster") !== $monster(_templateObject1248 || (_templateObject1248 = _taggedTemplateLiteral103(["Knob Goblin Embezzler"]))), Macro2.tryCopier($skill(_templateObject1346 || (_templateObject1346 = _taggedTemplateLiteral103(["Digitize"]))))).tryCopier($item(_templateObject1440 || (_templateObject1440 = _taggedTemplateLiteral103(["Spooky Putty sheet"])))).tryCopier($item(_templateObject1537 || (_templateObject1537 = _taggedTemplateLiteral103(["Rain-Doh black box"])))).tryCopier($item(_templateObject1636 || (_templateObject1636 = _taggedTemplateLiteral103(["4-d camera"])))).tryCopier($item(_templateObject1736 || (_templateObject1736 = _taggedTemplateLiteral103(["unfinished ice sculpture"])))).externalIf(get("_enamorangs") === 0, Macro2.tryCopier($item(_templateObject1835 || (_templateObject1835 = _taggedTemplateLiteral103(["LOV Enamorang"])))))).trySkill($skill(_templateObject1935 || (_templateObject1935 = _taggedTemplateLiteral103(["lecture on relativity"])))).meatKill()).abort();
};
function embezzlerSetup() {
  (0, import_kolmafia112.setLocation)($location(_templateObject2035 || (_templateObject2035 = _taggedTemplateLiteral103(["Friar Ceremony Location"]))));
  potionSetup(false);
  (0, import_kolmafia112.maximize)("MP", false);
  meatMood(true, 750 + baseMeat).execute(embezzlerCount());
  safeRestore();
  freeFightMood().execute(50);
  useBuffExtenders();
  burnLibrams(400);
  if (globalOptions.ascend && questStep2("questM16Temple") > 0 && get("lastTempleAdventures") < (0, import_kolmafia112.myAscensions)() && acquire(1, $item(_templateObject2189 || (_templateObject2189 = _taggedTemplateLiteral103(["stone wool"]))), 3 * get("valueOfAdventure") + 100, false) > 0) {
    ensureEffect($effect(_templateObject2234 || (_templateObject2234 = _taggedTemplateLiteral103(["Stone-Faced"]))));
    setChoice(582, 1);
    setChoice(579, 3);
    while (get("lastTempleAdventures") < (0, import_kolmafia112.myAscensions)()) {
      var _tryFindFreeRun, _run$constraints$prep, _run$constraints;
      var run = (_tryFindFreeRun = tryFindFreeRun(freeRunConstraints(false))) !== null && _tryFindFreeRun !== void 0 ? _tryFindFreeRun : ltbRun();
      if (!run)
        break;
      (_run$constraints$prep = (_run$constraints = run.constraints).preparation) === null || _run$constraints$prep === void 0 || _run$constraints$prep.call(_run$constraints);
      freeFightOutfit(toSpec(run)).dress();
      garboAdventure($location(_templateObject2333 || (_templateObject2333 = _taggedTemplateLiteral103(["The Hidden Temple"]))), run.macro);
    }
  }
  bathroomFinance(embezzlerCount());
  if (SourceTerminal_exports.have()) {
    SourceTerminal_exports.educate([$skill(_templateObject2431 || (_templateObject2431 = _taggedTemplateLiteral103(["Extract"]))), $skill(_templateObject2531 || (_templateObject2531 = _taggedTemplateLiteral103(["Digitize"])))]);
  }
  if (!get("_cameraUsed") && !have($item(_templateObject2631 || (_templateObject2631 = _taggedTemplateLiteral103(["shaking 4-d camera"])))) && expectedEmbezzlerProfit() > (0, import_kolmafia112.mallPrice)($item(_templateObject2730 || (_templateObject2730 = _taggedTemplateLiteral103(["4-d camera"]))))) {
    property_exports.withProperty("autoSatisfyWithCloset", true, function() {
      return (0, import_kolmafia112.retrieveItem)($item(_templateObject2827 || (_templateObject2827 = _taggedTemplateLiteral103(["4-d camera"]))));
    });
  }
  if (!get("_iceSculptureUsed") && !have($item(_templateObject2924 || (_templateObject2924 = _taggedTemplateLiteral103(["ice sculpture"])))) && expectedEmbezzlerProfit() > ((0, import_kolmafia112.mallPrice)($item(_templateObject3024 || (_templateObject3024 = _taggedTemplateLiteral103(["snow berries"])))) + (0, import_kolmafia112.mallPrice)($item(_templateObject3169 || (_templateObject3169 = _taggedTemplateLiteral103(["ice harvest"]))))) * 3) {
    property_exports.withProperty("autoSatisfyWithCloset", true, function() {
      (0, import_kolmafia112.cliExecute)("refresh inventory");
      (0, import_kolmafia112.retrieveItem)($item(_templateObject3226 || (_templateObject3226 = _taggedTemplateLiteral103(["unfinished ice sculpture"]))));
    });
  }
  if (!get("_enamorangs") && !(0, import_kolmafia112.itemAmount)($item(_templateObject3325 || (_templateObject3325 = _taggedTemplateLiteral103(["LOV Enamorang"])))) && expectedEmbezzlerProfit() > 2e4) {
    (0, import_kolmafia112.retrieveItem)($item(_templateObject3422 || (_templateObject3422 = _taggedTemplateLiteral103(["LOV Enamorang"]))));
  }
  if (have($item(_templateObject3522 || (_templateObject3522 = _taggedTemplateLiteral103(["Spooky Putty monster"])))) && !get("spookyPuttyMonster")) {
    (0, import_kolmafia112.visitUrl)("desc_item.php?whichitem=".concat($item(_templateObject3621 || (_templateObject3621 = _taggedTemplateLiteral103(["Spooky Putty monster"]))).descid), false, false);
    if (!get("spookyPuttyMonster")) {
      (0, import_kolmafia112.use)($item(_templateObject3721 || (_templateObject3721 = _taggedTemplateLiteral103(["Spooky Putty monster"]))));
    }
  }
  if (have($item(_templateObject3821 || (_templateObject3821 = _taggedTemplateLiteral103(["Rain-Doh box full of monster"])))) && !get("rainDohMonster")) {
    (0, import_kolmafia112.visitUrl)("desc_item.php?whichitem=".concat($item(_templateObject3921 || (_templateObject3921 = _taggedTemplateLiteral103(["Rain-Doh box full of monster"]))).descid), false, false);
  }
  if (have($item(_templateObject4021 || (_templateObject4021 = _taggedTemplateLiteral103(["shaking 4-d camera"])))) && !get("cameraMonster")) {
    (0, import_kolmafia112.visitUrl)("desc_item.php?whichitem=".concat($item(_templateObject4151 || (_templateObject4151 = _taggedTemplateLiteral103(["shaking 4-d camera"]))).descid), false, false);
  }
  if (have($item(_templateObject4221 || (_templateObject4221 = _taggedTemplateLiteral103(["envyfish egg"])))) && !get("envyfishMonster")) {
    (0, import_kolmafia112.visitUrl)("desc_item.php?whichitem=".concat($item(_templateObject4321 || (_templateObject4321 = _taggedTemplateLiteral103(["envyfish egg"]))).descid), false, false);
  }
  if (have($item(_templateObject4420 || (_templateObject4420 = _taggedTemplateLiteral103(["ice sculpture"])))) && !get("iceSculptureMonster")) {
    (0, import_kolmafia112.visitUrl)("desc_item.php?whichitem=".concat($item(_templateObject4520 || (_templateObject4520 = _taggedTemplateLiteral103(["ice sculpture"]))).descid), false, false);
  }
  if (doingGregFight()) {
    initializeExtrovermectinZones();
  }
}
function startWandererCounter() {
  var nextFight = getNextEmbezzlerFight();
  if (!nextFight || nextFight.canInitializeWandererCounters || nextFight.draggable) {
    return;
  }
  var digitizeNeedsStarting = counter_exports.get("Digitize Monster") === Infinity && SourceTerminal_exports.getDigitizeUses() !== 0;
  var romanceNeedsStarting = get("_romanticFightsLeft") > 0 && counter_exports.get("Romantic Monster window begin") === Infinity && counter_exports.get("Romantic Monster window end") === Infinity;
  if (digitizeNeedsStarting || romanceNeedsStarting) {
    if (digitizeNeedsStarting) {
      (0, import_kolmafia112.print)("Starting digitize counter by visiting the Haunted Kitchen!");
    }
    if (romanceNeedsStarting) {
      (0, import_kolmafia112.print)("Starting romance counter by visiting the Haunted Kitchen!");
    }
    do {
      var run = void 0;
      if (gregReady()) {
        var _run$constraints$prep2, _run$constraints2;
        (0, import_kolmafia112.print)("You still have gregs active, so we're going to wear your meat outfit.");
        run = ltbRun();
        (_run$constraints$prep2 = (_run$constraints2 = run.constraints).preparation) === null || _run$constraints$prep2 === void 0 || _run$constraints$prep2.call(_run$constraints2);
        embezzlerOutfit().dress();
      } else {
        var _tryFindFreeRun2, _run$constraints$prep3, _run$constraints3;
        (0, import_kolmafia112.print)("You do not have gregs active, so this is a regular free run.");
        run = (_tryFindFreeRun2 = tryFindFreeRun(freeRunConstraints(false))) !== null && _tryFindFreeRun2 !== void 0 ? _tryFindFreeRun2 : ltbRun();
        (_run$constraints$prep3 = (_run$constraints3 = run.constraints).preparation) === null || _run$constraints$prep3 === void 0 || _run$constraints$prep3.call(_run$constraints3);
        freeFightOutfit(toSpec(run)).dress();
      }
      garboAdventure($location(_templateObject4720 || (_templateObject4720 = _taggedTemplateLiteral103(["The Haunted Kitchen"]))), Macro2.if_($monster(_templateObject4820 || (_templateObject4820 = _taggedTemplateLiteral103(["Knob Goblin Embezzler"]))), Macro2.embezzler()).step(run.macro));
    } while (get("lastCopyableMonster") === $monster(_templateObject4620 || (_templateObject4620 = _taggedTemplateLiteral103(["Government agent"]))) || dogOrHolidayWanderer(["Lights Out in the Kitchen"]));
  }
}
function pygmyOptions() {
  var equip14 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return {
    spec: function() {
      return {
        equip: equip14,
        avoid: $items(_templateObject4919 || (_templateObject4919 = _taggedTemplateLiteral103(["Staff of Queso Escusado, stinky cheese sword"]))),
        bonuses: new Map([[$item(_templateObject5018 || (_templateObject5018 = _taggedTemplateLiteral103(["garbage sticker"]))), 100]].concat(_toConsumableArray47(magnifyingGlass())))
      };
    },
    macroAllowsFamiliarActions: false
  };
}
function dailyFights() {
  if ((0, import_kolmafia112.myInebriety)() > (0, import_kolmafia112.inebrietyLimit)())
    return;
  if (getFoldGroup($item(_templateObject5138 || (_templateObject5138 = _taggedTemplateLiteral103(["Spooky Putty sheet"])))).some(function(item10) {
    return have(item10);
  })) {
    (0, import_kolmafia112.cliExecute)("fold spooky putty sheet");
  }
  faxMonster($monster(_templateObject5220 || (_templateObject5220 = _taggedTemplateLiteral103(["Knob Goblin Embezzler"]))));
  if (embezzlerSources.some(function(source) {
    return source.potential();
  })) {
    withStash($items(_templateObject5320 || (_templateObject5320 = _taggedTemplateLiteral103(["Spooky Putty sheet"]))), function() {
      if (!getNextEmbezzlerFight())
        return;
      embezzlerSetup();
      if (have($familiar(_templateObject5420 || (_templateObject5420 = _taggedTemplateLiteral103(["Pocket Professor"]))))) {
        var potentialPocketProfessorLectures = [{
          property: "_garbo_meatChain",
          macro: firstChainMacro,
          goalMaximize: function(spec) {
            return embezzlerOutfit(spec).dress();
          }
        }, {
          property: "_garbo_weightChain",
          macro: secondChainMacro,
          goalMaximize: function(spec) {
            return Outfit.from(_objectSpread19(_objectSpread19({}, spec), {}, {
              modifier: ["Familiar Weight"]
            }), new Error("Unable to build outfit for weight chain!")).dress();
          }
        }];
        for (var _i = 0, _potentialPocketProfe = potentialPocketProfessorLectures; _i < _potentialPocketProfe.length; _i++) {
          var potentialLecture = _potentialPocketProfe[_i];
          var _property = potentialLecture.property, macro = potentialLecture.macro, goalMaximize = potentialLecture.goalMaximize;
          var fightSource = getNextEmbezzlerFight();
          if (!fightSource)
            return;
          if (get(_property, false))
            continue;
          if (fightSource.gregariousReplace) {
            var crateIsSabered = get("_saberForceMonster") === $monster(_templateObject5519 || (_templateObject5519 = _taggedTemplateLiteral103(["crate"])));
            var notEnoughCratesSabered = get("_saberForceMonsterCount") < 2;
            var weWantToSaberCrates = !crateIsSabered || notEnoughCratesSabered;
            if (weWantToSaberCrates)
              saberCrateIfSafe();
          }
          var chip = $item(_templateObject5618 || (_templateObject5618 = _taggedTemplateLiteral103(["Pocket Professor memory chip"])));
          var jacks = $item(_templateObject5717 || (_templateObject5717 = _taggedTemplateLiteral103(["box of Familiar Jacks"])));
          (0, import_kolmafia112.useFamiliar)($familiar(_templateObject5815 || (_templateObject5815 = _taggedTemplateLiteral103(["Pocket Professor"]))));
          if (!have(chip)) {
            if ((0, import_kolmafia112.mallPrice)(jacks) < (0, import_kolmafia112.mallPrice)(chip)) {
              (0, import_kolmafia112.retrieveItem)(jacks);
              (0, import_kolmafia112.use)(jacks);
            } else {
              (0, import_kolmafia112.retrieveItem)(chip);
            }
          }
          var profSpec = {
            familiar: $familiar(_templateObject5915 || (_templateObject5915 = _taggedTemplateLiteral103(["Pocket Professor"])))
          };
          if (have(chip)) {
            profSpec.famequip = chip;
          }
          goalMaximize(_objectSpread19(_objectSpread19({}, profSpec), fightSource.spec));
          if (get("_pocketProfessorLectures") < pocketProfessorLectures()) {
            var _eventLog$embezzlerSo;
            var startLectures = get("_pocketProfessorLectures");
            runEmbezzlerFight(fightSource, {
              macro: macro(),
              useAuto: false
            });
            eventLog.initialEmbezzlersFought += 1 + get("_pocketProfessorLectures") - startLectures;
            eventLog.embezzlerSources.push(fightSource.name);
            (_eventLog$embezzlerSo = eventLog.embezzlerSources).push.apply(_eventLog$embezzlerSo, _toConsumableArray47(new Array(get("_pocketProfessorLectures") - startLectures).fill("Pocket Professor")));
          }
          _set(_property, true);
          postCombatActions();
          var predictedNextFight = getNextEmbezzlerFight();
          if (!(predictedNextFight !== null && predictedNextFight !== void 0 && predictedNextFight.draggable))
            doSausage();
          doGhost();
          startWandererCounter();
        }
      }
      (0, import_kolmafia112.useFamiliar)(meatFamiliar());
      var nextFight = getNextEmbezzlerFight();
      while (nextFight !== null && (0, import_kolmafia112.myAdventures)()) {
        (0, import_kolmafia112.print)("Running fight ".concat(nextFight.name));
        var startTurns = (0, import_kolmafia112.totalTurnsPlayed)();
        if (nextFight.draggable === "backup" && have($skill(_templateObject6014 || (_templateObject6014 = _taggedTemplateLiteral103(["Musk of the Moose"])))) && !have($effect(_templateObject6127 || (_templateObject6127 = _taggedTemplateLiteral103(["Musk of the Moose"]))))) {
          (0, import_kolmafia112.useSkill)($skill(_templateObject6219 || (_templateObject6219 = _taggedTemplateLiteral103(["Musk of the Moose"]))));
        }
        if (nextFight.gregariousReplace) {
          var _crateIsSabered = get("_saberForceMonster") === $monster(_templateObject6317 || (_templateObject6317 = _taggedTemplateLiteral103(["crate"])));
          var _notEnoughCratesSabered = get("_saberForceMonsterCount") < 2;
          var _weWantToSaberCrates = !_crateIsSabered || _notEnoughCratesSabered;
          if (_weWantToSaberCrates)
            saberCrateIfSafe();
        }
        var location = new EmbezzlerFightRunOptions(nextFight).location;
        var underwater = location.environment === "underwater";
        var shouldCopy = get("_badlyRomanticArrows") === 0 && !underwater;
        var bestCopier = $familiars(_templateObject6417 || (_templateObject6417 = _taggedTemplateLiteral103(["Obtuse Angel, Reanimated Reanimator"]))).find(have);
        var familiar7 = shouldCopy && bestCopier ? bestCopier : meatFamiliar();
        var famSpec = {
          familiar: familiar7
        };
        if (familiar7 === $familiar(_templateObject6514 || (_templateObject6514 = _taggedTemplateLiteral103(["Obtuse Angel"])))) {
          famSpec.famequip = $item(_templateObject6613 || (_templateObject6613 = _taggedTemplateLiteral103(["quake of arrows"])));
        }
        (0, import_kolmafia112.setLocation)(location);
        embezzlerOutfit(_objectSpread19(_objectSpread19({}, nextFight.spec), famSpec), location).dress();
        runEmbezzlerFight(nextFight);
        postCombatActions();
        (0, import_kolmafia112.print)("Finished ".concat(nextFight.name));
        if ((0, import_kolmafia112.totalTurnsPlayed)() - startTurns === 1 && get("lastCopyableMonster") === $monster(_templateObject6713 || (_templateObject6713 = _taggedTemplateLiteral103(["Knob Goblin Embezzler"]))) && (nextFight.wrongEncounterName || get("lastEncounter") === "Knob Goblin Embezzler")) {
          eventLog.initialEmbezzlersFought++;
          eventLog.embezzlerSources.push(nextFight.name);
        }
        nextFight = getNextEmbezzlerFight();
        if (romanticMonsterImpossible() && (!nextFight || !nextFight.draggable)) {
          doSausage();
          yachtzee();
        }
        doGhost();
        startWandererCounter();
      }
    });
  }
}
var consecutiveNonFreeFights = 0;
var FreeFight = /* @__PURE__ */ function() {
  function FreeFight2(available4, run, tentacle) {
    var options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    _classCallCheck31(this, FreeFight2);
    _defineProperty40(this, "available", void 0);
    _defineProperty40(this, "run", void 0);
    _defineProperty40(this, "tentacle", void 0);
    _defineProperty40(this, "options", void 0);
    this.available = available4;
    this.run = run;
    this.tentacle = tentacle;
    this.options = options;
  }
  _createClass31(FreeFight2, [{
    key: "isAvailable",
    value: function isAvailable() {
      if ((0, import_kolmafia112.myAdventures)() === 0)
        return false;
      var avail = this.available();
      return typeof avail === "number" ? avail > 0 : avail;
    }
  }, {
    key: "getSpec",
    value: function getSpec() {
      var _this$options$spec;
      var noncombat = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
      var spec = undelay((_this$options$spec = this.options.spec) !== null && _this$options$spec !== void 0 ? _this$options$spec : {});
      if (noncombat)
        delete spec.familiar;
      return spec;
    }
  }, {
    key: "runAll",
    value: function runAll() {
      var _this$options$cost, _this$options$cost2, _this$options;
      if (!this.isAvailable())
        return;
      if (((_this$options$cost = (_this$options$cost2 = (_this$options = this.options).cost) === null || _this$options$cost2 === void 0 ? void 0 : _this$options$cost2.call(_this$options)) !== null && _this$options$cost !== void 0 ? _this$options$cost : 0) > globalOptions.prefs.valueOfFreeFight) {
        return;
      }
      while (this.isAvailable()) {
        var _this$options2, _this$options2$noncom, _this$options3, _this$options$effects, _this$options$effects2, _this$options4;
        voidMonster();
        var noncombat = !!((_this$options2 = this.options) !== null && _this$options2 !== void 0 && (_this$options2$noncom = (_this$options3 = _this$options2).noncombat) !== null && _this$options2$noncom !== void 0 && _this$options2$noncom.call(_this$options3));
        var effects = (_this$options$effects = (_this$options$effects2 = (_this$options4 = this.options).effects) === null || _this$options$effects2 === void 0 ? void 0 : _this$options$effects2.call(_this$options4)) !== null && _this$options$effects !== void 0 ? _this$options$effects : [];
        freeFightMood.apply(void 0, _toConsumableArray47(effects)).execute();
        freeFightOutfit(this.getSpec(noncombat), {
          wanderOptions: this.options.wandererOptions
        }).dress();
        safeRestore();
        var curTurncount = (0, import_kolmafia112.myTurncount)();
        withMacro(Macro2.basicCombat(), this.run);
        if ((0, import_kolmafia112.myTurncount)() > curTurncount)
          consecutiveNonFreeFights++;
        else
          consecutiveNonFreeFights = 0;
        if (consecutiveNonFreeFights >= 5) {
          throw new Error("The last 5 FreeRunFights were not free!");
        }
        postCombatActions();
        if (!have($effect(_templateObject6813 || (_templateObject6813 = _taggedTemplateLiteral103(["Feeling Lost"])))))
          deliverThesisIfAble();
      }
    }
  }]);
  return FreeFight2;
}();
var FreeRunFight = /* @__PURE__ */ function(_FreeFight) {
  _inherits9(FreeRunFight2, _FreeFight);
  var _super = _createSuper8(FreeRunFight2);
  function FreeRunFight2(available4, run) {
    var _this;
    var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    var freeRunPicker = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    _classCallCheck31(this, FreeRunFight2);
    _this = _super.call(this, available4, function() {
      return null;
    }, false, _objectSpread19(_objectSpread19({}, options), {}, {
      macroAllowsFamiliarActions: false
    }));
    _defineProperty40(_assertThisInitialized8(_this), "freeRun", void 0);
    _defineProperty40(_assertThisInitialized8(_this), "constraints", void 0);
    _this.freeRun = run;
    _this.constraints = freeRunPicker;
    return _this;
  }
  _createClass31(FreeRunFight2, [{
    key: "runAll",
    value: function runAll() {
      var _this2 = this;
      if (!this.isAvailable())
        return;
      if ((this.options.cost ? this.options.cost() : 0) > globalOptions.prefs.valueOfFreeFight) {
        return;
      }
      var _loop = function _loop2() {
        var _this2$options$spec, _runSource$constraint, _runSource$constraint2, _this2$options$effect, _this2$options$effect2, _this2$options;
        var initialSpec = undelay((_this2$options$spec = _this2.options.spec) !== null && _this2$options$spec !== void 0 ? _this2$options$spec : {});
        var constraints = _objectSpread19(_objectSpread19({}, freeRunConstraints(false)), {}, {
          noFamiliar: function() {
            return "familiar" in initialSpec;
          }
        }, _this2.constraints);
        var runSource = tryFindFreeRun(constraints);
        if (!runSource)
          return 1;
        (_runSource$constraint = (_runSource$constraint2 = runSource.constraints).preparation) === null || _runSource$constraint === void 0 || _runSource$constraint.call(_runSource$constraint2);
        var mergingOutfit = Outfit.from(initialSpec, new Error("Failed to build outfit from ".concat((0, import_kolmafia112.toJson)(initialSpec))));
        mergingOutfit.equip(toSpec(runSource));
        freeFightOutfit(mergingOutfit.spec()).dress();
        freeFightMood.apply(void 0, _toConsumableArray47((_this2$options$effect = (_this2$options$effect2 = (_this2$options = _this2.options).effects) === null || _this2$options$effect2 === void 0 ? void 0 : _this2$options$effect2.call(_this2$options)) !== null && _this2$options$effect !== void 0 ? _this2$options$effect : []));
        safeRestore();
        var curTurncount = (0, import_kolmafia112.myTurncount)();
        withMacro(Macro2.step(runSource.macro), function() {
          return _this2.freeRun(runSource);
        });
        if ((0, import_kolmafia112.myTurncount)() > curTurncount)
          consecutiveNonFreeFights++;
        else
          consecutiveNonFreeFights = 0;
        if (consecutiveNonFreeFights >= 5) {
          throw new Error("The last 5 FreeRunFights were not free!");
        }
        postCombatActions();
      };
      while (this.isAvailable()) {
        if (_loop())
          break;
      }
    }
  }]);
  return FreeRunFight2;
}(FreeFight);
var pygmyBanishHandlers = [{
  pygmy: $monster(_templateObject6913 || (_templateObject6913 = _taggedTemplateLiteral103(["pygmy bowler"]))),
  skill: $skill(_templateObject7012 || (_templateObject7012 = _taggedTemplateLiteral103(["Snokebomb"]))),
  check: "_snokebombUsed",
  limit: getUsingFreeBunnyBanish() ? 1 : 3,
  item: $item(_templateObject7115 || (_templateObject7115 = _taggedTemplateLiteral103(["Louder Than Bomb"])))
}, {
  pygmy: $monster(_templateObject7215 || (_templateObject7215 = _taggedTemplateLiteral103(["pygmy orderlies"]))),
  skill: $skill(_templateObject7314 || (_templateObject7314 = _taggedTemplateLiteral103(["Feel Hatred"]))),
  check: "_feelHatredUsed",
  limit: 3,
  item: $item(_templateObject7414 || (_templateObject7414 = _taggedTemplateLiteral103(["divine champagne popper"])))
}, {
  pygmy: $monster(_templateObject7513 || (_templateObject7513 = _taggedTemplateLiteral103(["pygmy janitor"]))),
  skill: void 0,
  check: void 0,
  limit: 0,
  item: $item(_templateObject7613 || (_templateObject7613 = _taggedTemplateLiteral103(["tennis ball"])))
}];
var sniffSources = ["_gallapagosMonster", "olfactedMonster", "_latteMonster", "motifMonster", "longConMonster"];
var pygmySniffed = function() {
  return sniffSources.some(function(source) {
    return pygmyBanishHandlers.some(function(_ref) {
      var pygmy = _ref.pygmy;
      return pygmy === get(source);
    });
  });
};
var pygmyMacro = Macro2.step.apply(Macro2, _toConsumableArray47(pygmyBanishHandlers.map(function(_ref2) {
  var pygmy = _ref2.pygmy, skill = _ref2.skill, item10 = _ref2.item, check = _ref2.check, limit = _ref2.limit;
  return Macro2.externalIf((check ? get(check) : Infinity) < limit, Macro2.if_(pygmy, skill ? Macro2.trySkill(skill).item(item10) : Macro2.item(item10)), Macro2.if_(pygmy, Macro2.item(item10)));
}))).if_($monster(_templateObject7712 || (_templateObject7712 = _taggedTemplateLiteral103(["drunk pygmy"]))), Macro2.trySkill($skill(_templateObject7811 || (_templateObject7811 = _taggedTemplateLiteral103(["Extract"])))).trySingAlong()).ifHolidayWanderer(Macro2.basicCombat()).abort();
function getStenchLocation() {
  var _find;
  return (_find = $locations(_templateObject7911 || (_templateObject7911 = _taggedTemplateLiteral103(["Uncle Gator's Country Fun-Time Liquid Waste Sluice, The Hippy Camp (Bombed Back to the Stone Age), The Dark and Spooky Swamp"]))).find(function(l) {
    return (0, import_kolmafia112.canAdventure)(l);
  })) !== null && _find !== void 0 ? _find : $location.none;
}
function bowlOfScorpionsAvailable() {
  if (get("hiddenTavernUnlock") === (0, import_kolmafia112.myAscensions)()) {
    return true;
  } else if (globalOptions.triedToUnlockHiddenTavern) {
    return false;
  } else {
    globalOptions.triedToUnlockHiddenTavern = true;
    (0, import_kolmafia112.retrieveItem)($item(_templateObject8010 || (_templateObject8010 = _taggedTemplateLiteral103(["book of matches"]))));
    if (have($item(_templateObject8114 || (_templateObject8114 = _taggedTemplateLiteral103(["book of matches"]))))) {
      (0, import_kolmafia112.use)($item(_templateObject8214 || (_templateObject8214 = _taggedTemplateLiteral103(["book of matches"]))));
    }
    return get("hiddenTavernUnlock") === (0, import_kolmafia112.myAscensions)() || (0, import_kolmafia112.mallPrice)($item(_templateObject8314 || (_templateObject8314 = _taggedTemplateLiteral103(["Bowl of Scorpions"])))) < 1e3;
  }
}
function molemanReady() {
  return have($item(_templateObject8413 || (_templateObject8413 = _taggedTemplateLiteral103(["molehill mountain"])))) && !get("_molehillMountainUsed");
}
var freeFightSources = [
  new FreeFight(function() {
    return wantPills() ? 5 - get("_saberForceUses") : 0;
  }, function() {
    if (have($familiar(_templateObject8513 || (_templateObject8513 = _taggedTemplateLiteral103(["Red-Nosed Snapper"]))))) {
      (0, import_kolmafia112.cliExecute)("snapper ".concat($phylum(_templateObject8612 || (_templateObject8612 = _taggedTemplateLiteral103(["dude"])))));
    }
    setChoice(1387, 3);
    if (have($skill(_templateObject8710 || (_templateObject8710 = _taggedTemplateLiteral103(["Comprehensive Cartography"])))) && get("_monstersMapped") < (getBestItemStealZone(true) && get("_fireExtinguisherCharge") >= 10 ? 2 : 3)) {
      withMacro(Macro2.skill($skill(_templateObject886 || (_templateObject886 = _taggedTemplateLiteral103(["Use the Force"])))), function() {
        mapMonster2($location(_templateObject896 || (_templateObject896 = _taggedTemplateLiteral103(["Domed City of Grimacia"]))), $monster(_templateObject906 || (_templateObject906 = _taggedTemplateLiteral103(["grizzled survivor"]))));
        (0, import_kolmafia112.runCombat)();
        (0, import_kolmafia112.runChoice)(-1);
      });
    } else {
      if ((0, import_kolmafia112.numericModifier)($item(_templateObject9114 || (_templateObject9114 = _taggedTemplateLiteral103(["Grimacite guayabera"]))), "Monster Level") < 40) {
        (0, import_kolmafia112.retrieveItem)(1, $item(_templateObject9214 || (_templateObject9214 = _taggedTemplateLiteral103(["tennis ball"]))));
        (0, import_kolmafia112.retrieveItem)(1, $item(_templateObject9313 || (_templateObject9313 = _taggedTemplateLiteral103(["Louder Than Bomb"]))));
        (0, import_kolmafia112.retrieveItem)(1, $item(_templateObject9413 || (_templateObject9413 = _taggedTemplateLiteral103(["divine champagne popper"]))));
      }
      var snokeLimit = getUsingFreeBunnyBanish() ? 1 : 3;
      garboAdventure($location(_templateObject9512 || (_templateObject9512 = _taggedTemplateLiteral103(["Domed City of Grimacia"]))), Macro2.if_($monster(_templateObject9610 || (_templateObject9610 = _taggedTemplateLiteral103(["alielf"]))), Macro2.trySkill($skill(_templateObject977 || (_templateObject977 = _taggedTemplateLiteral103(["Asdon Martin: Spring-Loaded Front Bumper"])))).tryItem($item(_templateObject986 || (_templateObject986 = _taggedTemplateLiteral103(["Louder Than Bomb"]))))).if_($monster(_templateObject996 || (_templateObject996 = _taggedTemplateLiteral103(["cat-alien"]))), get("_snokebombUsed") < snokeLimit ? Macro2.trySkill($skill(_templateObject1006 || (_templateObject1006 = _taggedTemplateLiteral103(["Snokebomb"])))).item($item(_templateObject10114 || (_templateObject10114 = _taggedTemplateLiteral103(["tennis ball"])))) : Macro2.item($item(_templateObject10214 || (_templateObject10214 = _taggedTemplateLiteral103(["tennis ball"]))))).if_($monster(_templateObject10313 || (_templateObject10313 = _taggedTemplateLiteral103(["dog-alien"]))), Macro2.trySkill($skill(_templateObject10412 || (_templateObject10412 = _taggedTemplateLiteral103(["Feel Hatred"])))).tryItem($item(_templateObject10510 || (_templateObject10510 = _taggedTemplateLiteral103(["divine champagne popper"]))))).step("pickpocket").skill($skill(_templateObject1066 || (_templateObject1066 = _taggedTemplateLiteral103(["Use the Force"])))));
    }
  }, false, {
    spec: function() {
      var canPickPocket = (0, import_kolmafia112.myClass)() === $class(_templateObject1076 || (_templateObject1076 = _taggedTemplateLiteral103(["Accordion Thief"]))) || (0, import_kolmafia112.myClass)() === $class(_templateObject1086 || (_templateObject1086 = _taggedTemplateLiteral103(["Disco Bandit"])));
      var bestPickpocketItem = $items(_templateObject1096 || (_templateObject1096 = _taggedTemplateLiteral103(["tiny black hole, mime army infiltration glove"]))).find(function(item10) {
        return have(item10) && (0, import_kolmafia112.canEquip)(item10);
      });
      var spec = {
        modifier: ["1000 Pickpocket Chance"],
        equip: $items(_templateObject1106 || (_templateObject1106 = _taggedTemplateLiteral103(["Fourth of May Cosplay Saber"])))
      };
      if (have($familiar(_templateObject11114 || (_templateObject11114 = _taggedTemplateLiteral103(["Red-Nosed Snapper"]))))) {
        spec.familiar = $familiar(_templateObject11214 || (_templateObject11214 = _taggedTemplateLiteral103(["Red-Nosed Snapper"])));
      }
      if (!canPickPocket && bestPickpocketItem) {
        var _spec$equip;
        (_spec$equip = spec.equip) === null || _spec$equip === void 0 || _spec$equip.push(bestPickpocketItem);
      }
      return spec;
    },
    effects: function() {
      return $effects(_templateObject11313 || (_templateObject11313 = _taggedTemplateLiteral103(["Transpondent"])));
    },
    macroAllowsFamiliarActions: false
  }),
  // Initial 9 Pygmy fights
  new FreeFight(function() {
    return get("questL11Worship") !== "unstarted" && bowlOfScorpionsAvailable() && !pygmySniffed() ? clamp(9 - get("_drunkPygmyBanishes"), 0, 9) : 0;
  }, function() {
    (0, import_kolmafia112.putCloset)((0, import_kolmafia112.itemAmount)($item(_templateObject11411 || (_templateObject11411 = _taggedTemplateLiteral103(["bowling ball"])))), $item(_templateObject1156 || (_templateObject1156 = _taggedTemplateLiteral103(["bowling ball"]))));
    (0, import_kolmafia112.retrieveItem)(clamp(9 - get("_drunkPygmyBanishes"), 0, 9), $item(_templateObject1166 || (_templateObject1166 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
    (0, import_kolmafia112.retrieveItem)($item(_templateObject1176 || (_templateObject1176 = _taggedTemplateLiteral103(["Louder Than Bomb"]))));
    (0, import_kolmafia112.retrieveItem)($item(_templateObject1186 || (_templateObject1186 = _taggedTemplateLiteral103(["tennis ball"]))));
    (0, import_kolmafia112.retrieveItem)($item(_templateObject1195 || (_templateObject1195 = _taggedTemplateLiteral103(["divine champagne popper"]))));
    garboAdventure($location(_templateObject1205 || (_templateObject1205 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"]))), pygmyMacro);
  }, true, {
    cost: function() {
      var banishers = pygmyBanishHandlers.filter(function(_ref3) {
        var skill = _ref3.skill, check = _ref3.check, limit = _ref3.limit;
        return !skill || !have(skill) || check && get(check) >= limit;
      }).map(function(_ref4) {
        var item10 = _ref4.item;
        return item10;
      });
      return (0, import_kolmafia112.retrievePrice)($item(_templateObject12113 || (_templateObject12113 = _taggedTemplateLiteral103(["Bowl of Scorpions"])))) + sum(banishers, import_kolmafia112.mallPrice) / 11;
    }
  }),
  // 10th Pygmy fight. If we have an orb, equip it for this fight, to save for later
  new FreeFight(function() {
    return get("questL11Worship") !== "unstarted" && get("_drunkPygmyBanishes") === 9 && !pygmySniffed();
  }, function() {
    (0, import_kolmafia112.putCloset)((0, import_kolmafia112.itemAmount)($item(_templateObject12213 || (_templateObject12213 = _taggedTemplateLiteral103(["bowling ball"])))), $item(_templateObject12312 || (_templateObject12312 = _taggedTemplateLiteral103(["bowling ball"]))));
    (0, import_kolmafia112.retrieveItem)($item(_templateObject1249 || (_templateObject1249 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
    garboAdventure($location(_templateObject1255 || (_templateObject1255 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"]))), pygmyMacro);
  }, true, pygmyOptions($items(_templateObject1265 || (_templateObject1265 = _taggedTemplateLiteral103(["miniature crystal ball"]))).filter(function(item10) {
    return have(item10);
  }))),
  // 11th pygmy fight if we lack a saber
  new FreeFight(function() {
    return get("questL11Worship") !== "unstarted" && get("_drunkPygmyBanishes") === 10 && (!have($item(_templateObject1275 || (_templateObject1275 = _taggedTemplateLiteral103(["Fourth of May Cosplay Saber"])))) || crateStrategy() === "Saber") && !pygmySniffed();
  }, function() {
    (0, import_kolmafia112.putCloset)((0, import_kolmafia112.itemAmount)($item(_templateObject1285 || (_templateObject1285 = _taggedTemplateLiteral103(["bowling ball"])))), $item(_templateObject1295 || (_templateObject1295 = _taggedTemplateLiteral103(["bowling ball"]))));
    (0, import_kolmafia112.retrieveItem)($item(_templateObject1305 || (_templateObject1305 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
    garboAdventureAuto($location(_templateObject13113 || (_templateObject13113 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"]))), pygmyMacro);
  }, true, pygmyOptions()),
  // 11th+ pygmy fight if we have a saber- saber friends
  new FreeFight(function() {
    var rightTime = have($item(_templateObject13212 || (_templateObject13212 = _taggedTemplateLiteral103(["Fourth of May Cosplay Saber"])))) && crateStrategy() !== "Saber" && get("_drunkPygmyBanishes") >= 10;
    var saberedMonster = get("_saberForceMonster");
    var wrongPygmySabered = saberedMonster && $monsters(_templateObject13312 || (_templateObject13312 = _taggedTemplateLiteral103(["pygmy orderlies, pygmy bowler, pygmy janitor"]))).includes(saberedMonster);
    var drunksCanAppear = get("_drunkPygmyBanishes") === 10 || saberedMonster === $monster(_templateObject1347 || (_templateObject1347 = _taggedTemplateLiteral103(["drunk pygmy"]))) && get("_saberForceMonsterCount");
    return get("questL11Worship") !== "unstarted" && rightTime && !wrongPygmySabered && drunksCanAppear && !pygmySniffed();
  }, function() {
    if ((get("_saberForceMonster") !== $monster(_templateObject1355 || (_templateObject1355 = _taggedTemplateLiteral103(["drunk pygmy"]))) || get("_saberForceMonsterCount") === 1) && get("_saberForceUses") < 5) {
      (0, import_kolmafia112.putCloset)((0, import_kolmafia112.itemAmount)($item(_templateObject1365 || (_templateObject1365 = _taggedTemplateLiteral103(["bowling ball"])))), $item(_templateObject1375 || (_templateObject1375 = _taggedTemplateLiteral103(["bowling ball"]))));
      (0, import_kolmafia112.putCloset)((0, import_kolmafia112.itemAmount)($item(_templateObject1385 || (_templateObject1385 = _taggedTemplateLiteral103(["Bowl of Scorpions"])))), $item(_templateObject1395 || (_templateObject1395 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
      garboAdventure($location(_templateObject1405 || (_templateObject1405 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"]))), Macro2.skill($skill(_templateObject14113 || (_templateObject14113 = _taggedTemplateLiteral103(["Use the Force"])))));
    } else {
      if ((0, import_kolmafia112.closetAmount)($item(_templateObject14212 || (_templateObject14212 = _taggedTemplateLiteral103(["Bowl of Scorpions"])))) > 0) {
        (0, import_kolmafia112.takeCloset)((0, import_kolmafia112.closetAmount)($item(_templateObject14310 || (_templateObject14310 = _taggedTemplateLiteral103(["Bowl of Scorpions"])))), $item(_templateObject1445 || (_templateObject1445 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
      } else
        (0, import_kolmafia112.retrieveItem)($item(_templateObject1455 || (_templateObject1455 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
      garboAdventure($location(_templateObject1464 || (_templateObject1464 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"]))), pygmyMacro);
    }
  }, false, pygmyOptions($items(_templateObject1474 || (_templateObject1474 = _taggedTemplateLiteral103(["Fourth of May Cosplay Saber"]))))),
  // Finally, saber or not, if we have a drunk pygmy in our crystal ball, let it out.
  new FreeFight(function() {
    return get("questL11Worship") !== "unstarted" && CrystalBall_exports.ponder().get($location(_templateObject1484 || (_templateObject1484 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"])))) === $monster(_templateObject1494 || (_templateObject1494 = _taggedTemplateLiteral103(["drunk pygmy"]))) && get("_drunkPygmyBanishes") >= 11 && !pygmySniffed();
  }, function() {
    (0, import_kolmafia112.putCloset)((0, import_kolmafia112.itemAmount)($item(_templateObject1504 || (_templateObject1504 = _taggedTemplateLiteral103(["bowling ball"])))), $item(_templateObject15112 || (_templateObject15112 = _taggedTemplateLiteral103(["bowling ball"]))));
    (0, import_kolmafia112.retrieveItem)(1, $item(_templateObject15211 || (_templateObject15211 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
    garboAdventure($location(_templateObject1538 || (_templateObject1538 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"]))), Macro2.if_($monster(_templateObject1544 || (_templateObject1544 = _taggedTemplateLiteral103(["drunk pygmy"]))), pygmyMacro).abort());
  }, true, pygmyOptions($items(_templateObject1554 || (_templateObject1554 = _taggedTemplateLiteral103(["miniature crystal ball"]))).filter(function(item10) {
    return have(item10);
  }))),
  new FreeFight(function() {
    return have($item(_templateObject1564 || (_templateObject1564 = _taggedTemplateLiteral103(["Time-Spinner"])))) && !doingGregFight() && $location(_templateObject1574 || (_templateObject1574 = _taggedTemplateLiteral103(["The Hidden Bowling Alley"]))).combatQueue.includes("drunk pygmy") && get("_timeSpinnerMinutesUsed") < 8;
  }, function() {
    (0, import_kolmafia112.retrieveItem)($item(_templateObject1584 || (_templateObject1584 = _taggedTemplateLiteral103(["Bowl of Scorpions"]))));
    Macro2.trySkill($skill(_templateObject1594 || (_templateObject1594 = _taggedTemplateLiteral103(["Extract"])))).trySingAlong().setAutoAttack();
    (0, import_kolmafia112.visitUrl)("inv_use.php?whichitem=".concat((0, import_kolmafia112.toInt)($item(_templateObject1604 || (_templateObject1604 = _taggedTemplateLiteral103(["Time-Spinner"]))))));
    (0, import_kolmafia112.runChoice)(1);
    (0, import_kolmafia112.visitUrl)("choice.php?whichchoice=1196&monid=".concat($monster(_templateObject16112 || (_templateObject16112 = _taggedTemplateLiteral103(["drunk pygmy"]))).id, "&option=1"));
  }, true, pygmyOptions()),
  new FreeFight(function() {
    return get("_sausageFights") === 0 && have($item(_templateObject16211 || (_templateObject16211 = _taggedTemplateLiteral103(["Kramco Sausage-o-Matic\u2122"]))));
  }, function() {
    propertyManager.setChoices(wanderer().getChoices("wanderer"));
    (0, import_kolmafia112.adv1)(wanderer().getTarget("wanderer"), -1, "");
  }, true, {
    spec: {
      offhand: $item(_templateObject1637 || (_templateObject1637 = _taggedTemplateLiteral103(["Kramco Sausage-o-Matic\u2122"])))
    },
    wandererOptions: "wanderer"
  }),
  new FreeFight(function() {
    return get("questL11Ron") === "finished" ? clamp(5 - get("_glarkCableUses"), 0, (0, import_kolmafia112.itemAmount)($item(_templateObject1644 || (_templateObject1644 = _taggedTemplateLiteral103(["glark cable"]))))) : 0;
  }, function() {
    garboAdventure($location(_templateObject1654 || (_templateObject1654 = _taggedTemplateLiteral103(["The Red Zeppelin"]))), Macro2.item($item(_templateObject1664 || (_templateObject1664 = _taggedTemplateLiteral103(["glark cable"])))));
  }, true, {
    macroAllowsFamiliarActions: false
  }),
  // Mushroom garden
  new FreeFight(function() {
    return (have($item(_templateObject1674 || (_templateObject1674 = _taggedTemplateLiteral103(["packet of mushroom spores"])))) || (0, import_kolmafia112.getCampground)()["packet of mushroom spores"] !== void 0) && get("_mushroomGardenFights") === 0;
  }, function() {
    if (have($item(_templateObject1684 || (_templateObject1684 = _taggedTemplateLiteral103(["packet of mushroom spores"]))))) {
      (0, import_kolmafia112.use)($item(_templateObject1694 || (_templateObject1694 = _taggedTemplateLiteral103(["packet of mushroom spores"]))));
    }
    if (SourceTerminal_exports.have()) {
      SourceTerminal_exports.educate([$skill(_templateObject1704 || (_templateObject1704 = _taggedTemplateLiteral103(["Extract"]))), $skill(_templateObject17112 || (_templateObject17112 = _taggedTemplateLiteral103(["Portscan"])))]);
    }
    garboAdventure($location(_templateObject17211 || (_templateObject17211 = _taggedTemplateLiteral103(["Your Mushroom Garden"]))), Macro2.externalIf(!doingGregFight(), Macro2.if_($skill(_templateObject1737 || (_templateObject1737 = _taggedTemplateLiteral103(["Macrometeorite"]))), Macro2.trySkill($skill(_templateObject1744 || (_templateObject1744 = _taggedTemplateLiteral103(["Portscan"])))))).basicCombat());
    if (have($item(_templateObject1754 || (_templateObject1754 = _taggedTemplateLiteral103(["packet of tall grass seeds"]))))) {
      (0, import_kolmafia112.use)($item(_templateObject1764 || (_templateObject1764 = _taggedTemplateLiteral103(["packet of tall grass seeds"]))));
    }
  }, true, {
    spec: function() {
      return have($familiar(_templateObject1774 || (_templateObject1774 = _taggedTemplateLiteral103(["Robortender"])))) ? {
        familiar: $familiar(_templateObject1784 || (_templateObject1784 = _taggedTemplateLiteral103(["Robortender"])))
      } : {};
    }
  }),
  // Portscan and mushroom garden
  new FreeFight(function() {
    return !doingGregFight() && (have($item(_templateObject1794 || (_templateObject1794 = _taggedTemplateLiteral103(["packet of mushroom spores"])))) || (0, import_kolmafia112.getCampground)()["packet of mushroom spores"] !== void 0) && counter_exports.get("portscan.edu") === 0 && have($skill(_templateObject1804 || (_templateObject1804 = _taggedTemplateLiteral103(["Macrometeorite"])))) && get("_macrometeoriteUses") < 10;
  }, function() {
    if (have($item(_templateObject18112 || (_templateObject18112 = _taggedTemplateLiteral103(["packet of mushroom spores"]))))) {
      (0, import_kolmafia112.use)($item(_templateObject18211 || (_templateObject18211 = _taggedTemplateLiteral103(["packet of mushroom spores"]))));
    }
    if (SourceTerminal_exports.have()) {
      SourceTerminal_exports.educate([$skill(_templateObject1836 || (_templateObject1836 = _taggedTemplateLiteral103(["Extract"]))), $skill(_templateObject1844 || (_templateObject1844 = _taggedTemplateLiteral103(["Portscan"])))]);
    }
    garboAdventure($location(_templateObject1854 || (_templateObject1854 = _taggedTemplateLiteral103(["Your Mushroom Garden"]))), Macro2.if_($monster(_templateObject1864 || (_templateObject1864 = _taggedTemplateLiteral103(["Government agent"]))), Macro2.skill($skill(_templateObject1874 || (_templateObject1874 = _taggedTemplateLiteral103(["Macrometeorite"]))))).if_($monster(_templateObject1884 || (_templateObject1884 = _taggedTemplateLiteral103(["piranha plant"]))), Macro2.if_($skill(_templateObject1894 || (_templateObject1894 = _taggedTemplateLiteral103(["Macrometeorite"]))), Macro2.trySkill($skill(_templateObject1904 || (_templateObject1904 = _taggedTemplateLiteral103(["Portscan"]))))).basicCombat()));
    if (have($item(_templateObject19112 || (_templateObject19112 = _taggedTemplateLiteral103(["packet of tall grass seeds"]))))) {
      (0, import_kolmafia112.use)($item(_templateObject19211 || (_templateObject19211 = _taggedTemplateLiteral103(["packet of tall grass seeds"]))));
    }
  }, true),
  new FreeFight(function() {
    return get("neverendingPartyAlways") && questStep2("_questPartyFair") < 999 ? clamp(10 - get("_neverendingPartyFreeTurns") - (!molemanReady() && !get("_thesisDelivered") && have($familiar(_templateObject1936 || (_templateObject1936 = _taggedTemplateLiteral103(["Pocket Professor"])))) ? 1 : 0), 0, 10) : 0;
  }, function() {
    var constructedMacro = Macro2.tryHaveSkill($skill(_templateObject1944 || (_templateObject1944 = _taggedTemplateLiteral103(["Feel Pride"])))).basicCombat();
    setNepQuestChoicesAndPrepItems();
    garboAdventure($location(_templateObject1954 || (_templateObject1954 = _taggedTemplateLiteral103(["The Neverending Party"]))), constructedMacro);
  }, true, {
    spec: function() {
      return {
        modifier: get("_questPartyFairQuest") === "trash" ? ["100 Item Drop"] : get("_questPartyFairQuest") === "dj" ? ["100 Meat Drop"] : [],
        equip: have($item(_templateObject1964 || (_templateObject1964 = _taggedTemplateLiteral103(["January's Garbage Tote"])))) ? $items(_templateObject1974 || (_templateObject1974 = _taggedTemplateLiteral103(["makeshift garbage shirt"]))) : []
      };
    }
  }),
  // Get a li'l ninja costume for 150% item drop
  new FreeFight(function() {
    return !have($item(_templateObject1984 || (_templateObject1984 = _taggedTemplateLiteral103(["li'l ninja costume"])))) && have($familiar(_templateObject1994 || (_templateObject1994 = _taggedTemplateLiteral103(["Trick-or-Treating Tot"])))) && !get("_firedJokestersGun") && have($item(_templateObject2004 || (_templateObject2004 = _taggedTemplateLiteral103(["The Jokester's gun"])))) && (0, import_kolmafia112.canEquip)($item(_templateObject20112 || (_templateObject20112 = _taggedTemplateLiteral103(["The Jokester's gun"])))) && questStep2("questL08Trapper") >= 2;
  }, function() {
    return garboAdventure($location(_templateObject20211 || (_templateObject20211 = _taggedTemplateLiteral103(["Lair of the Ninja Snowmen"]))), Macro2.skill($skill(_templateObject2036 || (_templateObject2036 = _taggedTemplateLiteral103(["Fire the Jokester's Gun"])))).abort());
  }, true, {
    spec: {
      equip: $items(_templateObject2044 || (_templateObject2044 = _taggedTemplateLiteral103(["The Jokester's gun"])))
    },
    macroAllowsFamiliarActions: false
  }),
  // Fallback for li'l ninja costume if Lair of the Ninja Snowmen is unavailable
  new FreeFight(function() {
    return !have($item(_templateObject2054 || (_templateObject2054 = _taggedTemplateLiteral103(["li'l ninja costume"])))) && have($familiar(_templateObject2063 || (_templateObject2063 = _taggedTemplateLiteral103(["Trick-or-Treating Tot"])))) && !get("_firedJokestersGun") && have($item(_templateObject2073 || (_templateObject2073 = _taggedTemplateLiteral103(["The Jokester's gun"])))) && (0, import_kolmafia112.canEquip)($item(_templateObject2083 || (_templateObject2083 = _taggedTemplateLiteral103(["The Jokester's gun"])))) && have($skill(_templateObject2093 || (_templateObject2093 = _taggedTemplateLiteral103(["Comprehensive Cartography"])))) && get("_monstersMapped") < 3;
  }, function() {
    try {
      Macro2.skill($skill(_templateObject21011 || (_templateObject21011 = _taggedTemplateLiteral103(["Fire the Jokester's Gun"])))).abort().setAutoAttack();
      mapMonster2($location(_templateObject21111 || (_templateObject21111 = _taggedTemplateLiteral103(["The Haiku Dungeon"]))), $monster(_templateObject21211 || (_templateObject21211 = _taggedTemplateLiteral103(["amateur ninja"]))));
    } finally {
      (0, import_kolmafia112.setAutoAttack)(0);
    }
  }, true, {
    spec: {
      equip: $items(_templateObject21311 || (_templateObject21311 = _taggedTemplateLiteral103(["The Jokester's gun"])))
    },
    macroAllowsFamiliarActions: false
  }),
  new FreeFight(function() {
    if (!have($item(_templateObject21410 || (_templateObject21410 = _taggedTemplateLiteral103(["closed-circuit pay phone"])))))
      return false;
    if (have($effect(_templateObject21510 || (_templateObject21510 = _taggedTemplateLiteral103(["Shadow Affinity"])))))
      return true;
    if (!get("_shadowAffinityToday") && !ClosedCircuitPayphone_exports.rufusTarget()) {
      return true;
    }
    if (get("rufusQuestType") === "items" || get("rufusQuestType") === "entity") {
      return false;
    }
    if (get("encountersUntilSRChoice") === 0) {
      return true;
    }
    if (globalOptions.prefs.yachtzeechain)
      return false;
    if (have($item(_templateObject21610 || (_templateObject21610 = _taggedTemplateLiteral103(["Clara's bell"])))) && !globalOptions.clarasBellClaimed) {
      return true;
    }
    if (CinchoDeMayo_exports.have() && CinchoDeMayo_exports.totalAvailableCinch() >= 60) {
      return true;
    }
    return false;
  }, function() {
    if (have($item(_templateObject21710 || (_templateObject21710 = _taggedTemplateLiteral103(["Rufus's shadow lodestone"]))))) {
      setChoice(1500, 2);
      (0, import_kolmafia112.adv1)(bestShadowRift(), -1, "");
    }
    if (!get("_shadowAffinityToday") && !ClosedCircuitPayphone_exports.rufusTarget()) {
      ClosedCircuitPayphone_exports.chooseQuest(function() {
        return 2;
      });
    }
    runShadowRiftTurn();
    if (get("encountersUntilSRChoice") === 0 || get("noncombatForcerActive")) {
      if (ClosedCircuitPayphone_exports.have() && !ClosedCircuitPayphone_exports.rufusTarget()) {
        ClosedCircuitPayphone_exports.chooseQuest(function() {
          return 2;
        });
      }
      (0, import_kolmafia112.adv1)(bestShadowRift(), -1, "");
    }
    if (questStep2("questRufus") === 1) {
      withChoice(1498, 1, function() {
        return (0, import_kolmafia112.use)($item(_templateObject21810 || (_templateObject21810 = _taggedTemplateLiteral103(["closed-circuit pay phone"]))));
      });
    }
    if (have($item(_templateObject2192 || (_templateObject2192 = _taggedTemplateLiteral103(["Rufus's shadow lodestone"]))))) {
      setChoice(1500, 2);
      (0, import_kolmafia112.adv1)(bestShadowRift(), -1, "");
    }
    if (!have($effect(_templateObject2202 || (_templateObject2202 = _taggedTemplateLiteral103(["Shadow Affinity"])))) && get("encountersUntilSRChoice") !== 0) {
      (0, import_kolmafia112.setLocation)($location.none);
    }
  }, true)
];
var priorityFreeRunFightSources = [new FreeRunFight(function() {
  return have($familiar(_templateObject22110 || (_templateObject22110 = _taggedTemplateLiteral103(["Patriotic Eagle"])))) && !have($effect(_templateObject22210 || (_templateObject22210 = _taggedTemplateLiteral103(["Citizen of a Zone"])))) && $locations(_templateObject2235 || (_templateObject2235 = _taggedTemplateLiteral103(["Barf Mountain, The Fun-Guy Mansion"]))).some(function(l) {
    return (0, import_kolmafia112.canAdventure)(l);
  });
}, function(runSource) {
  var location = (0, import_kolmafia112.canAdventure)($location(_templateObject2242 || (_templateObject2242 = _taggedTemplateLiteral103(["Barf Mountain"])))) ? $location(_templateObject2252 || (_templateObject2252 = _taggedTemplateLiteral103(["Barf Mountain"]))) : $location(_templateObject2262 || (_templateObject2262 = _taggedTemplateLiteral103(["The Fun-Guy Mansion"])));
  garboAdventure(location, Macro2.skill($skill(_templateObject2272 || (_templateObject2272 = _taggedTemplateLiteral103(["%fn, let's pledge allegiance to a Zone"])))).step(runSource.macro));
}, {
  spec: {
    familiar: $familiar(_templateObject2282 || (_templateObject2282 = _taggedTemplateLiteral103(["Patriotic Eagle"]))),
    famequip: $items(_templateObject2292 || (_templateObject2292 = _taggedTemplateLiteral103(["little bitty bathysphere, das boot"]))),
    modifier: ["ML 100 Max", "-Familiar Weight"],
    avoid: $items(_templateObject2302 || (_templateObject2302 = _taggedTemplateLiteral103(["Drunkula's wineglass"])))
  }
})];
var freeRunFightSources = [
  // Unlock Latte ingredients
  new FreeRunFight(function() {
    return have($item(_templateObject23110 || (_templateObject23110 = _taggedTemplateLiteral103(["latte lovers member's mug"])))) && !get("latteUnlocks").includes("cajun") && questStep2("questL11MacGuffin") > -1;
  }, function(runSource) {
    propertyManager.setChoices({
      923: 1,
      // go to the blackberries in All Around the Map
      924: 1
      // fight a blackberry bush, so that we can freerun
    });
    garboAdventure($location(_templateObject23210 || (_templateObject23210 = _taggedTemplateLiteral103(["The Black Forest"]))), runSource.macro);
  }, {
    spec: {
      equip: $items(_templateObject2334 || (_templateObject2334 = _taggedTemplateLiteral103(["latte lovers member's mug"])))
    }
  }, freeRunConstraints(true)),
  new FreeRunFight(function() {
    return have($item(_templateObject2342 || (_templateObject2342 = _taggedTemplateLiteral103(["latte lovers member's mug"])))) && get("latteUnlocks").includes("cajun") && !get("latteUnlocks").includes("rawhide") && questStep2("questL02Larva") > -1;
  }, function(runSource) {
    propertyManager.setChoices({
      502: 2,
      // go towards the stream in Arboreal Respite, so we can skip adventure
      505: 2
      // skip adventure
    });
    garboAdventure($location(_templateObject2352 || (_templateObject2352 = _taggedTemplateLiteral103(["The Spooky Forest"]))), runSource.macro);
  }, {
    spec: {
      equip: $items(_templateObject2362 || (_templateObject2362 = _taggedTemplateLiteral103(["latte lovers member's mug"])))
    }
  }, freeRunConstraints(true)),
  new FreeRunFight(function() {
    return have($item(_templateObject2372 || (_templateObject2372 = _taggedTemplateLiteral103(["latte lovers member's mug"])))) && !get("latteUnlocks").includes("carrot") && get("latteUnlocks").includes("cajun") && get("latteUnlocks").includes("rawhide");
  }, function(runSource) {
    garboAdventure($location(_templateObject2382 || (_templateObject2382 = _taggedTemplateLiteral103(["The Dire Warren"]))), runSource.macro);
  }, {
    spec: {
      equip: $items(_templateObject2392 || (_templateObject2392 = _taggedTemplateLiteral103(["latte lovers member's mug"])))
    }
  }, freeRunConstraints(true)),
  new FreeRunFight(function() {
    return have($familiar(_templateObject2402 || (_templateObject2402 = _taggedTemplateLiteral103(["Space Jellyfish"])))) && get("_spaceJellyfishDrops") < 5 && getStenchLocation() !== $location.none;
  }, function(runSource) {
    garboAdventure(getStenchLocation(), Macro2.trySkill($skill(_templateObject24110 || (_templateObject24110 = _taggedTemplateLiteral103(["Extract Jelly"])))).step(runSource.macro));
  }, {
    spec: {
      familiar: $familiar(_templateObject24210 || (_templateObject24210 = _taggedTemplateLiteral103(["Space Jellyfish"])))
    }
  }),
  new FreeRunFight(function() {
    return !doingGregFight() && have($familiar(_templateObject2432 || (_templateObject2432 = _taggedTemplateLiteral103(["Space Jellyfish"])))) && have($skill(_templateObject2442 || (_templateObject2442 = _taggedTemplateLiteral103(["Meteor Lore"])))) && get("_macrometeoriteUses") < 10 && getStenchLocation() !== $location.none;
  }, function(runSource) {
    garboAdventure(getStenchLocation(), Macro2.while_("!pastround 28 && hasskill macrometeorite", Macro2.skill($skill(_templateObject2452 || (_templateObject2452 = _taggedTemplateLiteral103(["Extract Jelly"])))).skill($skill(_templateObject2462 || (_templateObject2462 = _taggedTemplateLiteral103(["Macrometeorite"]))))).trySkill($skill(_templateObject2472 || (_templateObject2472 = _taggedTemplateLiteral103(["Extract Jelly"])))).step(runSource.macro));
  }, {
    spec: {
      familiar: $familiar(_templateObject2482 || (_templateObject2482 = _taggedTemplateLiteral103(["Space Jellyfish"])))
    }
  }),
  new FreeRunFight(function() {
    return !doingGregFight() && have($familiar(_templateObject2492 || (_templateObject2492 = _taggedTemplateLiteral103(["Space Jellyfish"])))) && have($item(_templateObject2502 || (_templateObject2502 = _taggedTemplateLiteral103(["Powerful Glove"])))) && get("_powerfulGloveBatteryPowerUsed") < 91 && getStenchLocation() !== $location.none;
  }, function(runSource) {
    garboAdventure(getStenchLocation(), Macro2.while_("!pastround 28 && hasskill CHEAT CODE: Replace Enemy", Macro2.skill($skill(_templateObject25110 || (_templateObject25110 = _taggedTemplateLiteral103(["Extract Jelly"])))).skill($skill(_templateObject25210 || (_templateObject25210 = _taggedTemplateLiteral103(["CHEAT CODE: Replace Enemy"]))))).trySkill($skill(_templateObject2532 || (_templateObject2532 = _taggedTemplateLiteral103(["Extract Jelly"])))).step(runSource.macro));
  }, {
    spec: {
      familiar: $familiar(_templateObject2542 || (_templateObject2542 = _taggedTemplateLiteral103(["Space Jellyfish"]))),
      equip: $items(_templateObject2552 || (_templateObject2552 = _taggedTemplateLiteral103(["Powerful Glove"])))
    }
  }),
  new FreeFight(function() {
    return (get("gingerbreadCityAvailable") || get("_gingerbreadCityToday")) && get("gingerAdvanceClockUnlocked") && !get("_gingerbreadClockVisited") && get("_gingerbreadCityTurns") <= 3;
  }, function() {
    propertyManager.setChoices({
      1215: 1
      // Gingerbread Civic Center advance clock
    });
    garboAdventure($location(_templateObject2562 || (_templateObject2562 = _taggedTemplateLiteral103(["Gingerbread Civic Center"]))), Macro2.abortWithMsg('Expected "Setting the Clock" but ended up in combat.'));
  }, false, {
    noncombat: function() {
      return true;
    }
  }),
  new FreeRunFight(function() {
    return (get("gingerbreadCityAvailable") || get("_gingerbreadCityToday")) && get("_gingerbreadCityTurns") + (get("_gingerbreadClockAdvanced") ? 5 : 0) < 9;
  }, function(runSource) {
    propertyManager.setChoices({
      1215: 1
      // Gingerbread Civic Center advance clock
    });
    garboAdventure($location(_templateObject2572 || (_templateObject2572 = _taggedTemplateLiteral103(["Gingerbread Civic Center"]))), runSource.macro);
    if (["Even Tamer Than Usual", "Never Break the Chain", "Close, but Yes Cigar", "Armchair Quarterback"].includes(get("lastEncounter"))) {
      _set("_gingerbreadCityTurns", 1 + get("_gingerbreadCityTurns"));
    }
  }, {
    spec: {
      bonuses: /* @__PURE__ */ new Map([[$item(_templateObject2582 || (_templateObject2582 = _taggedTemplateLiteral103(["carnivorous potted plant"]))), 100]])
    }
  }),
  new FreeFight(function() {
    return (get("gingerbreadCityAvailable") || get("_gingerbreadCityToday")) && get("_gingerbreadCityTurns") + (get("_gingerbreadClockAdvanced") ? 5 : 0) === 9;
  }, function() {
    propertyManager.setChoices({
      1204: 1
      // Gingerbread Train Station Noon random candy
    });
    garboAdventure($location(_templateObject2592 || (_templateObject2592 = _taggedTemplateLiteral103(["Gingerbread Train Station"]))), Macro2.abortWithMsg('Expected "Noon at the Train Station" but ended up in combat.'));
  }, false, {
    noncombat: function() {
      return true;
    }
  }),
  new FreeRunFight(function() {
    return (get("gingerbreadCityAvailable") || get("_gingerbreadCityToday")) && get("_gingerbreadCityTurns") + (get("_gingerbreadClockAdvanced") ? 5 : 0) >= 10 && get("_gingerbreadCityTurns") + (get("_gingerbreadClockAdvanced") ? 5 : 0) < 19 && ((0, import_kolmafia112.availableAmount)($item(_templateObject2602 || (_templateObject2602 = _taggedTemplateLiteral103(["sprinkles"])))) > 5 || (0, import_kolmafia112.haveOutfit)("gingerbread best"));
  }, function(runSource) {
    propertyManager.setChoices({
      1215: 1
      // Gingerbread Civic Center advance clock
    });
    garboAdventure($location(_templateObject26110 || (_templateObject26110 = _taggedTemplateLiteral103(["Gingerbread Civic Center"]))), runSource.macro);
    if (["Even Tamer Than Usual", "Never Break the Chain", "Close, but Yes Cigar", "Armchair Quarterback"].includes(get("lastEncounter"))) {
      _set("_gingerbreadCityTurns", 1 + get("_gingerbreadCityTurns"));
    }
  }, {
    spec: {
      bonuses: /* @__PURE__ */ new Map([[$item(_templateObject26210 || (_templateObject26210 = _taggedTemplateLiteral103(["carnivorous potted plant"]))), 100]])
    }
  }),
  new FreeFight(function() {
    return (get("gingerbreadCityAvailable") || get("_gingerbreadCityToday")) && get("_gingerbreadCityTurns") + (get("_gingerbreadClockAdvanced") ? 5 : 0) === 19 && ((0, import_kolmafia112.availableAmount)($item(_templateObject2632 || (_templateObject2632 = _taggedTemplateLiteral103(["sprinkles"])))) > 5 || (0, import_kolmafia112.haveOutfit)("gingerbread best"));
  }, function() {
    propertyManager.setChoices({
      1203: 4,
      // Gingerbread Civic Center 5 gingerbread cigarettes
      1215: 1,
      // Gingerbread Civic Center advance clock
      1209: 2,
      // enter the gallery at Upscale Midnight
      1214: 1
      // get High-End ginger wine
    });
    var best = bestConsumable("booze", true, $items(_templateObject2642 || (_templateObject2642 = _taggedTemplateLiteral103(["high-end ginger wine, astral pilsner"]))));
    var gingerWineValue = (0.5 * 30 * (baseMeat + 750) + getAverageAdventures($item(_templateObject2652 || (_templateObject2652 = _taggedTemplateLiteral103(["high-end ginger wine"])))) * get("valueOfAdventure")) / 2;
    var valueDif = gingerWineValue - best.value;
    if ((0, import_kolmafia112.haveOutfit)("gingerbread best") && ((0, import_kolmafia112.availableAmount)($item(_templateObject2662 || (_templateObject2662 = _taggedTemplateLiteral103(["sprinkles"])))) < 5 || valueDif * 2 > garboValue($item(_templateObject2672 || (_templateObject2672 = _taggedTemplateLiteral103(["gingerbread cigarette"])))) * 5 && (0, import_kolmafia112.itemAmount)($item(_templateObject2682 || (_templateObject2682 = _taggedTemplateLiteral103(["high-end ginger wine"])))) < 11)) {
      (0, import_kolmafia112.outfit)("gingerbread best");
      garboAdventure($location(_templateObject2692 || (_templateObject2692 = _taggedTemplateLiteral103(["Gingerbread Upscale Retail District"]))), Macro2.abort());
    } else {
      garboAdventure($location(_templateObject2702 || (_templateObject2702 = _taggedTemplateLiteral103(["Gingerbread Civic Center"]))), Macro2.abort());
    }
  }, false, {
    noncombat: function() {
      return true;
    }
  }),
  // Fire Extinguisher on best available target.
  new FreeRunFight(function() {
    return (have($item(_templateObject27110 || (_templateObject27110 = _taggedTemplateLiteral103(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 10 || have($familiar(_templateObject27210 || (_templateObject27210 = _taggedTemplateLiteral103(["XO Skeleton"])))) && get("_xoHugsUsed") < 11 || have($skill(_templateObject2732 || (_templateObject2732 = _taggedTemplateLiteral103(["Perpetrate Mild Evil"])))) && get("_mildEvilPerpetrated") < 3) && get("_VYKEACompanionLevel") === 0 && // don't attempt this in case you re-run garbo after making a vykea furniture
    getBestItemStealZone(true) !== null;
  }, function(runSource) {
    setupItemStealZones();
    var best = getBestItemStealZone(true);
    if (!best)
      throw "Unable to find fire extinguisher zone?";
    var mappingMonster = have($skill(_templateObject2742 || (_templateObject2742 = _taggedTemplateLiteral103(["Comprehensive Cartography"])))) && get("_monstersMapped") < 3 && best.location.wanderers && have($skill(_templateObject2752 || (_templateObject2752 = _taggedTemplateLiteral103(["Comprehensive Cartography"])))) && get("_monstersMapped") < 3;
    var monsters = asArray(best.monster);
    try {
      if (best.preReq)
        best.preReq();
      var vortex = $skill(_templateObject2762 || (_templateObject2762 = _taggedTemplateLiteral103(["Fire Extinguisher: Polar Vortex"])));
      var evil = $skill(_templateObject2772 || (_templateObject2772 = _taggedTemplateLiteral103(["Perpetrate Mild Evil"])));
      var hasXO = (0, import_kolmafia112.myFamiliar)() === $familiar(_templateObject2782 || (_templateObject2782 = _taggedTemplateLiteral103(["XO Skeleton"])));
      if ((0, import_kolmafia112.myThrall)() !== $thrall.none)
        (0, import_kolmafia112.useSkill)($skill(_templateObject2792 || (_templateObject2792 = _taggedTemplateLiteral103(["Dismiss Pasta Thrall"]))));
      Macro2.if_(monsters.map(function(m) {
        return "!monsterid ".concat(m.id);
      }).join(" && "), runSource.macro).externalIf(hasXO && get("_xoHugsUsed") < 11, Macro2.skill($skill(_templateObject2802 || (_templateObject2802 = _taggedTemplateLiteral103(["Hugs and Kisses!"]))))).externalIf(!best.requireMapTheMonsters && hasXO && get("_xoHugsUsed") < 10, Macro2.step(itemStealOlfact(best))).while_("hasskill ".concat((0, import_kolmafia112.toInt)(vortex)), Macro2.skill(vortex)).while_("hasskill ".concat((0, import_kolmafia112.toInt)(evil)), Macro2.skill(evil)).step(runSource.macro).setAutoAttack();
      if (mappingMonster) {
        mapMonster2(best.location, monsters[0]);
      } else {
        (0, import_kolmafia112.adv1)(best.location, -1, "");
      }
    } finally {
      (0, import_kolmafia112.setAutoAttack)(0);
    }
  }, {
    spec: function() {
      var _zone$maximize;
      var zone = getBestItemStealZone();
      var spec = have($familiar(_templateObject28110 || (_templateObject28110 = _taggedTemplateLiteral103(["XO Skeleton"])))) && get("_xoHugsUsed") < 11 ? {
        familiar: $familiar(_templateObject2828 || (_templateObject2828 = _taggedTemplateLiteral103(["XO Skeleton"])))
      } : {};
      if (have($item(_templateObject2832 || (_templateObject2832 = _taggedTemplateLiteral103(["industrial fire extinguisher"])))) && get("_fireExtinguisherCharge") >= 10) {
        spec.equip = $items(_templateObject2842 || (_templateObject2842 = _taggedTemplateLiteral103(["industrial fire extinguisher"])));
      }
      spec.modifier = (_zone$maximize = zone === null || zone === void 0 ? void 0 : zone.maximize) !== null && _zone$maximize !== void 0 ? _zone$maximize : [];
      return spec;
    }
  }),
  // Try for an ultra-rare with mayfly runs and pickpocket if we have a manuel to detect monster hp ;)
  new FreeRunFight(function() {
    return monsterManuelAvailable() && have($item(_templateObject2852 || (_templateObject2852 = _taggedTemplateLiteral103(["mayfly bait necklace"])))) && (0, import_kolmafia112.canAdventure)($location(_templateObject2862 || (_templateObject2862 = _taggedTemplateLiteral103(["Cobb's Knob Menagerie, Level 1"])))) && get("_mayflySummons") < 30;
  }, function(runSource) {
    var willSurvivePassive = "monsterhpabove ".concat(maxPassiveDamage());
    garboAdventure($location(_templateObject2872 || (_templateObject2872 = _taggedTemplateLiteral103(["Cobb's Knob Menagerie, Level 1"]))), Macro2.if_($monster(_templateObject2882 || (_templateObject2882 = _taggedTemplateLiteral103(["QuickBASIC elemental"]))), Macro2.basicCombat()).if_($monster(_templateObject2892 || (_templateObject2892 = _taggedTemplateLiteral103(["BASIC Elemental"]))), Macro2.if_(willSurvivePassive, Macro2.step("pickpocket")).externalIf(have($skill(_templateObject2902 || (_templateObject2902 = _taggedTemplateLiteral103(["Transcendent Olfaction"])))) && get("_olfactionsUsed") < 1, Macro2.if_(willSurvivePassive, Macro2.trySkill($skill(_templateObject29110 || (_templateObject29110 = _taggedTemplateLiteral103(["Transcendent Olfaction"])))))).externalIf(have($skill(_templateObject2925 || (_templateObject2925 = _taggedTemplateLiteral103(["Gallapagosian Mating Call"])))) && get("_gallapagosMonster") !== $monster(_templateObject2932 || (_templateObject2932 = _taggedTemplateLiteral103(["BASIC Elemental"]))), Macro2.if_(willSurvivePassive, Macro2.skill($skill(_templateObject2942 || (_templateObject2942 = _taggedTemplateLiteral103(["Gallapagosian Mating Call"])))))).trySkill($skill(_templateObject2952 || (_templateObject2952 = _taggedTemplateLiteral103(["Summon Mayfly Swarm"]))))).step(runSource.macro));
  }, {
    spec: function() {
      var canPickPocket = (0, import_kolmafia112.myClass)() === $class(_templateObject2962 || (_templateObject2962 = _taggedTemplateLiteral103(["Accordion Thief"]))) || (0, import_kolmafia112.myClass)() === $class(_templateObject2972 || (_templateObject2972 = _taggedTemplateLiteral103(["Disco Bandit"])));
      var bestPickpocketItem = $items(_templateObject2982 || (_templateObject2982 = _taggedTemplateLiteral103(["tiny black hole, mime army infiltration glove"]))).find(function(item10) {
        return have(item10) && (0, import_kolmafia112.canEquip)(item10);
      });
      var pickPocketValue = 3e-3 * garboValue($item(_templateObject2992 || (_templateObject2992 = _taggedTemplateLiteral103(["GOTO"]))));
      var spec = {
        equip: $items(_templateObject3002 || (_templateObject3002 = _taggedTemplateLiteral103(["mayfly bait necklace"]))),
        bonuses: /* @__PURE__ */ new Map([[$item(_templateObject30110 || (_templateObject30110 = _taggedTemplateLiteral103(["carnivorous potted plant"]))), 100]]),
        familiar: freeFightFamiliar({
          allowAttackFamiliars: false
        })
      };
      if (!canPickPocket && bestPickpocketItem) {
        var _spec$equip2;
        (_spec$equip2 = spec.equip) === null || _spec$equip2 === void 0 || _spec$equip2.push(bestPickpocketItem);
      }
      if (canPickPocket || bestPickpocketItem) {
        spec.modifier = ["".concat(pickPocketValue, " Pickpocket Chance")];
      }
      return spec;
    }
  }),
  // Try for mini-hipster\goth kid free fights with any remaining non-familiar free runs
  new FreeRunFight(function() {
    return get("_hipsterAdv") < 7 && (have($familiar(_templateObject3025 || (_templateObject3025 = _taggedTemplateLiteral103(["Mini-Hipster"])))) || have($familiar(_templateObject3032 || (_templateObject3032 = _taggedTemplateLiteral103(["Artistic Goth Kid"])))));
  }, function(runSource) {
    propertyManager.setChoices(wanderer().getChoices("backup"));
    var targetLocation = wanderer().getTarget("backup");
    garboAdventure(targetLocation, Macro2.if_("(monsterid 969) || (monsterid 970) || (monsterid 971) || (monsterid 972) || (monsterid 973) || (monstername Black Crayon *)", Macro2.basicCombat()).step(runSource.macro));
  }, {
    spec: function() {
      if (have($familiar(_templateObject3042 || (_templateObject3042 = _taggedTemplateLiteral103(["Mini-Hipster"]))))) {
        return {
          familiar: $familiar(_templateObject3052 || (_templateObject3052 = _taggedTemplateLiteral103(["Mini-Hipster"]))),
          bonuses: /* @__PURE__ */ new Map([[$item(_templateObject3062 || (_templateObject3062 = _taggedTemplateLiteral103(["ironic moustache"]))), garboValue($item(_templateObject3072 || (_templateObject3072 = _taggedTemplateLiteral103(["mole skin notebook"]))))], [$item(_templateObject3082 || (_templateObject3082 = _taggedTemplateLiteral103(["chiptune guitar"]))), garboValue($item(_templateObject3092 || (_templateObject3092 = _taggedTemplateLiteral103(["ironic knit cap"]))))], [$item(_templateObject31010 || (_templateObject31010 = _taggedTemplateLiteral103(["fixed-gear bicycle"]))), garboValue($item(_templateObject31110 || (_templateObject31110 = _taggedTemplateLiteral103(["ironic oversized sunglasses"]))))]])
        };
      } else {
        return {
          familiar: $familiar(_templateObject31210 || (_templateObject31210 = _taggedTemplateLiteral103(["Artistic Goth Kid"])))
        };
      }
    },
    wandererOptions: "backup"
  }),
  // Try to accelerate the shadow nc, if you're able to do a quest
  new FreeRunFight(function() {
    return have($item(_templateObject31310 || (_templateObject31310 = _taggedTemplateLiteral103(["closed-circuit pay phone"])))) && get("rufusQuestType") !== "items" && !have($effect(_templateObject31410 || (_templateObject31410 = _taggedTemplateLiteral103(["Shadow Affinity"])))) && get("encountersUntilSRChoice") > 0;
  }, function(runSource) {
    return garboAdventure(bestShadowRift(), runSource.macro);
  }),
  // Try for an ultra-rare with mayfly runs if we didn't have a manuel ;)
  new FreeRunFight(function() {
    return have($item(_templateObject31510 || (_templateObject31510 = _taggedTemplateLiteral103(["mayfly bait necklace"])))) && (0, import_kolmafia112.canAdventure)($location(_templateObject31610 || (_templateObject31610 = _taggedTemplateLiteral103(["Cobb's Knob Menagerie, Level 1"])))) && get("_mayflySummons") < 30;
  }, function(runSource) {
    garboAdventure($location(_templateObject3172 || (_templateObject3172 = _taggedTemplateLiteral103(["Cobb's Knob Menagerie, Level 1"]))), Macro2.if_($monster(_templateObject3182 || (_templateObject3182 = _taggedTemplateLiteral103(["QuickBASIC elemental"]))), Macro2.basicCombat()).if_($monster(_templateObject3192 || (_templateObject3192 = _taggedTemplateLiteral103(["BASIC Elemental"]))), Macro2.trySkill($skill(_templateObject3202 || (_templateObject3202 = _taggedTemplateLiteral103(["Summon Mayfly Swarm"]))))).step(runSource.macro));
  }, {
    spec: {
      equip: $items(_templateObject32110 || (_templateObject32110 = _taggedTemplateLiteral103(["mayfly bait necklace"]))),
      bonuses: /* @__PURE__ */ new Map([[$item(_templateObject3227 || (_templateObject3227 = _taggedTemplateLiteral103(["carnivorous potted plant"]))), 100]])
    }
  })
];
function sandwormSpec() {
  var _spec$equip3;
  var spec = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var copy = _objectSpread19(_objectSpread19({}, spec), {}, {
    equip: _toConsumableArray47((_spec$equip3 = spec.equip) !== null && _spec$equip3 !== void 0 ? _spec$equip3 : [])
  });
  var itemDropBonus = 0.1 / 1e4 * garboValue($item(_templateObject3232 || (_templateObject3232 = _taggedTemplateLiteral103(["spice melange"]))));
  copy.modifier = ["".concat(itemDropBonus.toFixed(2), " Item Drop 10000 max")];
  if (have($item(_templateObject3242 || (_templateObject3242 = _taggedTemplateLiteral103(["January's Garbage Tote"])))) && get("garbageChampagneCharge") > 0) {
    var _copy$equip;
    (_copy$equip = copy.equip) === null || _copy$equip === void 0 || _copy$equip.push($item(_templateObject3252 || (_templateObject3252 = _taggedTemplateLiteral103(["broken champagne bottle"]))));
  }
  if (have($item(_templateObject3262 || (_templateObject3262 = _taggedTemplateLiteral103(["Lil' Doctor\u2122 bag"])))) && get("_otoscopeUsed")) {
    var _copy$equip2;
    (_copy$equip2 = copy.equip) === null || _copy$equip2 === void 0 || _copy$equip2.push($item(_templateObject3272 || (_templateObject3272 = _taggedTemplateLiteral103(["Lil' Doctor\u2122 bag"]))));
  }
  var familiar7 = bestFairy();
  copy.familiar = familiar7;
  if (familiar7 === $familiar(_templateObject3282 || (_templateObject3282 = _taggedTemplateLiteral103(["Reagnimated Gnome"])))) {
    var _copy$equip3;
    (_copy$equip3 = copy.equip) === null || _copy$equip3 === void 0 || _copy$equip3.push($item(_templateObject3292 || (_templateObject3292 = _taggedTemplateLiteral103(["gnomish housemaid's kgnee"]))));
  }
  copy.equip = _toConsumableArray47(new Set(copy.equip));
  return copy;
}
var freeKillSources2 = [
  // 22	3	0	0	Chest X-Ray	combat skill	must have a Lil' Doctor™ bag equipped
  new FreeFight(function() {
    return have($item(_templateObject3302 || (_templateObject3302 = _taggedTemplateLiteral103(["Lil' Doctor\u2122 bag"])))) ? clamp(3 - get("_chestXRayUsed"), 0, 3) : 0;
  }, function() {
    ensureBeachAccess();
    withMacro(Macro2.trySingAlong().tryHaveSkill($skill(_templateObject33110 || (_templateObject33110 = _taggedTemplateLiteral103(["Otoscope"])))).trySkill($skill(_templateObject3326 || (_templateObject3326 = _taggedTemplateLiteral103(["Chest X-Ray"])))), function() {
      return (0, import_kolmafia112.use)($item(_templateObject3332 || (_templateObject3332 = _taggedTemplateLiteral103(["drum machine"]))));
    });
  }, true, {
    spec: function() {
      return sandwormSpec({
        equip: $items(_templateObject3342 || (_templateObject3342 = _taggedTemplateLiteral103(["Lil' Doctor\u2122 bag"])))
      });
    },
    effects: function() {
      return have($skill(_templateObject3352 || (_templateObject3352 = _taggedTemplateLiteral103(["Emotionally Chipped"])))) && get("_feelLostUsed") < 3 ? $effects(_templateObject3362 || (_templateObject3362 = _taggedTemplateLiteral103(["Feeling Lost"]))) : [];
    }
  }),
  new FreeFight(function() {
    return !get("_gingerbreadMobHitUsed") && have($skill(_templateObject3372 || (_templateObject3372 = _taggedTemplateLiteral103(["Gingerbread Mob Hit"]))));
  }, function() {
    ensureBeachAccess();
    withMacro(Macro2.trySingAlong().tryHaveSkill($skill(_templateObject3382 || (_templateObject3382 = _taggedTemplateLiteral103(["Otoscope"])))).trySkill($skill(_templateObject3392 || (_templateObject3392 = _taggedTemplateLiteral103(["Gingerbread Mob Hit"])))), function() {
      return (0, import_kolmafia112.use)($item(_templateObject3402 || (_templateObject3402 = _taggedTemplateLiteral103(["drum machine"]))));
    });
  }, true, {
    spec: sandwormSpec,
    effects: function() {
      return have($skill(_templateObject34110 || (_templateObject34110 = _taggedTemplateLiteral103(["Emotionally Chipped"])))) && get("_feelLostUsed") < 3 ? $effects(_templateObject3423 || (_templateObject3423 = _taggedTemplateLiteral103(["Feeling Lost"]))) : [];
    }
  }),
  new FreeFight(function() {
    return have($skill(_templateObject3432 || (_templateObject3432 = _taggedTemplateLiteral103(["Shattering Punch"])))) ? clamp(3 - get("_shatteringPunchUsed"), 0, 3) : 0;
  }, function() {
    ensureBeachAccess();
    withMacro(Macro2.trySingAlong().tryHaveSkill($skill(_templateObject3442 || (_templateObject3442 = _taggedTemplateLiteral103(["Otoscope"])))).trySkill($skill(_templateObject3452 || (_templateObject3452 = _taggedTemplateLiteral103(["Shattering Punch"])))), function() {
      return (0, import_kolmafia112.use)($item(_templateObject3462 || (_templateObject3462 = _taggedTemplateLiteral103(["drum machine"]))));
    });
  }, true, {
    spec: sandwormSpec,
    effects: function() {
      return have($skill(_templateObject3472 || (_templateObject3472 = _taggedTemplateLiteral103(["Emotionally Chipped"])))) && get("_feelLostUsed") < 3 ? $effects(_templateObject3482 || (_templateObject3482 = _taggedTemplateLiteral103(["Feeling Lost"]))) : [];
    }
  }),
  new FreeFight(function() {
    return have($item(_templateObject3492 || (_templateObject3492 = _taggedTemplateLiteral103(["replica bat-oomerang"])))) ? clamp(3 - get("_usedReplicaBatoomerang"), 0, 3) : 0;
  }, function() {
    ensureBeachAccess();
    withMacro(Macro2.trySingAlong().tryHaveSkill($skill(_templateObject3502 || (_templateObject3502 = _taggedTemplateLiteral103(["Otoscope"])))).item($item(_templateObject35110 || (_templateObject35110 = _taggedTemplateLiteral103(["replica bat-oomerang"])))), function() {
      return (0, import_kolmafia112.use)($item(_templateObject3523 || (_templateObject3523 = _taggedTemplateLiteral103(["drum machine"]))));
    });
  }, true, {
    spec: sandwormSpec,
    effects: function() {
      return have($skill(_templateObject3532 || (_templateObject3532 = _taggedTemplateLiteral103(["Emotionally Chipped"])))) && get("_feelLostUsed") < 3 ? $effects(_templateObject3542 || (_templateObject3542 = _taggedTemplateLiteral103(["Feeling Lost"]))) : [];
    }
  }),
  new FreeFight(function() {
    return !get("_missileLauncherUsed") && (0, import_kolmafia112.getCampground)()["Asdon Martin keyfob"] !== void 0;
  }, function() {
    ensureBeachAccess();
    AsdonMartin_exports.fillTo(100);
    withMacro(Macro2.trySingAlong().tryHaveSkill($skill(_templateObject3552 || (_templateObject3552 = _taggedTemplateLiteral103(["Otoscope"])))).skill($skill(_templateObject3562 || (_templateObject3562 = _taggedTemplateLiteral103(["Asdon Martin: Missile Launcher"])))), function() {
      return (0, import_kolmafia112.use)($item(_templateObject3572 || (_templateObject3572 = _taggedTemplateLiteral103(["drum machine"]))));
    });
  }, true, {
    spec: sandwormSpec,
    effects: function() {
      return have($skill(_templateObject3582 || (_templateObject3582 = _taggedTemplateLiteral103(["Emotionally Chipped"])))) && get("_feelLostUsed") < 3 ? $effects(_templateObject3592 || (_templateObject3592 = _taggedTemplateLiteral103(["Feeling Lost"]))) : [];
    }
  }),
  new FreeFight(function() {
    return globalOptions.ascend ? get("shockingLickCharges") : 0;
  }, function() {
    ensureBeachAccess();
    withMacro(Macro2.trySingAlong().tryHaveSkill($skill(_templateObject3602 || (_templateObject3602 = _taggedTemplateLiteral103(["Otoscope"])))).skill($skill(_templateObject36110 || (_templateObject36110 = _taggedTemplateLiteral103(["Shocking Lick"])))), function() {
      return (0, import_kolmafia112.use)($item(_templateObject3622 || (_templateObject3622 = _taggedTemplateLiteral103(["drum machine"]))));
    });
  }, true, {
    spec: sandwormSpec,
    effects: function() {
      return have($skill(_templateObject3632 || (_templateObject3632 = _taggedTemplateLiteral103(["Emotionally Chipped"])))) && get("_feelLostUsed") < 3 ? $effects(_templateObject3642 || (_templateObject3642 = _taggedTemplateLiteral103(["Feeling Lost"]))) : [];
    }
  }),
  new FreeFight(function() {
    return have($item(_templateObject3652 || (_templateObject3652 = _taggedTemplateLiteral103(["Jurassic Parka"])))) && !have($effect(_templateObject3662 || (_templateObject3662 = _taggedTemplateLiteral103(["Everything Looks Yellow"]))));
  }, function() {
    ensureBeachAccess();
    (0, import_kolmafia112.cliExecute)("parka dilophosaur");
    withMacro(Macro2.trySingAlong().tryHaveSkill($skill(_templateObject3672 || (_templateObject3672 = _taggedTemplateLiteral103(["Otoscope"])))).trySkill($skill(_templateObject3682 || (_templateObject3682 = _taggedTemplateLiteral103(["Spit jurassic acid"])))), function() {
      return (0, import_kolmafia112.use)($item(_templateObject3692 || (_templateObject3692 = _taggedTemplateLiteral103(["drum machine"]))));
    });
  }, true, {
    spec: function() {
      return sandwormSpec({
        equip: $items(_templateObject3702 || (_templateObject3702 = _taggedTemplateLiteral103(["Jurassic Parka"])))
      });
    },
    effects: function() {
      return have($skill(_templateObject37110 || (_templateObject37110 = _taggedTemplateLiteral103(["Emotionally Chipped"])))) && get("_feelLostUsed") < 3 ? $effects(_templateObject3722 || (_templateObject3722 = _taggedTemplateLiteral103(["Feeling Lost"]))) : [];
    }
  })
];
function embezzlersInProgress() {
  return get("beGregariousFightsLeft") > 0 || get("_monsterHabitatsFightsLeft") > 0 || !romanticMonsterImpossible() || counter_exports.get("Digitize Monster") <= 0;
}
function freeRunFights() {
  if ((0, import_kolmafia112.myInebriety)() > (0, import_kolmafia112.inebrietyLimit)())
    return;
  if (embezzlersInProgress())
    return;
  propertyManager.setChoices({
    1387: 2,
    // "You will go find two friends and meet me here."
    1324: 5
    // Fight a random partier
  });
  var onlyPriorityRuns = globalOptions.prefs.yachtzeechain && !get("_garboYachtzeeChainCompleted", false);
  var stashRun = (0, import_kolmafia112.stashAmount)($item(_templateObject3732 || (_templateObject3732 = _taggedTemplateLiteral103(["navel ring of navel gazing"])))) ? $items(_templateObject3742 || (_templateObject3742 = _taggedTemplateLiteral103(["navel ring of navel gazing"]))) : (0, import_kolmafia112.stashAmount)($item(_templateObject3752 || (_templateObject3752 = _taggedTemplateLiteral103(["Greatest American Pants"])))) ? $items(_templateObject3762 || (_templateObject3762 = _taggedTemplateLiteral103(["Greatest American Pants"]))) : [];
  (0, import_kolmafia112.refreshStash)();
  withStash(stashRun, function() {
    var _iterator = _createForOfIteratorHelper35(priorityFreeRunFightSources), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var priorityRunFight = _step.value;
        priorityRunFight.runAll();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    if (onlyPriorityRuns)
      return;
    var _iterator2 = _createForOfIteratorHelper35(freeRunFightSources), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var freeRunFightSource = _step2.value;
        freeRunFightSource.runAll();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  });
}
function freeFights() {
  if ((0, import_kolmafia112.myInebriety)() > (0, import_kolmafia112.inebrietyLimit)())
    return;
  if (embezzlersInProgress())
    return;
  propertyManager.setChoices({
    1387: 2,
    // "You will go find two friends and meet me here."
    1324: 5
    // Fight a random partier
  });
  freeRunFights();
  killRobortCreaturesForFree();
  var canSquint = have($effect(_templateObject3772 || (_templateObject3772 = _taggedTemplateLiteral103(["Steely-Eyed Squint"])))) || have($skill(_templateObject3782 || (_templateObject3782 = _taggedTemplateLiteral103(["Steely-Eyed Squint"])))) && !get("_steelyEyedSquintUsed");
  if (have($item(_templateObject3792 || (_templateObject3792 = _taggedTemplateLiteral103(["January's Garbage Tote"])))) && canSquint && (0, import_kolmafia112.mallPrice)($item(_templateObject3802 || (_templateObject3802 = _taggedTemplateLiteral103(["drum machine"])))) < 0.02 * (0, import_kolmafia112.mallPrice)($item(_templateObject38110 || (_templateObject38110 = _taggedTemplateLiteral103(["spice melange"]))))) {
    try {
      var _iterator3 = _createForOfIteratorHelper35(freeKillSources2), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var freeKillSource = _step3.value;
          if (freeKillSource.isAvailable()) {
            ensureEffect($effect(_templateObject3822 || (_templateObject3822 = _taggedTemplateLiteral103(["Steely-Eyed Squint"]))));
          }
          freeKillSource.runAll();
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    } finally {
      if (have($item(_templateObject3832 || (_templateObject3832 = _taggedTemplateLiteral103(["January's Garbage Tote"]))))) {
        (0, import_kolmafia112.cliExecute)("fold wad of used tape");
      }
    }
  }
  if ((0, import_kolmafia112.canAdventure)($location(_templateObject3842 || (_templateObject3842 = _taggedTemplateLiteral103(["The Red Zeppelin"])))) && !have($item(_templateObject3852 || (_templateObject3852 = _taggedTemplateLiteral103(["glark cable"]))), clamp(5 - get("_glarkCableUses"), 0, 5))) {
    (0, import_kolmafia112.buy)(clamp(5 - get("_glarkCableUses"), 0, 5), $item(_templateObject3862 || (_templateObject3862 = _taggedTemplateLiteral103(["glark cable"]))), globalOptions.prefs.valueOfFreeFight);
  }
  var _iterator4 = _createForOfIteratorHelper35(freeFightSources), _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      var freeFightSource = _step4.value;
      freeFightSource.runAll();
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  runGarboQuests([FreeFightQuest]);
  tryFillLatte();
  postFreeFightDailySetup();
}
function setNepQuestChoicesAndPrepItems() {
  var quest = get("_questPartyFairQuest");
  if (quest === "food") {
    if (!questStep2("_questPartyFair")) {
      setChoice(1324, 2);
      setChoice(1326, 3);
    } else if (get("choiceAdventure1324") !== 5) {
      setChoice(1324, 5);
      (0, import_kolmafia112.print)("Found Geraldine!", HIGHLIGHT);
      var partyFairInfo = get("_questPartyFairProgress").split(" ");
      logMessage("Geraldine wants ".concat(partyFairInfo[0], " ").concat((0, import_kolmafia112.toItem)(partyFairInfo[1]).plural, ", please!"));
    }
  } else if (quest === "booze") {
    if (!questStep2("_questPartyFair")) {
      setChoice(1324, 3);
      setChoice(1327, 3);
    } else if (get("choiceAdventure1324") !== 5) {
      setChoice(1324, 5);
      (0, import_kolmafia112.print)("Found Gerald!", HIGHLIGHT);
      var _partyFairInfo = get("_questPartyFairProgress").split(" ");
      logMessage("Gerald wants ".concat(_partyFairInfo[0], " ").concat((0, import_kolmafia112.toItem)(_partyFairInfo[1]).plural, ", please!"));
    }
  } else {
    setChoice(1324, 5);
  }
}
function thesisReady() {
  return !get("_thesisDelivered") && have($familiar(_templateObject3872 || (_templateObject3872 = _taggedTemplateLiteral103(["Pocket Professor"])))) && $familiar(_templateObject3882 || (_templateObject3882 = _taggedTemplateLiteral103(["Pocket Professor"]))).experience >= 400;
}
function deliverThesisIfAble() {
  if (!thesisReady())
    return;
  freeFightMood().execute();
  freeFightOutfit({
    modifier: ["100 Muscle"],
    familiar: $familiar(_templateObject3892 || (_templateObject3892 = _taggedTemplateLiteral103(["Pocket Professor"])))
  }).dress();
  safeRestore();
  var requiredThesisHP = 1296;
  var thesisLocation = $location(_templateObject3902 || (_templateObject3902 = _taggedTemplateLiteral103(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])));
  var requiredMuscle = requiredThesisHP / 0.75 - 5;
  if (molemanReady()) {
    requiredMuscle = requiredThesisHP / 1.5 - 15;
    thesisLocation = $location(_templateObject39110 || (_templateObject39110 = _taggedTemplateLiteral103(["Noob Cave"])));
  } else if ((get("neverendingPartyAlways") || get("_neverEndingPartyToday")) && questStep2("_questPartyFair") < 999) {
    setNepQuestChoicesAndPrepItems();
    thesisLocation = $location(_templateObject3922 || (_templateObject3922 = _taggedTemplateLiteral103(["The Neverending Party"])));
    requiredMuscle = requiredThesisHP / 0.75 + 10;
  } else if (!(0, import_kolmafia112.canAdventure)(thesisLocation)) {
    if (!have($item(_templateObject3932 || (_templateObject3932 = _taggedTemplateLiteral103(["transporter transponder"]))))) {
      acquire(1, $item(_templateObject3942 || (_templateObject3942 = _taggedTemplateLiteral103(["transporter transponder"]))), 1e4);
    }
    (0, import_kolmafia112.use)($item(_templateObject3952 || (_templateObject3952 = _taggedTemplateLiteral103(["transporter transponder"]))));
    thesisLocation = $location(_templateObject3962 || (_templateObject3962 = _taggedTemplateLiteral103(["Hamburglaris Shield Generator"])));
    requiredMuscle = requiredThesisHP / 0.75 - 1;
  }
  if ((0, import_kolmafia112.myBuffedstat)($stat(_templateObject3972 || (_templateObject3972 = _taggedTemplateLiteral103(["Muscle"])))) < requiredMuscle && have($item(_templateObject3982 || (_templateObject3982 = _taggedTemplateLiteral103(["Powerful Glove"])))) && !have($effect(_templateObject3992 || (_templateObject3992 = _taggedTemplateLiteral103(["Triple-Sized"])))) && get("_powerfulGloveBatteryPowerUsed") <= 95 && // We only get triple-sized if it doesn't lose us a replace enemy use
  (get("_powerfulGloveBatteryPowerUsed") % 10 === 5 || !doingGregFight())) {
    (0, import_kolmafia112.cliExecute)("checkpoint");
    (0, import_kolmafia112.equip)($slot(_templateObject4002 || (_templateObject4002 = _taggedTemplateLiteral103(["acc1"]))), $item(_templateObject40110 || (_templateObject40110 = _taggedTemplateLiteral103(["Powerful Glove"]))));
    ensureEffect($effect(_templateObject4022 || (_templateObject4022 = _taggedTemplateLiteral103(["Triple-Sized"]))));
    (0, import_kolmafia112.outfit)("checkpoint");
  }
  (0, import_kolmafia112.cliExecute)("gain ".concat(requiredMuscle, " muscle"));
  if (molemanReady()) {
    withMacro(Macro2.skill($skill(_templateObject4032 || (_templateObject4032 = _taggedTemplateLiteral103(["deliver your thesis!"])))), function() {
      return (0, import_kolmafia112.use)($item(_templateObject4042 || (_templateObject4042 = _taggedTemplateLiteral103(["molehill mountain"]))));
    }, true);
  } else {
    garboAdventure(thesisLocation, Macro2.skill($skill(_templateObject4052 || (_templateObject4052 = _taggedTemplateLiteral103(["deliver your thesis!"])))));
  }
  postCombatActions();
}
function doSausage() {
  if (!kramcoGuaranteed()) {
    return;
  }
  freeFightOutfit({
    equip: $items(_templateObject4062 || (_templateObject4062 = _taggedTemplateLiteral103(["Kramco Sausage-o-Matic\u2122"])))
  }).dress();
  var currentSausages = get("_sausageFights");
  do {
    propertyManager.setChoices(wanderer().getChoices("wanderer"));
    var goblin = $monster(_templateObject4072 || (_templateObject4072 = _taggedTemplateLiteral103(["sausage goblin"])));
    freeFightOutfit({
      equip: $items(_templateObject4082 || (_templateObject4082 = _taggedTemplateLiteral103(["Kramco Sausage-o-Matic\u2122"])))
    }, {
      wanderOptions: "wanderer"
    }).dress();
    garboAdventureAuto(wanderer().getTarget("wanderer"), Macro2.if_(goblin, Macro2.basicCombat()).ifHolidayWanderer(Macro2.basicCombat()).abortWithMsg("Expected ".concat(goblin, " but got something else.")));
  } while (get("_sausageFights") === currentSausages);
  if ((0, import_kolmafia112.getAutoAttack)() !== 0)
    (0, import_kolmafia112.setAutoAttack)(0);
  postCombatActions();
}
function doGhost() {
  if (!have($item(_templateObject4092 || (_templateObject4092 = _taggedTemplateLiteral103(["protonic accelerator pack"])))) || get("questPAGhost") === "unstarted") {
    return;
  }
  var ghostLocation = get("ghostLocation");
  if (!ghostLocation)
    return;
  freeFightOutfit({
    equip: $items(_templateObject41010 || (_templateObject41010 = _taggedTemplateLiteral103(["protonic accelerator pack"])))
  }).dress();
  var currentTurncount;
  do {
    currentTurncount = (0, import_kolmafia112.myTurncount)();
    garboAdventure(ghostLocation, Macro2.ghostBustin());
  } while (get("ghostLocation") !== $location.none && currentTurncount === (0, import_kolmafia112.myTurncount)());
  postCombatActions();
}
function ensureBeachAccess() {
  if (get("lastDesertUnlock") !== (0, import_kolmafia112.myAscensions)() && (0, import_kolmafia112.myPath)() !== $path(_templateObject41110 || (_templateObject41110 = _taggedTemplateLiteral103(["Actually Ed the Undying"])))) {
    (0, import_kolmafia112.create)($item(_templateObject41210 || (_templateObject41210 = _taggedTemplateLiteral103(["bitchin' meatcar"]))));
  }
}
var itemStealZones = [{
  location: $location(_templateObject41310 || (_templateObject41310 = _taggedTemplateLiteral103(["The Deep Dark Jungle"]))),
  monster: $monster(_templateObject41410 || (_templateObject41410 = _taggedTemplateLiteral103(["smoke monster"]))),
  item: $item(_templateObject4152 || (_templateObject4152 = _taggedTemplateLiteral103(["transdermal smoke patch"]))),
  dropRate: 1,
  maximize: [],
  requireMapTheMonsters: false,
  isOpen: function() {
    return get("_spookyAirportToday") || get("spookyAirportAlways");
  },
  openCost: function() {
    return 0;
  },
  preReq: null
}, {
  location: $location(_templateObject4162 || (_templateObject4162 = _taggedTemplateLiteral103(["The Ice Hotel"]))),
  monster: $monster(_templateObject4172 || (_templateObject4172 = _taggedTemplateLiteral103(["ice bartender"]))),
  item: $item(_templateObject4182 || (_templateObject4182 = _taggedTemplateLiteral103(["perfect ice cube"]))),
  dropRate: 1,
  maximize: [],
  requireMapTheMonsters: false,
  isOpen: function() {
    return get("_coldAirportToday") || get("coldAirportAlways");
  },
  openCost: function() {
    return 0;
  },
  preReq: null
}, {
  location: $location(_templateObject4192 || (_templateObject4192 = _taggedTemplateLiteral103(["The Haunted Library"]))),
  monster: $monster(_templateObject4202 || (_templateObject4202 = _taggedTemplateLiteral103(["bookbat"]))),
  item: $item(_templateObject42110 || (_templateObject42110 = _taggedTemplateLiteral103(["tattered scrap of paper"]))),
  dropRate: 1,
  maximize: ["99 monster level 100 max"],
  // Bookbats need up to +100 ML to survive the polar vortices
  requireMapTheMonsters: false,
  isOpen: function() {
    return have($item(_templateObject4222 || (_templateObject4222 = _taggedTemplateLiteral103(["[7302]Spookyraven library key"]))));
  },
  openCost: function() {
    return 0;
  },
  preReq: null
}, {
  location: $location(_templateObject4232 || (_templateObject4232 = _taggedTemplateLiteral103(["The Stately Pleasure Dome"]))),
  monster: $monster(_templateObject4242 || (_templateObject4242 = _taggedTemplateLiteral103(["toothless mastiff bitch"]))),
  item: $item(_templateObject4252 || (_templateObject4252 = _taggedTemplateLiteral103(["disintegrating spiky collar"]))),
  dropRate: 1,
  maximize: ["99 muscle 100 max"],
  // Ensure mastiff is at least 100 hp
  requireMapTheMonsters: false,
  isOpen: function() {
    return true;
  },
  openCost: function() {
    return !have($effect(_templateObject4262 || (_templateObject4262 = _taggedTemplateLiteral103(["Absinthe-Minded"])))) ? (0, import_kolmafia112.mallPrice)($item(_templateObject4272 || (_templateObject4272 = _taggedTemplateLiteral103(["tiny bottle of absinthe"])))) : 0;
  },
  preReq: function() {
    if (!have($effect(_templateObject4282 || (_templateObject4282 = _taggedTemplateLiteral103(["Absinthe-Minded"]))))) {
      if (!have($item(_templateObject4292 || (_templateObject4292 = _taggedTemplateLiteral103(["tiny bottle of absinthe"]))))) {
        (0, import_kolmafia112.buy)(1, $item(_templateObject4302 || (_templateObject4302 = _taggedTemplateLiteral103(["tiny bottle of absinthe"]))));
      }
      (0, import_kolmafia112.use)($item(_templateObject43110 || (_templateObject43110 = _taggedTemplateLiteral103(["tiny bottle of absinthe"]))));
    }
  }
}, {
  location: $location(_templateObject4322 || (_templateObject4322 = _taggedTemplateLiteral103(["Twin Peak"]))),
  monster: $monsters(_templateObject4332 || (_templateObject4332 = _taggedTemplateLiteral103(["bearpig topiary animal, elephant (meatcar?) topiary animal, spider (duck?) topiary animal"]))),
  item: $item(_templateObject4342 || (_templateObject4342 = _taggedTemplateLiteral103(["rusty hedge trimmers"]))),
  dropRate: 0.5,
  maximize: ["99 monster level 11 max"],
  // Topiary animals need an extra 11 HP to survive polar vortices
  requireMapTheMonsters: false,
  isOpen: function() {
    return (0, import_kolmafia112.myLevel)() >= 9 && get("chasmBridgeProgress") >= 30 && get("twinPeakProgress") >= 15;
  },
  openCost: function() {
    return 0;
  },
  preReq: null
}, {
  location: $location(_templateObject4352 || (_templateObject4352 = _taggedTemplateLiteral103(["The Hidden Temple"]))),
  monster: $monster(_templateObject4362 || (_templateObject4362 = _taggedTemplateLiteral103(["baa-relief sheep"]))),
  item: $item(_templateObject4372 || (_templateObject4372 = _taggedTemplateLiteral103(["stone wool"]))),
  requireMapTheMonsters: true,
  dropRate: 1,
  maximize: ["99 monster level 100 max"],
  // Sheeps need up to +100 ML to survive the polar vortices
  isOpen: function() {
    return get("lastTempleUnlock") === (0, import_kolmafia112.myAscensions)();
  },
  openCost: function() {
    return 0;
  },
  preReq: null
}].concat(_toConsumableArray47($locations(_templateObject4382 || (_templateObject4382 = _taggedTemplateLiteral103(["Shadow Rift (The Ancient Buried Pyramid), Shadow Rift (The Hidden City), Shadow Rift (The Misspelled Cemetary)"]))).map(function(location) {
  return {
    location: location,
    monster: $monster(_templateObject4392 || (_templateObject4392 = _taggedTemplateLiteral103(["shadow slab"]))),
    item: $item(_templateObject4402 || (_templateObject4402 = _taggedTemplateLiteral103(["shadow brick"]))),
    requireMapTheMonsters: false,
    dropRate: 1,
    isOpen: function() {
      return (0, import_kolmafia112.canAdventure)(location);
    },
    openCost: function() {
      return 0;
    },
    preReq: null
  };
})));
function getBestItemStealZone() {
  var mappingMonster = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var targets = itemStealZones.filter(function(zone) {
    return zone.isOpen() && (mappingMonster || !zone.requireMapTheMonsters) && asArray(zone.monster).some(function(m) {
      return !(0, import_kolmafia112.isBanished)(m) || get("olfactedMonster") === m || get("_gallapagosMonster") === m;
    });
  });
  var vorticesAvail = have($item(_templateObject44110 || (_templateObject44110 = _taggedTemplateLiteral103(["industrial fire extinguisher"])))) ? Math.floor(get("_fireExtinguisherCharge") / 10) : 0;
  var hugsAvail = have($familiar(_templateObject4422 || (_templateObject4422 = _taggedTemplateLiteral103(["XO Skeleton"])))) ? clamp(11 - get("_xoHugsUsed"), 0, 11) : 0;
  var value = function(zone) {
    return zone.dropRate * garboValue(zone.item) * (vorticesAvail + hugsAvail / 2) - zone.openCost();
  };
  return targets.length ? maxBy(targets, value) : null;
}
function setupItemStealZones() {
  propertyManager.set({
    lightsOutAutomation: 2
  });
  propertyManager.setChoices({
    163: 4,
    164: 3,
    165: 4,
    166: 1,
    888: 4,
    889: 5
  });
}
function itemStealOlfact(best) {
  return Macro2.externalIf(have($skill(_templateObject4432 || (_templateObject4432 = _taggedTemplateLiteral103(["Transcendent Olfaction"])))) && get("_olfactionsUsed") < 1 && itemStealZones.every(function(zone) {
    return !asArray(zone.monster).includes(get("olfactedMonster"));
  }), Macro2.skill($skill(_templateObject4442 || (_templateObject4442 = _taggedTemplateLiteral103(["Transcendent Olfaction"]))))).externalIf(have($skill(_templateObject4452 || (_templateObject4452 = _taggedTemplateLiteral103(["Gallapagosian Mating Call"])))) && get("_gallapagosMonster") !== best.monster, Macro2.skill($skill(_templateObject4462 || (_templateObject4462 = _taggedTemplateLiteral103(["Gallapagosian Mating Call"])))));
}
var haveEnoughPills = clamp((0, import_kolmafia112.availableAmount)($item(_templateObject4472 || (_templateObject4472 = _taggedTemplateLiteral103(["synthetic dog hair pill"])))), 0, 100) + clamp((0, import_kolmafia112.availableAmount)($item(_templateObject4482 || (_templateObject4482 = _taggedTemplateLiteral103(["distention pill"])))), 0, 100) + (0, import_kolmafia112.availableAmount)($item(_templateObject4492 || (_templateObject4492 = _taggedTemplateLiteral103(["Map to Safety Shelter Grimace Prime"])))) < 200 && (0, import_kolmafia112.availableAmount)($item(_templateObject4502 || (_templateObject4502 = _taggedTemplateLiteral103(["Map to Safety Shelter Grimace Prime"])))) < ESTIMATED_OVERDRUNK_TURNS;
function wantPills() {
  return have($item(_templateObject45110 || (_templateObject45110 = _taggedTemplateLiteral103(["Fourth of May Cosplay Saber"])))) && crateStrategy() !== "Saber" && haveEnoughPills;
}
function voidMonster() {
  if (get("cursedMagnifyingGlassCount") < 13 || !have($item(_templateObject4522 || (_templateObject4522 = _taggedTemplateLiteral103(["cursed magnifying glass"])))) || get("_voidFreeFights") >= 5) {
    return;
  }
  freeFightOutfit({
    equip: $items(_templateObject4532 || (_templateObject4532 = _taggedTemplateLiteral103(["cursed magnifying glass"])))
  }, {
    wanderOptions: "wanderer"
  }).dress();
  propertyManager.setChoices(wanderer().getChoices("wanderer"));
  garboAdventure(wanderer().getTarget("wanderer"), Macro2.basicCombat());
  postCombatActions();
}
var freeKills = [{
  spec: {
    equip: $items(_templateObject4542 || (_templateObject4542 = _taggedTemplateLiteral103(["The Jokester's gun"])))
  },
  macro: $skill(_templateObject4552 || (_templateObject4552 = _taggedTemplateLiteral103(["Fire the Jokester's Gun"]))),
  used: function() {
    return get("_firedJokestersGun");
  }
}, {
  spec: {
    equip: $items(_templateObject4562 || (_templateObject4562 = _taggedTemplateLiteral103(["Lil' Doctor\u2122 bag"])))
  },
  macro: $skill(_templateObject4572 || (_templateObject4572 = _taggedTemplateLiteral103(["Chest X-Ray"]))),
  used: function() {
    return get("_chestXRayUsed") >= 3;
  }
}, {
  macro: $skill(_templateObject4582 || (_templateObject4582 = _taggedTemplateLiteral103(["Shattering Punch"]))),
  used: function() {
    return get("_shatteringPunchUsed") >= 3;
  }
}, {
  macro: $skill(_templateObject4592 || (_templateObject4592 = _taggedTemplateLiteral103(["Gingerbread Mob Hit"]))),
  used: function() {
    return get("_gingerbreadMobHitUsed");
  }
}, {
  macro: $item(_templateObject4602 || (_templateObject4602 = _taggedTemplateLiteral103(["replica bat-oomerang"]))),
  used: function() {
    return get("_usedReplicaBatoomerang") >= 3;
  }
}];
var canUseSource = function(_ref5) {
  var _spec$equip$every, _spec$equip4;
  var spec = _ref5.spec, macro = _ref5.macro, used = _ref5.used;
  return ((_spec$equip$every = spec === null || spec === void 0 || (_spec$equip4 = spec.equip) === null || _spec$equip4 === void 0 ? void 0 : _spec$equip4.every(function(i) {
    return have(i);
  })) !== null && _spec$equip$every !== void 0 ? _spec$equip$every : have(macro)) && !used();
};
function findFreeKill() {
  var _freeKills$find;
  return (_freeKills$find = freeKills.find(canUseSource)) !== null && _freeKills$find !== void 0 ? _freeKills$find : null;
}
function killRobortCreaturesForFree() {
  if (!have($familiar(_templateObject46110 || (_templateObject46110 = _taggedTemplateLiteral103(["Robortender"])))))
    return;
  var currentHeads = (0, import_kolmafia112.availableAmount)($item(_templateObject4622 || (_templateObject4622 = _taggedTemplateLiteral103(["fish head"]))));
  var freeKill = findFreeKill();
  while (freeKill && (0, import_kolmafia112.canAdventure)($location(_templateObject4632 || (_templateObject4632 = _taggedTemplateLiteral103(["The Copperhead Club"])))) && have($skill(_templateObject4642 || (_templateObject4642 = _taggedTemplateLiteral103(["Comprehensive Cartography"])))) && get("_monstersMapped") < 3) {
    if (have($effect(_templateObject4652 || (_templateObject4652 = _taggedTemplateLiteral103(["Crappily Disguised as a Waiter"]))))) {
      setChoice(855, 4);
      garboAdventure($location(_templateObject4662 || (_templateObject4662 = _taggedTemplateLiteral103(["The Copperhead Club"]))), Macro2.abort());
    }
    freeFightOutfit(_objectSpread19(_objectSpread19({}, freeKill.spec), {}, {
      familiar: $familiar(_templateObject4672 || (_templateObject4672 = _taggedTemplateLiteral103(["Robortender"])))
    })).dress();
    withMacro(freeKill.macro instanceof import_kolmafia112.Item ? Macro2.item(freeKill.macro) : Macro2.skill(freeKill.macro), function() {
      mapMonster2($location(_templateObject4682 || (_templateObject4682 = _taggedTemplateLiteral103(["The Copperhead Club"]))), $monster(_templateObject4692 || (_templateObject4692 = _taggedTemplateLiteral103(["Mob Penguin Capo"]))));
      (0, import_kolmafia112.runCombat)();
    }, true);
    freeKill = findFreeKill();
  }
  var _loop2 = function _loop22() {
    var roboTarget = CombatLoversLocket_exports.findMonster(function() {
      return true;
    }, function(monster) {
      return valueDrops2(monster) + garboValue(Robortender_exports.dropFrom(monster)) * Robortender_exports.dropChance();
    });
    if (!roboTarget)
      return 1;
    var regularTarget = CombatLoversLocket_exports.findMonster(function() {
      return true;
    }, valueDrops2);
    var familiar7 = regularTarget === roboTarget ? freeFightFamiliar({
      canChooseMacro: roboTarget.attributes.includes("FREE")
    }) : $familiar(_templateObject4752 || (_templateObject4752 = _taggedTemplateLiteral103(["Robortender"])));
    freeFightOutfit(roboTarget.attributes.includes("FREE") ? {
      familiar: familiar7
    } : _objectSpread19(_objectSpread19({}, freeKill.spec), {}, {
      familiar: familiar7
    })).dress();
    withMacro(isFree2(roboTarget) ? Macro2.basicCombat() : freeKill.macro instanceof import_kolmafia112.Item ? Macro2.item(freeKill.macro) : Macro2.skill(freeKill.macro), function() {
      return CombatLoversLocket_exports.reminisce(roboTarget);
    }, true);
    freeKill = findFreeKill();
  };
  while (freeKill && CombatLoversLocket_exports.have() && CombatLoversLocket_exports.reminiscesLeft() > 1) {
    if (_loop2())
      break;
  }
  if (!Robortender_exports.currentDrinks().includes($item(_templateObject4702 || (_templateObject4702 = _taggedTemplateLiteral103(["drive-by shooting"])))) && (0, import_kolmafia112.availableAmount)($item(_templateObject47110 || (_templateObject47110 = _taggedTemplateLiteral103(["fish head"])))) > currentHeads && userConfirmDialog("Garbo managed to rustle up a fish head, would you like it to use it to make a drive-by shooting so you can benefit from your robortender? Sorry for flip-flopping on this, life is hard.", true)) {
    if (!have($item(_templateObject4722 || (_templateObject4722 = _taggedTemplateLiteral103(["drive-by shooting"])))))
      (0, import_kolmafia112.create)($item(_templateObject4732 || (_templateObject4732 = _taggedTemplateLiteral103(["drive-by shooting"]))));
    Robortender_exports.feed($item(_templateObject4742 || (_templateObject4742 = _taggedTemplateLiteral103(["drive-by shooting"]))));
    setBestLeprechaunAsMeatFamiliar();
  }
}
var isFree2 = function(monster) {
  return monster.attributes.includes("FREE");
};
var valueDrops2 = function(monster) {
  return sum((0, import_kolmafia112.itemDropsArray)(monster), function(_ref6) {
    var drop = _ref6.drop, rate = _ref6.rate, type = _ref6.type;
    return !["c", "0", "p"].includes(type) ? garboValue(drop, true) * rate / 100 : 0;
  });
};
function estimatedTentacles() {
  return sum(freeFightSources, function(source) {
    var avail = source.tentacle ? source.available() : 0;
    return typeof avail === "number" ? avail : (0, import_kolmafia112.toInt)(avail);
  }) + possibleTentacleFights();
}
function yachtzee() {
  if (!realmAvailable("sleaze") || !have($effect(_templateObject4762 || (_templateObject4762 = _taggedTemplateLiteral103(["Fishy"])))))
    return;
  for (var _i2 = 0, _arr = [{
    available: have($item(_templateObject4772 || (_templateObject4772 = _taggedTemplateLiteral103(["Clara's bell"])))) && !globalOptions.clarasBellClaimed,
    success: function() {
      globalOptions.clarasBellClaimed = true;
      if ((0, import_kolmafia112.use)($item(_templateObject4782 || (_templateObject4782 = _taggedTemplateLiteral103(["Clara's bell"])))))
        return true;
      return false;
    }
  }, {
    available: have($item(_templateObject4792 || (_templateObject4792 = _taggedTemplateLiteral103(["Eight Days a Week Pill Keeper"])))) && !get("_freePillKeeperUsed"),
    success: function() {
      if ((0, import_kolmafia112.cliExecute)("pillkeeper noncombat") && get("_freePillKeeperUsed")) {
        _set("_freePillKeeperUsed", true);
        return true;
      }
      return false;
    }
  }]; _i2 < _arr.length; _i2++) {
    var _arr$_i = _arr[_i2], available4 = _arr$_i.available, success = _arr$_i.success;
    if (available4) {
      var familiarOptions = import_kolmafia112.Familiar.all().filter(function(familiar7) {
        return have(familiar7) && familiar7.underwater && familiar7 !== $familiar(_templateObject4802 || (_templateObject4802 = _taggedTemplateLiteral103(["Robortender"])));
      });
      var familiarChoice = familiarOptions.length ? maxBy(familiarOptions, findLeprechaunMultiplier) : $familiar.none;
      (0, import_kolmafia112.useFamiliar)(familiarChoice);
      var underwaterBreathingGear = waterBreathingEquipment.find(function(item10) {
        return have(item10) && (0, import_kolmafia112.canEquip)(item10);
      });
      if (!underwaterBreathingGear)
        return;
      var equippedOutfit = new Requirement(["meat", "-tie"], {
        forceEquip: [underwaterBreathingGear]
      }).maximize();
      if ((0, import_kolmafia112.haveEquipped)($item(_templateObject48110 || (_templateObject48110 = _taggedTemplateLiteral103(["The Crown of Ed the Undying"]))))) {
        (0, import_kolmafia112.cliExecute)("edpiece fish");
      }
      if (!equippedOutfit || !success())
        return;
      var lastUMDDate = property_exports.getString("umdLastObtained");
      var getUMD = !get("_sleazeAirportToday") && // We cannot get the UMD with a one-day pass
      garboValue($item(_templateObject4822 || (_templateObject4822 = _taggedTemplateLiteral103(["Ultimate Mind Destroyer"])))) >= Math.min(2e4, 2e3 * (1 + (0, import_kolmafia112.numericModifier)("meat drop") / 100)) && (!lastUMDDate || gameDay().getTime() - Date.parse(lastUMDDate) >= 1e3 * 60 * 60 * 24 * 7);
      setChoice(918, getUMD ? 1 : 2);
      garboAdventureAuto($location(_templateObject4832 || (_templateObject4832 = _taggedTemplateLiteral103(["The Sunken Party Yacht"]))), Macro2.abort());
      if (Florist_exports.have() && Florist_exports.Crookweed.available()) {
        Florist_exports.Crookweed.plant();
      }
      if (get("lastEncounter") === "Yacht, See?") {
        garboAdventureAuto($location(_templateObject4842 || (_templateObject4842 = _taggedTemplateLiteral103(["The Sunken Party Yacht"]))), Macro2.abort());
      }
      return;
    }
  }
}
function runShadowRiftTurn() {
  if (get("encountersUntilSRChoice") === 0)
    return;
  if (globalOptions.prefs.yachtzeechain || get("rufusQuestType") === "items" || get("rufusQuestType") === "entity") {
    (0, import_kolmafia112.adv1)(bestShadowRift(), -1, "");
    return;
  }
  if (have($item(_templateObject4852 || (_templateObject4852 = _taggedTemplateLiteral103(["Clara's bell"])))) && !globalOptions.clarasBellClaimed) {
    globalOptions.clarasBellClaimed = true;
    (0, import_kolmafia112.use)($item(_templateObject4862 || (_templateObject4862 = _taggedTemplateLiteral103(["Clara's bell"]))));
  } else if (CinchoDeMayo_exports.have() && CinchoDeMayo_exports.totalAvailableCinch() >= 60) {
    var lastAcc = (0, import_kolmafia112.equippedItem)($slot(_templateObject4872 || (_templateObject4872 = _taggedTemplateLiteral103(["acc3"]))));
    (0, import_kolmafia112.equip)($slot(_templateObject4882 || (_templateObject4882 = _taggedTemplateLiteral103(["acc3"]))), $item(_templateObject4892 || (_templateObject4892 = _taggedTemplateLiteral103(["Cincho de Mayo"]))));
    while (CinchoDeMayo_exports.currentCinch() < 60) {
      if (!freeRest())
        throw new Error("We are out of free rests!");
    }
    (0, import_kolmafia112.useSkill)($skill(_templateObject4902 || (_templateObject4902 = _taggedTemplateLiteral103(["Cincho: Fiesta Exit"]))));
    (0, import_kolmafia112.equip)($slot(_templateObject49110 || (_templateObject49110 = _taggedTemplateLiteral103(["acc3"]))), lastAcc);
  } else if (have($item(_templateObject4922 || (_templateObject4922 = _taggedTemplateLiteral103(["Jurassic Parka"])))) && get("_spikolodonSpikeUses") < 5 && have($effect(_templateObject4932 || (_templateObject4932 = _taggedTemplateLiteral103(["Shadow Affinity"])))) && get("encountersUntilSRChoice") >= 2) {
    freeFightOutfit({
      shirt: $item(_templateObject4942 || (_templateObject4942 = _taggedTemplateLiteral103(["Jurassic Parka"])))
    }).dress();
    (0, import_kolmafia112.cliExecute)("parka spikolodon");
    var macro = Macro2.skill($skill(_templateObject4952 || (_templateObject4952 = _taggedTemplateLiteral103(["Launch spikolodon spikes"])))).basicCombat();
    garboAdventureAuto(bestShadowRift(), macro);
  } else {
    (0, import_kolmafia112.adv1)(bestShadowRift(), -1, "");
  }
}

// src/resources/realm.ts
var import_kolmafia113 = require("kolmafia");
init_dist();
var _templateObject880;
var _templateObject2190;
var _templateObject3170;
var _templateObject4153;
var _templateObject5139;
var _templateObject6128;
var _templateObject7104;
var _templateObject881;
var _templateObject971;
var _templateObject1061;
function _slicedToArray32(arr, i) {
  return _arrayWithHoles32(arr) || _iterableToArrayLimit32(arr, i) || _unsupportedIterableToArray71(arr, i) || _nonIterableRest32();
}
function _nonIterableRest32() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit32(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles32(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper36(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray71(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray71(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray71(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray71(o, minLen);
}
function _arrayLikeToArray71(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral104(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function volcanoItemValue(_ref) {
  var quantity = _ref.quantity, item10 = _ref.item;
  if (item10 === $item(_templateObject880 || (_templateObject880 = _taggedTemplateLiteral104(["fused fuse"])))) {
    if (!have($item(_templateObject2190 || (_templateObject2190 = _taggedTemplateLiteral104(["Clara's bell"])))) || globalOptions.clarasBellClaimed) {
      return Infinity;
    }
    if (realmAvailable("sleaze") && have($item(_templateObject3170 || (_templateObject3170 = _taggedTemplateLiteral104(["fishy pipe"])))) && !get("_fishyPipeUsed")) {
      return quantity * 4e4;
    } else {
      return quantity * get("valueOfAdventure");
    }
  }
  if (!item10.tradeable)
    return Infinity;
  return quantity * (0, import_kolmafia113.retrievePrice)(item10);
}
function checkVolcanoQuest() {
  var _property$getItem, _property$getItem2, _property$getItem3;
  (0, import_kolmafia113.print)("Checking volcano quest", HIGHLIGHT);
  (0, import_kolmafia113.visitUrl)("place.php?whichplace=airport_hot&action=airport4_questhub");
  var volcoinoValue = garboValue($item(_templateObject4153 || (_templateObject4153 = _taggedTemplateLiteral104(["Volcoino"]))));
  var bestItem = maxBy([{
    item: (_property$getItem = property_exports.getItem("_volcanoItem1")) !== null && _property$getItem !== void 0 ? _property$getItem : $item.none,
    quantity: get("_volcanoItemCount1"),
    choice: 1
  }, {
    item: (_property$getItem2 = property_exports.getItem("_volcanoItem2")) !== null && _property$getItem2 !== void 0 ? _property$getItem2 : $item.none,
    quantity: get("_volcanoItemCount2"),
    choice: 2
  }, {
    item: (_property$getItem3 = property_exports.getItem("_volcanoItem3")) !== null && _property$getItem3 !== void 0 ? _property$getItem3 : $item.none,
    quantity: get("_volcanoItemCount3"),
    choice: 3
  }], volcanoItemValue, true);
  if (bestItem.item === $item(_templateObject5139 || (_templateObject5139 = _taggedTemplateLiteral104(["fused fuse"])))) {
    globalOptions.clarasBellClaimed = true;
    logMessage("Grab a fused fused with your clara's bell charge while overdrunk!");
  } else if (volcanoItemValue(bestItem) < volcoinoValue) {
    withProperty("autoBuyPriceLimit", volcoinoValue, function() {
      return (0, import_kolmafia113.retrieveItem)(bestItem.item, bestItem.quantity);
    });
    (0, import_kolmafia113.visitUrl)("place.php?whichplace=airport_hot&action=airport4_questhub");
    (0, import_kolmafia113.runChoice)(bestItem.choice);
  }
}
var _attemptCompletingBarfQuest = true;
function attemptCompletingBarfQuest() {
  return _attemptCompletingBarfQuest;
}
function completeBarfQuest() {
  if (!_attemptCompletingBarfQuest)
    return;
  if (get("questEStGiveMeFuel") === "started") {
    var globuleCosts = (0, import_kolmafia113.retrievePrice)($item(_templateObject6128 || (_templateObject6128 = _taggedTemplateLiteral104(["toxic globule"]))), 20);
    if (globuleCosts < 3 * garboValue($item(_templateObject7104 || (_templateObject7104 = _taggedTemplateLiteral104(["FunFunds\u2122"]))))) {
      (0, import_kolmafia113.print)("The cost of 20 toxic globules (".concat(globuleCosts, ") is less than the profits expected from 3 FunFunds\u2122 (").concat(3 * garboValue($item(_templateObject881 || (_templateObject881 = _taggedTemplateLiteral104(["FunFunds\u2122"])))), "). Proceeding to acquire toxic globules."), "green");
      _attemptCompletingBarfQuest = acquire(20, $item(_templateObject971 || (_templateObject971 = _taggedTemplateLiteral104(["toxic globule"]))), 1.5 * globuleCosts / 20, false) >= 20;
    } else {
      _attemptCompletingBarfQuest = false;
      (0, import_kolmafia113.print)("The cost of 20 toxic globules (".concat(globuleCosts, ") exceeds the profits expected from 3 FunFunds\u2122 (").concat(3 * garboValue($item(_templateObject1061 || (_templateObject1061 = _taggedTemplateLiteral104(["FunFunds\u2122"])))), "). Consider farming some globules yourself."), "red");
    }
  }
  if (get("questEStSuperLuber") === "step2" || get("questEStGiveMeFuel") === "step1") {
    (0, import_kolmafia113.print)("Completing Barf Quest", "blue");
    (0, import_kolmafia113.visitUrl)("place.php?whichplace=airport_stench&action=airport3_kiosk");
    (0, import_kolmafia113.visitUrl)("choice.php?whichchoice=1066&pwd&option=3");
  }
  return;
}
function checkBarfQuest() {
  var _page$match$2$match$, _page$match, _page$match$2$match$2, _page$match2;
  var page = (0, import_kolmafia113.visitUrl)("place.php?whichplace=airport_stench&action=airport3_kiosk");
  if (page.includes("Current Assignment")) {
    return completeBarfQuest();
  }
  if (!page.includes("Available Assignments")) {
    _set("questEStSuperLuber", "unstarted");
    _set("questEStGiveMeFuel", "unstarted");
    return;
  }
  var targets = globalOptions.nobarf ? ["Electrical Maintenance"] : ["Track Maintenance", "Electrical Maintenance"];
  var quests2 = [(_page$match$2$match$ = (_page$match = page.match("(width=250>)(.*?)(value=1>)")) === null || _page$match === void 0 || (_page$match = _page$match[2]) === null || _page$match === void 0 || (_page$match = _page$match.match("(<b>)(.*?)(</b>)")) === null || _page$match === void 0 ? void 0 : _page$match[2]) !== null && _page$match$2$match$ !== void 0 ? _page$match$2$match$ : "", (_page$match$2$match$2 = (_page$match2 = page.match("(value=1>)(.*?)(value=2>)")) === null || _page$match2 === void 0 || (_page$match2 = _page$match2[2]) === null || _page$match2 === void 0 || (_page$match2 = _page$match2.match("(<b>)(.*?)(</b>)")) === null || _page$match2 === void 0 ? void 0 : _page$match2[2]) !== null && _page$match$2$match$2 !== void 0 ? _page$match$2$match$2 : ""];
  (0, import_kolmafia113.print)("Barf Quests Available:", "blue");
  quests2.forEach(function(quest) {
    return (0, import_kolmafia113.print)(quest, "blue");
  });
  if (!targets.some(function(target2) {
    return page.includes(target2);
  })) {
    (0, import_kolmafia113.print)("No suitable Barf Quests available.", "red");
    return;
  }
  for (var _i = 0, _targets = targets; _i < _targets.length; _i++) {
    var target = _targets[_i];
    var _iterator = _createForOfIteratorHelper36(quests2.entries()), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var _step$value = _slicedToArray32(_step.value, 2), idx = _step$value[0], qst = _step$value[1];
        if (target === qst) {
          (0, import_kolmafia113.print)("Accepting Barf Quest: ".concat(qst), "blue");
          (0, import_kolmafia113.visitUrl)("choice.php?whichchoice=1066&pwd&option=".concat(idx + 1));
          return completeBarfQuest();
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  return;
}

// src/tasks/barfTurn.ts
var _templateObject887;
var _templateObject2191;
var _templateObject3171;
var _templateObject4154;
var _templateObject5140;
var _templateObject6129;
var _templateObject7105;
var _templateObject888;
var _templateObject978;
var _templateObject1067;
var _templateObject1157;
var _templateObject1250;
var _templateObject1348;
var _templateObject1441;
var _templateObject1539;
var _templateObject1638;
var _templateObject1738;
var _templateObject1837;
var _templateObject1937;
var _templateObject2037;
var _templateObject2193;
var _templateObject2236;
var _templateObject2335;
var _templateObject2433;
var _templateObject2533;
var _templateObject2633;
var _templateObject2731;
var _templateObject2829;
var _templateObject2926;
var _templateObject3026;
var _templateObject3173;
var _templateObject3228;
var _templateObject3327;
var _templateObject3424;
var _templateObject3524;
var _templateObject3623;
var _templateObject3723;
var _templateObject3823;
var _templateObject3923;
var _templateObject4023;
var _templateObject4155;
var _templateObject4223;
var _templateObject4323;
var _templateObject4421;
var _templateObject4521;
var _templateObject4621;
var _templateObject4721;
var _templateObject4821;
var _templateObject4920;
var _templateObject5019;
var _templateObject5141;
var _templateObject5221;
var _templateObject5321;
var _templateObject5421;
var _templateObject5520;
var _templateObject5619;
var _templateObject5718;
var _templateObject5816;
var _templateObject5916;
var _templateObject6015;
var _templateObject6130;
var _templateObject6220;
var _templateObject6318;
var _templateObject6418;
var _templateObject6515;
var _templateObject6614;
var _templateObject6714;
var _templateObject6814;
var _templateObject6914;
var _templateObject7013;
var _templateObject7116;
var _templateObject7216;
var _templateObject7315;
var _templateObject7415;
var _templateObject7514;
var _templateObject7614;
var _templateObject7713;
function _toConsumableArray48(arr) {
  return _arrayWithoutHoles48(arr) || _iterableToArray48(arr) || _unsupportedIterableToArray72(arr) || _nonIterableSpread48();
}
function _nonIterableSpread48() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray48(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles48(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray72(arr);
}
function _createForOfIteratorHelper37(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray72(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray72(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray72(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray72(o, minLen);
}
function _arrayLikeToArray72(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys20(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread20(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys20(Object(t), true).forEach(function(r2) {
      _defineProperty41(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys20(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty41(obj, key, value) {
  key = _toPropertyKey45(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey45(arg) {
  var key = _toPrimitive45(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive45(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _taggedTemplateLiteral105(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var steveAdventures = /* @__PURE__ */ new Map([[$location(_templateObject887 || (_templateObject887 = _taggedTemplateLiteral105(["The Haunted Bedroom"]))), [1, 3, 1]], [$location(_templateObject2191 || (_templateObject2191 = _taggedTemplateLiteral105(["The Haunted Nursery"]))), [1, 2, 2, 1, 1]], [$location(_templateObject3171 || (_templateObject3171 = _taggedTemplateLiteral105(["The Haunted Conservatory"]))), [1, 2, 2]], [$location(_templateObject4154 || (_templateObject4154 = _taggedTemplateLiteral105(["The Haunted Billiards Room"]))), [1, 2, 2]], [$location(_templateObject5140 || (_templateObject5140 = _taggedTemplateLiteral105(["The Haunted Wine Cellar"]))), [1, 2, 2, 3]], [$location(_templateObject6129 || (_templateObject6129 = _taggedTemplateLiteral105(["The Haunted Boiler Room"]))), [1, 2, 2]], [$location(_templateObject7105 || (_templateObject7105 = _taggedTemplateLiteral105(["The Haunted Laboratory"]))), [1, 1, 3, 1, 1]]]);
var canDuplicate = function() {
  return SourceTerminal_exports.have() && SourceTerminal_exports.duplicateUsesRemaining() > 0;
};
var digitizedEmbezzler = function() {
  return SourceTerminal_exports.have() && SourceTerminal_exports.getDigitizeMonster() === embezzler;
};
var isGhost = function() {
  return get("_voteMonster") === $monster(_templateObject888 || (_templateObject888 = _taggedTemplateLiteral105(["angry ghost"])));
};
var isMutant = function() {
  return get("_voteMonster") === $monster(_templateObject978 || (_templateObject978 = _taggedTemplateLiteral105(["terrible mutant"])));
};
var isSteve = function() {
  return get("nextSpookyravenStephenRoom") === $location(_templateObject1067 || (_templateObject1067 = _taggedTemplateLiteral105(["The Haunted Laboratory"])));
};
function wanderTask(details, spec, base) {
  return _objectSpread20({
    do: function() {
      return wanderer().getTarget(undelay(details));
    },
    choices: function() {
      return wanderer().getChoices(undelay(details));
    },
    outfit: function() {
      return freeFightOutfit(undelay(spec), {
        wanderOptions: undelay(details)
      });
    },
    spendsTurn: false,
    combat: new GarboStrategy(function() {
      return Macro2.basicCombat();
    })
  }, base);
}
function canContinue() {
  return (0, import_kolmafia114.myAdventures)() > globalOptions.saveTurns && (globalOptions.stopTurncount === null || (0, import_kolmafia114.myTurncount)() < globalOptions.stopTurncount);
}
function shouldGoUnderwater() {
  if (!sober())
    return false;
  if ((0, import_kolmafia114.myLevel)() < 11)
    return false;
  if (questStep("questS01OldGuy") === -1) {
    (0, import_kolmafia114.visitUrl)("place.php?whichplace=sea_oldman&action=oldman_oldman");
  }
  if (!get2("Adventure Underwater") && waterBreathingEquipment.every(function(item10) {
    return !have(item10) || !(0, import_kolmafia114.canEquip)(item10);
  })) {
    return false;
  }
  if (!get2("Underwater Familiar") && familiarWaterBreathingEquipment.every(function(item10) {
    return !have(item10);
  })) {
    return false;
  }
  if (have($item(_templateObject1157 || (_templateObject1157 = _taggedTemplateLiteral105(["envyfish egg"])))) || globalOptions.ascend && get("_envyfishEggUsed")) {
    return false;
  }
  if (!(0, import_kolmafia114.canAdventure)($location(_templateObject1250 || (_templateObject1250 = _taggedTemplateLiteral105(["The Briny Deeps"])))))
    return false;
  if ((0, import_kolmafia114.mallPrice)($item(_templateObject1348 || (_templateObject1348 = _taggedTemplateLiteral105(["pulled green taffy"])))) < EMBEZZLER_MULTIPLIER() * get("valueOfAdventure")) {
    return false;
  }
  if (have($effect(_templateObject1441 || (_templateObject1441 = _taggedTemplateLiteral105(["Fishy"])))))
    return true;
  if (have($item(_templateObject1539 || (_templateObject1539 = _taggedTemplateLiteral105(["fishy pipe"])))) && !get("_fishyPipeUsed")) {
    (0, import_kolmafia114.use)($item(_templateObject1638 || (_templateObject1638 = _taggedTemplateLiteral105(["fishy pipe"]))));
    return have($effect(_templateObject1738 || (_templateObject1738 = _taggedTemplateLiteral105(["Fishy"]))));
  }
  return false;
}
var TurnGenTasks = [{
  name: "Sausage",
  ready: function() {
    return (0, import_kolmafia114.myAdventures)() <= 1 + globalOptions.saveTurns;
  },
  completed: function() {
    return howManySausagesCouldIEat() === 0;
  },
  prepare: function() {
    return (0, import_kolmafia114.maximize)("MP", false);
  },
  do: function() {
    return (0, import_kolmafia114.eat)(howManySausagesCouldIEat(), $item(_templateObject1837 || (_templateObject1837 = _taggedTemplateLiteral105(["magical sausage"]))));
  },
  spendsTurn: false
}, {
  name: "Sweatpants",
  ready: function() {
    return !globalOptions.nodiet && have($item(_templateObject1937 || (_templateObject1937 = _taggedTemplateLiteral105(["designer sweatpants"])))) && (0, import_kolmafia114.myAdventures)() <= 1 + globalOptions.saveTurns;
  },
  completed: function() {
    return get("_sweatOutSomeBoozeUsed") === 3;
  },
  do: function() {
    while (get("_sweatOutSomeBoozeUsed") < 3 && get("sweat") >= 25 && (0, import_kolmafia114.myInebriety)() > 0) {
      (0, import_kolmafia114.useSkill)($skill(_templateObject2037 || (_templateObject2037 = _taggedTemplateLiteral105(["Sweat Out Some Booze"]))));
    }
    consumeDiet(computeDiet().sweatpants(), "SWEATPANTS");
  },
  spendsTurn: false
}];
function dailyDungeon(additionalReady) {
  return {
    completed: function() {
      return get("dailyDungeonDone");
    },
    ready: function() {
      return additionalReady() && garboValue($item(_templateObject2193 || (_templateObject2193 = _taggedTemplateLiteral105(["fat loot token"])))) > get("valueOfAdventure") * clamp(15 - get("_lastDailyDungeonRoom"), 0, 3);
    },
    choices: function() {
      return {
        689: 1,
        690: 2,
        691: 2,
        692: 3,
        693: 2
      };
    },
    acquire: $items(_templateObject2236 || (_templateObject2236 = _taggedTemplateLiteral105(["ring of Detect Boring Doors, eleven-foot pole, Pick-O-Matic lockpicks"]))).map(function(i) {
      return {
        item: i
      };
    }),
    do: $location(_templateObject2335 || (_templateObject2335 = _taggedTemplateLiteral105(["The Daily Dungeon"]))),
    combat: new GarboStrategy(Macro2.kill()),
    turns: function() {
      return clamp(15 - get("_lastDailyDungeonRoom"), 0, 3);
    },
    spendsTurn: true
  };
}
function vampOut(additionalReady) {
  return {
    ready: function() {
      return additionalReady() && have($item(_templateObject2433 || (_templateObject2433 = _taggedTemplateLiteral105(["plastic vampire fangs"])))) && garboValue($item(_templateObject2533 || (_templateObject2533 = _taggedTemplateLiteral105(["Interview With You (a Vampire)"])))) > get("valueOfAdventure");
    },
    completed: function() {
      return get("_interviewMasquerade");
    },
    choices: function() {
      return {
        546: 12
      };
    },
    do: function() {
      (0, import_kolmafia114.visitUrl)("place.php?whichplace=town&action=town_vampout");
      (0, import_kolmafia114.runChoice)(-1);
    },
    outfit: function() {
      return freeFightOutfit({
        equip: $items(_templateObject2633 || (_templateObject2633 = _taggedTemplateLiteral105(["plastic vampire fangs"])))
      });
    },
    spendsTurn: true,
    turns: function() {
      return get("_interviewMasquerade") ? 0 : 1;
    }
  };
}
function willDrunkAdventure() {
  return have($item(_templateObject2731 || (_templateObject2731 = _taggedTemplateLiteral105(["Drunkula's wineglass"])))) && globalOptions.ascend;
}
var NonBarfTurnTasks = [_objectSpread20(_objectSpread20({
  name: "Daily Dungeon (drunk)"
}, dailyDungeon(function() {
  return willDrunkAdventure();
})), {}, {
  outfit: function() {
    return freeFightOutfit({
      offhand: $item(_templateObject2829 || (_templateObject2829 = _taggedTemplateLiteral105(["Drunkula's wineglass"]))),
      equip: $items(_templateObject2926 || (_templateObject2926 = _taggedTemplateLiteral105(["ring of Detect Boring Doors"])))
    });
  },
  sobriety: "drunk"
}), _objectSpread20(_objectSpread20({
  name: "Daily Dungeon (sober)"
}, dailyDungeon(function() {
  return !willDrunkAdventure();
})), {}, {
  outfit: function() {
    return freeFightOutfit({
      equip: $items(_templateObject3026 || (_templateObject3026 = _taggedTemplateLiteral105(["ring of Detect Boring Doors"])))
    });
  },
  sobriety: "sober"
}), _objectSpread20(_objectSpread20({
  name: "Vamp Out (drunk)"
}, vampOut(function() {
  return willDrunkAdventure();
})), {}, {
  sobriety: "drunk"
}), _objectSpread20(_objectSpread20({
  name: "Vamp Out (sober)"
}, vampOut(function() {
  return !willDrunkAdventure();
})), {}, {
  sobriety: "sober"
}), {
  name: "Map for Pills",
  completed: function() {
    return (0, import_kolmafia114.availableAmount)($item(_templateObject3173 || (_templateObject3173 = _taggedTemplateLiteral105(["Map to Safety Shelter Grimace Prime"])))) === 0;
  },
  choices: function() {
    return {
      536: (0, import_kolmafia114.availableAmount)($item(_templateObject3228 || (_templateObject3228 = _taggedTemplateLiteral105(["distention pill"])))) < (0, import_kolmafia114.availableAmount)($item(_templateObject3327 || (_templateObject3327 = _taggedTemplateLiteral105(["synthetic dog hair pill"])))) + (0, import_kolmafia114.availableAmount)($item(_templateObject3424 || (_templateObject3424 = _taggedTemplateLiteral105(["Map to Safety Shelter Grimace Prime"])))) ? 1 : 2
    };
  },
  do: function() {
    ensureEffect($effect(_templateObject3524 || (_templateObject3524 = _taggedTemplateLiteral105(["Transpondent"]))));
    (0, import_kolmafia114.use)($item(_templateObject3623 || (_templateObject3623 = _taggedTemplateLiteral105(["Map to Safety Shelter Grimace Prime"]))));
    return true;
  },
  spendsTurn: true,
  sobriety: "drunk",
  turns: function() {
    return (0, import_kolmafia114.availableAmount)($item(_templateObject3723 || (_templateObject3723 = _taggedTemplateLiteral105(["Map to Safety Shelter Grimace Prime"]))));
  }
}];
var BarfTurnTasks = [{
  name: "Latte",
  completed: function() {
    return latteFilled();
  },
  do: function() {
    return tryFillLatte();
  },
  spendsTurn: false
}, {
  name: "Lights Out",
  ready: function() {
    var _get3;
    return (0, import_kolmafia114.canAdventure)((_get3 = get("nextSpookyravenStephenRoom")) !== null && _get3 !== void 0 ? _get3 : $location(_templateObject3823 || (_templateObject3823 = _taggedTemplateLiteral105(["none"])))) && get("nextSpookyravenStephenRoom") !== get("ghostLocation") && (0, import_kolmafia114.totalTurnsPlayed)() % 37 === 0;
  },
  completed: function() {
    return (0, import_kolmafia114.totalTurnsPlayed)() === get("lastLightsOutTurn");
  },
  do: function() {
    var steveRoom = get("nextSpookyravenStephenRoom");
    if (steveRoom && (0, import_kolmafia114.canAdventure)(steveRoom)) {
      var plan = steveAdventures.get(steveRoom);
      if (plan) {
        (0, import_kolmafia114.visitUrl)((0, import_kolmafia114.toUrl)(steveRoom));
        var _iterator = _createForOfIteratorHelper37(plan), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var choiceValue = _step.value;
            (0, import_kolmafia114.runChoice)(choiceValue);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    }
  },
  outfit: function() {
    return embezzlerOutfit(sober() ? {} : {
      offhand: $item(_templateObject3923 || (_templateObject3923 = _taggedTemplateLiteral105(["Drunkula's wineglass"])))
    });
  },
  spendsTurn: isSteve,
  combat: new GarboStrategy(function() {
    return Macro2.if_($monster(_templateObject4023 || (_templateObject4023 = _taggedTemplateLiteral105(["Stephen Spookyraven"]))), Macro2.basicCombat()).abortWithMsg("Expected to fight Stephen Spookyraven, but didn't!");
  })
}, {
  name: "Proton Ghost",
  ready: function() {
    return have($item(_templateObject4155 || (_templateObject4155 = _taggedTemplateLiteral105(["protonic accelerator pack"])))) && !!get("ghostLocation");
  },
  completed: function() {
    return get("questPAGhost") === "unstarted";
  },
  do: function() {
    return get("ghostLocation");
  },
  outfit: function() {
    return freeFightOutfit({
      modifier: get("ghostLocation") === $location(_templateObject4223 || (_templateObject4223 = _taggedTemplateLiteral105(["The Icy Peak"]))) ? ["Cold Resistance 5 min"] : [],
      back: $item(_templateObject4323 || (_templateObject4323 = _taggedTemplateLiteral105(["protonic accelerator pack"])))
    });
  },
  combat: new GarboStrategy(function() {
    return Macro2.ghostBustin();
  }),
  spendsTurn: false,
  // Ghost fights are currently hard
  // and they resist physical attacks!
  sobriety: "sober"
}, wanderTask(function() {
  return {
    wanderer: "wanderer",
    drunkSafe: !isGhost()
  };
}, function() {
  return {
    equip: [$item(_templateObject4421 || (_templateObject4421 = _taggedTemplateLiteral105(['"I Voted!" sticker'])))].concat(_toConsumableArray48(!sober() && !isGhost() ? $items(_templateObject4521 || (_templateObject4521 = _taggedTemplateLiteral105(["Drunkula's wineglass"]))) : []), _toConsumableArray48(!have($item(_templateObject4621 || (_templateObject4621 = _taggedTemplateLiteral105(["mutant crown"])))) && isMutant() ? $items(_templateObject4721 || (_templateObject4721 = _taggedTemplateLiteral105(["mutant arm, mutant legs"]))).filter(function(i) {
      return have(i);
    }) : []))
  };
}, {
  name: "Vote Wanderer",
  ready: function() {
    return have($item(_templateObject4821 || (_templateObject4821 = _taggedTemplateLiteral105(['"I Voted!" sticker'])))) && (0, import_kolmafia114.totalTurnsPlayed)() % 11 === 1 && get("_voteFreeFights") < 3;
  },
  completed: function() {
    return get("lastVoteMonsterTurn") >= (0, import_kolmafia114.totalTurnsPlayed)();
  },
  sobriety: function() {
    return isGhost() ? "sober" : void 0;
  }
}), {
  name: "Thesis",
  ready: function() {
    return have($familiar(_templateObject4920 || (_templateObject4920 = _taggedTemplateLiteral105(["Pocket Professor"])))) && (0, import_kolmafia114.myAdventures)() === 1 + globalOptions.saveTurns && $familiar(_templateObject5019 || (_templateObject5019 = _taggedTemplateLiteral105(["Pocket Professor"]))).experience >= 400;
  },
  completed: function() {
    return get("_thesisDelivered");
  },
  do: function() {
    return deliverThesisIfAble();
  },
  sobriety: "sober",
  spendsTurn: true
}, {
  name: "Digitize Wanderer",
  completed: function() {
    return counter_exports.get("Digitize Monster") > 0;
  },
  acquire: function() {
    return SourceTerminal_exports.getDigitizeMonster() === embezzler && shouldGoUnderwater() ? [{
      item: $item(_templateObject5141 || (_templateObject5141 = _taggedTemplateLiteral105(["pulled green taffy"])))
    }] : [];
  },
  outfit: function() {
    return digitizedEmbezzler() ? embezzlerOutfit({}, wanderer().getTarget({
      wanderer: "wanderer",
      allowEquipment: false
    })) : freeFightOutfit();
  },
  do: function() {
    return shouldGoUnderwater() ? $location(_templateObject5221 || (_templateObject5221 = _taggedTemplateLiteral105(["The Briny Deeps"]))) : wanderer().getTarget({
      wanderer: "wanderer",
      allowEquipment: false
    });
  },
  choices: shouldGoUnderwater() ? {} : wanderer().getChoices({
    wanderer: "wanderer",
    allowEquipment: false
  }),
  combat: new GarboStrategy(function() {
    return Macro2.externalIf(shouldGoUnderwater(), Macro2.item($item(_templateObject5321 || (_templateObject5321 = _taggedTemplateLiteral105(["pulled green taffy"]))))).meatKill();
  }, Macro2.if_("(monsterid ".concat(embezzler.id, ") && !gotjump && !(pastround 2)"), Macro2.externalIf(shouldGoUnderwater(), Macro2.item($item(_templateObject5421 || (_templateObject5421 = _taggedTemplateLiteral105(["pulled green taffy"]))))).meatKill()).abortWithMsg("Expected a digitized ".concat(SourceTerminal_exports.getDigitizeMonster(), ", but encountered something else."))),
  spendsTurn: function() {
    var _SourceTerminal$getDi;
    return !((_SourceTerminal$getDi = SourceTerminal_exports.getDigitizeMonster()) !== null && _SourceTerminal$getDi !== void 0 && _SourceTerminal$getDi.attributes.includes("FREE"));
  }
}, wanderTask("wanderer", {
  offhand: $item(_templateObject5520 || (_templateObject5520 = _taggedTemplateLiteral105(["Kramco Sausage-o-Matic\u2122"])))
}, {
  name: "Guaranteed Kramco",
  ready: function() {
    return romanticMonsterImpossible();
  },
  completed: function() {
    return !kramcoGuaranteed();
  }
}), wanderTask("wanderer", {
  offhand: $item(_templateObject5619 || (_templateObject5619 = _taggedTemplateLiteral105(["cursed magnifying glass"])))
}, {
  name: "Void Monster",
  ready: function() {
    return have($item(_templateObject5718 || (_templateObject5718 = _taggedTemplateLiteral105(["cursed magnifying glass"])))) && get("_voidFreeFights") < 5;
  },
  completed: function() {
    return get("cursedMagnifyingGlassCount") !== 13;
  }
}), {
  name: "Envyfish Egg",
  ready: function() {
    return have($item(_templateObject5816 || (_templateObject5816 = _taggedTemplateLiteral105(["envyfish egg"])))) && get("envyfishMonster") === embezzler;
  },
  completed: function() {
    return get("_envyfishEggUsed");
  },
  do: function() {
    return (0, import_kolmafia114.use)($item(_templateObject5916 || (_templateObject5916 = _taggedTemplateLiteral105(["envyfish egg"]))));
  },
  spendsTurn: true,
  outfit: embezzlerOutfit,
  combat: new GarboStrategy(function() {
    return Macro2.embezzler();
  })
}, wanderTask("yellow ray", {}, {
  name: "Cheese Wizard Fondeluge",
  ready: function() {
    return have($skill(_templateObject6015 || (_templateObject6015 = _taggedTemplateLiteral105(["Fondeluge"])))) && romanticMonsterImpossible();
  },
  completed: function() {
    return have($effect(_templateObject6130 || (_templateObject6130 = _taggedTemplateLiteral105(["Everything Looks Yellow"]))));
  },
  combat: new GarboStrategy(function() {
    return Macro2.if_(embezzler, Macro2.meatKill()).familiarActions().externalIf(canDuplicate(), Macro2.trySkill($skill(_templateObject6220 || (_templateObject6220 = _taggedTemplateLiteral105(["Duplicate"]))))).skill($skill(_templateObject6318 || (_templateObject6318 = _taggedTemplateLiteral105(["Fondeluge"]))));
  }),
  duplicate: true,
  sobriety: "sober"
}), wanderTask("yellow ray", {
  shirt: $items(_templateObject6418 || (_templateObject6418 = _taggedTemplateLiteral105(["Jurassic Parka"]))),
  modes: {
    parka: "dilophosaur"
  }
}, {
  name: "Spit Acid",
  ready: function() {
    return have($item(_templateObject6515 || (_templateObject6515 = _taggedTemplateLiteral105(["Jurassic Parka"])))) && romanticMonsterImpossible();
  },
  completed: function() {
    return have($effect(_templateObject6614 || (_templateObject6614 = _taggedTemplateLiteral105(["Everything Looks Yellow"]))));
  },
  combat: new GarboStrategy(function() {
    return Macro2.if_(embezzler, Macro2.meatKill()).familiarActions().externalIf(canDuplicate(), Macro2.trySkill($skill(_templateObject6714 || (_templateObject6714 = _taggedTemplateLiteral105(["Duplicate"]))))).skill($skill(_templateObject6814 || (_templateObject6814 = _taggedTemplateLiteral105(["Spit jurassic acid"]))));
  }),
  sobriety: "sober",
  duplicate: true
}), wanderTask("freefight", {}, {
  name: "Pig Skinner Free-For-All",
  ready: function() {
    return have($skill(_templateObject6914 || (_templateObject6914 = _taggedTemplateLiteral105(["Free-For-All"])))) && romanticMonsterImpossible();
  },
  completed: function() {
    return have($effect(_templateObject7013 || (_templateObject7013 = _taggedTemplateLiteral105(["Everything Looks Red"]))));
  },
  combat: new GarboStrategy(function() {
    return Macro2.if_(embezzler, Macro2.meatKill()).familiarActions().externalIf(canDuplicate(), Macro2.trySkill($skill(_templateObject7116 || (_templateObject7116 = _taggedTemplateLiteral105(["Duplicate"]))))).skill($skill(_templateObject7216 || (_templateObject7216 = _taggedTemplateLiteral105(["Free-For-All"]))));
  }),
  duplicate: true
}), wanderTask("yellow ray", {}, {
  name: "Shocking Lick",
  ready: function() {
    return romanticMonsterImpossible();
  },
  completed: function() {
    return get("shockingLickCharges") === 0;
  },
  combat: new GarboStrategy(function() {
    return Macro2.if_(embezzler, Macro2.meatKill()).familiarActions().externalIf(canDuplicate(), Macro2.trySkill($skill(_templateObject7315 || (_templateObject7315 = _taggedTemplateLiteral105(["Duplicate"]))))).skill($skill(_templateObject7415 || (_templateObject7415 = _taggedTemplateLiteral105(["Shocking Lick"]))));
  }),
  duplicate: true,
  sobriety: "sober"
})];
function nonBarfTurns() {
  var sobriety = sober() ? "sober" : "drunk";
  return sum(NonBarfTurnTasks.filter(function(t) {
    var _undelay;
    return ((_undelay = undelay(t.sobriety)) !== null && _undelay !== void 0 ? _undelay : sobriety) === sobriety;
  }), function(t) {
    return undelay(t.turns);
  });
}
var TurnGenQuest = {
  name: "Turn Gen",
  tasks: TurnGenTasks
};
var WandererQuest = {
  name: "Wanderers",
  tasks: BarfTurnTasks,
  completed: function() {
    return !canContinue();
  }
};
var NonBarfTurnQuest = {
  name: "Non Barf Turn",
  tasks: NonBarfTurnTasks,
  completed: function() {
    return !canContinue() || clamp((0, import_kolmafia114.myAdventures)() - digitizedMonstersRemaining(), 1, (0, import_kolmafia114.myAdventures)()) >= nonBarfTurns();
  }
};
var BarfTurnQuest = {
  name: "Barf Turn",
  tasks: [{
    name: "Barf",
    completed: function() {
      return (0, import_kolmafia114.myAdventures)() === 0;
    },
    outfit: function() {
      var lubing = get("dinseyRollercoasterNext") && have($item(_templateObject7514 || (_templateObject7514 = _taggedTemplateLiteral105(["lube-shoes"]))));
      return barfOutfit(lubing ? {
        equip: $items(_templateObject7614 || (_templateObject7614 = _taggedTemplateLiteral105(["lube-shoes"])))
      } : {});
    },
    do: $location(_templateObject7713 || (_templateObject7713 = _taggedTemplateLiteral105(["Barf Mountain"]))),
    combat: new GarboStrategy(function() {
      return Macro2.meatKill();
    }, function() {
      return Macro2.if_("(monsterid ".concat(embezzler.id, ") && !gotjump && !(pastround 2)"), Macro2.meatKill()).abort();
    }),
    post: function() {
      return completeBarfQuest();
    },
    spendsTurn: true
  }],
  completed: function() {
    return !canContinue();
  }
};
var BarfTurnQuests = [TurnGenQuest, WandererQuest, NonBarfTurnQuest, BarfTurnQuest];

// src/tasks/daily.ts
var import_kolmafia115 = require("kolmafia");
init_dist();
var _templateObject889;
var _templateObject2194;
var _templateObject3174;
var _templateObject4156;
var _templateObject5142;
var _templateObject6131;
var _templateObject7106;
var _templateObject890;
var _templateObject979;
var _templateObject1068;
var _templateObject1158;
var _templateObject1251;
var _templateObject1349;
var _templateObject1446;
var _templateObject1540;
var _templateObject1639;
var _templateObject1739;
var _templateObject1838;
var _templateObject1938;
var _templateObject2038;
var _templateObject2195;
var _templateObject2237;
var _templateObject2336;
var _templateObject2434;
var _templateObject2534;
var _templateObject2634;
var _templateObject2733;
var _templateObject2830;
var _templateObject2927;
var _templateObject3027;
var _templateObject3175;
var _templateObject3229;
var _templateObject3328;
var _templateObject3425;
var _templateObject3525;
var _templateObject3624;
var _templateObject3724;
var _templateObject3824;
var _templateObject3924;
var _templateObject4024;
var _templateObject4157;
var _templateObject4224;
var _templateObject4324;
var _templateObject4423;
var _templateObject4523;
var _templateObject4623;
var _templateObject4723;
var _templateObject4823;
var _templateObject4921;
var _templateObject5020;
var _templateObject5143;
var _templateObject5222;
var _templateObject5322;
var _templateObject5422;
var _templateObject5521;
var _templateObject5620;
var _templateObject5719;
var _templateObject5817;
var _templateObject5917;
var _templateObject6016;
var _templateObject6132;
var _templateObject6221;
var _templateObject6319;
var _templateObject6419;
var _templateObject6516;
var _templateObject6615;
var _templateObject6715;
var _templateObject6815;
var _templateObject6915;
var _templateObject7014;
var _templateObject7117;
var _templateObject7217;
var _templateObject7316;
var _templateObject7416;
var _templateObject7515;
var _templateObject7615;
var _templateObject7714;
var _templateObject7812;
var _templateObject7912;
var _templateObject8011;
var _templateObject8115;
var _templateObject8215;
var _templateObject8315;
var _templateObject8414;
var _templateObject8514;
var _templateObject8613;
var _templateObject8711;
var _templateObject8810;
var _templateObject897;
var _templateObject907;
var _templateObject9115;
var _templateObject9215;
var _templateObject9314;
var _templateObject9414;
var _templateObject9513;
var _templateObject9611;
var _templateObject9710;
var _templateObject987;
var _templateObject997;
var _templateObject1007;
var _templateObject10115;
var _templateObject10215;
var _templateObject10314;
var _templateObject10413;
function _toConsumableArray49(arr) {
  return _arrayWithoutHoles49(arr) || _iterableToArray49(arr) || _unsupportedIterableToArray73(arr) || _nonIterableSpread49();
}
function _nonIterableSpread49() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray73(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray73(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray73(o, minLen);
}
function _iterableToArray49(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles49(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray73(arr);
}
function _arrayLikeToArray73(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral106(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var closetItems = $items(_templateObject889 || (_templateObject889 = _taggedTemplateLiteral106(["4-d camera, sand dollar, unfinished ice sculpture"])));
var retrieveItems = $items(_templateObject2194 || (_templateObject2194 = _taggedTemplateLiteral106(["Half a Purse, seal tooth, The Jokester's gun"])));
var latteRefreshed = false;
var snojoConfigured = false;
function voterSetup() {
  var initPriority = /* @__PURE__ */ new Map([["Meat Drop: +30", 0.3 * ((baseMeat + 750) * embezzlerCount() + baseMeat * (estimatedGarboTurns() - embezzlerCount()))], ["Item Drop: +15", 0.15 * (4 * 100 * 0.3 * embezzlerCount() + 3 * 200 * 0.15 * (estimatedGarboTurns() - embezzlerCount()))], ["Adventures: +1", globalOptions.ascend ? 0 : get("valueOfAdventure")], ["Familiar Experience: +2", 8], ["Monster Level: +10", 5], ["".concat((0, import_kolmafia115.myPrimestat)(), " Percent: +25"), 3], ["Experience (".concat((0, import_kolmafia115.myPrimestat)(), "): +4"), 2], ["Meat Drop: -30", -2], ["Item Drop: -15", -2], ["Familiar Experience: -2", -2]]);
  if (!get("voteAlways") && !get("_voteToday")) {
    var availableInitiatives = new Map(Object.keys((0, import_kolmafia115.votingBoothInitiatives)((0, import_kolmafia115.myClass)(), (0, import_kolmafia115.myPath)(), (0, import_kolmafia115.myDaycount)())).map(function(init2) {
      var _initPriority$get;
      var val = (_initPriority$get = initPriority.get(init2)) !== null && _initPriority$get !== void 0 ? _initPriority$get : 0;
      return [init2, val];
    }));
    var initiativeValue = 2 * Math.max.apply(Math, _toConsumableArray49(availableInitiatives.values()));
    var fightValue = 3 * globalOptions.prefs.valueOfFreeFight;
    var ballotValue = initiativeValue + fightValue;
    if (ballotValue > (0, import_kolmafia115.mallPrice)($item(_templateObject3174 || (_templateObject3174 = _taggedTemplateLiteral106(["absentee voter ballot"])))) && acquire(1, $item(_templateObject4156 || (_templateObject4156 = _taggedTemplateLiteral106(["absentee voter ballot"]))), ballotValue, false)) {
      (0, import_kolmafia115.visitUrl)("inv_use.php?which=3&whichitem=9991&pwd=".concat((0, import_kolmafia115.myHash)()));
    } else
      return;
  }
  var voterValueTable = [{
    monster: $monster(_templateObject5142 || (_templateObject5142 = _taggedTemplateLiteral106(["terrible mutant"]))),
    value: garboValue($item(_templateObject6131 || (_templateObject6131 = _taggedTemplateLiteral106(["glob of undifferentiated tissue"])))) + 10
  }, {
    monster: $monster(_templateObject7106 || (_templateObject7106 = _taggedTemplateLiteral106(["angry ghost"]))),
    value: garboValue($item(_templateObject890 || (_templateObject890 = _taggedTemplateLiteral106(["ghostly ectoplasm"])))) * 1.11
  }, {
    monster: $monster(_templateObject979 || (_templateObject979 = _taggedTemplateLiteral106(["government bureaucrat"]))),
    value: garboValue($item(_templateObject1068 || (_templateObject1068 = _taggedTemplateLiteral106(["absentee voter ballot"])))) * 0.05 + 75 * 0.25 + 50
  }, {
    monster: $monster(_templateObject1158 || (_templateObject1158 = _taggedTemplateLiteral106(["annoyed snake"]))),
    value: (0, import_kolmafia115.gamedayToInt)()
  }, {
    monster: $monster(_templateObject1251 || (_templateObject1251 = _taggedTemplateLiteral106(["slime blob"]))),
    value: 95 - (0, import_kolmafia115.gamedayToInt)()
  }];
  (0, import_kolmafia115.visitUrl)("place.php?whichplace=town_right&action=townright_vote");
  var votingMonsterPriority = voterValueTable.sort(function(a, b) {
    return b.value - a.value;
  }).map(function(element) {
    return element.monster.name;
  });
  var monsterVote = votingMonsterPriority.indexOf(get("_voteMonster1")) < votingMonsterPriority.indexOf(get("_voteMonster2")) ? 1 : 2;
  var voteLocalPriorityArr = [1, 2, 3, 4].map(function(index) {
    var _initPriority$get2;
    return {
      urlString: index - 1,
      value: (_initPriority$get2 = initPriority.get(get("_voteLocal".concat(index)))) !== null && _initPriority$get2 !== void 0 ? _initPriority$get2 : get("_voteLocal".concat(index)).includes("-") ? -1 : 1
    };
  });
  var init = maxBy(voteLocalPriorityArr, "value").urlString;
  (0, import_kolmafia115.visitUrl)("choice.php?option=1&whichchoice=1331&g=".concat(monsterVote, "&local[]=").concat(init, "&local[]=").concat(init));
}
function pantogram2() {
  if (!Pantogram_exports.have() || Pantogram_exports.havePants())
    return;
  var pantogramValue;
  if (have($item(_templateObject1349 || (_templateObject1349 = _taggedTemplateLiteral106(["repaid diaper"])))) && have($familiar(_templateObject1446 || (_templateObject1446 = _taggedTemplateLiteral106(["Robortender"]))))) {
    var expectedBarfTurns = globalOptions.nobarf ? 0 : estimatedGarboTurns() - digitizedMonstersRemaining() - embezzlerCount();
    pantogramValue = 100 * expectedBarfTurns;
  } else {
    var lepMult = findLeprechaunMultiplier(meatFamiliar());
    var lepBonus = 2 * lepMult + Math.sqrt(lepMult);
    var totalPantsValue = function(pants2) {
      return get2("Meat Drop", pants2) + get2("Familiar Weight", pants2) * lepBonus;
    };
    var alternativePants2 = import_kolmafia115.Item.all().filter(function(item10) {
      return have(item10) && (0, import_kolmafia115.toSlot)(item10) === $slot(_templateObject1540 || (_templateObject1540 = _taggedTemplateLiteral106(["pants"])));
    }).map(function(pants2) {
      return totalPantsValue(pants2);
    });
    var bestPantsValue = Math.max.apply(Math, [0].concat(_toConsumableArray49(alternativePants2)));
    pantogramValue = (100 + 0.6 * baseMeat - bestPantsValue * baseMeat / 100) * estimatedGarboTurns();
  }
  var cloverPrice = Math.min.apply(Math, _toConsumableArray49($items(_templateObject1639 || (_templateObject1639 = _taggedTemplateLiteral106(["ten-leaf clover, disassembled clover"]))).map(function(item10) {
    return (0, import_kolmafia115.mallPrice)(item10);
  })));
  if (cloverPrice + (0, import_kolmafia115.mallPrice)($item(_templateObject1739 || (_templateObject1739 = _taggedTemplateLiteral106(["porquoise"])))) > pantogramValue) {
    return;
  }
  acquire(1, $item(_templateObject1838 || (_templateObject1838 = _taggedTemplateLiteral106(["porquoise"]))), pantogramValue - cloverPrice, false);
  if (!have($item(_templateObject1938 || (_templateObject1938 = _taggedTemplateLiteral106(["porquoise"])))))
    return;
  (0, import_kolmafia115.retrieveItem)($item(_templateObject2038 || (_templateObject2038 = _taggedTemplateLiteral106(["ten-leaf clover"]))));
  (0, import_kolmafia115.retrieveItem)($item(_templateObject2195 || (_templateObject2195 = _taggedTemplateLiteral106(["bubblin' crude"]))));
  Pantogram_exports.makePants((0, import_kolmafia115.myPrimestat)().toString(), "Sleaze Resistance: 2", "MP Regen Max: 15", "Drops Items: true", "Meat Drop: 60");
}
function nepQuest() {
  if (!(get("neverendingPartyAlways") || get("_neverendingPartyToday")))
    return;
  if (get("_questPartyFair") === "unstarted") {
    (0, import_kolmafia115.visitUrl)((0, import_kolmafia115.toUrl)($location(_templateObject2237 || (_templateObject2237 = _taggedTemplateLiteral106(["The Neverending Party"])))));
    if (["food", "booze", "trash", "dj"].includes(get("_questPartyFairQuest"))) {
      (0, import_kolmafia115.runChoice)(1);
    } else {
      (0, import_kolmafia115.runChoice)(2);
    }
  }
  if (["food", "booze"].includes(get("_questPartyFairQuest"))) {
    (0, import_kolmafia115.print)("Gerald/ine quest!", HIGHLIGHT);
    globalOptions.clarasBellClaimed = true;
  }
}
function configureSnojo() {
  if (snojoConfigured)
    return;
  var options = /* @__PURE__ */ new Map([[10 / 7 * garboValue($item(_templateObject2336 || (_templateObject2336 = _taggedTemplateLiteral106(["ancient medicinal herbs"])))), 1], [10 / 7 * garboValue($item(_templateObject2434 || (_templateObject2434 = _taggedTemplateLiteral106(["ice rice"])))), 2], [10 / 7 * garboValue($item(_templateObject2534 || (_templateObject2534 = _taggedTemplateLiteral106(["iced plum wine"])))), 3]]);
  if (!globalOptions.ascend) {
    if (get("snojoMuscleWins") < 50) {
      options.set((7 * garboValue($item(_templateObject2634 || (_templateObject2634 = _taggedTemplateLiteral106(["ancient medicinal herbs"])))) + garboValue($item(_templateObject2733 || (_templateObject2733 = _taggedTemplateLiteral106(["training scroll:  Shattering Punch"]))))) / 5, 1);
    }
    if (get("snojoMysticalityWins") < 50) {
      options.set((7 * garboValue($item(_templateObject2830 || (_templateObject2830 = _taggedTemplateLiteral106(["ice rice"])))) + garboValue($item(_templateObject2927 || (_templateObject2927 = _taggedTemplateLiteral106(["training scroll:  Snokebomb"]))))) / 5, 2);
    }
    if (get("snojoMoxieWins") < 50) {
      options.set((7 * garboValue($item(_templateObject3027 || (_templateObject3027 = _taggedTemplateLiteral106(["iced plum wine"])))) + garboValue($item(_templateObject3175 || (_templateObject3175 = _taggedTemplateLiteral106(["training scroll:  Shivering Monkey Technique"]))))) / 5, 3);
    }
  }
  var bestProfit = Math.max.apply(Math, _toConsumableArray49(options.keys()));
  var option = options.get(bestProfit);
  if (option) {
    (0, import_kolmafia115.visitUrl)("place.php?whichplace=snojo&action=snojo_controller");
    (0, import_kolmafia115.runChoice)(option);
    snojoConfigured = true;
  }
}
var DailyTasks = [
  {
    name: "Chibi Buddy",
    ready: function() {
      return have($item(_templateObject3229 || (_templateObject3229 = _taggedTemplateLiteral106(["ChibiBuddy\u2122 (on)"])))) || have($item(_templateObject3328 || (_templateObject3328 = _taggedTemplateLiteral106(["ChibiBuddy\u2122 (off)"]))));
    },
    completed: function() {
      return get("_chibiChanged", true);
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("chibi chat");
    },
    spendsTurn: false
  },
  {
    name: "Refresh Latte",
    ready: function() {
      return have($item(_templateObject3425 || (_templateObject3425 = _taggedTemplateLiteral106(["latte lovers member's mug"]))));
    },
    completed: function() {
      return latteRefreshed;
    },
    do: function() {
      (0, import_kolmafia115.visitUrl)("main.php?latte=1", false);
      latteRefreshed = true;
    },
    spendsTurn: false
  },
  {
    name: "Unlock Cemetery",
    ready: function() {
      return (0, import_kolmafia115.guildStoreAvailable)();
    },
    completed: function() {
      return (0, import_kolmafia115.canAdventure)($location(_templateObject3525 || (_templateObject3525 = _taggedTemplateLiteral106(["The Unquiet Garves"]))));
    },
    do: function() {
      return (0, import_kolmafia115.visitUrl)("guild.php?place=scg");
    },
    limit: {
      skip: 3
    },
    // Sometimes need to cycle through some dialogue
    spendsTurn: false
  },
  {
    name: "Unlock Woods",
    ready: function() {
      return (0, import_kolmafia115.guildStoreAvailable)() && have($item(_templateObject3624 || (_templateObject3624 = _taggedTemplateLiteral106(["bitchin' meatcar"]))));
    },
    completed: function() {
      return (0, import_kolmafia115.canAdventure)($location(_templateObject3724 || (_templateObject3724 = _taggedTemplateLiteral106(["The Spooky Forest"]))));
    },
    do: function() {
      (0, import_kolmafia115.visitUrl)("guild.php?place=paco");
      if ((0, import_kolmafia115.handlingChoice)())
        (0, import_kolmafia115.runChoice)(1);
      (0, import_kolmafia115.visitUrl)("woods.php");
    },
    limit: {
      skip: 3
    },
    // Sometimes need to cycle through some dialogue
    spendsTurn: false
  },
  {
    name: "Check Florist",
    ready: function() {
      return get("ownsFloristFriar");
    },
    completed: import_kolmafia115.floristAvailable,
    after: ["Daily/Unlock Woods"],
    do: function() {
      (0, import_kolmafia115.visitUrl)("woods.php");
      (0, import_kolmafia115.visitUrl)("place.php?whichplace=forestvillage&action=fv_friar");
      (0, import_kolmafia115.runChoice)(4);
    },
    spendsTurn: false
  },
  {
    name: "Continuum Transfunctioner",
    ready: function() {
      return (0, import_kolmafia115.canAdventure)($location(_templateObject3824 || (_templateObject3824 = _taggedTemplateLiteral106(["The Spooky Forest"]))));
    },
    completed: function() {
      return have($item(_templateObject3924 || (_templateObject3924 = _taggedTemplateLiteral106(["continuum transfunctioner"]))));
    },
    after: ["Daily/Unlock Woods"],
    do: function() {
      (0, import_kolmafia115.visitUrl)("woods.php");
      (0, import_kolmafia115.visitUrl)("place.php?whichplace=forestvillage&action=fv_mystic");
      (0, import_kolmafia115.runChoice)(1);
      (0, import_kolmafia115.runChoice)(1);
      (0, import_kolmafia115.runChoice)(1);
    },
    spendsTurn: false
  },
  {
    name: "Free Goofballs",
    ready: function() {
      return (0, import_kolmafia115.canAdventure)($location(_templateObject4024 || (_templateObject4024 = _taggedTemplateLiteral106(["The Spooky Forest"])))) && get("questL03Rat") !== "unstarted";
    },
    completed: function() {
      return get("lastGoofballBuy") === (0, import_kolmafia115.myAscensions)();
    },
    after: ["Daily/Unlock Woods"],
    do: function() {
      if ((0, import_kolmafia115.itemAmount)($item(_templateObject4157 || (_templateObject4157 = _taggedTemplateLiteral106(["gloomy black mushroom"])))) > 0) {
        (0, import_kolmafia115.putCloset)((0, import_kolmafia115.itemAmount)($item(_templateObject4224 || (_templateObject4224 = _taggedTemplateLiteral106(["gloomy black mushroom"])))), $item(_templateObject4324 || (_templateObject4324 = _taggedTemplateLiteral106(["gloomy black mushroom"]))));
      }
      (0, import_kolmafia115.visitUrl)("woods.php");
      (0, import_kolmafia115.visitUrl)("tavern.php?action=buygoofballs");
    },
    spendsTurn: false
  },
  {
    name: "Configure I Voted! Sticker",
    completed: function() {
      return have($item(_templateObject4423 || (_templateObject4423 = _taggedTemplateLiteral106(['"I Voted!" sticker']))));
    },
    do: voterSetup,
    spendsTurn: false
  },
  {
    name: "Configure Pantogram",
    ready: function() {
      return Pantogram_exports.have();
    },
    completed: function() {
      return Pantogram_exports.havePants();
    },
    do: pantogram2,
    spendsTurn: false
  },
  {
    name: "Configure Fourth of May Cosplay Saber",
    ready: function() {
      return have($item(_templateObject4523 || (_templateObject4523 = _taggedTemplateLiteral106(["Fourth of May Cosplay Saber"]))));
    },
    completed: function() {
      return get("_saberMod") !== 0;
    },
    do: function() {
      (0, import_kolmafia115.visitUrl)("main.php?action=may4");
      (0, import_kolmafia115.runChoice)(4);
    },
    spendsTurn: false
  },
  {
    name: "Bastille Battalion",
    ready: function() {
      return have($item(_templateObject4623 || (_templateObject4623 = _taggedTemplateLiteral106(["Bastille Battalion control rig"]))));
    },
    completed: function() {
      return get("_bastilleGames") !== 0;
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("bastille myst brutalist gesture");
    },
    spendsTurn: false
  },
  {
    name: "11th Precinct",
    ready: function() {
      return get("hasDetectiveSchool");
    },
    completed: function() {
      return get("_detectiveCasesCompleted") >= 3;
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("Detective Solver.ash");
    },
    spendsTurn: false
  },
  {
    name: "Getaway Campsite Buffs",
    ready: function() {
      return get("getawayCampsiteUnlocked");
    },
    completed: function() {
      return get("_campAwayCloudBuffs") + get("_campAwaySmileBuffs") === 4;
    },
    do: function() {
      return (0, import_kolmafia115.visitUrl)("place.php?whichplace=campaway&action=campaway_sky");
    },
    limit: {
      skip: 4
    },
    spendsTurn: false
  },
  {
    name: "Verify Horsery",
    completed: function() {
      return get("horseryAvailable");
    },
    do: function() {
      (0, import_kolmafia115.visitUrl)("place.php?whichplace=town_right");
    },
    spendsTurn: false
  },
  {
    name: "Prepare Horsery",
    after: ["Verify Horsery"],
    ready: function() {
      return get("horseryAvailable");
    },
    completed: function() {
      return get("_horsery") === "dark horse";
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("horsery dark");
    },
    spendsTurn: false
  },
  {
    name: "Beach Comb One-Day",
    ready: function() {
      return have($item(_templateObject4723 || (_templateObject4723 = _taggedTemplateLiteral106(["piece of driftwood"])))) && !have($item(_templateObject4823 || (_templateObject4823 = _taggedTemplateLiteral106(["Beach Comb"]))));
    },
    completed: function() {
      return have($item(_templateObject4921 || (_templateObject4921 = _taggedTemplateLiteral106(["driftwood beach comb"]))));
    },
    do: function() {
      return (0, import_kolmafia115.use)($item(_templateObject5020 || (_templateObject5020 = _taggedTemplateLiteral106(["piece of driftwood"]))));
    },
    spendsTurn: false
  },
  {
    name: "Beach Comb Buff",
    ready: function() {
      return BeachComb_exports.available();
    },
    completed: function() {
      return !BeachComb_exports.headAvailable("FAMILIAR") || BeachComb_exports.freeCombs() < 1;
    },
    do: function() {
      return BeachComb_exports.tryHead($effect(_templateObject5143 || (_templateObject5143 = _taggedTemplateLiteral106(["Do I Know You From Somewhere?"]))));
    },
    spendsTurn: false
  },
  {
    name: "Beach Comb Free Walks",
    ready: function() {
      return BeachComb_exports.available();
    },
    completed: function() {
      return BeachComb_exports.freeCombs() < 1;
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("combo ".concat(11 - get("_freeBeachWalksUsed")));
    },
    spendsTurn: false
  },
  {
    name: "Clan Fortune Buff",
    ready: function() {
      return have($item(_templateObject5222 || (_templateObject5222 = _taggedTemplateLiteral106(["Clan VIP Lounge key"])))) && (0, import_kolmafia115.getClanLounge)()["Clan Carnival Game"] !== void 0;
    },
    completed: function() {
      return get("_clanFortuneBuffUsed");
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("fortune buff meat");
    },
    spendsTurn: false
  },
  {
    name: $item(_templateObject5322 || (_templateObject5322 = _taggedTemplateLiteral106(["defective Game Grid token"]))).name,
    completed: function() {
      return get("_defectiveTokenUsed");
    },
    do: function() {
      return withStash([$item(_templateObject5422 || (_templateObject5422 = _taggedTemplateLiteral106(["defective Game Grid token"])))], function() {
        return (0, import_kolmafia115.use)(1, $item(_templateObject5521 || (_templateObject5521 = _taggedTemplateLiteral106(["defective Game Grid token"]))));
      });
    },
    spendsTurn: false
  },
  {
    name: $item(_templateObject5620 || (_templateObject5620 = _taggedTemplateLiteral106(["Glenn's golden dice"]))).name,
    ready: function() {
      return have($item(_templateObject5719 || (_templateObject5719 = _taggedTemplateLiteral106(["Glenn's golden dice"]))));
    },
    completed: function() {
      return get("_glennGoldenDiceUsed");
    },
    do: function() {
      return (0, import_kolmafia115.use)($item(_templateObject5817 || (_templateObject5817 = _taggedTemplateLiteral106(["Glenn's golden dice"]))));
    },
    spendsTurn: false
  },
  {
    name: "Clan pool table",
    ready: function() {
      return (0, import_kolmafia115.getClanLounge)()["Clan pool table"] !== void 0;
    },
    completed: function() {
      return get("_poolGames") >= 3;
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("pool aggressive");
    },
    limit: {
      skip: 3
    },
    spendsTurn: false
  },
  {
    name: "Daycare",
    ready: function() {
      return get("daycareOpen") || get("_daycareToday");
    },
    completed: function() {
      return get("_daycareSpa");
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("daycare mysticality");
    },
    spendsTurn: false
  },
  {
    name: $item(_templateObject5917 || (_templateObject5917 = _taggedTemplateLiteral106(["redwood rain stick"]))).name,
    ready: function() {
      return have($item(_templateObject6016 || (_templateObject6016 = _taggedTemplateLiteral106(["redwood rain stick"]))));
    },
    completed: function() {
      return get("_redwoodRainStickUsed");
    },
    do: function() {
      return (0, import_kolmafia115.use)($item(_templateObject6132 || (_templateObject6132 = _taggedTemplateLiteral106(["redwood rain stick"]))));
    },
    spendsTurn: false
  },
  {
    name: "Witchess Puzzle Champ",
    ready: function() {
      return Witchess_exports.have();
    },
    completed: function() {
      return get("_witchessBuff");
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("up Puzzle Champ");
    },
    spendsTurn: false
  },
  {
    name: "Friar's Blessing",
    ready: function() {
      return questStep("questL06Friar") === 999;
    },
    completed: function() {
      return get("friarsBlessingReceived");
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("friars familiar");
    },
    spendsTurn: false
  },
  {
    name: $item(_templateObject6221 || (_templateObject6221 = _taggedTemplateLiteral106(["The Legendary Beat"]))).name,
    ready: function() {
      return have($item(_templateObject6319 || (_templateObject6319 = _taggedTemplateLiteral106(["The Legendary Beat"]))));
    },
    completed: function() {
      return get("_legendaryBeat");
    },
    do: function() {
      return (0, import_kolmafia115.use)($item(_templateObject6419 || (_templateObject6419 = _taggedTemplateLiteral106(["The Legendary Beat"]))));
    },
    spendsTurn: false
  },
  {
    name: $item(_templateObject6516 || (_templateObject6516 = _taggedTemplateLiteral106(["portable steam unit"]))).name,
    ready: function() {
      return have($item(_templateObject6615 || (_templateObject6615 = _taggedTemplateLiteral106(["portable steam unit"]))));
    },
    completed: function() {
      return get("_portableSteamUnitUsed");
    },
    do: function() {
      return (0, import_kolmafia115.use)($item(_templateObject6715 || (_templateObject6715 = _taggedTemplateLiteral106(["portable steam unit"]))));
    },
    spendsTurn: false
  },
  {
    name: "Clan Fortune Consults",
    ready: function() {
      return have($item(_templateObject6815 || (_templateObject6815 = _taggedTemplateLiteral106(["Clan VIP Lounge key"])))) && (0, import_kolmafia115.getClanLounge)()["Clan Carnival Game"] !== void 0 && (0, import_kolmafia115.isOnline)("CheeseFax") && Clan.getWhitelisted().find(function(c) {
        return c.name === "Bonus Adventures from Hell";
      }) !== void 0;
    },
    completed: function() {
      return get("_clanFortuneConsultUses") >= 3;
    },
    do: function() {
      Clan.with("Bonus Adventures from Hell", function() {
        return (0, import_kolmafia115.cliExecute)("fortune ".concat((0, import_kolmafia115.getPlayerId)("CheeseFax")));
      });
      (0, import_kolmafia115.wait)(10);
    },
    limit: {
      skip: 3
    },
    spendsTurn: false
  },
  {
    name: "Summon Demon",
    ready: function() {
      return !!get("demonName2") && get("questL11Manor") === "finished";
    },
    completed: function() {
      return get("demonSummoned");
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("summon Preternatural Greed");
    },
    spendsTurn: false
  },
  {
    name: "Source Terminal Enhance",
    ready: function() {
      return SourceTerminal_exports.have();
    },
    completed: function() {
      return SourceTerminal_exports.enhanceUsesRemaining() === 0;
    },
    do: function() {
      return SourceTerminal_exports.enhance($effect(_templateObject6915 || (_templateObject6915 = _taggedTemplateLiteral106(["meat.enh"]))));
    },
    limit: {
      skip: 3
    },
    spendsTurn: false
  },
  {
    name: "Source Terminal Enquire",
    ready: function() {
      return SourceTerminal_exports.have();
    },
    completed: function() {
      return get("sourceTerminalEnquiry") === "familiar.enq";
    },
    do: function() {
      return SourceTerminal_exports.enquiry($effect(_templateObject7014 || (_templateObject7014 = _taggedTemplateLiteral106(["familiar.enq"]))));
    },
    spendsTurn: false
  },
  {
    name: "Mad Tea Party Buff",
    ready: function() {
      return !get("_madTeaParty");
    },
    completed: function() {
      return get("_madTeaParty");
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("hatter 22");
    },
    acquire: [{
      item: $item(_templateObject7117 || (_templateObject7117 = _taggedTemplateLiteral106(["filthy knitted dread sack"])))
    }],
    effects: [$effect(_templateObject7217 || (_templateObject7217 = _taggedTemplateLiteral106(["Down the Rabbit Hole"])))],
    spendsTurn: false
  },
  {
    name: "SongBoom Buff",
    ready: function() {
      return SongBoom_exports.have() && SongBoom_exports.songChangesLeft() > 0 && (0, import_kolmafia115.myInebriety)() <= (0, import_kolmafia115.inebrietyLimit)();
    },
    completed: function() {
      return SongBoom_exports.song() === "Total Eclipse of Your Meat";
    },
    do: function() {
      return SongBoom_exports.setSong("Total Eclipse of Your Meat");
    },
    spendsTurn: false
  },
  {
    name: "SongBoom Buff (Drunk)",
    ready: function() {
      return SongBoom_exports.have() && SongBoom_exports.songChangesLeft() > 0 && (0, import_kolmafia115.myInebriety)() > (0, import_kolmafia115.inebrietyLimit)();
    },
    completed: function() {
      return SongBoom_exports.song() === "Food Vibrations";
    },
    do: function() {
      return SongBoom_exports.setSong("Food Vibrations");
    },
    spendsTurn: false
  },
  {
    name: "Set Mind Control Device",
    ready: function() {
      return (0, import_kolmafia115.canadiaAvailable)() || (0, import_kolmafia115.gnomadsAvailable)() || have($item(_templateObject7316 || (_templateObject7316 = _taggedTemplateLiteral106(["detuned radio"]))));
    },
    completed: function() {
      return (0, import_kolmafia115.currentMcd)() === ((0, import_kolmafia115.canadiaAvailable)() ? 11 : 10);
    },
    do: function() {
      return (0, import_kolmafia115.changeMcd)((0, import_kolmafia115.canadiaAvailable)() ? 11 : 10);
    },
    spendsTurn: false
  },
  {
    name: "Implement [glitch season reward name]",
    ready: function() {
      return have($item(_templateObject7416 || (_templateObject7416 = _taggedTemplateLiteral106(["[glitch season reward name]"]))));
    },
    completed: function() {
      return get("_glitchItemImplemented");
    },
    do: function() {
      return (0, import_kolmafia115.use)($item(_templateObject7515 || (_templateObject7515 = _taggedTemplateLiteral106(["[glitch season reward name]"]))));
    },
    spendsTurn: false
  },
  {
    name: "Use BittyCar MeatCart",
    ready: function() {
      return get("_bittycar") !== "meatcar";
    },
    completed: function() {
      return get("_bittycar") === "meatcar";
    },
    do: function() {
      return withStash([$item(_templateObject7615 || (_templateObject7615 = _taggedTemplateLiteral106(["BittyCar MeatCar"])))], function() {
        return (0, import_kolmafia115.use)(1, $item(_templateObject7714 || (_templateObject7714 = _taggedTemplateLiteral106(["BittyCar MeatCar"]))));
      });
    },
    spendsTurn: false
  },
  {
    name: "Use BittyCar SoulCar",
    ready: function() {
      return get("_bittycar") !== "meatcar" && get("_bittycar") !== "soulcar";
    },
    completed: function() {
      return get("_bittycar") === "soulcar";
    },
    do: function() {
      return withStash([$item(_templateObject7812 || (_templateObject7812 = _taggedTemplateLiteral106(["BittyCar SoulCar"])))], function() {
        return (0, import_kolmafia115.use)(1, $item(_templateObject7912 || (_templateObject7912 = _taggedTemplateLiteral106(["BittyCar SoulCar"]))));
      });
    },
    spendsTurn: false
  },
  {
    name: "Holiday Eldritch Attunement",
    ready: function() {
      return (0, import_kolmafia115.holiday)().includes("Generic Summer Holiday") && !have($effect(_templateObject8011 || (_templateObject8011 = _taggedTemplateLiteral106(["Eldritch Attunement"])))) && estimatedTentacles() * globalOptions.prefs.valueOfFreeFight > get("valueOfAdventure");
    },
    completed: function() {
      return have($effect(_templateObject8115 || (_templateObject8115 = _taggedTemplateLiteral106(["Eldritch Attunement"]))));
    },
    do: function() {
      return (0, import_kolmafia115.adv1)($location(_templateObject8215 || (_templateObject8215 = _taggedTemplateLiteral106(["Generic Summer Holiday Swimming!"]))));
    },
    acquire: [{
      item: $item(_templateObject8315 || (_templateObject8315 = _taggedTemplateLiteral106(["water wings"])))
    }],
    outfit: function() {
      return (0, import_kolmafia115.myInebriety)() > (0, import_kolmafia115.inebrietyLimit)() && have($item(_templateObject8414 || (_templateObject8414 = _taggedTemplateLiteral106(["Drunkula's wineglass"])))) && (0, import_kolmafia115.canEquip)($item(_templateObject8514 || (_templateObject8514 = _taggedTemplateLiteral106(["Drunkula's wineglass"])))) ? {
        offhand: $item(_templateObject8613 || (_templateObject8613 = _taggedTemplateLiteral106(["Drunkula's wineglass"]))),
        acc1: $item(_templateObject8711 || (_templateObject8711 = _taggedTemplateLiteral106(["water wings"]))),
        avoid: $items(_templateObject8810 || (_templateObject8810 = _taggedTemplateLiteral106(["June cleaver"])))
      } : {
        acc1: $item(_templateObject897 || (_templateObject897 = _taggedTemplateLiteral106(["water wings"]))),
        avoid: $items(_templateObject907 || (_templateObject907 = _taggedTemplateLiteral106(["June cleaver"])))
      };
    },
    spendsTurn: false
  },
  {
    name: "Check Neverending Party Quest",
    ready: function() {
      return (get("neverendingPartyAlways") || get("_neverendingPartyToday")) && get("_questPartyFair") === "unstarted";
    },
    completed: function() {
      return get("_questPartyFair") !== "unstarted";
    },
    do: nepQuest,
    outfit: function() {
      return (0, import_kolmafia115.myInebriety)() > (0, import_kolmafia115.inebrietyLimit)() && have($item(_templateObject9115 || (_templateObject9115 = _taggedTemplateLiteral106(["Drunkula's wineglass"])))) && (0, import_kolmafia115.canEquip)($item(_templateObject9215 || (_templateObject9215 = _taggedTemplateLiteral106(["Drunkula's wineglass"])))) ? {
        offhand: $item(_templateObject9314 || (_templateObject9314 = _taggedTemplateLiteral106(["Drunkula's wineglass"]))),
        avoid: $items(_templateObject9414 || (_templateObject9414 = _taggedTemplateLiteral106(["June cleaver"])))
      } : {
        avoid: $items(_templateObject9513 || (_templateObject9513 = _taggedTemplateLiteral106(["June cleaver"])))
      };
    },
    spendsTurn: false
  },
  {
    name: "Check Barf Mountain Quest",
    ready: function() {
      return get("stenchAirportAlways") || get("_stenchAirportToday");
    },
    completed: function() {
      return !attemptCompletingBarfQuest();
    },
    do: checkBarfQuest,
    spendsTurn: false
  },
  {
    name: "Configure Snojo",
    ready: function() {
      return get("snojoAvailable") && get("_snojoFreeFights") < 10;
    },
    completed: function() {
      return snojoConfigured;
    },
    do: configureSnojo,
    spendsTurn: false
  },
  // Final tasks
  {
    name: "Closet Items",
    ready: function() {
      return closetItems.some(function(item10) {
        return (0, import_kolmafia115.itemAmount)(item10);
      });
    },
    completed: function() {
      return closetItems.every(function(item10) {
        return (0, import_kolmafia115.itemAmount)(item10) === 0;
      });
    },
    do: function() {
      return closetItems.forEach(function(item10) {
        return (0, import_kolmafia115.putCloset)((0, import_kolmafia115.itemAmount)(item10), item10);
      });
    },
    spendsTurn: false
  },
  {
    name: "Closet Hobo Nickels",
    ready: function() {
      return have($familiar(_templateObject9611 || (_templateObject9611 = _taggedTemplateLiteral106(["Hobo Monkey"])))) || have($item(_templateObject9710 || (_templateObject9710 = _taggedTemplateLiteral106(["hobo nickel"]))), 1e3);
    },
    completed: function() {
      return (0, import_kolmafia115.itemAmount)($item(_templateObject987 || (_templateObject987 = _taggedTemplateLiteral106(["hobo nickel"])))) === 0;
    },
    do: function() {
      return (0, import_kolmafia115.putCloset)((0, import_kolmafia115.itemAmount)($item(_templateObject997 || (_templateObject997 = _taggedTemplateLiteral106(["hobo nickel"])))), $item(_templateObject1007 || (_templateObject1007 = _taggedTemplateLiteral106(["hobo nickel"]))));
    },
    spendsTurn: false
  },
  {
    name: "Retrieve Items",
    ready: function() {
      return retrieveItems.some(function(item10) {
        return (0, import_kolmafia115.itemAmount)(item10) === 0;
      });
    },
    completed: function() {
      return retrieveItems.every(function(item10) {
        return (0, import_kolmafia115.itemAmount)(item10) > 0;
      });
    },
    do: function() {
      return retrieveItems.forEach(function(item10) {
        return (0, import_kolmafia115.retrieveItem)(item10);
      });
    },
    spendsTurn: false
  },
  {
    name: "Volcano Quest",
    ready: function() {
      return realmAvailable("hot");
    },
    completed: function() {
      return get("_volcanoItemRedeemed");
    },
    do: checkVolcanoQuest,
    spendsTurn: false
  },
  {
    name: "Free Volcoino",
    ready: function() {
      return realmAvailable("hot");
    },
    completed: function() {
      return get("_infernoDiscoVisited");
    },
    do: function() {
      (0, import_kolmafia115.visitUrl)("place.php?whichplace=airport_hot&action=airport4_zone1");
      (0, import_kolmafia115.runChoice)(7);
    },
    acquire: function() {
      return $items(_templateObject10115 || (_templateObject10115 = _taggedTemplateLiteral106(["smooth velvet pocket square, smooth velvet socks, smooth velvet hat, smooth velvet shirt, smooth velvet hanky, smooth velvet pants"]))).map(function(x) {
        return {
          item: x
        };
      });
    },
    outfit: {
      modifier: "disco style"
    },
    spendsTurn: false
  },
  {
    name: "Free Volcano Mining",
    ready: function() {
      return realmAvailable("hot") && have($skill(_templateObject10215 || (_templateObject10215 = _taggedTemplateLiteral106(["Unaccompanied Miner"]))));
    },
    completed: function() {
      return get("_unaccompaniedMinerUsed") >= 5;
    },
    do: function() {
      return (0, import_kolmafia115.cliExecute)("minevolcano.ash ".concat(5 - get("_unaccompaniedMinerUsed")));
    },
    prepare: function() {
      return (0, import_kolmafia115.restoreHp)((0, import_kolmafia115.myMaxhp)() * 0.9);
    },
    post: function() {
      if (have($effect(_templateObject10314 || (_templateObject10314 = _taggedTemplateLiteral106(["Beaten Up"]))))) {
        uneffect($effect(_templateObject10413 || (_templateObject10413 = _taggedTemplateLiteral106(["Beaten Up"]))));
      }
      if ((0, import_kolmafia115.myHp)() < (0, import_kolmafia115.myMaxhp)() * 0.5) {
        (0, import_kolmafia115.restoreHp)((0, import_kolmafia115.myMaxhp)() * 0.9);
      }
    },
    spendsTurn: false
  }
];
var DailyQuest = {
  name: "Daily",
  tasks: DailyTasks
};

// src/tasks/dailyFamiliars.ts
var import_kolmafia116 = require("kolmafia");
init_dist();
var _templateObject891;
var _templateObject2196;
var _templateObject3176;
var _templateObject4158;
var _templateObject5144;
var _templateObject6133;
var _templateObject7107;
var _templateObject898;
var _templateObject980;
var _templateObject1069;
var _templateObject1159;
var _templateObject1256;
var _templateObject1350;
var _templateObject1447;
var _templateObject1541;
var _templateObject1640;
var _templateObject1740;
var _templateObject1839;
var _templateObject1939;
var _templateObject2039;
var _templateObject2197;
var _templateObject2238;
var _templateObject2337;
var _templateObject2435;
var _templateObject2535;
var _templateObject2635;
var _templateObject2734;
var _templateObject2831;
var _templateObject2928;
var _templateObject3028;
var _templateObject3177;
var _templateObject3230;
var _templateObject3329;
var _templateObject3426;
var _templateObject3526;
var _templateObject3625;
var _templateObject3725;
var _templateObject3825;
function _toConsumableArray50(arr) {
  return _arrayWithoutHoles50(arr) || _iterableToArray50(arr) || _unsupportedIterableToArray74(arr) || _nonIterableSpread50();
}
function _nonIterableSpread50() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray50(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles50(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray74(arr);
}
function _slicedToArray33(arr, i) {
  return _arrayWithHoles33(arr) || _iterableToArrayLimit33(arr, i) || _unsupportedIterableToArray74(arr, i) || _nonIterableRest33();
}
function _nonIterableRest33() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray74(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray74(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray74(o, minLen);
}
function _arrayLikeToArray74(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit33(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles33(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral107(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function drivebyValue() {
  var embezzlers = embezzlerCount();
  var tourists = (estimatedGarboTurns() - embezzlers) * turnsToNC / (turnsToNC + 1);
  var marginalRoboWeight = 50;
  var meatPercentDelta = Math.sqrt(220 * 2 * marginalRoboWeight) - Math.sqrt(220 * 2 * marginalRoboWeight) + 2 * marginalRoboWeight;
  return meatPercentDelta / 100 * ((750 + baseMeat) * embezzlers + baseMeat * tourists);
}
function entendreValue() {
  var embezzlers = embezzlerCount();
  var tourists = (estimatedGarboTurns() - embezzlers) * turnsToNC / (turnsToNC + 1);
  var marginalRoboWeight = 50;
  var itemPercent = Math.sqrt(55 * marginalRoboWeight) + marginalRoboWeight - 3;
  var garbageBagsDropRate = 0.15 * 3;
  var meatStackDropRate = 0.3 * 4;
  return itemPercent / 100 * (meatStackDropRate * embezzlers + garbageBagsDropRate * tourists * garbageTouristRatio);
}
function prepRobortender() {
  if (!have($familiar(_templateObject891 || (_templateObject891 = _taggedTemplateLiteral107(["Robortender"])))))
    return;
  var roboDrinks = {
    "Drive-by shooting": {
      priceCap: drivebyValue(),
      mandatory: true
    },
    Newark: {
      priceCap: newarkValue() * 0.25 * estimatedGarboTurns(),
      mandatory: false
    },
    "Feliz Navidad": {
      priceCap: felizValue() * 0.25 * estimatedGarboTurns(),
      mandatory: false
    },
    "Bloody Nora": {
      priceCap: get("_envyfishEggUsed") ? (750 + baseMeat) * (0.5 + (4 + Math.sqrt(110 / 100)) * 30 / 100) : 0,
      mandatory: false
    },
    "Single entendre": {
      priceCap: entendreValue(),
      mandatory: false
    }
  };
  var _loop = function _loop2() {
    var _Object$entries$_i = _slicedToArray33(_Object$entries[_i], 2), drinkName = _Object$entries$_i[0], _Object$entries$_i$ = _Object$entries$_i[1], priceCap = _Object$entries$_i$.priceCap, mandatory = _Object$entries$_i$.mandatory;
    if (get("_roboDrinks").toLowerCase().includes(drinkName.toLowerCase())) {
      return 0;
    }
    (0, import_kolmafia116.useFamiliar)($familiar(_templateObject2196 || (_templateObject2196 = _taggedTemplateLiteral107(["Robortender"]))));
    var drink3 = (0, import_kolmafia116.toItem)(drinkName);
    if ((0, import_kolmafia116.retrievePrice)(drink3) > priceCap) {
      if (mandatory) {
        setBestLeprechaunAsMeatFamiliar();
        if (!userConfirmDialog("Garbo cannot find a reasonably priced drive-by-shooting (price cap: ".concat(priceCap, "), and will not be using your robortender. Is that cool with you?"), true)) {
          (0, import_kolmafia116.abort)("Alright, then, I guess you should try to find a reasonbly priced drive-by-shooting. Or do different things with your day.");
        }
        return 1;
      }
      return 0;
    }
    withProperty("autoBuyPriceLimit", priceCap, function() {
      return (0, import_kolmafia116.retrieveItem)(1, drink3);
    });
    if (have(drink3))
      Robortender_exports.feed(drink3);
  }, _ret;
  for (var _i = 0, _Object$entries = Object.entries(roboDrinks); _i < _Object$entries.length; _i++) {
    _ret = _loop();
    if (_ret === 0)
      continue;
    if (_ret === 1)
      break;
  }
}
var DailyFamiliarTasks = [{
  name: "Prepare Shorter-Order Cook",
  ready: function() {
    return have($familiar(_templateObject3176 || (_templateObject3176 = _taggedTemplateLiteral107(["Shorter-Order Cook"])))) && have($item(_templateObject4158 || (_templateObject4158 = _taggedTemplateLiteral107(["blue plate"]))));
  },
  completed: function() {
    return (0, import_kolmafia116.familiarEquippedEquipment)($familiar(_templateObject5144 || (_templateObject5144 = _taggedTemplateLiteral107(["Shorter-Order Cook"])))) === $item(_templateObject6133 || (_templateObject6133 = _taggedTemplateLiteral107(["blue plate"])));
  },
  do: function() {
    return (0, import_kolmafia116.equip)($familiar(_templateObject7107 || (_templateObject7107 = _taggedTemplateLiteral107(["Shorter-Order Cook"]))), $item(_templateObject898 || (_templateObject898 = _taggedTemplateLiteral107(["blue plate"]))));
  },
  spendsTurn: false
}, {
  name: "Prepare Robortender",
  ready: function() {
    return have($familiar(_templateObject980 || (_templateObject980 = _taggedTemplateLiteral107(["Robortender"]))));
  },
  completed: function() {
    return get("_roboDrinks").toLowerCase().includes("drive-by shooting");
  },
  do: prepRobortender,
  spendsTurn: false
}, {
  name: "Acquire box of Familiar Jacks",
  ready: function() {
    return have($familiar(_templateObject1069 || (_templateObject1069 = _taggedTemplateLiteral107(["Cornbeefadon"]))));
  },
  completed: function() {
    return have($item(_templateObject1159 || (_templateObject1159 = _taggedTemplateLiteral107(["box of Familiar Jacks"])))) || have($item(_templateObject1256 || (_templateObject1256 = _taggedTemplateLiteral107(["amulet coin"]))));
  },
  do: function() {
    return (
      // TODO: acquire max price calculation
      acquire(1, $item(_templateObject1350 || (_templateObject1350 = _taggedTemplateLiteral107(["box of Familiar Jacks"]))), get("autoBuyPriceLimit"))
    );
  },
  spendsTurn: false
}, {
  name: "Acquire amulet coin",
  ready: function() {
    return have($familiar(_templateObject1447 || (_templateObject1447 = _taggedTemplateLiteral107(["Cornbeefadon"])))) && have($item(_templateObject1541 || (_templateObject1541 = _taggedTemplateLiteral107(["box of Familiar Jacks"]))));
  },
  completed: function() {
    return have($item(_templateObject1640 || (_templateObject1640 = _taggedTemplateLiteral107(["amulet coin"]))));
  },
  do: function() {
    (0, import_kolmafia116.use)($item(_templateObject1740 || (_templateObject1740 = _taggedTemplateLiteral107(["box of Familiar Jacks"]))));
  },
  outfit: {
    familiar: $familiar(_templateObject1839 || (_templateObject1839 = _taggedTemplateLiteral107(["Cornbeefadon"])))
  },
  spendsTurn: false
}, {
  // TODO: Consider other familiars?
  name: "Equip tiny stillsuit",
  ready: function() {
    return (0, import_kolmafia116.itemAmount)($item(_templateObject1939 || (_templateObject1939 = _taggedTemplateLiteral107(["tiny stillsuit"])))) > 0 && have($familiar(_templateObject2039 || (_templateObject2039 = _taggedTemplateLiteral107(["Cornbeefadon"]))));
  },
  completed: function() {
    return (0, import_kolmafia116.familiarEquippedEquipment)($familiar(_templateObject2197 || (_templateObject2197 = _taggedTemplateLiteral107(["Cornbeefadon"])))) === $item(_templateObject2238 || (_templateObject2238 = _taggedTemplateLiteral107(["tiny stillsuit"])));
  },
  do: function() {
    return (0, import_kolmafia116.equip)($familiar(_templateObject2337 || (_templateObject2337 = _taggedTemplateLiteral107(["Cornbeefadon"]))), $item(_templateObject2435 || (_templateObject2435 = _taggedTemplateLiteral107(["tiny stillsuit"]))));
  },
  spendsTurn: false
}, {
  name: "Acquire box of old Crimbo decorations",
  ready: function() {
    return have($familiar(_templateObject2535 || (_templateObject2535 = _taggedTemplateLiteral107(["Crimbo Shrub"]))));
  },
  completed: function() {
    return have($item(_templateObject2635 || (_templateObject2635 = _taggedTemplateLiteral107(["box of old Crimbo decorations"]))));
  },
  do: function() {
    (0, import_kolmafia116.useFamiliar)($familiar(_templateObject2734 || (_templateObject2734 = _taggedTemplateLiteral107(["Crimbo Shrub"]))));
  },
  outfit: {
    familiar: $familiar(_templateObject2831 || (_templateObject2831 = _taggedTemplateLiteral107(["Crimbo Shrub"])))
  },
  spendsTurn: false
}, {
  name: "Decorate Crimbo Shrub",
  ready: function() {
    return have($item(_templateObject2928 || (_templateObject2928 = _taggedTemplateLiteral107(["box of old Crimbo decorations"]))));
  },
  completed: function() {
    return get("_shrubDecorated");
  },
  do: function() {
    return CrimboShrub_exports.decorate((0, import_kolmafia116.myPrimestat)().toString(), "Stench Damage", (0, import_kolmafia116.hippyStoneBroken)() ? "PvP Fights" : "HP Regen", "Red Ray");
  },
  outfit: {
    familiar: $familiar(_templateObject3028 || (_templateObject3028 = _taggedTemplateLiteral107(["Crimbo Shrub"])))
  },
  spendsTurn: false
}, {
  name: "Mummery Meat",
  ready: function() {
    return have($item(_templateObject3177 || (_templateObject3177 = _taggedTemplateLiteral107(["mumming trunk"]))));
  },
  completed: function() {
    return get("_mummeryMods").includes("Meat Drop");
  },
  do: function() {
    return (0, import_kolmafia116.cliExecute)("mummery meat");
  },
  outfit: {
    familiar: meatFamiliar()
  },
  spendsTurn: false
}, {
  name: "Mummery Item",
  ready: function() {
    return have($item(_templateObject3230 || (_templateObject3230 = _taggedTemplateLiteral107(["mumming trunk"])))) && have($familiar(_templateObject3329 || (_templateObject3329 = _taggedTemplateLiteral107(["Trick-or-Treating Tot"]))));
  },
  completed: function() {
    return get("_mummeryMods").includes("Item Drop");
  },
  do: function() {
    return (0, import_kolmafia116.cliExecute)("mummery item");
  },
  outfit: {
    familiar: $familiar(_templateObject3426 || (_templateObject3426 = _taggedTemplateLiteral107(["Trick-or-Treating Tot"])))
  },
  spendsTurn: false
}, {
  name: "Moveable feast",
  ready: function() {
    return have($item(_templateObject3526 || (_templateObject3526 = _taggedTemplateLiteral107(["moveable feast"])))) || globalOptions.prefs.stashClan !== "none";
  },
  completed: function() {
    return get("_feastUsed") > 0;
  },
  do: function() {
    withStash($items(_templateObject3625 || (_templateObject3625 = _taggedTemplateLiteral107(["moveable feast"]))), function() {
      if (have($item(_templateObject3725 || (_templateObject3725 = _taggedTemplateLiteral107(["moveable feast"]))))) {
        [].concat(_toConsumableArray50($familiars(_templateObject3825 || (_templateObject3825 = _taggedTemplateLiteral107(["Pocket Professor, Frumious Bandersnatch, Pair of Stomping Boots"])))), [meatFamiliar()]).forEach(tryFeast);
      }
    });
  },
  spendsTurn: false
}];
var DailyFamiliarsQuest = {
  name: "Daily Familiars",
  tasks: DailyFamiliarTasks
};

// src/tasks/dailyItems.ts
var import_kolmafia117 = require("kolmafia");
init_dist();
var _templateObject899;
var _templateObject2198;
var _templateObject3178;
var _templateObject4159;
var _templateObject5145;
var _templateObject6134;
var _templateObject7108;
var _templateObject8100;
var _templateObject981;
var _templateObject1070;
var _templateObject1160;
var _templateObject1257;
var _templateObject1351;
var _templateObject1448;
var _templateObject1545;
var _templateObject1641;
var _templateObject1741;
var _templateObject1840;
var _templateObject1940;
var _templateObject2040;
var _templateObject2199;
var _templateObject2239;
var _templateObject2338;
var _templateObject2436;
var _templateObject2536;
var _templateObject2636;
var _templateObject2735;
var _templateObject2833;
var _templateObject2929;
var _templateObject3029;
var _templateObject3179;
var _templateObject3231;
var _templateObject3330;
var _templateObject3427;
var _templateObject3527;
var _templateObject3626;
var _templateObject3726;
var _templateObject3826;
var _templateObject3925;
var _templateObject4025;
var _templateObject4160;
var _templateObject4225;
var _templateObject4325;
var _templateObject4424;
var _templateObject4524;
var _templateObject4624;
var _templateObject4724;
var _templateObject4824;
var _templateObject4923;
var _templateObject5021;
var _templateObject5146;
var _templateObject5223;
var _templateObject5323;
var _templateObject5423;
var _templateObject5522;
var _templateObject5621;
var _templateObject5720;
var _templateObject5818;
var _templateObject5918;
var _templateObject6017;
var _templateObject6135;
var _templateObject6222;
var _templateObject6320;
var _templateObject6420;
var _templateObject6517;
var _templateObject6616;
var _templateObject6716;
var _templateObject6816;
var _templateObject6916;
var _templateObject7015;
var _templateObject7118;
var _templateObject7218;
var _templateObject7317;
var _templateObject7417;
var _templateObject7516;
var _templateObject7616;
var _templateObject7715;
var _templateObject7813;
var _templateObject7913;
var _templateObject8012;
var _templateObject8116;
var _templateObject8216;
var _templateObject8316;
var _templateObject8415;
var _templateObject8515;
var _templateObject8614;
var _templateObject8712;
function _toConsumableArray51(arr) {
  return _arrayWithoutHoles51(arr) || _iterableToArray51(arr) || _unsupportedIterableToArray75(arr) || _nonIterableSpread51();
}
function _nonIterableSpread51() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray51(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles51(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray75(arr);
}
function _slicedToArray34(arr, i) {
  return _arrayWithHoles34(arr) || _iterableToArrayLimit34(arr, i) || _unsupportedIterableToArray75(arr, i) || _nonIterableRest34();
}
function _nonIterableRest34() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit34(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles34(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper38(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray75(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray75(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray75(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray75(o, minLen);
}
function _arrayLikeToArray75(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral108(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var SummonTomes = $skills(_templateObject899 || (_templateObject899 = _taggedTemplateLiteral108(["Summon Snowcones, Summon Stickers, Summon Sugar Sheets, Summon Rad Libs, Summon Smithsness"])));
var Wads = $items(_templateObject2198 || (_templateObject2198 = _taggedTemplateLiteral108(["twinkly wad, cold wad, stench wad, hot wad, sleaze wad, spooky wad"])));
var _shouldClearRufusQuest = null;
function drawBestCards() {
  var cardsLeft = Math.floor(3 - get("_deckCardsDrawn") / 5);
  var cardsSeen = get("_deckCardsSeen").toLowerCase();
  var bestCards = [{
    card: "Island",
    item: $item(_templateObject3178 || (_templateObject3178 = _taggedTemplateLiteral108(["blue mana"])))
  }, {
    card: "Ancestral Recall",
    item: $item(_templateObject4159 || (_templateObject4159 = _taggedTemplateLiteral108(["blue mana"])))
  }, {
    card: "Plains",
    item: $item(_templateObject5145 || (_templateObject5145 = _taggedTemplateLiteral108(["white mana"])))
  }, {
    card: "Healing Salve",
    item: $item(_templateObject6134 || (_templateObject6134 = _taggedTemplateLiteral108(["white mana"])))
  }, {
    card: "Swamp",
    item: $item(_templateObject7108 || (_templateObject7108 = _taggedTemplateLiteral108(["black mana"])))
  }, {
    card: "Dark Ritual",
    item: $item(_templateObject8100 || (_templateObject8100 = _taggedTemplateLiteral108(["black mana"])))
  }, {
    card: "Mountain",
    item: $item(_templateObject981 || (_templateObject981 = _taggedTemplateLiteral108(["red mana"])))
  }, {
    card: "Lightning bolt",
    item: $item(_templateObject1070 || (_templateObject1070 = _taggedTemplateLiteral108(["red mana"])))
  }, {
    card: "Forest",
    item: $item(_templateObject1160 || (_templateObject1160 = _taggedTemplateLiteral108(["green mana"])))
  }, {
    card: "Giant Growth",
    item: $item(_templateObject1257 || (_templateObject1257 = _taggedTemplateLiteral108(["green mana"])))
  }, {
    card: "Gift Card",
    item: $item(_templateObject1351 || (_templateObject1351 = _taggedTemplateLiteral108(["gift card"])))
  }, {
    card: "Mickey",
    item: $item(_templateObject1448 || (_templateObject1448 = _taggedTemplateLiteral108(["1952 Mickey Mantle card"])))
  }].filter(function(_ref) {
    var card2 = _ref.card;
    return !cardsSeen.includes(card2.toLowerCase());
  }).sort(function(a, b) {
    return garboValue(b.item) - garboValue(a.item);
  }).splice(0, cardsLeft).map(function(_ref2) {
    var card2 = _ref2.card;
    return card2;
  });
  var _iterator = _createForOfIteratorHelper38(bestCards), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var card = _step.value;
      (0, import_kolmafia117.cliExecute)("cheat ".concat(card));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function bestExtrude() {
  return maxBy($items(_templateObject1545 || (_templateObject1545 = _taggedTemplateLiteral108(["browser cookie, hacked gibson"]))), garboValue);
}
function pickCargoPocket() {
  var picked = (0, import_kolmafia117.pickedPockets)();
  var items = (0, import_kolmafia117.itemPockets)();
  var meats = (0, import_kolmafia117.meatPockets)();
  var scraps = (0, import_kolmafia117.scrapPockets)();
  function pocketValue(pocket) {
    var value2 = 0;
    if (pocket in picked) {
      return value2;
    }
    if (pocket in items) {
      value2 += sum(Object.entries((0, import_kolmafia117.pocketItems)(pocket)), function(_ref3) {
        var _ref4 = _slicedToArray34(_ref3, 2), item10 = _ref4[0], count = _ref4[1];
        return garboValue((0, import_kolmafia117.toItem)(item10), true) * count;
      });
    }
    if (pocket in meats) {
      value2 += sum(Object.values((0, import_kolmafia117.pocketMeat)(pocket)), function(x) {
        return parseInt(x);
      });
    }
    if (pocket in scraps) {
      value2 += 200;
    }
    return value2;
  }
  var pockets = [];
  for (var i = 1; i <= 666; i++) {
    var value = pocketValue(i);
    if (value > 0) {
      pockets.push([i, value]);
    }
  }
  if (pockets.length > 0) {
    (0, import_kolmafia117.cliExecute)("cargo ".concat(Math.trunc(maxBy(pockets, 1)[0])));
  }
}
var SummonTasks = _toConsumableArray51(SummonTomes.map(function(skill) {
  return {
    name: "{skill}",
    ready: function() {
      return have(skill);
    },
    completed: function() {
      return skill.dailylimit === 0;
    },
    do: function() {
      return (0, import_kolmafia117.useSkill)(skill, skill.dailylimit);
    },
    spendsTurn: false
  };
}));
var triedForest = false;
var DailyItemTasks = [{
  name: "Summon Clip Art",
  ready: function() {
    return have($skill(_templateObject1641 || (_templateObject1641 = _taggedTemplateLiteral108(["Summon Clip Art"]))));
  },
  completed: function() {
    return $skill(_templateObject1741 || (_templateObject1741 = _taggedTemplateLiteral108(["Summon Clip Art"]))).dailylimit === 0;
  },
  do: function() {
    var best = $item.none;
    for (var itemId = 5224; itemId <= 5283; itemId++) {
      var current2 = import_kolmafia117.Item.get("[".concat(itemId, "]"));
      if (garboValue(current2) > garboValue(best)) {
        best = current2;
      }
    }
    if (best !== $item.none) {
      (0, import_kolmafia117.cliExecute)("try; create ".concat($skill(_templateObject1840 || (_templateObject1840 = _taggedTemplateLiteral108(["Summon Clip Art"]))).dailylimit, " ").concat(best));
    }
  },
  spendsTurn: false
}, {
  name: "2002 Mr. Store",
  ready: function() {
    return have($item(_templateObject1940 || (_templateObject1940 = _taggedTemplateLiteral108(["2002 Mr. Store Catalog"]))));
  },
  completed: function() {
    return get("availableMrStore2002Credits", 0) === 0 && get("_2002MrStoreCreditsCollected", true);
  },
  do: function() {
    var bestItem = maxBy(import_kolmafia117.Item.all().filter(function(i) {
      return (0, import_kolmafia117.sellsItem)($coinmaster(_templateObject2040 || (_templateObject2040 = _taggedTemplateLiteral108(["Mr. Store 2002"]))), i);
    }), garboValue);
    (0, import_kolmafia117.buy)($coinmaster(_templateObject2199 || (_templateObject2199 = _taggedTemplateLiteral108(["Mr. Store 2002"]))), get("availableMrStore2002Credits", 0), bestItem);
  },
  spendsTurn: false
}, {
  name: "Chateau Mantegna Desk",
  ready: function() {
    return ChateauMantegna_exports.have();
  },
  completed: function() {
    return get("_chateauDeskHarvested");
  },
  do: function() {
    return (0, import_kolmafia117.visitUrl)("place.php?whichplace=chateau&action=chateau_desk2", false);
  },
  spendsTurn: false
}, {
  name: "Kremlin's Greatest Briefcase Collect",
  ready: function() {
    return have($item(_templateObject2239 || (_templateObject2239 = _taggedTemplateLiteral108(["Kremlin's Greatest Briefcase"]))));
  },
  completed: function() {
    return get("_kgbClicksUsed") > 17 || get("_kgbDispenserUses") >= 3;
  },
  do: function() {
    return (0, import_kolmafia117.cliExecute)("Briefcase collect");
  },
  spendsTurn: false
}, {
  name: "Ice Cold April Shower",
  ready: function() {
    return have($item(_templateObject2338 || (_templateObject2338 = _taggedTemplateLiteral108(["Clan VIP Lounge key"])))) && (0, import_kolmafia117.getClanLounge)()["Clan shower"] !== void 0;
  },
  completed: function() {
    return get("_aprilShower");
  },
  do: function() {
    return (0, import_kolmafia117.cliExecute)("try; shower ice");
  },
  spendsTurn: false
}, {
  name: "Swimming Pool Item",
  ready: function() {
    return have($item(_templateObject2436 || (_templateObject2436 = _taggedTemplateLiteral108(["Clan VIP Lounge key"])))) && (0, import_kolmafia117.getClanLounge)()["Olympic-sized Clan crate"] !== void 0;
  },
  completed: function() {
    return get("_olympicSwimmingPoolItemFound");
  },
  do: function() {
    return (0, import_kolmafia117.cliExecute)("swim item");
  },
  spendsTurn: false
}, {
  name: "Cheat Deck of Every Card",
  ready: function() {
    return have($item(_templateObject2536 || (_templateObject2536 = _taggedTemplateLiteral108(["Deck of Every Card"]))));
  },
  completed: function() {
    return Math.floor(3 - get("_deckCardsDrawn") / 5) === 0;
  },
  do: drawBestCards,
  spendsTurn: false
}, {
  name: "Source Terminal Extrude",
  ready: function() {
    return SourceTerminal_exports.have();
  },
  completed: function() {
    return get("_sourceTerminalExtrudes") === 3 || garboValue(bestExtrude()) < garboValue($item(_templateObject2636 || (_templateObject2636 = _taggedTemplateLiteral108(["Source essence"])))) * 10;
  },
  do: function() {
    return SourceTerminal_exports.extrude(bestExtrude());
  },
  acquire: [{
    item: $item(_templateObject2735 || (_templateObject2735 = _taggedTemplateLiteral108(["Source essence"]))),
    num: 10
  }],
  limit: {
    skip: 3
  },
  spendsTurn: false
}, {
  name: "Internet Meme Shop viral video",
  completed: function() {
    return get("_internetViralVideoBought") || garboValue($item(_templateObject2833 || (_templateObject2833 = _taggedTemplateLiteral108(["viral video"])))) < garboValue($item(_templateObject2929 || (_templateObject2929 = _taggedTemplateLiteral108(["BACON"])))) * coinmasterPrice($item(_templateObject3029 || (_templateObject3029 = _taggedTemplateLiteral108(["viral video"]))));
  },
  do: function() {
    return (0, import_kolmafia117.buy)($coinmaster(_templateObject3179 || (_templateObject3179 = _taggedTemplateLiteral108(["Internet Meme Shop"]))), 1, $item(_templateObject3231 || (_templateObject3231 = _taggedTemplateLiteral108(["viral video"]))));
  },
  acquire: [{
    item: $item(_templateObject3330 || (_templateObject3330 = _taggedTemplateLiteral108(["BACON"]))),
    num: coinmasterPrice($item(_templateObject3427 || (_templateObject3427 = _taggedTemplateLiteral108(["viral video"]))))
  }],
  spendsTurn: false
}, {
  name: "Internet Meme Shop plus one",
  completed: function() {
    return get("_internetPlusOneBought") || garboValue($item(_templateObject3527 || (_templateObject3527 = _taggedTemplateLiteral108(["plus one"])))) < garboValue($item(_templateObject3626 || (_templateObject3626 = _taggedTemplateLiteral108(["BACON"])))) * coinmasterPrice($item(_templateObject3726 || (_templateObject3726 = _taggedTemplateLiteral108(["plus one"]))));
  },
  do: function() {
    return (0, import_kolmafia117.buy)($coinmaster(_templateObject3826 || (_templateObject3826 = _taggedTemplateLiteral108(["Internet Meme Shop"]))), 1, $item(_templateObject3925 || (_templateObject3925 = _taggedTemplateLiteral108(["plus one"]))));
  },
  acquire: [{
    item: $item(_templateObject4025 || (_templateObject4025 = _taggedTemplateLiteral108(["BACON"]))),
    num: coinmasterPrice($item(_templateObject4160 || (_templateObject4160 = _taggedTemplateLiteral108(["plus one"]))))
  }],
  spendsTurn: false
}, {
  name: "Internet Meme Shop gallon of milk",
  completed: function() {
    return get("_internetGallonOfMilkBought") || garboValue($item(_templateObject4225 || (_templateObject4225 = _taggedTemplateLiteral108(["gallon of milk"])))) < garboValue($item(_templateObject4325 || (_templateObject4325 = _taggedTemplateLiteral108(["BACON"])))) * coinmasterPrice($item(_templateObject4424 || (_templateObject4424 = _taggedTemplateLiteral108(["gallon of milk"]))));
  },
  do: function() {
    return (0, import_kolmafia117.buy)($coinmaster(_templateObject4524 || (_templateObject4524 = _taggedTemplateLiteral108(["Internet Meme Shop"]))), 1, $item(_templateObject4624 || (_templateObject4624 = _taggedTemplateLiteral108(["gallon of milk"]))));
  },
  acquire: [{
    item: $item(_templateObject4724 || (_templateObject4724 = _taggedTemplateLiteral108(["BACON"]))),
    num: coinmasterPrice($item(_templateObject4824 || (_templateObject4824 = _taggedTemplateLiteral108(["gallon of milk"]))))
  }],
  spendsTurn: false
}, {
  name: "Internet Meme Shop print screen button",
  completed: function() {
    return get("_internetPrintScreenButtonBought") || garboValue($item(_templateObject4923 || (_templateObject4923 = _taggedTemplateLiteral108(["print screen button"])))) < garboValue($item(_templateObject5021 || (_templateObject5021 = _taggedTemplateLiteral108(["BACON"])))) * coinmasterPrice($item(_templateObject5146 || (_templateObject5146 = _taggedTemplateLiteral108(["print screen button"]))));
  },
  do: function() {
    return (0, import_kolmafia117.buy)($coinmaster(_templateObject5223 || (_templateObject5223 = _taggedTemplateLiteral108(["Internet Meme Shop"]))), 1, $item(_templateObject5323 || (_templateObject5323 = _taggedTemplateLiteral108(["print screen button"]))));
  },
  acquire: [{
    item: $item(_templateObject5423 || (_templateObject5423 = _taggedTemplateLiteral108(["BACON"]))),
    num: coinmasterPrice($item(_templateObject5522 || (_templateObject5522 = _taggedTemplateLiteral108(["print screen button"]))))
  }],
  spendsTurn: false
}, {
  name: "Internet Meme Shop daily dungeon malware",
  completed: function() {
    return get("_internetDailyDungeonMalwareBought") || garboValue($item(_templateObject5621 || (_templateObject5621 = _taggedTemplateLiteral108(["daily dungeon malware"])))) < garboValue($item(_templateObject5720 || (_templateObject5720 = _taggedTemplateLiteral108(["BACON"])))) * coinmasterPrice($item(_templateObject5818 || (_templateObject5818 = _taggedTemplateLiteral108(["daily dungeon malware"]))));
  },
  do: function() {
    return (0, import_kolmafia117.buy)($coinmaster(_templateObject5918 || (_templateObject5918 = _taggedTemplateLiteral108(["Internet Meme Shop"]))), 1, $item(_templateObject6017 || (_templateObject6017 = _taggedTemplateLiteral108(["daily dungeon malware"]))));
  },
  acquire: [{
    item: $item(_templateObject6135 || (_templateObject6135 = _taggedTemplateLiteral108(["BACON"]))),
    num: coinmasterPrice($item(_templateObject6222 || (_templateObject6222 = _taggedTemplateLiteral108(["daily dungeon malware"]))))
  }],
  spendsTurn: false
}, {
  name: "Rainbow Gravitation",
  ready: function() {
    return have($skill(_templateObject6320 || (_templateObject6320 = _taggedTemplateLiteral108(["Rainbow Gravitation"]))));
  },
  completed: function() {
    return get("prismaticSummons") === 3 || garboValue($item(_templateObject6420 || (_templateObject6420 = _taggedTemplateLiteral108(["prismatic wad"])))) < sum(Wads, garboValue);
  },
  do: function() {
    return (0, import_kolmafia117.useSkill)($skill(_templateObject6517 || (_templateObject6517 = _taggedTemplateLiteral108(["Rainbow Gravitation"]))), 3 - get("prismaticSummons"));
  },
  acquire: function() {
    return Wads.map(function(x) {
      return {
        item: x,
        num: 3 - get("prismaticSummons")
      };
    });
  },
  spendsTurn: false
}, {
  name: "Request Sandwich",
  ready: function() {
    return have($skill(_templateObject6616 || (_templateObject6616 = _taggedTemplateLiteral108(["Request Sandwich"]))));
  },
  completed: function() {
    return get("_requestSandwichSucceeded");
  },
  do: function() {
    return (0, import_kolmafia117.useSkill)($skill(_templateObject6716 || (_templateObject6716 = _taggedTemplateLiteral108(["Request Sandwich"]))));
  },
  limit: {
    skip: 10
  },
  spendsTurn: false
}, {
  name: "Demand Sandwich",
  ready: function() {
    return have($skill(_templateObject6816 || (_templateObject6816 = _taggedTemplateLiteral108(["Demand Sandwich"]))));
  },
  completed: function() {
    return get("_demandSandwich") > 0;
  },
  do: function() {
    return (0, import_kolmafia117.useSkill)($skill(_templateObject6916 || (_templateObject6916 = _taggedTemplateLiteral108(["Demand Sandwich"]))));
  },
  spendsTurn: false
}, {
  name: "Tea Tree",
  ready: function() {
    return (0, import_kolmafia117.getCampground)()["potted tea tree"] !== void 0;
  },
  completed: function() {
    return get("_pottedTeaTreeUsed");
  },
  do: function() {
    var teas = $items(_templateObject7015 || (_templateObject7015 = _taggedTemplateLiteral108(["cuppa Activi tea, cuppa Alacri tea, cuppa Boo tea, cuppa Chari tea, cuppa Craft tea, cuppa Cruel tea, cuppa Dexteri tea, cuppa Feroci tea, cuppa Flamibili tea, cuppa Flexibili tea, cuppa Frost tea, cuppa Gill tea, cuppa Impregnabili tea, cuppa Improprie tea, cuppa Insani tea, cuppa Irritabili tea, cuppa Loyal tea, cuppa Mana tea, cuppa Mediocri tea, cuppa Monstrosi tea, cuppa Morbidi tea, cuppa Nas tea, cuppa Net tea, cuppa Neuroplastici tea, cuppa Obscuri tea, cuppa Physicali tea, cuppa Proprie tea, cuppa Royal tea, cuppa Serendipi tea, cuppa Sobrie tea, cuppa Toast tea, cuppa Twen tea, cuppa Uncertain tea, cuppa Vitali tea, cuppa Voraci tea, cuppa Wit tea, cuppa Yet tea"])));
    var bestTea = maxBy(teas, garboValue);
    var shakeVal = 3 * garboAverageValue.apply(void 0, _toConsumableArray51(teas));
    var teaAction = shakeVal > garboValue(bestTea) ? "shake" : bestTea.name;
    (0, import_kolmafia117.cliExecute)("teatree ".concat(teaAction));
  },
  spendsTurn: false
}, {
  name: "Check Jick Jar",
  ready: function() {
    return have($item(_templateObject7118 || (_templateObject7118 = _taggedTemplateLiteral108(["psychoanalytic jar"]))));
  },
  completed: function() {
    return get("_jickJarAvailable") !== "unknown";
  },
  do: function() {
    return (0, import_kolmafia117.visitUrl)("showplayer.php?who=1");
  },
  spendsTurn: false
}, {
  name: "Acquire Jick Jar",
  ready: function() {
    return have($item(_templateObject7218 || (_templateObject7218 = _taggedTemplateLiteral108(["psychoanalytic jar"])))) && get("_jickJarAvailable") === "true";
  },
  completed: function() {
    return get("_psychoJarFilled");
  },
  do: function() {
    return (0, import_kolmafia117.visitUrl)("showplayer.php?who=1&action=jung&whichperson=jick");
  },
  spendsTurn: false
}, {
  name: "Cargo Shorts Pocket",
  ready: function() {
    return have($item(_templateObject7317 || (_templateObject7317 = _taggedTemplateLiteral108(["Cargo Cultist Shorts"]))));
  },
  completed: function() {
    return get("_cargoPocketEmptied");
  },
  do: pickCargoPocket,
  spendsTurn: false
}, {
  name: "Time-Spinner Gin",
  ready: function() {
    return have($item(_templateObject7417 || (_templateObject7417 = _taggedTemplateLiteral108(["Time-Spinner"])))) && !doingGregFight() && get("timeSpinnerMedals") >= 5 && get("_timeSpinnerMinutesUsed") <= 8;
  },
  completed: function() {
    return get("_timeSpinnerReplicatorUsed");
  },
  do: function() {
    return (0, import_kolmafia117.cliExecute)("FarFuture drink");
  },
  spendsTurn: false
}, {
  name: "FantasyRealm Hat",
  ready: function() {
    return get("frAlways") || get("_frToday");
  },
  completed: function() {
    return have($item(_templateObject7516 || (_templateObject7516 = _taggedTemplateLiteral108(["FantasyRealm G. E. M."]))));
  },
  do: function() {
    (0, import_kolmafia117.visitUrl)("place.php?whichplace=realm_fantasy&action=fr_initcenter");
    (0, import_kolmafia117.runChoice)(-1);
  },
  choices: {
    1280: 1
  },
  spendsTurn: false
}, {
  name: "Lodestone",
  ready: function() {
    return have($item(_templateObject7616 || (_templateObject7616 = _taggedTemplateLiteral108(["lodestone"])))) && !get("_lodestoneUsed");
  },
  completed: function() {
    return get("_lodestoneUsed");
  },
  do: function() {
    return (0, import_kolmafia117.use)($item(_templateObject7715 || (_templateObject7715 = _taggedTemplateLiteral108(["lodestone"]))));
  },
  spendsTurn: false
}, {
  name: "Update Garbage Tote",
  ready: function() {
    return have($item(_templateObject7813 || (_templateObject7813 = _taggedTemplateLiteral108(["January's Garbage Tote"])))) && !get("_garbageItemChanged");
  },
  completed: function() {
    return get("_garbageItemChanged");
  },
  do: function() {
    return (0, import_kolmafia117.cliExecute)("fold broken champagne bottle");
  },
  spendsTurn: false
}, {
  name: "Learn About Bugs",
  ready: function() {
    return have($item(_templateObject7913 || (_templateObject7913 = _taggedTemplateLiteral108(["S.I.T. Course Completion Certificate"]))));
  },
  completed: function() {
    return get("_sitCourseCompleted") || have($skill(_templateObject8012 || (_templateObject8012 = _taggedTemplateLiteral108(["Insectologist"]))));
  },
  do: function() {
    return (0, import_kolmafia117.use)($item(_templateObject8116 || (_templateObject8116 = _taggedTemplateLiteral108(["S.I.T. Course Completion Certificate"]))));
  },
  choices: {
    1494: 2
  },
  spendsTurn: false
}, {
  name: "Clear Existing Rufus Quest",
  completed: function() {
    return get("_shadowAffinityToday") || _shouldClearRufusQuest !== null;
  },
  do: function() {
    var value = rufusPotion.value(embezzlerCount());
    var price2 = rufusPotion.price(false);
    _shouldClearRufusQuest = value.some(function(value2) {
      return (!globalOptions.nobarf || value2.name === "embezzler") && value2.value - price2 > 0;
    });
    if (_shouldClearRufusQuest) {
      var target = ClosedCircuitPayphone_exports.rufusTarget();
      if (get("rufusQuestType") === "items") {
        if (acquire(3, target, 2 * (0, import_kolmafia117.mallPrice)(target), false, 1e5)) {
          withChoice(1498, 1, function() {
            return (0, import_kolmafia117.use)($item(_templateObject8216 || (_templateObject8216 = _taggedTemplateLiteral108(["closed-circuit pay phone"]))));
          });
        }
      } else if (get("rufusQuestType") === "artifact") {
        if (have(target)) {
          withChoice(1498, 1, function() {
            return (0, import_kolmafia117.use)($item(_templateObject8316 || (_templateObject8316 = _taggedTemplateLiteral108(["closed-circuit pay phone"]))));
          });
        }
      }
    }
  },
  spendsTurn: false
}, {
  name: "Accept Rufus Quest for Forest",
  ready: function() {
    return ClosedCircuitPayphone_exports.have() && !ClosedCircuitPayphone_exports.rufusTarget();
  },
  completed: function() {
    return get("_shadowForestLooted") || have($item(_templateObject8415 || (_templateObject8415 = _taggedTemplateLiteral108(["Rufus's shadow lodestone"]))));
  },
  do: function() {
    return ClosedCircuitPayphone_exports.chooseQuest(function() {
      return 3;
    });
  },
  spendsTurn: false
}, {
  name: "Acquire Rufus Items",
  ready: function() {
    if (!ClosedCircuitPayphone_exports.have())
      return false;
    var target = ClosedCircuitPayphone_exports.rufusTarget();
    return target instanceof import_kolmafia117.Item && target.tradeable;
  },
  completed: function() {
    return get("_shadowForestLooted") || have($item(_templateObject8515 || (_templateObject8515 = _taggedTemplateLiteral108(["Rufus's shadow lodestone"])))) || triedForest;
  },
  do: function() {
    var target = ClosedCircuitPayphone_exports.rufusTarget();
    var bestRift = ClosedCircuitPayphone_exports.chooseRift({
      canAdventure: true,
      sortBy: function(l) {
        return sum((0, import_kolmafia117.getMonsters)(l), function(m) {
          return sum((0, import_kolmafia117.itemDropsArray)(m), function(_ref5) {
            var drop = _ref5.drop;
            return garboValue(drop);
          });
        });
      }
    });
    if (!bestRift)
      (0, import_kolmafia117.abort)("Failed to choose rift for Shadow Forest");
    var value = (6 + 9) / 2 * sum((0, import_kolmafia117.getMonsters)(bestRift), function(m) {
      return sum((0, import_kolmafia117.itemDropsArray)(m), function(_ref6) {
        var drop = _ref6.drop;
        return garboValue(drop);
      });
    }) / 3;
    if (target instanceof import_kolmafia117.Item && target.tradeable) {
      if (acquire(3, target, value, false) < 3) {
        (0, import_kolmafia117.print)("Our Rufus quest is ".concat(target, ", which costs too much to do the Forest!"), "red");
      }
      triedForest = true;
    }
  },
  spendsTurn: false
}, {
  name: "Turn In Rufus Quest for Forest",
  ready: function() {
    return questStep("questRufus") === 1;
  },
  completed: function() {
    return get("_shadowForestLooted") || have($item(_templateObject8614 || (_templateObject8614 = _taggedTemplateLiteral108(["Rufus's shadow lodestone"]))));
  },
  do: function() {
    return ClosedCircuitPayphone_exports.submitQuest();
  },
  spendsTurn: false
}, {
  name: "Shadow Forest",
  ready: function() {
    return have($item(_templateObject8712 || (_templateObject8712 = _taggedTemplateLiteral108(["Rufus's shadow lodestone"]))));
  },
  completed: function() {
    return get("_shadowForestLooted");
  },
  do: function() {
    var _ClosedCircuitPayphon;
    return (_ClosedCircuitPayphon = ClosedCircuitPayphone_exports.chooseRift({
      canAdventure: true,
      sortBy: function(l) {
        return sum((0, import_kolmafia117.getMonsters)(l), function(m) {
          return sum((0, import_kolmafia117.itemDropsArray)(m), function(_ref7) {
            var drop = _ref7.drop;
            return garboValue(drop);
          });
        });
      }
    })) !== null && _ClosedCircuitPayphon !== void 0 ? _ClosedCircuitPayphon : (0, import_kolmafia117.abort)("Failed to find appropriate rift for Shadow Forest");
  },
  choices: {
    1500: 3
  },
  spendsTurn: false
}].concat(_toConsumableArray51(augustSummonTasks()), _toConsumableArray51(candyMapTasks()));
var DailyItemsQuest = {
  name: "Daily Items",
  tasks: [].concat(_toConsumableArray51(SummonTasks), _toConsumableArray51(DailyItemTasks))
};

// src/tasks/postFreeFight.ts
var import_kolmafia118 = require("kolmafia");
init_dist();
var _templateObject900;
var _templateObject2200;
var _templateObject3180;
var _templateObject4161;
var _templateObject5147;
var _templateObject6136;
var _templateObject7109;
var _templateObject8101;
var _templateObject988;
var _templateObject1071;
var _templateObject1161;
var _templateObject1258;
function _taggedTemplateLiteral109(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function bestVykeaLevel() {
  var vykeas = [{
    level: 1,
    dowelCost: 0
  }, {
    level: 2,
    dowelCost: 1
  }, {
    level: 3,
    dowelCost: 11
  }];
  var vykeaProfit = function(vykea) {
    var level = vykea.level, dowelCost = vykea.dowelCost;
    return estimatedGarboTurns() * baseMeat * 0.1 * level - (5 * (0, import_kolmafia118.mallPrice)($item(_templateObject900 || (_templateObject900 = _taggedTemplateLiteral109(["VYKEA rail"])))) + dowelCost * (0, import_kolmafia118.mallPrice)($item(_templateObject2200 || (_templateObject2200 = _taggedTemplateLiteral109(["VYKEA dowel"])))) + 5 * (0, import_kolmafia118.mallPrice)($item(_templateObject3180 || (_templateObject3180 = _taggedTemplateLiteral109(["VYKEA plank"])))) + 1 * (0, import_kolmafia118.mallPrice)($item(_templateObject4161 || (_templateObject4161 = _taggedTemplateLiteral109(["VYKEA instructions"])))));
  };
  if (vykeas.some(function(vykea) {
    return vykeaProfit(vykea) > 0;
  })) {
    return maxBy(vykeas, vykeaProfit).level;
  }
  return 0;
}
var PostFreeFightTasks = [{
  name: "Configure Vykea",
  ready: function() {
    return get("_VYKEACompanionLevel") === 0 && bestVykeaLevel() > 0;
  },
  completed: function() {
    return get("_VYKEACompanionLevel") > 0;
  },
  do: function() {
    return (0, import_kolmafia118.cliExecute)("create level ".concat(bestVykeaLevel(), " couch"));
  },
  acquire: [{
    item: $item(_templateObject5147 || (_templateObject5147 = _taggedTemplateLiteral109(["VYKEA hex key"])))
  }],
  spendsTurn: false
}, {
  name: "Configure Thrall",
  ready: function() {
    return (0, import_kolmafia118.myClass)() === $class(_templateObject6136 || (_templateObject6136 = _taggedTemplateLiteral109(["Pastamancer"]))) && have($skill(_templateObject7109 || (_templateObject7109 = _taggedTemplateLiteral109(["Bind Lasagmbie"]))));
  },
  completed: function() {
    return (0, import_kolmafia118.myThrall)() === $thrall(_templateObject8101 || (_templateObject8101 = _taggedTemplateLiteral109(["Lasagmbie"])));
  },
  do: function() {
    return (0, import_kolmafia118.useSkill)($skill(_templateObject988 || (_templateObject988 = _taggedTemplateLiteral109(["Bind Lasagmbie"]))));
  },
  outfit: function() {
    if ((0, import_kolmafia118.myMaxmp)() >= 200)
      return {};
    return {
      modifier: "MP"
    };
  },
  prepare: function() {
    return (0, import_kolmafia118.restoreMp)(200);
  },
  spendsTurn: false
}, {
  name: "Level Up Thrall",
  ready: function() {
    return (0, import_kolmafia118.myClass)() === $class(_templateObject1071 || (_templateObject1071 = _taggedTemplateLiteral109(["Pastamancer"]))) && have($item(_templateObject1161 || (_templateObject1161 = _taggedTemplateLiteral109(["experimental carbon fiber pasta additive"])))) && (0, import_kolmafia118.myThrall)() !== $thrall.none;
  },
  completed: function() {
    return get("_pastaAdditive") || (0, import_kolmafia118.myThrall)().level >= 10;
  },
  do: function() {
    return (0, import_kolmafia118.use)($item(_templateObject1258 || (_templateObject1258 = _taggedTemplateLiteral109(["experimental carbon fiber pasta additive"]))));
  },
  spendsTurn: false
}];
var PostFreeFightQuest = {
  name: "Post Free Fight",
  tasks: PostFreeFightTasks
};

// src/tasks/embezzler.ts
init_dist();
var _templateObject901;
var _templateObject2201;
var _templateObject3181;
function _taggedTemplateLiteral110(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var SetupEmbezzlerQuest = {
  name: "SetupEmbezzler",
  tasks: [{
    // Need the daily dungeon to either be totally finished or to be on a NC we can walk away from
    name: "Setup Daily Dungeon",
    outfit: function() {
      return freeFightOutfit({
        equip: $items(_templateObject901 || (_templateObject901 = _taggedTemplateLiteral110(["ring of Detect Boring Doors"])))
      });
    },
    // walk away from any nc we can walk away from, skip boring doors, open the final chest
    choices: function() {
      return {
        689: 1,
        690: 2,
        691: 2,
        692: 8,
        693: 3
      };
    },
    acquire: [{
      item: $item(_templateObject2201 || (_templateObject2201 = _taggedTemplateLiteral110(["ring of Detect Boring Doors"])))
    }],
    ready: function() {
      return getChangeLastAdvLocationMethod() === "dailydungeon" && CrystalBall_exports.have() && doingGregFight();
    },
    completed: function() {
      return get("dailyDungeonDone") || ["It's Almost Certainly a Trap", "I Wanna Be a Door"].includes(get("_lastDailyDungeonEncounter"));
    },
    do: $location(_templateObject3181 || (_templateObject3181 = _taggedTemplateLiteral110(["The Daily Dungeon"]))),
    post: function() {
      return _set("_lastDailyDungeonEncounter", get("lastEncounter"));
    },
    spendsTurn: true,
    combat: new GarboStrategy(Macro2.kill())
  }]
};

// src/tasks/dailySea.ts
var import_kolmafia119 = require("kolmafia");
init_dist();
var _templateObject908;
var _templateObject2203;
var _templateObject3183;
var _templateObject4163;
var _templateObject5148;
function _taggedTemplateLiteral111(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var DailySeaTasks = [{
  name: "Unlock The Sea",
  ready: function() {
    return (0, import_kolmafia119.myLevel)() >= 11;
  },
  completed: function() {
    return have($item(_templateObject908 || (_templateObject908 = _taggedTemplateLiteral111(["little bitty bathysphere"]))));
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=sea_oldman");
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=sea_oldman&action=oldman_oldman");
  },
  spendsTurn: false,
  limit: {
    skip: 1
  }
}, {
  name: $item(_templateObject2203 || (_templateObject2203 = _taggedTemplateLiteral111(["sea jelly"]))).name,
  ready: function() {
    return have($familiar(_templateObject3183 || (_templateObject3183 = _taggedTemplateLiteral111(["Space Jellyfish"])))) && have($item(_templateObject4163 || (_templateObject4163 = _taggedTemplateLiteral111(["little bitty bathysphere"]))));
  },
  completed: function() {
    return get("_seaJellyHarvested");
  },
  do: function() {
    (0, import_kolmafia119.visitUrl)("place.php?whichplace=thesea&action=thesea_left2");
    (0, import_kolmafia119.runChoice)(1);
  },
  outfit: {
    familiar: $familiar(_templateObject5148 || (_templateObject5148 = _taggedTemplateLiteral111(["Space Jellyfish"])))
  },
  spendsTurn: false,
  limit: {
    skip: 1
  }
}];
var DailySeaQuest = {
  name: "Daily Sea",
  tasks: DailySeaTasks
};

// src/tasks/engine.ts
init_dist();
var import_kolmafia120 = require("kolmafia");
var _templateObject909;
var _templateObject2204;
function _createForOfIteratorHelper39(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray76(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it.return != null)
        it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray76(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray76(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray76(o, minLen);
}
function _arrayLikeToArray76(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral112(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck32(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties32(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey46(descriptor.key), descriptor);
  }
}
function _createClass32(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties32(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties32(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey46(arg) {
  var key = _toPrimitive46(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive46(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _get2() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get2 = Reflect.get.bind();
  } else {
    _get2 = function _get3(target, property, receiver) {
      var base = _superPropBase2(target, property);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    };
  }
  return _get2.apply(this, arguments);
}
function _superPropBase2(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf9(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits10(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf10(subClass, superClass);
}
function _setPrototypeOf10(o, p) {
  _setPrototypeOf10 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf11(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf10(o, p);
}
function _createSuper9(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct9();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf9(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf9(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn9(this, result);
  };
}
function _possibleConstructorReturn9(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized9(self2);
}
function _assertThisInitialized9(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct9() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf9(o) {
  _getPrototypeOf9 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf10(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf9(o);
}
function logEmbezzler(encounterType) {
  var isDigitize = encounterType.includes("Digitize Wanderer");
  isDigitize ? eventLog.digitizedEmbezzlersFought++ : eventLog.initialEmbezzlersFought++;
  eventLog.embezzlerSources.push(isDigitize ? "Digitize" : "Unknown Source");
}
var BaseGarboEngine = /* @__PURE__ */ function(_Engine) {
  _inherits10(BaseGarboEngine2, _Engine);
  var _super = _createSuper9(BaseGarboEngine2);
  function BaseGarboEngine2() {
    _classCallCheck32(this, BaseGarboEngine2);
    return _super.apply(this, arguments);
  }
  _createClass32(BaseGarboEngine2, [{
    key: "available",
    value: function available4(task) {
      var taskSober = undelay(task.sobriety);
      if (taskSober) {
        return (taskSober === "drunk" && !sober() || taskSober === "sober" && sober()) && _get2(_getPrototypeOf9(BaseGarboEngine2.prototype), "available", this).call(this, task);
      }
      return _get2(_getPrototypeOf9(BaseGarboEngine2.prototype), "available", this).call(this, task);
    }
  }, {
    key: "execute",
    value: function execute(task) {
      safeInterrupt();
      var spentTurns = (0, import_kolmafia120.totalTurnsPlayed)();
      var duplicate = undelay(task.duplicate);
      var before = SourceTerminal_exports.getSkills();
      if (duplicate && SourceTerminal_exports.have() && SourceTerminal_exports.duplicateUsesRemaining() > 0) {
        SourceTerminal_exports.educate([$skill(_templateObject909 || (_templateObject909 = _taggedTemplateLiteral112(["Extract"]))), $skill(_templateObject2204 || (_templateObject2204 = _taggedTemplateLiteral112(["Duplicate"])))]);
      }
      _get2(_getPrototypeOf9(BaseGarboEngine2.prototype), "execute", this).call(this, task);
      postCombatActions();
      if ((0, import_kolmafia120.totalTurnsPlayed)() !== spentTurns) {
        if (!undelay(task.spendsTurn)) {
          (0, import_kolmafia120.print)("Task ".concat(task.name, " spent a turn but was marked as not spending turns"));
        }
      }
      var foughtAnEmbezzler = get("lastEncounter") === "Knob Goblin Embezzler";
      if (foughtAnEmbezzler)
        logEmbezzler(task.name);
      wanderer().clear();
      if (duplicate && SourceTerminal_exports.have()) {
        var _iterator = _createForOfIteratorHelper39(before), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var skill = _step.value;
            SourceTerminal_exports.educate(skill);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    }
  }]);
  return BaseGarboEngine2;
}(Engine);
var SafeGarboEngine = /* @__PURE__ */ function(_BaseGarboEngine) {
  _inherits10(SafeGarboEngine2, _BaseGarboEngine);
  var _super2 = _createSuper9(SafeGarboEngine2);
  function SafeGarboEngine2(tasks) {
    _classCallCheck32(this, SafeGarboEngine2);
    var options = new EngineOptions();
    options.default_task_options = {
      limit: {
        skip: 1
      }
    };
    return _super2.call(this, tasks, options);
  }
  return _createClass32(SafeGarboEngine2);
}(BaseGarboEngine);
function runSafeGarboTasks(tasks) {
  var engine = new SafeGarboEngine(tasks);
  try {
    engine.run();
  } finally {
    engine.destruct();
  }
}
function runSafeGarboQuests(quests2) {
  runSafeGarboTasks(getTasks(quests2));
}
function runGarboTasks(tasks) {
  var engine = new BaseGarboEngine(tasks);
  try {
    engine.run();
  } finally {
    engine.destruct();
  }
}
function runGarboQuests(quests2) {
  runGarboTasks(getTasks(quests2));
}

// src/dailies.ts
function dailySetup() {
  runSafeGarboQuests([DailyFamiliarsQuest, DailyQuest, DailyItemsQuest, DailySeaQuest, AscendingQuest]);
}

// src/yachtzee/index.ts
var import_kolmafia127 = require("kolmafia");

// src/yachtzee/buffs.ts
var import_kolmafia126 = require("kolmafia");

// src/yachtzee/diet.ts
var import_kolmafia125 = require("kolmafia");

// src/yachtzee/fishy.ts
var import_kolmafia124 = require("kolmafia");

// src/yachtzee/lib.ts
var import_kolmafia121 = require("kolmafia");
init_dist();
var ignoredSources = ["Orb Prediction", "Pillkeeper Semirare", "Lucky!", "11-leaf clover (untapped potential)"];
var expectedEmbezzlers = sum(embezzlerSources.filter(function(source) {
  return !ignoredSources.includes(source.name);
}), function(source) {
  return source.potential();
});

// src/yachtzee/outfit.ts
var import_kolmafia123 = require("kolmafia");

// src/yachtzee/familiar.ts
var import_kolmafia122 = require("kolmafia");

// src/yachtzee/index.ts
function yachtzeeChain() {
  if (!globalOptions.prefs.yachtzeechain)
    return;
  (0, import_kolmafia127.print)("As of 2023-10-03, Yachtzee has been nerfed.", "red");
}

// src/index.ts
var _templateObject989;
var _templateObject2205;
var _templateObject3184;
var _templateObject4164;
var _templateObject5149;
var _templateObject6137;
var _templateObject7119;
var _templateObject8102;
var _templateObject990;
var _templateObject1077;
var _templateObject1167;
var _templateObject1259;
var _templateObject1356;
var _templateObject1449;
var _templateObject1546;
var _templateObject1645;
var _templateObject1745;
var _templateObject1841;
var _templateObject1941;
var _templateObject2041;
var _templateObject21100;
var _templateObject2240;
var _templateObject2339;
var _templateObject2437;
var _templateObject2537;
var _templateObject2637;
var _templateObject2736;
var _templateObject2834;
var _templateObject2930;
var _templateObject3030;
var _templateObject3185;
var _templateObject3233;
var _templateObject3331;
var _templateObject3428;
var _templateObject3528;
var _templateObject3627;
function _slicedToArray35(arr, i) {
  return _arrayWithHoles35(arr) || _iterableToArrayLimit35(arr, i) || _unsupportedIterableToArray77(arr, i) || _nonIterableRest35();
}
function _nonIterableRest35() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit35(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t)
          return;
        f = false;
      } else
        for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true)
          ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u))
          return;
      } finally {
        if (o)
          throw n;
      }
    }
    return a;
  }
}
function _arrayWithHoles35(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray52(arr) {
  return _arrayWithoutHoles52(arr) || _iterableToArray52(arr) || _unsupportedIterableToArray77(arr) || _nonIterableSpread52();
}
function _nonIterableSpread52() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray77(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray77(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray77(o, minLen);
}
function _iterableToArray52(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles52(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray77(arr);
}
function _arrayLikeToArray77(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral113(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var TICKET_MAX_PRICE = 5e5;
function ensureBarfAccess() {
  if (!(get("stenchAirportAlways") || get("_stenchAirportToday"))) {
    var ticket = $item(_templateObject989 || (_templateObject989 = _taggedTemplateLiteral113(["one-day ticket to Dinseylandfill"])));
    if (!have(ticket))
      (0, import_kolmafia128.buy)(1, ticket, TICKET_MAX_PRICE);
    (0, import_kolmafia128.use)(ticket);
  }
  if (!get("_dinseyGarbageDisposed")) {
    (0, import_kolmafia128.print)("Disposing of garbage.", HIGHLIGHT);
    (0, import_kolmafia128.retrieveItem)($item(_templateObject2205 || (_templateObject2205 = _taggedTemplateLiteral113(["bag of park garbage"]))));
    (0, import_kolmafia128.visitUrl)("place.php?whichplace=airport_stench&action=airport3_tunnels");
    (0, import_kolmafia128.runChoice)(6);
    (0, import_kolmafia128.cliExecute)("refresh inv");
  }
}
function main() {
  var argString = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  sinceKolmafiaRevision(27640);
  checkGithubVersion();
  allMallPrices();
  (0, import_kolmafia128.visitUrl)("main.php");
  if ((0, import_kolmafia128.currentRound)() > 0) {
    (0, import_kolmafia128.abort)("It seems like you're a bit busy right now. Don't run garbo when you're in combat!");
  }
  if ((0, import_kolmafia128.handlingChoice)()) {
    (0, import_kolmafia128.abort)("It seems like you're a bit busy right now. Don't run garbo when you're in the middle of a choice adventure.");
  }
  Args.fill(globalOptions, argString);
  globalOptions.prefs.yachtzeechain = false;
  if (globalOptions.version)
    return;
  if (globalOptions.help) {
    Args.showHelp(globalOptions);
    return;
  }
  if (globalOptions.turns) {
    if (globalOptions.turns >= 0) {
      globalOptions.stopTurncount = (0, import_kolmafia128.myTurncount)() + globalOptions.turns;
    } else {
      globalOptions.saveTurns = -globalOptions.turns;
    }
  }
  if (globalOptions.prefs.autoUserConfirm) {
    (0, import_kolmafia128.print)("I have set auto-confirm to true and accept all ramifications that come with that.", "red");
  }
  if (stashItems.length > 0) {
    if (globalOptions.returnstash || userConfirmDialog("Garbo has detected that you have the following items still out of the stash from a previous run of garbo: ".concat(stashItems.map(function(item10) {
      return item10.name;
    }).join(", "), ". Would you like us to return these to the stash now?"), true)) {
      startSession();
      try {
        var clanIdOrName = globalOptions.prefs.stashClan;
        var parsedClanIdOrName = clanIdOrName !== "none" ? clanIdOrName.match(/^\d+$/) ? parseInt(clanIdOrName) : clanIdOrName : null;
        if (parsedClanIdOrName) {
          Clan.with(parsedClanIdOrName, function() {
            for (var _i = 0, _arr = _toConsumableArray52(stashItems); _i < _arr.length; _i++) {
              var item10 = _arr[_i];
              if (getFoldGroup(item10).some(function(item11) {
                return have(item11);
              })) {
                (0, import_kolmafia128.cliExecute)("fold ".concat(item10));
              }
              var retrieved = (0, import_kolmafia128.retrieveItem)(item10);
              if (item10 === $item(_templateObject3184 || (_templateObject3184 = _taggedTemplateLiteral113(["Spooky Putty sheet"]))) && !retrieved && have($item(_templateObject4164 || (_templateObject4164 = _taggedTemplateLiteral113(["Spooky Putty monster"]))))) {
                continue;
              }
              (0, import_kolmafia128.print)("Returning ".concat(item10, " to ").concat((0, import_kolmafia128.getClanName)(), " stash."), HIGHLIGHT);
              if ((0, import_kolmafia128.putStash)(item10, 1)) {
                stashItems.splice(stashItems.indexOf(item10), 1);
              }
            }
          });
        } else
          throw new Error("Error: No garbo_stashClan set.");
      } finally {
        endSession(false);
      }
    } else {
      if (userConfirmDialog("Are you a responsible friend who has already returned their stash clan items, or promise to do so manually at a later time?", true)) {
        stashItems.splice(0);
      }
    }
  }
  if (globalOptions.returnstash) {
    _set("garboStashItems", stashItems.map(function(item10) {
      return (0, import_kolmafia128.toInt)(item10).toFixed(0);
    }).join(","));
    return;
  }
  if (!$classes(_templateObject5149 || (_templateObject5149 = _taggedTemplateLiteral113(["Seal Clubber, Turtle Tamer, Pastamancer, Sauceror, Disco Bandit, Accordion Thief, Cow Puncher, Snake Oiler, Beanslinger, Pig Skinner, Cheese Wizard, Jazz Agent"]))).includes((0, import_kolmafia128.myClass)())) {
    throw new Error("Garbo does not support this class. It barely supports WOL/SOL avatar classes");
  }
  if (!get("kingLiberated") || (0, import_kolmafia128.myLevel)() < 13 || import_kolmafia128.Stat.all().some(function(s) {
    return (0, import_kolmafia128.myBasestat)(s) < 75;
  })) {
    if (globalOptions.prefs.skipAscensionCheck) {
      (0, import_kolmafia128.logprint)("This player is a silly goose, who ignored our warnings about being underleveled.");
    } else {
      var proceedRegardless = userConfirmDialog("Looks like your ascension may not be done, or you may be severely underleveled. Running garbo in an unintended character state can result in serious injury and even death. Are you sure you want to garbologize?", true);
      if (!proceedRegardless) {
        throw new Error("User interrupt requested. Stopping Garbage Collector.");
      } else {
        (0, import_kolmafia128.logprint)("This player is a silly goose, who ignored our warnings about being underleveled.");
      }
    }
  }
  if (globalOptions.prefs.valueOfAdventure && globalOptions.prefs.valueOfAdventure <= 3500) {
    throw "Your valueOfAdventure is set to ".concat(globalOptions.prefs.valueOfAdventure, ', which is too low for barf farming to be worthwhile. If you forgot to set it, use "set valueOfAdventure = XXXX" to set it to your marginal turn meat value.');
  }
  if (globalOptions.prefs.valueOfAdventure && globalOptions.prefs.valueOfAdventure >= 1e4) {
    throw "Your valueOfAdventure is set to ".concat(globalOptions.prefs.valueOfAdventure, ", which is definitely incorrect. Please set it to your reliable marginal turn value.");
  }
  if ((0, import_kolmafia128.myInebriety)() > (0, import_kolmafia128.inebrietyLimit)() && (!have($item(_templateObject6137 || (_templateObject6137 = _taggedTemplateLiteral113(["Drunkula's wineglass"])))) || !(0, import_kolmafia128.canEquip)($item(_templateObject7119 || (_templateObject7119 = _taggedTemplateLiteral113(["Drunkula's wineglass"])))))) {
    throw new Error("Go home, you're drunk. And don't own (or can't equip) Drunkula's wineglass. Consider either being sober or owning Drunkula's wineglass and being able to equip it.");
  }
  var completedProperty = "_garboCompleted";
  _set(completedProperty, "");
  examine($item(_templateObject8102 || (_templateObject8102 = _taggedTemplateLiteral113(["designer sweatpants"]))));
  startSession();
  if (!globalOptions.nobarf && !globalOptions.simdiet) {
    ensureBarfAccess();
  }
  if (globalOptions.simdiet) {
    propertyManager.set({
      logPreferenceChange: true,
      autoSatisfyWithMall: true,
      autoSatisfyWithNPCs: true,
      autoSatisfyWithCoinmasters: true,
      autoSatisfyWithStash: false,
      maximizerFoldables: true,
      autoTuxedo: true,
      autoPinkyRing: true,
      autoGarish: true,
      valueOfInventory: 2,
      suppressMallPriceCacheMessages: true,
      shadowLabyrinthGoal: "effects"
    });
    runDiet();
    propertyManager.resetAll();
    return;
  }
  var gardens2 = $items(_templateObject990 || (_templateObject990 = _taggedTemplateLiteral113(["packet of pumpkin seeds, Peppermint Pip Packet, packet of dragon's teeth, packet of beer seeds, packet of winter seeds, packet of thanksgarden seeds, packet of tall grass seeds, packet of mushroom spores, packet of rock seeds"])));
  var startingGarden = gardens2.find(function(garden) {
    return Object.getOwnPropertyNames((0, import_kolmafia128.getCampground)()).includes(garden.name);
  });
  if (startingGarden && !$items(_templateObject1077 || (_templateObject1077 = _taggedTemplateLiteral113(["packet of tall grass seeds, packet of mushroom spores"]))).includes(startingGarden) && (0, import_kolmafia128.getCampground)()[startingGarden.name] && $items(_templateObject1167 || (_templateObject1167 = _taggedTemplateLiteral113(["packet of tall grass seeds, packet of mushroom spores"]))).some(function(gardenSeed) {
    return have(gardenSeed);
  })) {
    if (startingGarden === $item(_templateObject1259 || (_templateObject1259 = _taggedTemplateLiteral113(["packet of rock seeds"])))) {
      (0, import_kolmafia128.visitUrl)("campground.php?action=rgarden1&pwd");
      (0, import_kolmafia128.visitUrl)("campground.php?action=rgarden2&pwd");
      (0, import_kolmafia128.visitUrl)("campground.php?action=rgarden3&pwd");
    } else {
      (0, import_kolmafia128.visitUrl)("campground.php?action=garden&pwd");
    }
  }
  var aaBossFlag = (0, import_kolmafia128.xpath)((0, import_kolmafia128.visitUrl)("account.php?tab=combat"), "//*[@id=\"opt_flag_aabosses\"]/label/input[@type='checkbox']@checked")[0] === "checked" ? 1 : 0;
  try {
    (0, import_kolmafia128.print)("Collecting garbage!", HIGHLIGHT);
    if (globalOptions.stopTurncount !== null) {
      (0, import_kolmafia128.print)("Stopping in ".concat(globalOptions.stopTurncount - (0, import_kolmafia128.myTurncount)()), HIGHLIGHT);
    }
    (0, import_kolmafia128.print)();
    if (have($item(_templateObject1356 || (_templateObject1356 = _taggedTemplateLiteral113(["packet of tall grass seeds"])))) && (0, import_kolmafia128.myGardenType)() !== "grass" && (0, import_kolmafia128.myGardenType)() !== "mushroom") {
      (0, import_kolmafia128.use)($item(_templateObject1449 || (_templateObject1449 = _taggedTemplateLiteral113(["packet of tall grass seeds"]))));
    }
    (0, import_kolmafia128.setAutoAttack)(0);
    (0, import_kolmafia128.visitUrl)("account.php?actions[]=flag_aabosses&flag_aabosses=1&action=Update", true);
    var maximizerCombinationLimit = isQuickGear() ? 1e5 : get("maximizerCombinationLimit");
    var bannedAutoRestorers = have($item(_templateObject1546 || (_templateObject1546 = _taggedTemplateLiteral113(["Cincho de Mayo"])))) ? ["sleep on your clan sofa", "rest in your campaway tent", "rest at the chateau", "rest at your campground", "free rest"] : [];
    var hpItems = get("hpAutoRecoveryItems").split(";").filter(function(s) {
      return !bannedAutoRestorers.includes(s);
    }).join(";");
    var mpItems = get("mpAutoRecoveryItems").split(";").filter(function(s) {
      return !bannedAutoRestorers.includes(s);
    }).join(";");
    propertyManager.set({
      logPreferenceChange: true,
      logPreferenceChangeFilter: _toConsumableArray52(new Set([].concat(_toConsumableArray52(get("logPreferenceChangeFilter").split(",")), ["libram_savedMacro", "maximizerMRUList", "testudinalTeachings", "garboEmbezzlerDate", "garboEmbezzlerCount", "garboEmbezzlerSources", "spadingData"]))).sort().filter(function(a) {
        return a;
      }).join(","),
      battleAction: "custom combat script",
      customCombatScript: "garbo",
      autoSatisfyWithMall: true,
      autoSatisfyWithNPCs: true,
      autoSatisfyWithCoinmasters: true,
      autoSatisfyWithStash: false,
      dontStopForCounters: true,
      maximizerFoldables: true,
      hpAutoRecovery: -0.05,
      hpAutoRecoveryTarget: 0,
      mpAutoRecovery: -0.05,
      mpAutoRecoveryTarget: 0,
      hpAutoRecoveryItems: hpItems,
      mpAutoRecoveryItems: mpItems,
      afterAdventureScript: "",
      betweenBattleScript: "",
      choiceAdventureScript: "",
      counterScript: "",
      familiarScript: "",
      currentMood: "apathetic",
      autoTuxedo: true,
      autoPinkyRing: true,
      autoGarish: true,
      allowNonMoodBurning: !globalOptions.ascend,
      allowSummonBurning: true,
      libramSkillsSoftcore: "none",
      // Don't cast librams when mana burning, handled manually based on sale price
      valueOfInventory: 2,
      suppressMallPriceCacheMessages: true,
      maximizerCombinationLimit: maximizerCombinationLimit,
      allowNegativeTally: true
    });
    var bestHalloweiner = 0;
    if (haveInCampground($item(_templateObject1645 || (_templateObject1645 = _taggedTemplateLiteral113(["haunted doghouse"]))))) {
      var halloweinerOptions = [[$items(_templateObject1745 || (_templateObject1745 = _taggedTemplateLiteral113(["bowl of eyeballs, bowl of mummy guts, bowl of maggots"]))), 1], [$items(_templateObject1841 || (_templateObject1841 = _taggedTemplateLiteral113(["blood and blood, Jack-O-Lantern beer, zombie"]))), 2], [$items(_templateObject1941 || (_templateObject1941 = _taggedTemplateLiteral113(["wind-up spider, plastic nightmare troll, Telltale\u2122 rubber heart"]))), 3]].map(function(_ref) {
        var _ref2 = _slicedToArray35(_ref, 2), halloweinerOption = _ref2[0], choiceId = _ref2[1];
        return {
          price: garboAverageValue.apply(void 0, _toConsumableArray52(halloweinerOption)),
          choiceId: choiceId
        };
      });
      bestHalloweiner = maxBy(halloweinerOptions, "price").choiceId;
    }
    propertyManager.setChoices({
      1106: 3,
      // Ghost Dog Chow
      1107: 1,
      // tennis ball
      1108: bestHalloweiner,
      1340: 1,
      // Accept the doctor quest
      1341: 1
      // Cure her poison
    });
    if (JuneCleaver_exports.have()) {
      propertyManager.setChoices(Object.fromEntries(JuneCleaver_exports.choices.map(function(choice) {
        return [choice, bestJuneCleaverOption(choice)];
      })));
    }
    propertyManager.set({
      shadowLabyrinthGoal: "effects"
    });
    safeRestore();
    if (questStep2("questM23Meatsmith") === -1) {
      (0, import_kolmafia128.visitUrl)("shop.php?whichshop=meatsmith&action=talk");
      (0, import_kolmafia128.runChoice)(1);
    }
    if (questStep2("questM24Doc") === -1) {
      (0, import_kolmafia128.visitUrl)("shop.php?whichshop=doc&action=talk");
      (0, import_kolmafia128.runChoice)(1);
    }
    if (questStep2("questM25Armorer") === -1) {
      (0, import_kolmafia128.visitUrl)("shop.php?whichshop=armory&action=talk");
      (0, import_kolmafia128.runChoice)(1);
    }
    if ((0, import_kolmafia128.myLevel)() >= 11 && questStep2("questS01OldGuy") === -1) {
      (0, import_kolmafia128.visitUrl)("place.php?whichplace=sea_oldman&action=oldman_oldman");
    }
    if ((0, import_kolmafia128.myClass)() === $class(_templateObject2041 || (_templateObject2041 = _taggedTemplateLiteral113(["Seal Clubber"]))) && !have($skill(_templateObject21100 || (_templateObject21100 = _taggedTemplateLiteral113(["Furious Wallop"])))) && (0, import_kolmafia128.guildStoreAvailable)()) {
      (0, import_kolmafia128.visitUrl)("guild.php?action=buyskill&skillid=32", true);
    }
    var _stashItems = $items(_templateObject2240 || (_templateObject2240 = _taggedTemplateLiteral113(["repaid diaper, Buddy Bjorn, Crown of Thrones, Pantsgiving, mafia pointer finger ring"])));
    if ((0, import_kolmafia128.myInebriety)() <= (0, import_kolmafia128.inebrietyLimit)() && ((0, import_kolmafia128.myClass)() !== $class(_templateObject2339 || (_templateObject2339 = _taggedTemplateLiteral113(["Seal Clubber"]))) || !have($skill(_templateObject2437 || (_templateObject2437 = _taggedTemplateLiteral113(["Furious Wallop"]))))) && !have($skill(_templateObject2537 || (_templateObject2537 = _taggedTemplateLiteral113(["Head in the Game"]))))) {
      _stashItems.push.apply(_stashItems, _toConsumableArray52($items(_templateObject2637 || (_templateObject2637 = _taggedTemplateLiteral113(["haiku katana, Operation Patriot Shield"])))));
    }
    if (!have($item(_templateObject2736 || (_templateObject2736 = _taggedTemplateLiteral113(["Jurassic Parka"])))) && have($skill(_templateObject2834 || (_templateObject2834 = _taggedTemplateLiteral113(["Torso Awareness"]))))) {
      _stashItems.push($item(_templateObject2930 || (_templateObject2930 = _taggedTemplateLiteral113(["origami pasties"]))));
    }
    withStash(_stashItems, function() {
      withVIPClan(function() {
        if (globalOptions.nodiet || get("_garboYachtzeeChainCompleted", false)) {
          (0, import_kolmafia128.print)("We should not be yachtzee chaining", "red");
          globalOptions.prefs.yachtzeechain = false;
        }
        if (!globalOptions.nodiet && (!globalOptions.prefs.yachtzeechain || get("_garboYachtzeeChainCompleted", false))) {
          runDiet();
        } else if (!globalOptions.simdiet) {
          nonOrganAdventures();
        }
        dailySetup();
        var preventEquip = $items(_templateObject3030 || (_templateObject3030 = _taggedTemplateLiteral113(["broken champagne bottle, Spooky Putty snake, Spooky Putty mitre, Spooky Putty leotard, Spooky Putty ball, papier-mitre, papier-m\xE2ch\xE9te, papier-m\xE2chine gun, papier-masque, papier-m\xE2churidars, smoke ball, stinky fannypack, dice-shaped backpack, Amulet of Perpetual Darkness"])));
        if (isQuickGear()) {
          preventEquip.push.apply(preventEquip, _toConsumableArray52($items(_templateObject3185 || (_templateObject3185 = _taggedTemplateLiteral113(["Brimstone Bludgeon, Brimstone Bunker, Brimstone Brooch, Brimstone Bracelet, Brimstone Boxers, Brimstone Beret"])))));
        }
        setDefaultMaximizeOptions({
          preventEquip: preventEquip,
          preventSlot: $slots(_templateObject3233 || (_templateObject3233 = _taggedTemplateLiteral113(["buddy-bjorn, crown-of-thrones"])))
        });
        freeFights();
        runGarboQuests([SetupEmbezzlerQuest]);
        yachtzeeChain();
        dailyFights();
        if (!globalOptions.nobarf) {
          potionSetup(false);
          (0, import_kolmafia128.maximize)("MP", false);
          meatMood().execute(estimatedGarboTurns());
          useBuffExtenders();
          try {
            runGarboQuests(BarfTurnQuests);
            if (globalOptions.prefs.buyPass && (0, import_kolmafia128.availableAmount)($item(_templateObject3331 || (_templateObject3331 = _taggedTemplateLiteral113(["FunFunds\u2122"])))) >= 20 && !have($item(_templateObject3428 || (_templateObject3428 = _taggedTemplateLiteral113(["one-day ticket to Dinseylandfill"]))))) {
              (0, import_kolmafia128.print)("Buying a one-day ticket", HIGHLIGHT);
              (0, import_kolmafia128.buy)($coinmaster(_templateObject3528 || (_templateObject3528 = _taggedTemplateLiteral113(["The Dinsey Company Store"]))), 1, $item(_templateObject3627 || (_templateObject3627 = _taggedTemplateLiteral113(["one-day ticket to Dinseylandfill"]))));
            }
          } finally {
            (0, import_kolmafia128.setAutoAttack)(0);
          }
        } else
          (0, import_kolmafia128.setAutoAttack)(0);
      });
    });
  } finally {
    propertyManager.resetAll();
    _set("garboStashItems", stashItems.map(function(item10) {
      return (0, import_kolmafia128.toInt)(item10).toFixed(0);
    }).join(","));
    (0, import_kolmafia128.visitUrl)("account.php?actions[]=flag_aabosses&flag_aabosses=".concat(aaBossFlag, "&action=Update"), true);
    if (startingGarden && have(startingGarden))
      (0, import_kolmafia128.use)(startingGarden);
    printEventLog();
    endSession();
    printLog(HIGHLIGHT);
  }
  _set(completedProperty, ["garbo", argString].filter(Boolean).join(" "));
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  main
});
